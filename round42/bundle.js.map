{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Providers/DimensionProvider.ts","webpack:///./src/State/Store.ts","webpack:///./src/Utility/Frame.ts","webpack:///./src/Constants/CGAColors.ts","webpack:///./src/Utility/FrameMutators.ts","webpack:///./src/Utility/Location.ts","webpack:///./src/Constants/Angles.ts","webpack:///./src/Utility/Array.ts","webpack:///./src/GameLoop.ts","webpack:///./src/Base/BaseEnemy.ts","webpack:///./src/State/Game/GameActions.ts","webpack:///./src/Utility/Geometry.ts","webpack:///./src/Constants/Constants.ts","webpack:///./src/State/Player/PlayerActions.ts","webpack:///./src/Providers/Render/CtxProvider.ts","webpack:///./src/Render/RenderFrame.ts","webpack:///./src/State/EnemyLevel/EnemyLevelActions.ts","webpack:///./node_modules/immer/src/common.js","webpack:///./node_modules/immer/src/scope.js","webpack:///./node_modules/immer/src/es5.js","webpack:///./node_modules/immer/src/proxy.js","webpack:///./node_modules/immer/src/patches.js","webpack:///./node_modules/immer/src/immer.js","webpack:///./node_modules/immer/src/index.js","webpack:///./src/Player/PlayerFrames.ts","webpack:///./src/Guard.ts","webpack:///./src/Utility/Lib.tsx","webpack:///./src/Base/BaseLocationProvider.ts","webpack:///./src/State/StateProviders.ts","webpack:///./src/Providers/PlayerSpawnLocationProvider.ts","webpack:///./src/GameScreen/StaticRenders.ts","webpack:///./src/Handlers/TickHandler.ts","webpack:///./src/Providers/SpeedProvider.ts","webpack:///./src/StateHandlers/HandleLevelWon.ts","webpack:///./node_modules/symbol-observable/es/index.js","webpack:///./src/Debugging/Debugging.ts","webpack:///./src/State/Debugging/DebuggingConstants.ts","webpack:///./src/State/EnemyLevel/EnemyLevelConstants.ts","webpack:///./src/State/Game/GameConstants.ts","webpack:///./src/State/Keyboard/KeyboardConstants.ts","webpack:///./src/State/Player/PlayerConstants.ts","webpack:///./src/Constants/WarpLevelConstants.ts","webpack:///./src/SharedFrames/Numbers.ts","webpack:///./src/Providers/EnemyFactory.ts","webpack:///./src/Base/BaseFrameProvider.ts","webpack:///./src/Utility/KeyboardEvents.ts","webpack:///./src/Runners/EnemyLevelRunner.ts","webpack:///./src/StateHandlers/DispatchExplosion.ts","webpack:///./src/StateHandlers/HandlePlayerDeath.ts","webpack:///./src/Levels/EnemyLevel.ts","webpack:///./src/GameScreen/LevelBanner.ts","webpack:///./src/SharedFrames/twoPXBullet.ts","webpack:///./src/Handlers/PlayerMovementHandler.ts","webpack:///./node_modules/symbol-observable/es/ponyfill.js","webpack:///./src/index.ts","webpack:///./node_modules/redux/es/redux.js","webpack:///(webpack)/buildin/global.js","webpack:///(webpack)/buildin/harmony-module.js","webpack:///./src/State/Debugging/DebuggingReducer.ts","webpack:///./src/State/EnemyLevel/EnemyLevelReducer.ts","webpack:///./node_modules/process/browser.js","webpack:///./src/State/Game/GameStateReducer.ts","webpack:///./src/State/Game/WarpGameComplexities.ts","webpack:///./src/State/Keyboard/KeyboardStateReducer.ts","webpack:///./src/State/Player/PlayerReducer.ts","webpack:///./src/Player/PlayerExplosion.ts","webpack:///./src/Utility/HexToCGAConverter.ts","webpack:///./src/GameScreen/StatusBar.ts","webpack:///./src/Utility/String.ts","webpack:///./src/Levels/SubscribeToStore.ts","webpack:///./src/Levels/LevelFactory.ts","webpack:///./src/Levels/AsteroidLevel.ts","webpack:///./src/Enemies/Asteroid/AsteroidEnemy.ts","webpack:///./src/Enemies/Asteroid/GetAsteroidOffsetFrames.ts","webpack:///./src/Enemies/Balloon/BalloonEnemy.ts","webpack:///./src/Enemies/Balloon/GetBalloonOffsetFrames.ts","webpack:///./src/Enemies/Bird/BirdEnemy.ts","webpack:///./src/Enemies/Bird/GetBirdOffsetFrames.ts","webpack:///./src/Enemies/Devil/DevilEnemy.ts","webpack:///./src/Enemies/Devil/GetDevilOffsetFrames.ts","webpack:///./src/Enemies/Diabolo/GetDiaboloOffsetFrames.ts","webpack:///./src/Enemies/Orb/GetOrbOffsetFrames.ts","webpack:///./src/Enemies/Orb/OrbEnemy.ts","webpack:///./src/Enemies/Piston/GetPistonOffsetFrames.ts","webpack:///./src/Enemies/Piston/PistonEnemy.ts","webpack:///./src/Enemies/Robot/GetRobotOffsetFrames.ts","webpack:///./src/Enemies/Robot/RobotEnemy.ts","webpack:///./src/Enemies/SpaceMonster/SpaceMonster.ts","webpack:///./src/Enemies/SpaceMonster/SpaceMonsterEnemy.ts","webpack:///./src/Enemies/Spinner/GetSpinnerOffsetFrames.ts","webpack:///./src/Enemies/Spinner/SpinnerEnemy.ts","webpack:///./src/SharedFrames/Explosion01.ts","webpack:///./src/SharedFrames/Explosion02.ts","webpack:///./src/SharedFrames/Explosion03.ts","webpack:///./src/SharedFrames/Explosion04.ts","webpack:///./src/SharedFrames/Explosion05.ts","webpack:///./src/Providers/FrameProviders/BackAndForthFrameProvider.ts","webpack:///./src/Providers/FrameProviders/CircleFrameProvider.ts","webpack:///./src/Providers/LocationProviders/AsteroidLocationProvider.ts","webpack:///./src/Providers/LocationProviders/DevilLocationProvider.ts","webpack:///./src/State/Keyboard/KeyboardActions.ts","webpack:///./src/Providers/LocationProviders/MoveDownAppearUpLocaionProvider.ts","webpack:///./src/Providers/LocationProviders/SideAppearOtherSideLocationProvider.ts","webpack:///./src/Providers/LocationProviders/SideAppearOtherSideVariesSpeed.ts","webpack:///./src/Providers/LocationProviders/SideToSideUpAndDownLocationProvider.ts","webpack:///./src/Providers/LocationProviders/Wobble.ts","webpack:///./src/Player/GetPhaserLocations.ts","webpack:///./src/Player/PlayerHelper.ts","webpack:///./src/SharedFrames/Characters.ts","webpack:///./src/Utility/getCharacter.ts","webpack:///./src/Providers/EnemyLevelContentProvider.ts","webpack:///./src/Enemies/Orb/OrbEnemiesSpawnLocations.ts","webpack:///./src/Enemies/Piston/PistonSpawnLocations.ts","webpack:///./src/Enemies/Robot/RobotSpawnLocations.ts","webpack:///./src/Runners/BulletRunner.ts","webpack:///./src/Providers/ShipsToFireProviders/DevilShipsToFire.ts","webpack:///./src/Providers/ShipsToFireProviders/FirstEnemyOccasionalDown.ts","webpack:///./src/Providers/ShipsToFireProviders/MaxFiveDiagonal.ts","webpack:///./src/Providers/ShipsToFireProviders/MaxThreeDown.ts","webpack:///./src/Providers/SpawnLocations/SevenSixSevenGridProvider.ts","webpack:///./src/Levels/WarpLevel.ts","webpack:///./src/Player/PlayerSpawnManager.ts","webpack:///./src/Player/PlayerFormationPart.ts","webpack:///./src/Runners/GenericRunner.ts","webpack:///./src/Runners/PlayerRunner.ts","webpack:///./src/State/Debugging/DebuggingActions.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","gameDimensions","body","document","getElementById","rect","getBoundingClientRect","height","pixelSize","width","Math","floor","fullGameHeight","fullGameWidth","statusBarBottom","gameFieldRight","gameFieldTop","gameFieldBottom","pixelSize2x","gameField","left","top","right","bottom","allReducers","combineReducers","enemyLevelState","playerState","debuggingState","gameState","keyboardState","store","createReduxStore","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","appStore","getState","action","dispatch","getFrameDimensions","frame","length","copyFrame","newFrame","row","newRow","push","copyFrames","frames","newFrames","copyExplosion","explosion","newExplosion","particleFrames","explosionCenterFrame","allFrameDimensions","map","f","allWidths","af","allHeights","max","dimensions","objectKeys","keys","round","random","index","Error","topOffset","bottomOffset","frameCopy","CGAColors","black","blue","green","cyan","red","magenta","brown","lightGray","darkGray","lightBlue","lightGreen","lightCyan","lightRed","lightMagenta","yellow","white","validColors","Mutators","Frames","Frame","setColor","colors","convertHexToCGA","forEach","rowIndex","cellColor","cellIndex","useColor","indexOf","colorIndex","replace","parseInt","undefined","fallsWithin","outerLeft","outerRight","outerTop","outerBottom","getLocation","angle","speed","relativeSpeed","getNextX","getNextY","left1","top1","left2","top2","xd","yd","sqrt","pow","leftOffset","currentLeft","currentTop","maxTop","maxBottom","direction","getLeftOrRightFromAngle","topLimit","bottomLimit","nextLocation","location","angles","up","down","leftup","rightup","leftdown","rightdown","k","arr","mainHandle","updateStateFunctions","backgroundDrawFunctions","foregroundDrawFunctions","drawFunctions","GameLoop","run","tick","requestAnimationFrame","pause","appState","drawHitboxes","DEBUGGING_renderHitboxes","drawGrid","DEBUGGING_drawGrid","gridDetail","Start","Stop","cancelAnimationFrame","registerUpdateState","filter","registerBackgroundDrawing","registerForegroundDrawing","registerDraw","negativepixelSize","BaseEnemy","frameChangeTime","getOffsetFrames","getExplosion","locationProvider","frameProvider","enemyId","this","frameTickHandler","onFrameChange","offSetFrames","offSets","setFrames","currentFrame","getCurrentFrame","getOffsetLocation","offsetLeft","offsetTop","idCounter","offsetLocation","updateState","addOrUpdateEnemy","getId","coloredExplosion","hitpoints","getHitpoints","hitbox","getHitbox","centerLocation","getCenterLocation","points","getPoints","frameOffsets","getCurrentIndex","getCurrentLocation","increaseSpeed","getFrameCenter","getFrameHitbox","score","type","increaseScore","payload","lives","setLives","addLife","removeLife","phasers","setPhasers","addPhaser","removePhaser","addLevel","level","setLevel","nextLevel","addLifeAndPhaser","setPause","complexity","setWarpLevelComplexity","currentX","cos","PI","currentY","sin","state","hitbox1","hitbox2","newAngle","startLeft","startTop","endLeft","endTop","dx","dy","atan2","angle1","angle2","angleDifference","abs","Speeds","Movement","Bullets","Piston","bird","robot","orb","spinner","balloon","asteroid","diabolo","devil","slow","fast","player","piston","Locations","Enemies","Orb","Devil","topStart","MovementAngles","FrameTimes","playerAlive","setPlayerIsAlive","playerIsAlive","moveLimit","setPlayerMovementLimit","hitboxes","nozzleLocation","setPlayerLocationData","particleState","setPlayerBulletState","cachedCtx","canvas","getContext","ctx","columns","columnIndex","color","x","y","fillStyle","fillRect","resetLevelState","particle","addParticle","particles","addParticles","explosionCenter","shrapnell","addExplosionCenter","setShrapnellState","locations","setPhaserLocations","clearPhaserLocations","interval","setFireInterval","explosionCenters","setExplosionCenters","bullet","addBullet","bullets","setBulletState","totalEnemies","setTotalEnemies","enemyState","removeEnemy","NOTHING","DRAFTABLE","for","DRAFT_STATE","isDraft","isDraftable","Array","isArray","proto","getPrototypeOf","isPlainObject","constructor","isMap","isSet","original","base","const","assign","target","overrides","override","ownKeys","Reflect","getOwnPropertySymbols","obj","getOwnPropertyNames","concat","shallowCopy","invokeGetters","slice","Map","Set","clone","desc","getOwnPropertyDescriptor","writable","configurable","each","iter","entry","isEnumerable","prop","has","thing","is","hasSymbol","hasMap","hasSet","makeIterable","next","self","iterator","iterateMapValues","receiver","isEntries","latest","result","done","makeIterateSetValues","createProxy","draft","drafts","finalized","finalizing","set","modified","copy","add","wrapSetValue","cloned","freeze","deep","isFrozen","clear","delete","dontMutateFrozenCollections","_","ImmerScope","parent","canAutoFreeze","patches","revoke","clonePotentialDraft","defineProperties","mapTraps","proxyMethod","setTraps","iterateSetValues","proxySet","descriptors","assertUnrevoked","peek","prepareCopy","assigned","markChanged","proxyProperty","scope","current","revoked","createHiddenProperty","usePatches","patchListener","inversePatches","leave","enter","finalizeTraps","size","reciever","cb","values","entries","thisArg","traps","reduce","acc","builder","proxyAttr","fn","trap","args","JSON","stringify","markChangesSweep","let","hasArrayChanges","hasMapChanges","hasSetChanges","hasObjectChanges","baseValue","descriptor","hasChanges","isReplaced","markChangesRecursively","objectTraps","arrayTraps","Proxy","revocable","proxy","deleteProperty","owner","setPrototypeOf","arguments","apply","isNaN","reflectTraps","makeTrapsForGetters","prev","assignMap","getters","generateArrayPatches","basePath","delta","start","end","path","op","replaceCount","generatePatchesFromAssigned","assignedValue","origValue","generateSetPatches","unshift","applyPatches","patch","join","splice","configDefaults","useProxies","autoFreeze","process","onAssign","onDelete","onCopy","Immer","config","setUseProxies","produce","produceWithPatches","recipe","defaultBase","hasError","Promise","then","processResult","error","maybeFreeze","arg1","arg2","arg3","ip","createDraft","isManual","finishDraft","setAutoFreeze","modernProxy","legacyProxy","baseDraft","willFinalize","finalize","finalizeTree","exists","generatePatches","root","rootPath","needPatches","finalizeProperty","isDraftProp","isSetMember","immer","Guard","isValidGameKey","allGameKeys","isEnemy","getObjectType","isPlayerAlive","alive","min","time","factor","query","split","item","kvp","baseSpeed","StateProviders","getParticleState","acceletation","hitboxTopOffset","hitboxBottomOffset","coloredFrame","getBulletParticleState","ownerId","explosionShrapnellProvider","particleFrameIndexes","particleFrameIndex","particleFrame","useSpeed","speeds","acceleration","getUpdatedParticleState","nextState","updatedParticle","newLocation","fallsWithinGameField","getEnemyState","enemy","enemies","find","e","leftSpawnPosition","getPlayerFrame","topSpawnPosition","clearGameFieldBackground","additionalColor","gate","drawWhite","onTimePassed","lastTick","baseTime","calculateTimeSpeedIncrease","global","DEBUGGING_drawGameRect","lineWith","beginPath","strokeStyle","lineWidth","stroke","closePath","middle","bulletState","b","shrapnells","lineTo","Constants","setDebuggingState","arrowUp","arrowDown","arrowLeft","arrowRight","backspace","f1","f2","space","keyup","keydown","WarpLevelConstants","heightPixelCount","numbers","resource","maxSizes","getRandomFrameKeyIndex","randomMovementAngle","getRandomArrayElement","verticalBounds","randomAngle","getAsteroidOffsetFrames","AsteroidEnemy","getSpaceMonsterOffsetFrames","SpaceMonster","startFrameIndex","frameIndex","maxIndex","returnValue","getFrameByIndex","onKeyDown","event","code","stopPropagation","preventDefault","keyDown","onKeyUp","keyUp","addEventListener","removeEventListener","localState","phaserFrame","EnemyLevelRunner","draw","phaserLocations","pf","handleEnemyHitByplayer","hitEnemy","totalNumberOfEnemies","dispatchExplosion","handleEnemyDestruction","recudeHitpoints","playerHitByParticle","some","playerIsHit","handlePlayerDeath","selfDestruct","es","handleSelfDestruct","phraser","randomEnemy","playerNozzleLocation","randomEnemyCenter","setTimeout","handlePhaser","handleEnemies","enemyHitPlayerDetection","playerBulletHitbox","overlaps","playerHitEnemyDetection","handleHitDetection","setEnemies","newEnemies","addEnemy","newEnemy","newShrapnell","startTick","explosionCenterDelay","playerIsImmortal","subscriptions","levelReady","bulletRunner","enemyLevelContentFactory","registerSubscription","drawBackground","drawLevelBanner","monitorLevelWonRun","levelClear","greenCharacters","greenNumbers","roundCharacters","barwidth","roundWidth","charSpacing","levelNumber","sub","barcolor","bartop","leftNumber","rightNumber","leftNumberFrame","rightNumberFrame","levelNumberStartPos","charLeft","stringLevel","toString","rightNumberPosition","twoPixelBullet","doublePixel","playerHitboxAdjustment","playerWidth","playerHeight","localKeyboardState","speedX","speedY","getAngle","nextX","nextY","currentLocation","getNextLocationForPlayer","hitBox","hitBoxes","symbolObservablePonyfill","observable","startEssential","registerListeners","drawStatusBar","drawGameFieldBorder","onload","queryKeyValuePairs","getURLQueryKVPs","search","showPlayGround","showCanvas","showhitboxes","immortal","r42","setWarpGamteComplexity","v","randomString","substring","ActionTypes","INIT","REPLACE","PROBE_UNKNOWN_ACTION","reducer","preloadedState","enhancer","_ref2","currentReducer","currentState","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","subscribe","listener","isSubscribed","listeners","replaceReducer","nextReducer","_ref","outerSubscribe","observer","TypeError","observeState","unsubscribe","getUndefinedStateErrorMessage","actionType","String","reducers","reducerKeys","finalReducers","shapeAssertionError","finalReducerKeys","assertReducerShape","hasChanged","_i","_key","previousStateForKey","nextStateForKey","errorMessage","bindActionCreator","actionCreator","bindActionCreators","actionCreators","boundActionCreators","_defineProperty","enumerableOnly","sym","_objectSpread2","source","getOwnPropertyDescriptors","compose","_len","funcs","arg","a","applyMiddleware","middlewares","_dispatch","middlewareAPI","chain","middleware","g","Function","originalModule","webpackPolyfill","children","fireInterval","newState","findIndex","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","len","marker","runClearTimeout","Item","array","noop","nextTick","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","warpLevelSteps","warpLevelComplexities","0","stepsX","stepsY","1","2","3","4","5","6","7","8","fire","playerExplosion","spawnLocation","playerFrame","initState","hex","numberFrames","lifeFrame","scoreStartPosition","scoreSpacing","phaserStartPosition","phaserSpacing","phaserBackgroundWidth","livesSpacing","lifeFrameWidth","leftNumberLeft","rightNumberLeft","scoreBoardHeight","scoreString","padLeft","cnt","actualSpacing","drawScore","maxPhasersToBeDrawn","drawPhasers","maxLivesToBeDrawn","drawLives","paddedLevelString","rightFrame","leftFrame","drawLevel","padWidth","padLength","padding","currentLevel","currentScore","dispose","levelFactory","begin","AsteroidLevel","super","timeUp","handleRespawn","dispatchCurrentState","getNextFrame","getMaximumFrameDimensions","BalloonEnemy","getFrames","nextFrame","BirdEnemy","colorTickHandler","onColorChange","setCurrentFrameColor","DevilEnemy","locationDirecntionProvider","getDirection","orbMainFrame","OrbEnemy","currentColorIndex","updateCurrentFrameAndColor","currentColor","offset","PistonEnemy","offsetCount","RobotEnemy","jawsOpenTop","explosionColors","jawsClosed","SpinnerEnemy","centerColor","shrapnellColor","explosion01","BackAndForthFrameProvider","CircleFrameProvider","doubleHeight","getRandomLeft","randomNumberInRange","sideAngles","attacking","recovering","playerBottomHixbox","getNextLocationAndAngle","MoveDownAppearUpLocationProvider","SideAppearOtherSideLocationProvider","getNextLocationWithinBoundaries","indexProvider","slowSpeed","fastSpeed","slowFrames","fastFrames","baseSlowSpeed","baseFastSpeed","currentFrameIndex","SideToSideUpAndDownLocationProvider","Wobble","angleSwitchTimeout","getAngles","sourceLeft","sourceTop","targetLeft","targetTop","calculateAngle","distance","calculateDistance","playerHitboxes","hitMiddle","hitBottom","Characters","character","upperCaseCharacter","toUpperCase","charCodeAt","rl","orbSpawnLocations","spacing","pistonSpawnLocations","robotSpawnLocations","bulletColor","shipsToFire","coloredBulletFrame","shipToFire","candidates","bottomhitbox","getCandidates","enemyToFire","queuedTofire","mayFire","lastEnemy","ceil","getBestAngle","bulletsToFire","above","below","center","angleToPlayer","calculateAngleDifference","sortFunction","sort","e1","e2","getBestCandiates","candiate","verticalSpacing","firstAndThirdRowLeftStart","secondRowLeftStart","firstAndSecondRowSpacing","secondRowSpacing","backgroundColor","warpGateInitialleft","gameLoopSubscriptions","warpGate","calculateWarpGate","badSpace","getWallHitboxes","drawWarpBackground","monitorLevelWon","hitDetection","wg","sb","leftDanger","rightDanger","bs","stepSizesX","stepSizesY","safeZone","pixelsToGo","pixelsToDo","stepSizeY","stepSizeX","verticalMove","coinFlip","particleTravelDistance","nozzleDistance","playerFormationFrames","getPlayerFormationFrames","nozzleTopPart","nozzleBottomPart","leftWingPart","rightWingPart","formationSpeed","allMovingParts","formationInProgress","currentMovementLimit","setup","limit","nozzleTip","nozzleBottom","leftWing","rightWing","getFrameReturner","createParticles","setSpeed","traveling","playerMovementHandler","every","minimumDistance","getFrame","currentLeftLocation","currentTopLocation","targetLeftLocation","targetTopLocation","remainingExplosions","ec","handleExplosionCenters","handleBullets","handleShrapnell","newHitbox","getPlayerBullet","handlePlayerBulletMovement","handlePlayerBulletFiring","playerBulletFrame"],"mappings":"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,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,MAEf,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,MAEzB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,MAEzB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,MAEzB,CACI,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,MAEzB,CACI,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,MAEzB,CACI,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,MAEzB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,KACD,CAAC,KACD,CAAC,KACD,CAAC,KACD,CAAC,OAKT,OADA,UAASx2B,OAAOE,SAASs2B,EAAYpqB,GAC9BoqB,I;;;;;oDCjMX,mBAAqCn5B,EAAiBo5B,GAClD,MAAMC,EAAqBD,EAAUE,cAErC,MAA2B,UAAvBD,EACOr5B,EAAOo5B,EAAU35B,OAAS,GAG1BO,EADIq5B,EAAmBE,WAAW,GAAK,M;;;;;oDClBtD,aACA,QACA,SACA,SACA,SACA,SAEA,QACA,SACA,SACA,SACA,SACA,SAOA,oCAAyCtZ,GACrC,OAAQA,GACJ,IAAK,OAED,MAAO,CACHC,QAFY,YAA4B1f,IAAK+E,GAAa,UAAa,OAAQA,KAMvF,IAAK,QAID,MAAO,CACH2a,QAJY,UAAoB1f,IAAK+E,GAAa,UAAa,QAASA,IAKxEwhB,aAJiB,IAAI,UAAa,UAAU1kB,SAAU,EAAAmK,OAAOE,QAAQG,MAAO,YAQpF,IAAK,MAID,MAAO,CACHqT,QAJY,CAAC,UAAkB1f,IAAK+E,GAAa,UAAa,MAAOA,IAAW,IAKhFwhB,aAJiB,IAAI,UAAa,UAAUjlB,QAAS,EAAA0K,OAAOE,QAAQI,IAAK,YAQjF,IAAK,UAKD,MAAO,CACHoT,QAJY,YAA4B1f,IAAK+E,GAAa,UAAa,UAAWA,IAKlFwhB,aAJiB,IAAI,UAAa,UAAUvkB,MAAO,EAAAgK,OAAOE,QAAQK,QAAS,YAQnF,IAAK,UAKD,MAAO,CACHmT,QAJY,YAA4B1f,IAAK+E,GAAa,UAAa,UAAWA,IAKlFwhB,aAJiB,IAAI,UAAa,UAAUrlB,KAAM,EAAA8K,OAAOE,QAAQM,QAAS,YAQlF,IAAK,gBAAiB,CAClB,MAAMkT,EAAuB,GAE7B,IAAK,IAAIllB,EAAI,EAAGA,EAAI,EAAGA,IACnBklB,EAAQpgB,KAAK,UAAa,kBAG9B,MAAO,CACHogB,WAIR,IAAK,SAID,MAAO,CACHA,QAJY,UAAqB1f,IAAKg5B,GAAO,UAAa,SAAUA,IAKpEzS,aAJiB,IAAI,UAAa,UAAUrlB,KAAM,EAAA8K,OAAOE,QAAQM,QAAS,YAQlF,IAAK,UAID,MAAO,CACHkT,QAJY,YAA4B1f,IAAK+E,GAAa,UAAa,UAAWA,IAKlFwhB,aAJiB,IAAI,UAAa,UAAUxkB,OAAQ,EAAAiK,OAAOE,QAAQQ,QAAS,YAQpF,IAAK,oBAAqB,CACtB,MAAMgT,EAAuB,GAE7B,IAAK,IAAIllB,EAAI,EAAGA,EAAI,EAAGA,IACnBklB,EAAQpgB,KAAK,UAAa,sBAG9B,MAAO,CACHogB,WAIR,IAAK,QAKD,MAAO,CACHA,QAJY,YAA4B1f,IAAK+E,GAAa,UAAa,QAASA,IAKhFwhB,aAJiB,IAAI,UAAa,UAAU5kB,WAAY,EAAAqK,OAAOE,QAAQS,MAAO,YAQtF,QACI,MAAM,IAAI/L,MAAM,iBAAiB6e,Q;;;;;oDC/H7C,cAEA,QAOM,UACF1iB,GACA,YAEEk8B,EAAoC,GACpCr7B,EAAM,EAAAoP,UAAUC,QAAQC,IAAIE,SAClC,IAAIzP,EAAmB,GAAZZ,EACX,MAAMm8B,EAAsB,EAAZn8B,EAEhB,IAAK,IAAIvC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,MAAMiB,EAAQ,CACVkC,OACAC,OAGJD,GAAQu7B,EAERD,EAAkB35B,KAAK7D,GAG3B,UAAew9B,G;;;;;oDC7Bf,cAEA,QAOM,UACFv7B,EAAS,UACTX,GACA,YAEEo8B,EAAuC,GACvCv7B,EAAM,EAAAoP,UAAUC,QAAQd,OAAOiB,SACrC,IAAIzP,EAAOD,EAAUC,KAAmB,GAAZZ,EAC5B,MAAMm8B,EAAsB,GAAZn8B,EAEhB,IAAK,IAAIvC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAEzB,MAAMiB,EAAQ,CACVkC,OACAC,OAGJD,GAAQu7B,EAERC,EAAqB75B,KAAK7D,GAG9B,UAAe09B,G;;;;;oDC/Bf,cAEA,QASM,UACFp8B,GACA,YAEEq8B,EAAsC,GAEtCx7B,EAAM,EAAAoP,UAAUC,QAAQZ,MAAMe,SACpC,IAAIzP,EAAmB,GAAZZ,EACX,MAAMm8B,EAAsB,EAAZn8B,EAEhB,IAAK,IAAIvC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAEzB,MAAMiB,EAAQ,CACVkC,OACAC,OAGJD,GAAQu7B,EAERE,EAAoB95B,KAAK7D,GAG7B,UAAe29B,G;;;;;oDCjCf,aACA,QACA,QACA,QACA,OAEA,QAOM,UACFr8B,GACA,YAOJ,gBA8BI,YACIs8B,EACA51B,EACA61B,GAEA7xB,KAAKhE,MAAQA,EACbgE,KAAK4xB,YAAcA,EACnB5xB,KAAK6xB,YAAcA,EAEnB7xB,KAAK8xB,mBAAqB,YAC1B,UAASn3B,MAAMC,SAASoF,KAAK8xB,mBAAoB9xB,KAAK4xB,aAOnD,YAAYrzB,GAEf,MACI9H,aAAa,MAAEyf,IACf,EAAAxX,WAGJ,IAAKwX,EACD,OAGJ,MAAM2b,EAAc7xB,KAAK6xB,YAAYtzB,GAKrC,IAAK,MAAMwzB,KAAcF,EAAa,CAElC,MAAM,MAAE91B,EAAOic,OAAO,OAAE7W,EAAM,QAAEpB,GAAS,MAAEiY,GAAU+Z,EAErD,QAAcv2B,IAAVO,EAAqB,CAErB,MAAM7F,EAAOiL,EAAOjL,MAASiL,EAAO/K,MAAQ+K,EAAOjL,MAAQ,EAAKZ,EAC1Da,EAAMgL,EAAO9K,OAASf,EAEtB6S,EAAS,EAAAwO,eAAeM,uBAC1B/gB,EACAC,EACA6J,KAAKhE,MACLD,EACAiE,KAAK8xB,mBACL/xB,GAGJ,EAAA1I,SAAS,EAAA+Q,UAAUD,S;;;;;oDCvGnC,aACA,QAGA,OACA,QASM,YACFnS,GACA,YAMJ,mBAAyCuI,GAErC,MACI/H,iBAAiB,QAAE6R,EAAO,QAAE4P,IAC5B,EAAAvZ,WACE+c,EAA4B,GAIlC,GAAyB,IAnBV,EAiBuBpT,EAAQ7Q,OAG1C,OAAOikB,EAGX,MAAMuW,EAmBV,WAEI,MACIx7B,iBAAiB,QAAEyhB,GAAS,YAC5BxhB,GACA,EAAAiI,WACJ,IAAK,UAAMuX,cAAcxf,GACrB,MAAO,GAGX,MAAQ0P,UAAY9P,OAAQ47B,IAAmBx7B,EAE/C,OAAOwhB,EAAQ7Y,OAAQ4Y,GAAUA,EAAM7W,OAAOjL,KAAOF,GAAei8B,EAAa/7B,MAAQ8hB,EAAM7W,OAAO/K,OAAS67B,EAAa77B,MAAQJ,GA/BjHk8B,GAEnB,GAA0B,IAAtBF,EAAWx6B,OACX,OAAOikB,EAGX,MAAM0W,EAAcH,EAAW,GAE/B,QAAoBx2B,IAAhB22B,EAA2B,CAC3B,MAAMC,OAAoF52B,IAArEigB,EAAYvD,KAAMC,GAAMA,EAAEH,MAAMjY,UAAYoyB,EAAYpyB,SACvEsyB,EAAUpa,EAAQzgB,OAjCb,IAiCqC6Q,EAAQ6U,KAAM/U,GAAWA,EAAOmJ,QAAU6gB,EAAYpyB,UACjGqyB,GAAgBC,GACjB5W,EAAY5jB,KAAK,CAAEmgB,MAAOma,EAAap2B,MAAO,EAAAwB,OAAOE,OAI7D,OAAOge,I;;;;;oDCnDX,aAEA,OAOA,qBACI,MACIxD,QAASxP,GACT,EAAA/J,WAAWlI,gBAETilB,EAA4B,GAE5B6W,EAAY7pB,EAAWA,EAAWjR,OAAS,GAEjD,QAAkBgE,IAAd82B,EAAyB,CAEb,IADA98B,KAAK+8B,KAAqB,GAAhB/8B,KAAKyD,WAEvBwiB,EAAY5jB,KAAK,CAAEmgB,MAAOsa,EAAWv2B,MAAO,EAAAwB,OAAOE,OAI3D,OAAOge,I;;;;;oDCpBX,aACA,QAGA,OAEA,QA6GA,SAAS+W,EAAaxa,GAElB,MAAM,YACFvhB,EACAD,iBAAiB,QAAEyhB,IACnB,EAAAvZ,WAGJ,IAAK,UAAMuX,cAAcxf,GACrB,OAGJ,MAAM,SAAE0P,GAAa1P,EAMrB,GAF4B,IADhBjB,KAAK+8B,KAAK/8B,KAAKyD,SAAWgf,EAAQzgB,OAAS,KAGtC,CACb,MAAM,eACF6J,GACA2W,EAEJ,QAAuBxc,IAAnB6F,GAEIA,EAAenL,MAAQiQ,EAASoT,OAAOrjB,MAAQmL,EAAenL,MAAQiQ,EAASoT,OAAOnjB,MACtF,OAAO,EAAAmH,OAAOE,KAK1B,OAAIua,EAAMvX,WAAa0F,EAASoT,OAAOrjB,KAC5B,EAAAqH,OAAOM,UAEP,EAAAN,OAAOK,SArItB,mBAAwCW,GAEpC,MACI/H,iBAAiB,QAAE6R,EAAO,QAAE4P,IAC5B,EAAAvZ,WAEE+c,EAA4B,GAC5BgX,EAfS,EAeoBpqB,EAAQ7Q,OAE3C,GAAsB,IAAlBi7B,EACA,OAAOhX,EAGX,MAAMuW,EAiCV,SAA0BzzB,GAEtB,MACI/H,iBAAiB,QAAEyhB,EAAO,QAAE5P,GAAS,YACrC5R,GACA,EAAAiI,WAKEszB,EAAyB,GAE/B,IAAIU,EAAQ,EACRC,EAAQ,EACZ,IAAK,MAAM3a,KAASC,EAAS,CACzB,MAAM2a,EAAS5a,EAAM3W,eAErB,GAAIuxB,EAAQ,CACR,MAAMC,EAAgB,EAAAjC,eAAegC,EAAO18B,KAAM08B,EAAOz8B,IAAKM,EAAYP,KAAMO,EAAYN,KACtF4F,EAAQy2B,EAAaxa,GAQ3B,GANI4a,EAAOz8B,IAAMM,EAAYN,IACzBw8B,GAAS,EAETD,GAAS,OAGCl3B,IAAVO,QAAyCP,IAAlBq3B,EAA6B,CACpD,MAAMxuB,EAAkB,EAAAyuB,yBAAyB/2B,EAAO82B,GACxDb,EAAWn6B,KAAK,CAAEmgB,QAAO3T,kBAAiBtI,YAOtD,MAAMg3B,EAAeL,EAAQC,EAAQ,CAACzM,EAAWzM,IAAcyM,EAAIzM,EAAI,CAACyM,EAAWzM,IAAcyM,EAAIzM,EAUrG,OARAuY,EAAWgB,KAAK,CAACC,EAAIC,IACbH,EAAaE,EAAG5uB,gBAAiB6uB,EAAG7uB,kBAC5B,EAED,GAIR2tB,EA/EYmB,GAEnB,GAA0B,IAAtBnB,EAAWx6B,OACX,OAAOikB,EAGX,IAAK,IAAIhC,EAAI,EAAGA,EAAIgZ,EAAehZ,IAAK,CAEpC,IAAIvgB,EAAQugB,EAIRuY,EAAWx6B,QAAUiiB,IACrBvgB,EAAQ,GAGZ,MAAMk6B,EAAWpB,EAAW94B,IACtB,MAAE8e,EAAK,MAAEjc,GAAUq3B,EAEnBhB,OAA8E52B,IAA/DigB,EAAYvD,KAAMC,GAAMA,EAAEH,MAAMjY,UAAYiY,EAAMjY,SACjEsyB,GAAWhqB,EAAQ6U,KAAM/U,GAAWA,EAAOmJ,QAAU0G,EAAMjY,UAAYkY,EAAQzgB,OAzC1E,GA2CN46B,GAAgBC,GACjB5W,EAAY5jB,KAAK,CAAEmgB,QAAOjc,UAIlC,OAAO0f,I;;;;;oDC7DX,aAEA,OACA,OAaA,mBAAqCld,GAEjC,MACI/H,iBAAiB,QAAE6R,EAAO,QAAE4P,IAC5B,EAAAvZ,WACE+c,EAA4B,GAIlC,GAAyB,IAfV,EAauBpT,EAAQ7Q,OAG1C,OAAOikB,EAGX,MAAM0W,EAAc,EAAApX,sBAAsB9C,GAE1C,QAAoBzc,IAAhB22B,EAA2B,CAC3B,MAAMC,OAAoF52B,IAArEigB,EAAYvD,KAAMC,GAAMA,EAAEH,MAAMjY,UAAYoyB,EAAYpyB,SACvEsyB,EAAUpa,EAAQzgB,OAvBb,IAuBqC6Q,EAAQ6U,KAAM/U,GAAWA,EAAOmJ,QAAU6gB,EAAYpyB,UACjGqyB,GAAgBC,GACjB5W,EAAY5jB,KAAK,CAAEmgB,MAAOma,EAAap2B,MAAO,EAAAwB,OAAOE,OAI7D,OAAOge,I;;;;;oDCtCX,cAMM,UACFnmB,EAAS,UACTW,GACA,YAEE0P,EAAuB,EAAZrQ,EACX+9B,EAA8B,EAAZ/9B,EAEX,EAAAg+B,0BAA4B,GAC5B,EAAAC,mBAAqB,GACrB,EAAAC,yBAA2B,GAC3B,EAAAC,iBAAmB,GAEhC,qBACI,MAAMhY,EAA8B,GAEpC,IAAItlB,EAAMwP,EAGV,IAAK,IAAI5S,EAAI,EAAGA,EAAI,EAAGA,IACnB0oB,EAAY5jB,KAAK,CACb3B,KAAO,EAAAo9B,0BAA4Bh+B,EAAa,EAAAk+B,yBAA2BzgC,EAAIuC,EAC/Ea,IAAKF,EAAUE,IAAMA,IAI7BA,GAAOk9B,EAGP,IAAK,IAAItgC,EAAI,EAAGA,EAAI,EAAGA,IACnB0oB,EAAY5jB,KAAK,CACb3B,KAAO,EAAAq9B,mBAAqBj+B,EAAa,EAAAm+B,iBAAmB1gC,EAAIuC,EAChEa,IAAKF,EAAUE,IAAMA,IAI7BA,GAAOk9B,EAGP,IAAK,IAAItgC,EAAI,EAAGA,EAAI,EAAGA,IACnB0oB,EAAY5jB,KAAK,CACb3B,KAAO,EAAAo9B,0BAA4Bh+B,EAAa,EAAAk+B,yBAA2BzgC,EAAIuC,EAC/Ea,IAAKF,EAAUE,IAAMA,IAI7B,OAAOslB,I;;;;;oDCrDX,aACA,QACA,QACA,OACA,QACA,QACA,QAGA,OACA,QACA,QACA,QACA,OACA,QACA,QACA,OACA,QACA,OAQMiY,EAA4B,CAC9B,UAAU55B,MACV,UAAUJ,MACV,UAAUG,QACV,UAAUJ,OAGR,UACFnE,EAAS,cACTK,EAAa,UACbM,GACA,YAIE09B,EAAsBh+B,EAAgB,EAAK,GAAKL,EAAa,EAEnE,8BAKY,KAAAs+B,sBAAwD,GAKzD,QACH,EAAAv8B,SAAS,EAAA6O,uBAAuB,aAEhC,MAAMukB,EAAgB,YACtB,EAAApzB,SAAS,EAAAgP,sBAAsBokB,EAAcv0B,KAAMu0B,EAAct0B,MAGjE6J,KAAK4zB,sBAAsB/7B,KAAK,UAASwH,0BAA0B,EAAA4f,iBAGnE,MAAM5jB,EAAa7F,KAAK+8B,KAAK/8B,KAAKyD,SAAWy6B,EAAgBl8B,OAAS,GAChEghB,EAAkBkb,EAAgBr4B,IAElC,UACF1E,GACA,EAAA+H,WAIJ,EAAAwgB,gBAAgBvoB,EAAUiM,MAAO,KAG7B,MAAMixB,EAAW7zB,KAAK8zB,kBAAkB79B,EAAUC,KAAMD,EAAUG,MAAOO,EAAU+yB,eAAeG,OAAQlzB,EAAU+yB,eAAeI,QAC7HiK,EAAW/zB,KAAKg0B,gBAAgBH,GAGtC7zB,KAAK4zB,sBAAsB/7B,KAAK,UAASwH,0BAA0B,IAAM,EAAA40B,mBAAmBzb,EAAiBqb,KAG7G7zB,KAAK4zB,sBAAsB/7B,KAAK,UAASsH,oBAAoB,IAAMa,KAAKk0B,oBAIxEl0B,KAAK4zB,sBAAsB/7B,KAAK,UAASsH,oBAAqBZ,GAASyB,KAAKm0B,aAAa51B,EAAMw1B,KAE/F,EAAA18B,SAAS,EAAA6O,uBAAuB,cAQhC,gBAAgB2tB,GACpB,OAAOA,EACFt7B,IAAK67B,IACK,CACHl+B,KAAM,CACFA,KAAMD,EAAUC,KAChBE,MAAOg+B,EAAGl+B,KACVC,IAAKi+B,EAAGj+B,IACRE,OAAQ+9B,EAAG/9B,QAEfD,MAAO,CACHF,KAAMk+B,EAAGh+B,MACTA,MAAOH,EAAUG,MACjBD,IAAKi+B,EAAGj+B,IACRE,OAAQ+9B,EAAG/9B,WAWvB,aAAakI,EAAcw1B,GAC/B,MAAM,YAAEt9B,EAAW,eAAEC,GAAmB,EAAAgI,WACxC,GAAI,UAAMuX,cAAcxf,GAAc,CAElC,MAAM,SAAE0P,EAAQ,MAAE+P,GAAUzf,EAEZs9B,EAAS7W,KAAMmX,IAC3B,MAAQn+B,KAAMo+B,EAAYl+B,MAAOm+B,GAAgBF,GAC3C,OAAE9a,EAAM,OAAEljB,GAAW8P,EAE3B,OAAO,EAAA1K,YAAYpF,EAAOH,KAAMG,EAAOD,MAAOC,EAAOF,IAAKE,EAAOA,OAAQi+B,EAAWp+B,KAAMo+B,EAAWl+B,MAAOk+B,EAAWn+B,IAAKm+B,EAAWj+B,SACnI,EAAAoF,YAAYpF,EAAOH,KAAMG,EAAOD,MAAOC,EAAOF,IAAKE,EAAOA,OAAQk+B,EAAYr+B,KAAMq+B,EAAYn+B,MAAOm+B,EAAYp+B,IAAKo+B,EAAYl+B,SACpI,EAAAoF,YAAY8d,EAAOrjB,KAAMqjB,EAAOnjB,MAAOmjB,EAAOpjB,IAAKojB,EAAOljB,OAAQi+B,EAAWp+B,KAAMo+B,EAAWl+B,MAAOk+B,EAAWn+B,IAAKm+B,EAAWj+B,SAChI,EAAAoF,YAAY8d,EAAOrjB,KAAMqjB,EAAOnjB,MAAOmjB,EAAOpjB,IAAKojB,EAAOljB,OAAQk+B,EAAYr+B,KAAMq+B,EAAYn+B,MAAOm+B,EAAYp+B,IAAKo+B,EAAYl+B,WAG7H6f,GACX,EAAAkH,kBAAkB7e,GAItB7H,EAAeiI,cACfo1B,EAASh5B,QAASy5B,IACd,UAASj1B,aAAa,IAAM,EAAAyZ,uBAAuBwb,EAAGt+B,KAAM,QAC5D,UAASqJ,aAAa,IAAM,EAAAyZ,uBAAuBwb,EAAGp+B,MAAO,UAYjE,kBAAkBsF,EAAmBC,EAAoB84B,EAAsBC,GAEnF,MAAMC,EAA4B,GAElC,IAAI13B,EAAY02B,EAKZt9B,EAAS,UAAmBA,OAEhC,MAAMu+B,EAAa,UAAmBna,iBACtC,IAAIoa,EAAa,EAEbC,EAAY,EAAA/Z,sBAAsB2Z,GAClCK,EAAY,EAAAha,sBAAsB0Z,GAEtC,KAAOI,EAAaC,EAAYF,GAAY,CACxC,MAAMp3B,EAAKs3B,EAAYx/B,EAEjBH,EAAsB,CACxBe,KAAM+G,EACN9G,IAAKE,EAASmH,EACdpH,MAAO6G,EAAY,UAAmB1H,MACtCc,UAIE2+B,EAAeD,EAAYz/B,EAGb,EAAA2/B,WAGhBh4B,GAAa+3B,EAGb/3B,GAAa+3B,GAIb/3B,GAAavB,GAAauB,EAAY,UAAmB1H,OAASoG,KAClEsB,IAAc,GAIlB5G,GAAUmH,EAGVq3B,GAAcC,EACdH,EAAS98B,KAAK1C,GAEd2/B,EAAY,EAAA/Z,sBAAsB2Z,GAClCK,EAAY,EAAAha,sBAAsB0Z,GAItC,GAAmB,IAAfI,EAAkB,CAClB,MAAM1/B,EAAsB,CACxBe,KAAM+G,EACN9G,IAAK,UAAmBA,IACxBC,MAAO6G,EAAY,UAAmB1H,MACtCc,UAGJs+B,EAAS98B,KAAK1C,GAGlB,OAAOw/B,EAMH,kBAEJ,MACIl+B,aAAa,IAAEN,IACf,EAAAuI,WAEJ,GAAIvI,EAAMF,EAAUE,IAAkB,EAAZb,EAAe,CACrC,YAGA,EAAA+B,SAAS,EAAA4K,cAAc,OAIvB,MAAMwoB,EAAgB,YACtB,EAAApzB,SAAS,EAAAgP,sBAAsBokB,EAAcv0B,KAAMu0B,EAAct0B,OAOlE,UAEH6J,KAAK4zB,sBAAsB74B,QAASjG,GAAMA,Q;;;;;oDC/PlD,aACA,QACA,OACA,QACA,QACA,OAEA,OACA,OACA,SACA,SAOM,UACFQ,GACA,YAEE4/B,EAAqC,GAAZ5/B,EACzB6/B,EAAiBD,EAAyB5/B,EAK1C8/B,EAAwB,EAAAC,2BAE9B,IAAIC,EACAC,EACAC,EACAC,EAIAC,EAFAC,EAAwC,GAIxCC,GAAsB,EAEtBC,EAAmC,OAoFvC,SAASC,EAAM95B,EAAwB+5B,GACnCL,EAAiB15B,EAGjB65B,EAAuB,EAAAn3B,WAAWjI,YAAYwP,UAE9C,MAAO,KAAC/P,EAAI,IAAEC,GAAS,YACvB,EAAAkB,SAAS,EAAAgP,sBAAsBnQ,EAAMC,IA9DzC,WAEI,MAAM,YACFM,GACA,EAAAiI,WAEExI,EAAOO,EAAYP,KACnBC,EAAMM,EAAYN,IAElB6/B,EAAY,EAAAl6B,YAAY5F,EAAMC,EAvDjB,IAuDsCg/B,GACnDc,EAAe,EAAAn6B,YAAY5F,EAAMC,EAxDpB,IAwDyC++B,GACtDgB,EAAW,EAAAp6B,YAAY5F,EAAMC,EAxDd,IAwDqC++B,GACpDiB,EAAY,EAAAr6B,YAAY5F,EAAMC,EAxDd,IAwDsC++B,GAE5DI,EAAgB,IAAI,UAChBU,EAAU9/B,KACV8/B,EAAU7/B,IACV,EAAAigC,iBAAiBhB,EAAsB,IACvC,EACY,EAAZ9/B,EACA,GAEJigC,EAAmB,IAAI,UACnBU,EAAa//B,KACb+/B,EAAa9/B,IACb,EAAAigC,iBAAiBhB,EAAsB,IACvC,EACY,EAAZ9/B,EACAA,GAEJkgC,EAAe,IAAI,UACfU,EAAShgC,KACTggC,EAAS//B,IACT,EAAAigC,iBAAiBhB,EAAsB,IACvC,EACA,EACA9/B,GAEJmgC,EAAgB,IAAI,UAChBU,EAAUjgC,KACVigC,EAAUhgC,IACV,EAAAigC,iBAAiBhB,EAAsB,IACvC,EACY,EAAZ9/B,EACAA,GAEJqgC,EAAiB,CAACL,EAAeC,EAAkBC,EAAcC,GAAer2B,OAAQvK,QAAY2G,IAAN3G,GAiB9FwhC,GAEc,SAAVr6B,EACA25B,EAAe56B,QAASlG,GAAMA,EAAEyhC,SAAS,KAEzCX,EAAe56B,QAASlG,GAAMA,EAAEyhC,SAAS,KAG7C,EAAAj/B,SAAS,EAAA6O,uBAAuB6vB,IAChCH,GAAsB,EAgC1B,SAASpZ,IACLmZ,EAAe56B,QAASlG,GAAMA,EAAE2nB,QAhIpC,qBACI,MAAM,YAAE/lB,EAAaD,iBAAiB,QAAEyhB,EAAO,WAAEyB,EAAU,QAAErR,IAAc,EAAA3J,WAEtEjI,EAAYyf,QAAiC,IAAxB0f,GAAuD,IAAtBlc,EAAWliB,SAC9DygB,EAAQzgB,OAAS,EACM,IAAnB6Q,EAAQ7Q,QACRs+B,EAAM,OAAQ,YAIlBA,EAAM,OAAQ,aAIlBF,KAuFR,WACI,MAAM,cAAEh/B,GAAkB,EAAA8H,YAEE,IAAxB9H,EAAcyjB,OAAsC,SAAnBqb,GAA6BC,EAAezY,KAAMroB,GAAMA,EAAE0hC,cAC3FZ,EAAe56B,QAASlG,IACpBA,EAAEgM,gBAGN,EAAA21B,sBAAsB,IACI,SAAnBd,GACPC,EAAe56B,QAASlG,IACpBA,EAAEgM,gBAIN80B,EAAec,MAAO5hC,IAAwB,IAAlBA,EAAE0hC,eAC9B,EAAAl/B,SAAS,EAAA0O,kBAAiB,IAC1B,EAAA1O,SAAS,EAAA6O,uBAAuB2vB,IAChCF,EAAiB,GACjBC,GAAsB,GAzGtB/0B,GACA,UAAStB,aAAaid,M;;;;;oDC9D9B,cACA,QACA,OAEA,OACA,QACA,OAOMka,EAAkB,UAAc,IAEtC,gBA0CI,YAAYxgC,EAAcC,EAAawgC,EAAiC36B,EAAeY,EAAoBxD,GAEvG4G,KAAKM,aAAeq2B,IACpB,UAASh8B,MAAMG,gBAAgBkF,KAAKM,cAEpCN,KAAK42B,oBAAsB1gC,EAAO0G,EAClCoD,KAAK62B,mBAAqB1gC,EAAMiD,EAChC4G,KAAKpD,WAAaA,EAClBoD,KAAK5G,UAAYA,EAEjB4G,KAAKhE,MAAQA,EAMV,cAEH,MAAM,YACFvF,GACA,EAAAiI,WAEEo4B,EAAqBrgC,EAAYP,KAAO8J,KAAKpD,WAC7Cm6B,EAAoBtgC,EAAYN,IAAM6J,KAAK5G,UAE3C2C,EAAQ,EAAA60B,eAAe5wB,KAAK42B,oBAAqB52B,KAAK62B,mBAAoBC,EAAoBC,GAGpG,GAFiB,EAAAjG,kBAAkB9wB,KAAK42B,oBAAqB52B,KAAK62B,mBAAoBC,EAAoBC,GAE3FL,EAAiB,CAC5B,MAAMr5B,EAAe,EAAAvB,YAAYkE,KAAK42B,oBAAqB52B,KAAK62B,mBAAoB96B,EAAOiE,KAAKhE,OAChGgE,KAAK42B,oBAAsBv5B,EAAanH,KACxC8J,KAAK62B,mBAAqBx5B,EAAalH,SAEvC6J,KAAK42B,oBAAsBE,EAC3B92B,KAAK62B,mBAAqBE,EAO3B,OACH,UAAY/2B,KAAK42B,oBAAqB52B,KAAK62B,mBAAoB72B,KAAKM,cAOjE,YACH,MAAM,YACF7J,GACA,EAAAiI,WAEEo4B,EAAqBrgC,EAAYP,KAAO8J,KAAKpD,WAC7Cm6B,EAAoBtgC,EAAYN,IAAM6J,KAAK5G,UAGjD,OADiB,EAAA03B,kBAAkB9wB,KAAK42B,oBAAqB52B,KAAK62B,mBAAoBC,EAAoBC,GACxFL,EAOf,SAAS16B,GACZgE,KAAKhE,MAAQA,K;;;;;oDCtHrB,aACA,QACA,QACA,QACA,OAuCA,SAASwgB,IACL,MAAM,iBAAEvU,EAAgB,WAAEyR,GAAe,EAAAhb,WAAWlI,gBACpD,IAAK,MAAMo8B,KAAU3qB,EACjB,UAAY2qB,EAAO18B,KAAM08B,EAAOz8B,IAAKy8B,EAAO5b,cAGhD,IAAK,MAAMvP,KAAaiS,EACpB,UAAYjS,EAAUvR,KAAMuR,EAAUtR,IAAKsR,EAAUuP,cA5C7D,mBAAsCzY,IAWtC,SAAgCA,GAC5B,MAAM,iBAAE0J,GAAqB,EAAAvJ,WAAWlI,gBAElCwgC,EAAsB/uB,EAAiB7I,OAAQ63B,GAAOA,EAAGxY,UAAYwY,EAAGvY,qBAAuBngB,GACrG,EAAAlH,SAAS,EAAA6Q,oBAAoB8uB,IAd7BE,CAAuB34B,GAoB3B,WACI,MAAM8J,EAAU,EAAA3J,WAAWlI,gBAAgB6R,QACrC0e,EAAW,EAAApQ,eAAee,wBAAwBrP,GAExD,EAAAhR,SAAS,EAAAiR,eAAeye,IAvBxBoQ,GA8BJ,WACI,MAAMpQ,EAAW,EAAApQ,eAAee,wBAAwB,EAAAhZ,WAAWlI,gBAAgBkjB,YACnF,EAAAriB,SAAS,EAAAsQ,kBAAkBof,IA/B3BqQ,GACA,UAAS73B,aAAaid,K;;;;;oDCf1B,aACA,OACA,QACA,OACA,QACA,OACA,QACA,QAEA,QACA,QACA,OACA,OACA,OAOA,sBAcA,WACI,MAAM,YACF/lB,GACA,EAAAiI,WAIJ,IAAKjI,EAAYyf,MACb,OAGJ,EAAAsgB,sBAAsB,IAsB1B,WACI,MAAM,YAAE//B,GAAgB,EAAAiI,WACxB,QAAgClD,IAA5B/E,EAAY+iB,YAA2B,CACvC,MAAMrR,EAAS1R,EAAY+iB,YACrBnc,EAAe,EAAAvB,YAAYqM,EAAOjS,KAAMiS,EAAOhS,IAAKgS,EAAOpM,MAAOoM,EAAOnM,OACzEq7B,EAAY,EAAAv1B,eAAezE,EAAanH,KAAMmH,EAAalH,IAAKgS,EAAO6O,cAE7E,GAAI,EAAAc,qBAAqBuf,EAAUnhC,KAAMmhC,EAAUjhC,MAAOiH,EAAalH,IAAKkhC,EAAUhhC,QAAS,CAC3F,MAAM0wB,EAAWuQ,EAAgBj6B,EAAanH,KAAMmH,EAAalH,KACjE,EAAAkB,SAAS,EAAAkP,qBAAqBwgB,SAE9B,EAAA1vB,SAAS,EAAAkP,0BAAqB/K,KA/BtC+7B,GAOJ,WACI,MAAM,YAAE9gC,EAAW,cAAEG,GAAkB,EAAA8H,WACvC,QAAmClD,IAA/B/E,EAAY2P,gBAAgCxP,EAAc2zB,WAAoC/uB,IAA5B/E,EAAY+iB,YAA2B,CACzG,MAAMpT,EAAiB3P,EAAY2P,eAC7B+B,EAASmvB,EAAgBlxB,EAAelQ,KAAMkQ,EAAejQ,KACnE,EAAAkB,SAAS,EAAAkP,qBAAqB4B,KAXlCqvB,GA3BA32B,GACA,UAAStB,aAAaid,IAG1B,MAAM,UACFlnB,GACA,YAEEmiC,EAAoB,UAAkB,UAAUn9B,QA4DtD,SAASg9B,EAAgBphC,EAAcC,GACnC,OAAO,EAAAwgB,eAAeC,iBAAiB1gB,EAAMC,EAAK,EAAAoO,OAAOE,QAAQY,OAAQ,EAAA9H,OAAOC,GAAIi6B,EAAmB,GAAI,GAAMniC,GAAY,GAAMA,GAMvI,SAASknB,IACL,MAAM,YAAE/lB,GAAgB,EAAAiI,WAKxB,GAJIjI,EAAYyf,OACZ,UAAYzf,EAAYP,KAAMO,EAAYN,IAAKM,EAAYugB,cAG3DvgB,EAAY+iB,YAAa,CACzB,MAAMrR,EAAS1R,EAAY+iB,YAC3B,UAAYrR,EAAOjS,KAAMiS,EAAOhS,IAAKgS,EAAO6O,iB;;;;;oDCnGpD,cAIA,6BAAkCxT,GAC9B,MAAO,CAEHxB,KAAM,UAAU6X,kBAChBrW","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 48);\n","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { GameDimensions } from \"../Models/GameDimensions\";\r\n\r\n/**\r\n * Module:          Dimension Provider\r\n * Responsibility:  Provide dimensions for game objects. Not a part of the State because the entire game uses it.\r\n */\r\n\r\nlet gameDimensions: GameDimensions;\r\n\r\n/**\r\n * dimensionProvider. Single function responsible for all dimensions important to the game.\r\n * @param {Node} node. Node\r\n * @returns {GameDimensions}. An object with dimensions.\r\n */\r\nexport default function dimensionProvider(): GameDimensions {\r\n    if (!gameDimensions) {\r\n\r\n        const body = document.getElementById(\"body\") as HTMLBodyElement;\r\n\r\n        let rect: DOMRect;\r\n        if (!body) {\r\n            // Not a nice solution, but the dimensionProvider is called from within unit tests and I do not want\r\n            // to add elements.\r\n            rect = { height: 1024 } as DOMRect;\r\n        } else {\r\n            rect = body.getBoundingClientRect();\r\n        }\r\n\r\n        let pixelSize = 0;\r\n        if (rect.width < rect.height) {\r\n            pixelSize = Math.floor(rect.width / 160);\r\n        } else {\r\n            pixelSize = Math.floor(rect.height / 100);\r\n        }\r\n\r\n        const fullGameHeight = pixelSize * 100;\r\n        const fullGameWidth = pixelSize * 160;\r\n\r\n        const statusBarBottom = pixelSize * 6;\r\n\r\n        const gameFieldLeft = pixelSize;\r\n        const gameFieldRight = fullGameWidth - pixelSize;\r\n        const gameFieldTop = statusBarBottom + pixelSize;\r\n        const gameFieldBottom = fullGameHeight - pixelSize;\r\n\r\n        const gameFieldWidth = gameFieldRight - gameFieldLeft;\r\n        const gameFieldHeight = gameFieldBottom - gameFieldTop;\r\n\r\n        gameDimensions = {\r\n            fullGameWidth,\r\n            fullGameHeight,\r\n            statusBarBottom,\r\n            pixelSize,\r\n            pixelSize2x: pixelSize * 2,\r\n            gameField: {\r\n                left: gameFieldLeft,\r\n                top: gameFieldTop,\r\n                right: gameFieldRight,\r\n                bottom: gameFieldBottom,\r\n                width: gameFieldWidth,\r\n                height: gameFieldHeight,\r\n            }\r\n        };\r\n    }\r\n\r\n    return gameDimensions;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { Action, combineReducers, createStore, Store } from \"redux\";\r\nimport ApplicationState from \"./ApplicationState\";\r\nimport debuggingReducer from \"./Debugging/DebuggingReducer\";\r\nimport enemyLevelReducer from \"./EnemyLevel/EnemyLevelReducer\";\r\nimport gameStateReducer from \"./Game/GameStateReducer\";\r\nimport keyboardStateReducer from \"./Keyboard/KeyboardStateReducer\";\r\nimport playerReducer from \"./Player/PlayerReducer\";\r\n\r\n/**\r\n * Module:          Store\r\n * Responsibility:  Handles the redux store\r\n */\r\n\r\nconst allReducers = combineReducers({\r\n    enemyLevelState: enemyLevelReducer,\r\n    playerState: playerReducer,\r\n    debuggingState: debuggingReducer,\r\n    gameState: gameStateReducer,\r\n    keyboardState: keyboardStateReducer\r\n});\r\n\r\nconst store = createReduxStore();\r\n\r\nexport function createReduxStore(): Store<ApplicationState> {\r\n    return createStore(\r\n        allReducers,\r\n        (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__());\r\n}\r\n\r\n/**\r\n * Returns the store\r\n * @returns {Store}. The redux store.\r\n */\r\nexport function appStore(): Store<ApplicationState> {\r\n    return store;\r\n}\r\n\r\n/**\r\n * Returns the ApplicationState\r\n * @returns {ApplicationState}. The application state.\r\n */\r\nexport function appState(): ApplicationState {\r\n    return appStore().getState();\r\n}\r\n\r\nexport function dispatch(action: Action): void {\r\n    store.dispatch(action);\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport Explosion from \"../Models/Explosion\";\r\nimport { GameLocation } from \"../Models/GameLocation\";\r\nimport { GameRectangle } from \"../Models/GameRectangle\";\r\nimport { GameSize } from \"../Models/GameSize\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport { Frame } from \"../Types\";\r\n\r\n/**\r\n * Module:          Frame\r\n * Responsibility:  Module for dealing with Frames.\r\n */\r\n\r\n/**\r\n * Returns the dimensions of a frame in PX.\r\n * @param {Frame} frame. A frame.\r\n * @returns {width, height}.\r\n */\r\nexport function getFrameDimensions(frame: Frame): GameSize {\r\n\r\n    const pixelSize = dimensionProvider().pixelSize;\r\n\r\n    return {\r\n        width: frame[0].length * pixelSize,\r\n        height: frame.length * pixelSize,\r\n    };\r\n}\r\n\r\n/**\r\n * Returns the maximum width and height for an array of frames.\r\n * @param {Frame[]} frames. Fram array.\r\n * @param {number?} pixelSize. Optional.\r\n */\r\nexport function getMaximumFrameDimensions(frames: Frame[]): GameSize {\r\n    const allFrameDimensions = frames.map((f) => getFrameDimensions(f));\r\n\r\n    const allWidths = allFrameDimensions.map((af) => af.width);\r\n    const allHeights = allFrameDimensions.map((af) => af.width);\r\n\r\n    return {\r\n        width: Math.max(...allWidths),\r\n        height: Math.max(...allHeights),\r\n    };\r\n}\r\n\r\n/**\r\n * Calculates a location object where the center of a frame resides.\r\n * @param {number} left. Left coordinate.\r\n * @param {number} top. Top coordinate.\r\n * @param {frame} frame.\r\n */\r\nexport function getFrameCenter(left: number, top: number, frame: Frame): GameLocation {\r\n    const dimensions = getFrameDimensions(frame);\r\n\r\n    return {\r\n        left: left + dimensions.width / 2,\r\n        top: top + dimensions.height / 2,\r\n    };\r\n}\r\n\r\n/**\r\n * Returns a random frame index.\r\n * @param {Frames} frames.\r\n * @returns {number}. Frame index.\r\n */\r\nexport function getRandomFrameKeyIndex(frames: Frame[]): number {\r\n    const objectKeys = Object.keys(frames).length - 1;\r\n\r\n    return Math.round(Math.random() * objectKeys);\r\n}\r\n\r\n/**\r\n * Returns a frame by index. Returns undefined if the frame is not defined.\r\n * @param {Frames} frames. Frames.\r\n * @param {number} index. Index of the frame.\r\n * @returns {Frame | undefined}. Returns the frame if one was found for the passed index, otherwise returns undefined.\r\n */\r\nexport function getFrameByIndex(frames: Frame[], index: number): Frame {\r\n    const frame = frames[index];\r\n\r\n    if (!frame) {\r\n        throw new Error(\"No frame found\");\r\n    }\r\n\r\n    return frame;\r\n}\r\n\r\n/**\r\n * getFrameHitbox\r\n * @param {number} Left. Left coordinate.\r\n * @param {number} top. Top coordinate.\r\n * @param {Frame} frame. A frame\r\n * @param {number} pixelSize.\r\n * @param {number} topOffset.\r\n * @param {number} bottomOffset.\r\n * @returns {GameRectangle}. The frame's hitbox.\r\n */\r\nexport function getFrameHitbox(left: number, top: number, frame: Frame, topOffset: number = 0, bottomOffset: number = 0): GameRectangle {\r\n    const { width, height } = getFrameDimensions(frame);\r\n\r\n    return {\r\n        top: top + topOffset,\r\n        left,\r\n        right: left + width,\r\n        bottom: top + height + bottomOffset,\r\n    };\r\n}\r\n\r\n/**\r\n * Uses spreads to create a new Frame.\r\n * @param {Frame} frame. The frame.\r\n * @returns {Frame}. A copy of the original frame.\r\n */\r\nexport function copyFrame(frame: Frame): Frame {\r\n    const newFrame: Frame = [];\r\n\r\n    for (const row of frame) {\r\n        const newRow = [...row];\r\n        newFrame.push(newRow);\r\n    }\r\n\r\n    return newFrame;\r\n}\r\n\r\n/**\r\n * Uses spreads to create new Frames.\r\n * @param {Frames} frames. Frames to copy.\r\n * @return {Frames}. Fresh copy of the Frames.\r\n */\r\nexport function copyFrames(frames: Frame[]): Frame[] {\r\n    const newFrames: Frame[] = [];\r\n\r\n    for (const frame of frames) {\r\n        const newFrame = copyFrame(frame);\r\n        newFrames.push(newFrame);\r\n    }\r\n\r\n    return newFrames;\r\n}\r\n\r\nexport function getFrameReturner(frame: Frame): () => Frame {\r\n    const frameCopy = copyFrame(frame);\r\n\r\n    return () => frameCopy;\r\n}\r\n\r\nexport function copyExplosion(explosion: Explosion): Explosion {\r\n    const newExplosion = { ...explosion };\r\n    newExplosion.particleFrames = copyFrames(explosion.particleFrames);\r\n    newExplosion.explosionCenterFrame = copyFrame(explosion.explosionCenterFrame);\r\n\r\n    return explosion;\r\n}\r\n\r\nexport function getExplosionReturner(explosion: Explosion): () => Explosion {\r\n    const newExplosion = copyExplosion(explosion);\r\n\r\n    return () => newExplosion;\r\n}","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          CGA Colors\r\n * Responsibility:  Contains color for the CGA 16 color pallet.\r\n */\r\n\r\nconst CGAColors = {             // Color hex code. Used to set the color of assets.\r\n    black: \"#000000\",           // 0\r\n    blue: \"#0000AA\",            // 1\r\n    green: \"#00AA00\",           // 2\r\n    cyan: \"#00AAAA\",            // 3\r\n    red: \"#AA0000\",             // 4\r\n    magenta: \"#AA00AA\",         // 5\r\n    brown: \"#AA5500\",           // 6\r\n    lightGray: \"#AAAAAA\",       // 7\r\n    darkGray: \"555555\",         // 8\r\n    lightBlue: \"#5555FF\",       // 9\r\n    lightGreen: \"#55FF55\",      // A\r\n    lightCyan: \"#55FFFF\",       // B\r\n    lightRed: \"#FF5555\",        // C\r\n    lightMagenta: \"#FF55FF\",    // D\r\n    yellow: \"#FFFF55\",          // E\r\n    white: \"#FFFFFF\",           // F\r\n    // Varies                   // V. Special color that flags a pixel as varies in color.\r\n};\r\n\r\nexport const validColors = Object.keys(CGAColors).map((key) => (CGAColors as any)[key]);\r\n\r\nexport default CGAColors;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { Frame as FrameType } from \"../Types\";\r\nimport hexToCGAConverter from \"./HexToCGAConverter\";\r\n\r\n/**\r\n * Module:          Functions that mutate frames.\r\n * Responsibility:  Update frames with colors.\r\n */\r\n\r\nnamespace Mutators {\r\n\r\n    export namespace Frames {\r\n\r\n        /**\r\n         * Sets a cell's color to the passed color. Doesn't matter if they're variable (V).\r\n         * @param {Frames} frames. All frames.\r\n         */\r\n        export function setColor(frames: FrameType[], ...colors: string[]): void {\r\n            for (const frame of frames) {\r\n                Frame.setColor(frame, ...colors);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Updates a frame to actual CGA colors.\r\n         * @param {Frames} frames. All frames.\r\n         */\r\n        export function convertHexToCGA(frames: FrameType[]): void {\r\n            for (const frame of frames) {\r\n                Frame.convertHexToCGA(frame);\r\n            }\r\n        }\r\n    }\r\n\r\n    export namespace Frame {\r\n        /**\r\n         * Set the predefined color for a single frame.\r\n         * @param {Frame} frame. A single frame.\r\n         */\r\n        export function convertHexToCGA(frame: FrameType) {\r\n            frame.forEach((row, rowIndex) => {\r\n                row.forEach((cellColor, cellIndex) => {\r\n                    if (cellColor !== \"0\") {\r\n                        frame[rowIndex][cellIndex] = hexToCGAConverter(cellColor);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Sets a frame colors when the color is not black (\"0\")\r\n         * @param {Frame} frame. A frame\r\n         * @param {string} color. A color\r\n         */\r\n        export function setColor(frame: FrameType, ...colors: string[]) {\r\n            if (colors.length === 0) {\r\n                throw new Error(\"No colors\");\r\n            }\r\n            frame.forEach((row, rowIndex) => {\r\n                row.forEach((cellColor, cellIndex) => {\r\n                    if (cellColor !== \"0\") {\r\n                        let useColor = \"\";\r\n                        if (cellColor.indexOf(\"V\") !== -1) {\r\n                            const colorIndex = cellColor.replace(\"V\", \"\");\r\n                            if (colorIndex === \"\") {\r\n                                // if the V cell has no index, just pick the first color.\r\n                                useColor = colors[0];\r\n                            } else {\r\n                                useColor = colors[parseInt(colorIndex, 10)];\r\n                            }\r\n                        } else {\r\n                            // Not a V, set the color.\r\n                            useColor = colors[0];\r\n                        }\r\n\r\n                        if (useColor === undefined || useColor === \"\") {\r\n                            throw Error(\"Color shoud not be undefined\");\r\n                        }\r\n\r\n                        frame[rowIndex][cellIndex] = useColor;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default Mutators;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { GameLocation } from \"../Models/GameLocation\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport speedProvider from \"../Providers/SpeedProvider\";\r\nimport { getLeftOrRightFromAngle, getNextX, getNextY } from \"./Geometry\";\r\nimport { Angle } from \"../Types\";\r\n\r\n/**\r\n * Module:          Location utilities\r\n * Responsibility:  Offer utility functions for stuff that needs to know where it is.\r\n */\r\n\r\nconst {\r\n    gameField,\r\n    pixelSize\r\n} = dimensionProvider();\r\n\r\n/**\r\n * Calculate distance in pixels.\r\n * @param {number} left1. 1st left coordinate.\r\n * @param {number} top1. 1st top coordinate.\r\n * @param {number} left2. 2nd left coordinate.\r\n * @param {number} top2. 2nd right coordinate.\r\n * @returns {number}. Distance in actual pixels.\r\n */\r\nexport function calculateDistance(left1: number, top1: number, left2: number, top2: number): number {\r\n\r\n    const xd = left1 - left2;\r\n    const yd = top1 - top2;\r\n\r\n    return Math.sqrt(Math.pow(xd, 2) + Math.pow(yd, 2));\r\n}\r\n\r\n/**\r\n * Checks if a location falls within an area.\r\n * @param {number} left. Left coordinate\r\n * @param {number} top. Top coordinate.\r\n * @param {number} outerTop. Top of the area.\r\n * @param {number} outerBottom. Bottom of the area.\r\n * @param {number} outerLeft. Left of the area.\r\n * @param {number} outerRight. Right of the area.\r\n * @returns {boolean}. Returns true if the given coordinates fall within the given limits.\r\n */\r\nexport function fallsWithin(left: number, right: number, top: number, bottom: number, outerLeft: number, outerRight: number, outerTop: number, outerBottom: number): boolean {\r\n\r\n    const yBounds = bottom >= outerTop && top <= outerBottom;\r\n    const xBounds = right >= outerLeft && left <= outerRight;\r\n\r\n    const res = xBounds && yBounds;\r\n\r\n    return res;\r\n}\r\n\r\n/**\r\n * fallsWithinGameField. Returns true if the location falls within the game field\r\n * @param {number} left. Left coordinate.\r\n * @param {number} right. Right coordinate.\r\n * @param {number} top. Top coordinate.\r\n * @param {number} bottom. Bottom coordinate.\r\n * @returns {boolean}. True if the given coordinates fall within the game field\r\n */\r\nexport function fallsWithinGameField(left: number, right: number, top: number, bottom: number): boolean {\r\n    const res = fallsWithin(left, right, top, bottom, gameField.left, gameField.right, gameField.top, gameField.bottom - pixelSize);\r\n\r\n    return res;\r\n}\r\n\r\n/**\r\n * Calculates a location.\r\n * @param {number} left. Left coordinate.\r\n * @param {number} top. Top coordinate.\r\n * @param {Angle} angle. The angle of the object.\r\n * @param {number} speed. The speed the of the object\r\n * @returns {GameLocation}. The location of the object. If angle is undefined the original location is returns as a new object.\r\n */\r\nexport function getLocation(left: number, top: number, angle: Angle, speed: number): GameLocation {\r\n\r\n    if (angle === undefined) {\r\n        return {\r\n            left,\r\n            top,\r\n        };\r\n    }\r\n\r\n    const relativeSpeed = speedProvider(speed);\r\n\r\n    const nextLeft = getNextX(angle, relativeSpeed, left);\r\n    const nextTop = getNextY(angle, relativeSpeed, top);\r\n\r\n    return {\r\n        left: nextLeft,\r\n        top: nextTop,\r\n    };\r\n}\r\n\r\n/**\r\n * Offsets a location using the given offsers and return a new location.\r\n * @param {number} left. Left coordinate.\r\n * @param {number} top. Top coordinate.\r\n * @param {number} leftOffset. Left offset in real pixels.\r\n * @param {number} topOffset. Top offset in real pixels.\r\n * @returns {location}. A new location offset to animation overlap.\r\n */\r\nexport function getOffsetLocation(left: number, top: number, leftOffset: number, topOffset: number): GameLocation {\r\n    return {\r\n        left: left + leftOffset,\r\n        top: top + topOffset,\r\n    };\r\n}\r\n\r\n/**\r\n * getNextLocationWithinBoundaries. Returns the next location that falls within the given boundaries.\r\n * This function will reset the left and right positions.\r\n * @param {number} currentLeft. Current left position of the object.\r\n * @param {number} currentTop. Current top position of the object\r\n * @param {number} width. Width of the object.\r\n * @param {number} angle. Travel angle.\r\n * @param {number} speed. Speed of travel.\r\n * @param {number} maxTop. Maximum top position before the object must go down.\r\n * @param {number} maxBottom. Maximum bottom position before the object must go up.\r\n */\r\nexport function getNextLocationWithinBoundaries(\r\n    currentLeft: number,\r\n    currentTop: number,\r\n    width: number,\r\n    angle: number,\r\n    speed: number,\r\n    maxTop: number,\r\n    maxBottom: number): GameLocation {\r\n\r\n    // Get the next location, this location might fall outside the boundaries.\r\n    let { left, top } = getLocation(currentLeft, currentTop, angle, speed);\r\n\r\n    // Determine which way the enemy is rought moving, left or right. This\r\n    // determine is we use the left or rigth side of the gamfield to\r\n    // determine if the enemy is moving off screen.\r\n\r\n    const direction = getLeftOrRightFromAngle(angle);\r\n    if (direction === \"right\") {\r\n        if (left - width > gameField.right) {\r\n            left = gameField.left - width;\r\n        }\r\n    } else if (direction === \"left\") {\r\n        if (left + width < gameField.left) {\r\n            left = gameField.right + width;\r\n        }\r\n    }\r\n\r\n    if (top > maxBottom) {\r\n        top = maxTop;\r\n    }\r\n\r\n    return { left, top };\r\n}\r\n\r\n/**\r\n * getNextLocationAndAngle. Returns a new location and angle (if required). This function will also flip angles to ensure\r\n * an object bounces off the outer limits. The left and right limit are the gameField.left and right coordinate\r\n * Top and bottom are passed as a parameter.\r\n * @param {number} currentLeft. Current left position of the object.\r\n * @param {number} currentTop. Current top position of the object.\r\n * @param {number} angle. Current angle of the object.\r\n * @param {number} speed. Speed of the object.\r\n * @param {number} width. Width o the object.\r\n * @param {number} height. Height of the object.\r\n * @param {number} topLimit. top limit. This is as high as the top coordiante can go.\r\n * @param {number} bottomLimit. bottom limit. This is as high as the bottom limit can go.\r\n */\r\nexport function getNextLocationAndAngle(currentLeft: number, currentTop: number, angle: number, speed: number, width: number, height: number, topLimit: number, bottomLimit: number): { location: GameLocation, angle: number } {\r\n    const nextLocation = getLocation(currentLeft, currentTop, angle, speed);\r\n\r\n    if (nextLocation.left <= gameField.left || nextLocation.left + width >= gameField.right) {\r\n        angle = 180 - angle;\r\n    }\r\n\r\n    if (nextLocation.top <= topLimit || nextLocation.top >= bottomLimit - height) {\r\n        angle *= -1;\r\n    }\r\n\r\n    // Grab in a fresh location in case the angle was changed.\r\n    const location = getLocation(nextLocation.left, nextLocation.top, angle, speed);\r\n\r\n    return {\r\n        location,\r\n        angle\r\n    };\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Angles\r\n * Responsibility:  Define the simple angles\r\n */\r\n\r\nexport const angles = {\r\n    left: 180,\r\n    right: 0,\r\n    up: 270,\r\n    down: 90,\r\n    leftup: 235,\r\n    rightup: 325,\r\n    leftdown: 135,\r\n    rightdown: 45,\r\n};\r\n\r\n/**\r\n * Returns all angles as numbers.\r\n * @returns {number[]}.\r\n */\r\nexport function getAngles(): number[] {\r\n    return Object.keys(angles).map((k) => (angles as any)[k] as number);\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Array\r\n * Responsibility:  Array utilities\r\n */\r\n\r\n/**\r\n * Returns a random element from an array\r\n * @param {T[]} arr. An array of type T.\r\n * @returns {T}. Value found in a random position.\r\n */\r\nexport function getRandomArrayElement<T>(arr: T[]): T {\r\n    if (arr.length === 1) {\r\n        return arr[0];\r\n    } else {\r\n        const randomIndex = Math.floor(Math.random() * arr.length);\r\n        return arr[randomIndex];\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { DEBUGGING_drawGrid, DEBUGGING_renderHitboxes } from \"./Debugging/Debugging\";\r\nimport { appState } from \"./State/Store\";\r\nimport { TickFunction } from \"./Types\";\r\n\r\n/**\r\n * Module:          GameLoop\r\n * Responsibility:  Handles all functions that should be called within the GameLoop.\r\n */\r\n\r\n/**\r\n * A handle for the main loop.\r\n */\r\nlet mainHandle: number | undefined;\r\n\r\n/**\r\n * Functions that subscripbe to the game tick.\r\n */\r\nlet updateStateFunctions: TickFunction[] = [];\r\n\r\n/**\r\n * Functions that perform background drawing.\r\n */\r\nlet backgroundDrawFunctions: Array<() => void> = [];\r\n\r\nlet foregroundDrawFunctions: Array<() => void> = [];\r\n\r\n/**\r\n * Functions that draw.\r\n */\r\nlet drawFunctions: Array<() => void> = [];\r\n\r\nexport namespace GameLoop {\r\n    /**\r\n     * Start game loop\r\n     */\r\n    export function Start(): void {\r\n        mainHandle = window.requestAnimationFrame(run);\r\n    }\r\n\r\n    /**\r\n     * Stop game loop and clear subscriptions.\r\n     */\r\n    export function Stop(): void {\r\n\r\n        if (mainHandle !== undefined) {\r\n            window.cancelAnimationFrame(mainHandle);\r\n        }\r\n\r\n        updateStateFunctions = [];\r\n        backgroundDrawFunctions = [];\r\n        drawFunctions = [];\r\n    }\r\n\r\n    /**\r\n     * Register a tick handling function\r\n     * @param {TickFunction} f. A function that handles a tick\r\n     * @returns {() => void}. A function that removes the tick handler funtion from the subscription array.\r\n     */\r\n    export function registerUpdateState(f: TickFunction): () => void {\r\n        updateStateFunctions.push(f);\r\n\r\n        return () => {\r\n            updateStateFunctions = updateStateFunctions.filter((s) => s !== f);\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Register a function that draws the background.\r\n     * @param {function} f. Background draw function\r\n     * @returns {function}. Function to remove the background draw from the queue.\r\n     */\r\n    export function registerBackgroundDrawing(f: () => void): () => void {\r\n        backgroundDrawFunctions.push(f);\r\n\r\n        return () => {\r\n            backgroundDrawFunctions = backgroundDrawFunctions.filter((d) => d !== f);\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Register a function that draws the background.\r\n     * @param {function} f. Background draw function\r\n     * @returns {function}. Function to remove the background draw from the queue.\r\n     */\r\n    export function registerForegroundDrawing(f: () => void): () => void {\r\n        foregroundDrawFunctions.push(f);\r\n\r\n        return () => {\r\n            foregroundDrawFunctions = foregroundDrawFunctions.filter((d) => d !== f);\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Registers a function that is called once, but only if there is currently no render in progress.\r\n     * @param {function} f. A function.\r\n     */\r\n    export function registerDraw(f: () => void): void {\r\n        drawFunctions.push(f);\r\n    }\r\n\r\n    /**\r\n     * Runner function. Calls all functions that subscribed to the game loop.\r\n     * @param {number} tick. Current animation tick.\r\n     */\r\n    function run(tick: number): void {\r\n        mainHandle = window.requestAnimationFrame(run);\r\n\r\n        const {\r\n            gameState: { pause }\r\n        } = appState();\r\n\r\n        if (pause) {\r\n            return;\r\n        }\r\n\r\n        // Always update the states. This will also register draw function (if required).\r\n        updateStateFunctions.forEach((f) => f(tick));\r\n\r\n        // Draw the back ground, other stuff is drawn over this so we render it first.\r\n        backgroundDrawFunctions.forEach((f) => f());\r\n\r\n        // Now we go over the register draw functions\r\n        drawFunctions.forEach((f) => f());\r\n        drawFunctions = [];\r\n\r\n        // Finally we finish with drawing foreground stuff. The status bar for one, and the game border\r\n        // are both foreground and render over anything.\r\n        foregroundDrawFunctions.forEach((f) => f());\r\n\r\n        const { debuggingState } = appState();\r\n\r\n        if (debuggingState.drawHitboxes) {\r\n            DEBUGGING_renderHitboxes();\r\n        }\r\n\r\n        if (debuggingState.drawGrid) {\r\n            DEBUGGING_drawGrid(debuggingState.gridDetail);\r\n        }\r\n    }\r\n}\r\n\r\nexport default GameLoop;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport TickHandler from \"../Handlers/TickHandler\";\r\nimport ILocationProvider from \"../Interfaces/ILocationProvider\";\r\nimport Explosion from \"../Models/Explosion\";\r\nimport { GameLocation } from \"../Models/GameLocation\";\r\nimport { GameRectangle } from \"../Models/GameRectangle\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport { addOrUpdateEnemy } from \"../State/EnemyLevel/EnemyLevelActions\";\r\nimport { dispatch } from \"../State/Store\";\r\nimport { ExplosionProviderFunction, Frame, OffsetFramesProviderFunction } from \"../Types\";\r\nimport { getFrameCenter, getFrameHitbox } from \"../Utility/Frame\";\r\nimport { getOffsetLocation } from \"../Utility/Location\";\r\nimport BaseFrameProvider from \"./BaseFrameProvider\";\r\n\r\n/**\r\n * Module:          BaseEnemy\r\n * Responsibility:  Base class for all enemies.\r\n *                  This class provides contacts and default methods that will work\r\n *                  for most enemies in the game leaving specifics to derived classes.\r\n */\r\n\r\nconst {\r\n    pixelSize,\r\n} = dimensionProvider();\r\n\r\nconst negativepixelSize = pixelSize * -1;\r\n\r\nexport default abstract class BaseEnemy {\r\n\r\n    /**\r\n     * Static to ensure every enemy gets a new id.\r\n     */\r\n    private static idCounter = 0;\r\n\r\n    /**\r\n     * Id of the enemy. Used to check if a bullet belongs to an enemy.\r\n     */\r\n    private enemyId = 0;\r\n\r\n    /**\r\n     * The frame provider. Must be set in an inheriting class.\r\n     */\r\n    protected frameProvider: BaseFrameProvider;\r\n\r\n    /**\r\n     * Frame tick handler. Handles changes in the frames.\r\n     */\r\n    private frameTickHandler: TickHandler;\r\n\r\n    /**\r\n     * Offets for each frame.\r\n     */\r\n    private offSets: GameLocation[];\r\n\r\n    /**\r\n     * Explosion for the enemy.\r\n     */\r\n    protected explosion: Explosion;\r\n\r\n    /**\r\n     * Left position offset for animation.\r\n     */\r\n    private offsetLeft: number;\r\n\r\n    /**\r\n     * Top position offset for animation.\r\n     */\r\n    protected offsetTop: number;\r\n\r\n    /**\r\n     * Current frame of the object\r\n     */\r\n    protected currentFrame?: Frame;\r\n\r\n    /**\r\n     * Provides location. Can be used to alter the movement behaviour of enemies.\r\n     */\r\n    protected locationProvider: ILocationProvider;\r\n\r\n    /**\r\n     * Creates an instance of BaseEnemy.\r\n     * @param {number} frameChangeTime. Time between frames.\r\n     * @param {OffsetFramesProviderFunction} getOffsetFrames. Returns an OffsetFrames object.\r\n     * @param {ExplosionProviderFunction} getExplosion. Returns an explosion object.\r\n     * @param {ILocationProvider} locationProvider. Provides the location of the enemy.\r\n     * @param {BaseFrameProvider} frameProvider. Provides the frame of the enemy.\r\n     * @param {FireAngleProviderFunction} [fireAngleProvider]. Provides a fire hangle for the enemy.\r\n     * @memberof BaseEnemy\r\n     */\r\n    constructor(\r\n        frameChangeTime: number,\r\n        getOffsetFrames: OffsetFramesProviderFunction,\r\n        getExplosion: ExplosionProviderFunction,\r\n        locationProvider: ILocationProvider,\r\n        frameProvider: BaseFrameProvider) {\r\n\r\n        this.locationProvider = locationProvider;\r\n\r\n        this.explosion = getExplosion();\r\n        this.frameTickHandler = new TickHandler(frameChangeTime, () => this.onFrameChange());\r\n\r\n        const offSetFrames = getOffsetFrames();\r\n        this.offSets = offSetFrames.offSets.map((o) => {\r\n            return {\r\n                left: o.left * pixelSize,\r\n                top: o.top * pixelSize,\r\n            };\r\n        });\r\n\r\n        this.frameProvider = frameProvider;\r\n        this.frameProvider.setFrames(offSetFrames.frames);\r\n\r\n        this.currentFrame = this.frameProvider.getCurrentFrame();\r\n\r\n        const { left, top } = this.getOffsetLocation();\r\n        this.offsetLeft = left;\r\n        this.offsetTop = top;\r\n\r\n        this.enemyId = BaseEnemy.idCounter;\r\n        BaseEnemy.idCounter += 1;\r\n    }\r\n\r\n    /**\r\n     * getId\r\n     * @returns {number}\r\n     * @memberof BaseEnemy\r\n     */\r\n    public getId(): number {\r\n        return this.enemyId;\r\n    }\r\n\r\n    /**\r\n     * Returns the point worth.\r\n     * @returns {number}. Point worth of the enemy.\r\n     */\r\n    public abstract getPoints(): number;\r\n\r\n    /**\r\n     * Called by a TickHandler when the next frame is up.\r\n     */\r\n    protected abstract onFrameChange(): void;\r\n\r\n    /**\r\n     * Base implementation of a state update.\r\n     * @param {number} tick\r\n     */\r\n    public updateState(tick: number) {\r\n        this.frameTickHandler.tick(tick);\r\n\r\n        const offsetLocation = this.getOffsetLocation();\r\n        this.offsetLeft = offsetLocation.left;\r\n        this.offsetTop = offsetLocation.top;\r\n\r\n        this.locationProvider.updateState(tick);\r\n    }\r\n\r\n    protected dispatchCurrentState(): void {\r\n        dispatch(addOrUpdateEnemy({\r\n            enemyId: this.getId(),\r\n            coloredExplosion: this.explosion,\r\n            offsetLeft: this.offsetLeft,\r\n            offsetTop: this.offsetTop,\r\n            currentFrame: this.currentFrame,\r\n            hitpoints: this.getHitpoints(),\r\n            hitbox: this.getHitbox(),\r\n            centerLocation: this.getCenterLocation(),\r\n            points: this.getPoints(),\r\n        }));\r\n    }\r\n\r\n    /**\r\n     * Calculates the offsetLocation\r\n     * @returns {GameLocation}. Location offset to let the frames render over one another.\r\n     */\r\n    protected getOffsetLocation(): GameLocation {\r\n        const frameOffsets = this.offSets[this.frameProvider.getCurrentIndex()];\r\n        const location = this.locationProvider.getCurrentLocation();\r\n\r\n        if (frameOffsets) {\r\n            return getOffsetLocation(location.left, location.top, frameOffsets.left, frameOffsets.top);\r\n        } else {\r\n            return location;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Increases the speed of an enemy.\r\n     * @param {number} value. Values below 1 decrease speed, values above 1 increase speed.\r\n     */\r\n    public increaseSpeed(value: number): void {\r\n        this.locationProvider.increaseSpeed(value);\r\n        this.frameTickHandler.increaseSpeed(value);\r\n    }\r\n\r\n    /**\r\n     * Returns the hitpoint of the enemy.\r\n     * @returns {number}\r\n     * @memberof BaseEnemy\r\n     */\r\n    public getHitpoints(): number {\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * Reduce the enemies hitpoints.\r\n     */\r\n    public recudeHitpoints(): void {\r\n        // Override. Only the astroid enemy has hitpoints.\r\n    }\r\n\r\n    /**\r\n     * Returns the center location of the object.\r\n     * @returns {GameLocation}. Location located at the center of the object.\r\n     */\r\n    private getCenterLocation(): GameLocation {\r\n        if (this.currentFrame !== undefined) {\r\n            return getFrameCenter(this.offsetLeft, this.offsetTop, this.currentFrame);\r\n        } else {\r\n            // Return a non existing location. This simply means the enemy is not on the screen\r\n            // and it saves a billion undefined checks.\r\n            return {\r\n                top: -100,\r\n                left: -100,\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the enemies hitbox.\r\n     * @returns {GameRectangle}\r\n     * @memberof BaseEnemy\r\n     */\r\n    private getHitbox(): GameRectangle {\r\n        if (this.currentFrame) {\r\n            return getFrameHitbox(this.offsetLeft, this.offsetTop, this.currentFrame, negativepixelSize);\r\n        } else {\r\n            return {\r\n                left: 0,\r\n                top: 0,\r\n                right: 0,\r\n                bottom: 0,\r\n            };\r\n        }\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Actions\r\n * Responsibility:  Action creator functions for the GameState\r\n */\r\n\r\nimport Constants from \"./GameConstants\";\r\nimport { AddLevel, AddLife, AddLifeAndPhaser, AddPhaser, IncreaseScore, NextLevel, RemoveLife, RemovePhaser, SetLevel, SetLives, SetPause, SetPhasers, SetWarpGateComplexity } from \"./GameTypes\";\r\nimport { WarpLevelComplexity } from \"./WarpLevelTypes\";\r\n\r\nexport function increaseScore(score: number): IncreaseScore {\r\n    return {\r\n        type: Constants.increaseScore,\r\n        payload: score\r\n    };\r\n}\r\n\r\nexport function setLives(lives: number): SetLives {\r\n    return {\r\n        type: Constants.setLives,\r\n        payload: lives,\r\n    };\r\n}\r\n\r\nexport function addLife(): AddLife {\r\n    return {\r\n        type: Constants.addLife,\r\n    };\r\n}\r\n\r\nexport function removeLife(): RemoveLife {\r\n    return {\r\n        type: Constants.removeLife,\r\n    };\r\n}\r\n\r\nexport function setPhasers(phasers: number): SetPhasers {\r\n    return { type: Constants.setPhasers, payload: phasers };\r\n}\r\n\r\nexport function addPhaser(): AddPhaser {\r\n    return { type: Constants.addPhaser };\r\n}\r\n\r\nexport function removePhaser(): RemovePhaser {\r\n    return { type: Constants.removePhaser };\r\n}\r\n\r\nexport function addLevel(): AddLevel {\r\n    return { type: Constants.addLevel };\r\n}\r\n\r\nexport function setLevel(level: number): SetLevel {\r\n    return { type: Constants.setLevel, payload: level };\r\n}\r\n\r\nexport function nextLevel(): NextLevel {\r\n    return { type: Constants.nextLevel };\r\n}\r\n\r\nexport function addLifeAndPhaser(): AddLifeAndPhaser {\r\n    return { type: Constants.addLifeAndPhaser };\r\n}\r\n\r\nexport function setPause(pause: boolean): SetPause {\r\n    return {\r\n        type: Constants.setPause,\r\n        payload: pause,\r\n    };\r\n}\r\n\r\nexport function setWarpGamteComplexity(complexity: WarpLevelComplexity): SetWarpGateComplexity {\r\n    return {\r\n        type: Constants.setWarpLevelComplexity,\r\n        complexity,\r\n    };\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { angles } from \"../Constants/Angles\";\r\nimport { GameRectangle } from \"../Models/GameRectangle\";\r\nimport KeyboardState from \"../State/Keyboard/KeyboardState\";\r\nimport { Angle } from \"../Types\";\r\n\r\n/**\r\n * Module:          Geometry\r\n * Responsibility:  Contains geometry functions.\r\n */\r\n\r\n/**\r\n * Gets the next X coordinats based on the angle, speed and the current X coordinate.\r\n * @param {number} angle. The angle.\r\n * @param {number} speed. The speed.\r\n * @param {number} current. The current X coordinate.\r\n * @returns {number}. The next X coordinate.\r\n */\r\nexport function getNextX(angle: number, speed: number, currentX: number): number {\r\n    return Math.cos(angle * Math.PI / 180) * speed + currentX;\r\n}\r\n\r\n/**\r\n * Gets the next Y coordinate based on the angle, speed and the current Y coordinate.\r\n * @param {number} angle. The angle.\r\n * @param {number} speed. The speed.\r\n * @param {number} current. The current X coordinate.\r\n * @returns {number}. The next Y coordinate.\r\n */\r\nexport function getNextY(angle: number, speed: number, currentY: number): number {\r\n    return Math.sin(angle * (Math.PI / 180)) * speed + currentY;\r\n}\r\n\r\n/**\r\n * getAngle.\r\n * @param {KeyboardState} state. Current keyboard dstate\r\n * @returns {number}. The angle. -1 indicates no movement.\r\n */\r\nexport function getAngle(state: KeyboardState): number {\r\n    let angle = -1;\r\n    if (state.up && state.left) {\r\n        angle = angles.leftup;\r\n    } else if (state.up && state.right) {\r\n        angle = angles.rightup;\r\n    } else if (state.down && state.left) {\r\n        angle = angles.leftdown;\r\n    } else if (state.down && state.right) {\r\n        angle = angles.rightdown;\r\n    } else if (state.left) {\r\n        angle = angles.left;\r\n    } else if (state.right) {\r\n        angle = angles.right;\r\n    } else if (state.up) {\r\n        angle = angles.up;\r\n    } else if (state.down) {\r\n        angle = angles.down;\r\n    }\r\n\r\n    return angle;\r\n}\r\n\r\n/**\r\n * Returns true if two hitboxes overlap.\r\n * @param {GameRectangle | undefined} hitbox1.\r\n * @param {GameRectangle | undefined} hitbox2.\r\n * @returns {boolean}. True if overlap. If either hibox is undefined, returns false.\r\n */\r\nexport function overlaps(hitbox1: GameRectangle | undefined, hitbox2: GameRectangle | undefined): boolean {\r\n\r\n    if (hitbox1 === undefined || hitbox2 === undefined) {\r\n        return false;\r\n    }\r\n\r\n    if (hitbox1.right < hitbox2.left || hitbox1.left > hitbox2.right) {\r\n        return false;\r\n    }\r\n\r\n    if (hitbox1.bottom < hitbox2.top || hitbox1.top > hitbox2.bottom) {\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/**\r\n * returns the reverse angle\r\n * @param {number} angle. An angle in degrees\r\n * @returns {number}. The angle in the opposite direction.\r\n */\r\nexport function reverseDegreeAngle(angle: number): number {\r\n    let newAngle = angle += 180;\r\n\r\n    if (newAngle > 360) {\r\n        newAngle -= 360;\r\n    }\r\n\r\n    return newAngle;\r\n}\r\n\r\n/**\r\n * Calculates the angle from the source location to the target location.\r\n * @param {number} startLeft. Left begin point.\r\n * @param {number} startTop. Top begin point.\r\n * @param {number} endLeft. Left end point.\r\n * @param {number} endTop. Top end pint.\r\n * @returns {number | undefined}. The angle to towards the target in degrees.\r\n */\r\nexport function calculateAngle(startLeft: number, startTop: number, endLeft: number, endTop: number): number | undefined {\r\n    const dx = endLeft - startLeft;\r\n    const dy = endTop - startTop;\r\n\r\n    // Singularity.\r\n    if (dx === 0 && dy === 0) {\r\n        return undefined;\r\n    }\r\n\r\n    return Math.atan2(dy, dx) * 180 / Math.PI;\r\n}\r\n\r\n/**\r\n * Calculates the difference between two angles.\r\n * @param {number} angle1. Angle 1 in degrees.\r\n * @param {number} angle2. Angle 2 in degrees.\r\n * @returns {number}. The difference, in degrees, between the angles\r\n * Source: https://stackoverflow.com/questions/1878907/the-smallest-difference-between-2-angles\r\n */\r\nexport function calculateAngleDifference(angle1: number, angle2: number): number {\r\n    const absoluteAngleDifference = Math.abs(angle1 - angle2);\r\n    const angleDifference = (absoluteAngleDifference + 180) % 360 - 180;\r\n    return Math.abs(angleDifference);\r\n}\r\n\r\n/**\r\n * Checks the angle if it is headed to the left or right.\r\n * Returns undefined if the angle is up or down.\r\n * @param {number} angle. an angle.\r\n * @returns {\"left\" | \"right\" | \"undefined\"}. Returns undefined if there is no left or right direction.\r\n */\r\nexport function getLeftOrRightFromAngle(angle: Angle): \"left\" | \"right\" | undefined {\r\n    if (angle === undefined) {\r\n        return undefined;\r\n    }\r\n\r\n    if (angle > 270 && angle <= 360 || angle >= 0 && angle < 90) {\r\n        return \"right\";\r\n    } else if (angle > 90 && angle < 270) {\r\n        return \"left\";\r\n    }\r\n}\r\n\r\n/**\r\n * Checks if the angle is headed u or down.\r\n * @param {Angle} angle. The angle\r\n * @returns {\"up\" | \"down\" | undefined}. Returns undefined if the angle is not going up or down.\r\n */\r\nexport function getUpOrDownFromAngle(angle: Angle): \"up\" | \"down\" | undefined {\r\n    if (angle === undefined) {\r\n        return undefined;\r\n    }\r\n\r\n    if (angle === 0 || angle === 360 || angle === 180) {\r\n        return undefined;\r\n    } else if (angle > 180 && angle < 360) {\r\n        return \"up\";\r\n    } else if (angle > 0 && angle < 180) {\r\n        return \"down\";\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport { angles } from \"./Angles\";\r\n\r\n/**\r\n * Module:          All speeds for all objects\r\n * Responsibility:  Define constants at which speed an enemy moves.\r\n */\r\n\r\nconst {\r\n    gameField,\r\n    pixelSize\r\n} = dimensionProvider();\r\n\r\n// Collective namespace for all speeds.\r\nexport namespace Speeds {\r\n\r\n    export namespace Movement {\r\n        export const bird = 1.5;\r\n        export const robot = 1.5;\r\n        export const orb = 0.1;\r\n        export const spinner = 1.5;\r\n        export const balloon = 1.5;\r\n        export const asteroid = [2, 4, 6, 8, 10];\r\n        export const diabolo = 2.5;\r\n        export const devil = 2.5;\r\n\r\n        export namespace Piston {\r\n            export const slow = 2;\r\n            export const fast = 4;\r\n        }\r\n    }\r\n\r\n    export namespace Bullets {\r\n        export const player = 42;\r\n        export const robot = 7;\r\n        export const orb = 12;\r\n        export const spinner = 12;\r\n        export const balloon = 12;\r\n        export const piston = 12;\r\n        export const diabolo = 12;\r\n        export const devil = 12;\r\n    }\r\n}\r\n\r\nexport namespace Locations {\r\n    export namespace Enemies {\r\n\r\n        // All locations were determined by drawing a grid over screenshot.\r\n        export namespace robot {\r\n            export const topStart = gameField.top + pixelSize * 18;\r\n            export const maxBottom = gameField.top + pixelSize * 65;\r\n        }\r\n\r\n        export namespace Orb {\r\n            export const topStart = gameField.top + pixelSize * 18;\r\n            export const maxTop = gameField.top + pixelSize * 5;\r\n            export const maxBottom = gameField.top + pixelSize * 55;\r\n        }\r\n        export namespace Piston {\r\n            export const topStart = gameField.top + pixelSize * 18;\r\n            export const maxTop = gameField.top + pixelSize * 5;\r\n            export const maxBottom = gameField.top + pixelSize * 55;\r\n        }\r\n        export namespace Devil {\r\n            export const maxBottom = gameField.top + pixelSize * 60;\r\n        }\r\n    }\r\n}\r\n\r\n// Collective namespace for all movement angles.\r\nexport namespace MovementAngles {\r\n    export const bird = [2, 358, 178, 182];\r\n    export const robot = 5;\r\n    export const orb = 90;\r\n    export const spinner = [2, 358, 178, 182];\r\n    export const piston = 175;\r\n    export const diabolo = [2, 358, 178, 182];\r\n    export const devil = [angles.leftdown, angles.rightdown];\r\n}\r\n\r\n// Collective namespace for all frametimes.\r\nexport namespace FrameTimes {\r\n    export const bird = 100;\r\n    export const robot = 200;\r\n    export const orb = 200;\r\n    export const spinner = 100;\r\n    export const balloon = 100;\r\n    export const piston = 200;\r\n    export const diabolo = 200;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Actions\r\n * Responsibility:  Action production functions for the PlayerState.\r\n */\r\n\r\nimport { GameLocation } from \"../../Models/GameLocation\";\r\nimport { MoveLimits } from \"../../Types\";\r\nimport { ParticleState } from \"./ParticleState\";\r\nimport Constants from \"./PlayerConstants\";\r\nimport { PlayerHitboxes } from \"./PlayerState\";\r\nimport { SetPlayerBulletState, SetPlayerIsAlive, SetPlayerLocationData, SetPlayerMovementLimit } from \"./PlayerTypes\";\r\n\r\nexport function setPlayerIsAlive(playerAlive: boolean): SetPlayerIsAlive {\r\n    return {\r\n        type: Constants.setPlayerIsAlive,\r\n        playerIsAlive: playerAlive,\r\n    };\r\n}\r\n\r\nexport function setPlayerMovementLimit(moveLimit: MoveLimits): SetPlayerMovementLimit {\r\n    return {\r\n        type: Constants.setPlayerMovementLimit,\r\n        payload: moveLimit\r\n    };\r\n}\r\n\r\nexport function setPlayerLocationData(left: number, top: number, hitboxes?: PlayerHitboxes, nozzleLocation?: GameLocation): SetPlayerLocationData {\r\n    return {\r\n        type: Constants.setPlayerLocationData,\r\n        payload: {\r\n            left,\r\n            top,\r\n            hitboxes,\r\n            nozzleLocation\r\n        }\r\n    };\r\n}\r\n\r\nexport function setPlayerBulletState(particleState: ParticleState | undefined): SetPlayerBulletState  {\r\n    return {\r\n        type: Constants.setPlayerBulletState,\r\n        particleState,\r\n    };\r\n}","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          CtxProvider\r\n * Responsibility:  Provides the 2d Canvas context\r\n */\r\n\r\nlet cachedCtx: CanvasRenderingContext2D;\r\n\r\n/**\r\n * ctxProvider.\r\n * @returns {CanvasRenderingContext2D}. Returns a 2d canvar renderign context.\r\n */\r\nexport default function ctxProvider(): CanvasRenderingContext2D {\r\n    if (!cachedCtx) {\r\n        const canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\r\n        cachedCtx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n\r\n    }\r\n\r\n    return cachedCtx;\r\n}","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { validColors } from \"../Constants/CGAColors\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport ctxProvider from \"../Providers/Render/CtxProvider\";\r\nimport { Frame } from \"../Types\";\r\n\r\n/**\r\n * Module:          RenderFrame\r\n * Responsibility:  Renders a single frame to the canvas\r\n */\r\nconst {\r\n    pixelSize,\r\n} = dimensionProvider();\r\n\r\n/**\r\n * Renders a single frame to the canvas.\r\n * @param {left} left. Left coordinate.\r\n * @param {top} top. Top coordinate.\r\n * @param {Frame} frame. A 2d string array.\r\n */\r\nexport default function renderFrame(left: number, top: number, frame: Frame): void {\r\n    const ctx = ctxProvider();\r\n\r\n    for (let rowIndex = 0; rowIndex < frame.length; rowIndex++) {\r\n\r\n        const columns = frame[rowIndex];\r\n\r\n        for (let columnIndex = 0; columnIndex < columns.length; columnIndex++) {\r\n            const color = columns[columnIndex];\r\n\r\n            const x = Math.round(left + columnIndex * pixelSize);\r\n            const y = Math.round(top + rowIndex * pixelSize);\r\n\r\n            if (color !== \"0\") {\r\n\r\n                // DEBUGGING.\r\n                if (validColors.indexOf(color) === -1) {\r\n                    // tslint:disable-next-line: no-console\r\n                    throw new Error(\"Provided color is not a valid CGA color\");\r\n                }\r\n\r\n                ctx.fillStyle = color;\r\n                // But we use the max pixel size to draw a pixel. This ensures the pixels overlap slightly.\r\n                // Otherwise, you'll see bits and pieces of the back ground.\r\n                ctx.fillRect(x, y, pixelSize, pixelSize);\r\n            }\r\n        }\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Actions\r\n * Responsibility:  Action creators for the EnemyLevelState\r\n */\r\n\r\nimport { GameLocation } from \"../../Models/GameLocation\";\r\nimport { ParticleState } from \"../Player/ParticleState\";\r\nimport Constants from \"./EnemyLevelConstants\";\r\nimport { AddBullet, AddExplosionCenter, AddOrUpdateEnemy, AddParticle, AddParticles, ClearPhaserLocations, RemoveEnemy, ResetLevelState, SetBulletState, SetFireInterval, SetPhaserLocations, SetShrapnellState, SetTotalEnemies } from \"./EnemyLevelTypes\";\r\nimport { EnemyState } from \"./EnemyState\";\r\nimport { ExplosionCenterState } from \"./ExplosionCenterState\";\r\n\r\nexport function resetLevelState(): ResetLevelState {\r\n    return {\r\n        type: Constants.resetLevelState,\r\n    };\r\n}\r\n\r\nexport function addParticle(particle: ParticleState): AddParticle {\r\n    return {\r\n        type: Constants.addParticle,\r\n        particle,\r\n    };\r\n}\r\n\r\nexport function addParticles(particles: ParticleState[]): AddParticles {\r\n    return {\r\n        type: Constants.addParticles,\r\n        particles,\r\n    };\r\n}\r\n\r\nexport function addExplosionCenter(explosionCenter: ExplosionCenterState, shrapnell: ParticleState[]): AddExplosionCenter {\r\n    return {\r\n        type: Constants.addExplosionCenter,\r\n        explosionCenter,\r\n        shrapnell,\r\n    };\r\n}\r\n\r\nexport function setShrapnellState(shrapnell: ParticleState[]): SetShrapnellState {\r\n    return {\r\n        type: Constants.setShrapnellState,\r\n        shrapnell,\r\n    };\r\n}\r\n\r\nexport function setPhaserLocations(locations: GameLocation[]): SetPhaserLocations {\r\n    return {\r\n        type: Constants.setPhaserLocations,\r\n        payload: locations,\r\n    };\r\n}\r\n\r\nexport function clearPhaserLocations(): ClearPhaserLocations {\r\n    return {\r\n        type: Constants.clearPhaserLocations,\r\n    };\r\n}\r\n\r\nexport function setFireInterval(interval: number): SetFireInterval {\r\n    return {\r\n        type: Constants.setFireInterval,\r\n        payload: interval,\r\n    };\r\n}\r\n\r\nexport function setExplosionCenters(explosionCenters: ExplosionCenterState[]) {\r\n    return {\r\n        type: Constants.setExplosionCenters,\r\n        explosionCenters\r\n    };\r\n}\r\n\r\nexport function addBullet(bullet: ParticleState): AddBullet {\r\n    return {\r\n        type: Constants.addBullet,\r\n        bullet,\r\n    };\r\n}\r\n\r\nexport function setBulletState(bullets: ParticleState[]): SetBulletState {\r\n    return {\r\n        type: Constants.setBulletState,\r\n        bullets,\r\n    };\r\n}\r\n\r\nexport function setTotalEnemies(totalEnemies: number): SetTotalEnemies {\r\n    return {\r\n        type: Constants.setTotalEnemies,\r\n        totalEnemies,\r\n    };\r\n}\r\n\r\nexport function addOrUpdateEnemy(enemyState: EnemyState): AddOrUpdateEnemy {\r\n    return {\r\n        type: Constants.addOrUpdateEnemy,\r\n        enemyState,\r\n    };\r\n}\r\n\r\nexport function removeEnemy(enemyId: number): RemoveEnemy {\r\n    return {\r\n        type: Constants.removeEnemy,\r\n        enemyId,\r\n    };\r\n}","export const NOTHING =\n\ttypeof Symbol !== \"undefined\"\n\t\t? Symbol(\"immer-nothing\")\n\t\t: {[\"immer-nothing\"]: true}\n\nexport const DRAFTABLE =\n\ttypeof Symbol !== \"undefined\" && Symbol.for\n\t\t? Symbol.for(\"immer-draftable\")\n\t\t: \"__$immer_draftable\"\n\nexport const DRAFT_STATE =\n\ttypeof Symbol !== \"undefined\" && Symbol.for\n\t\t? Symbol.for(\"immer-state\")\n\t\t: \"__$immer_state\"\n\nexport function isDraft(value) {\n\treturn !!value && !!value[DRAFT_STATE]\n}\n\nexport function isDraftable(value) {\n\tif (!value) return false\n\treturn (\n\t\tisPlainObject(value) ||\n\t\t!!value[DRAFTABLE] ||\n\t\t!!value.constructor[DRAFTABLE] ||\n\t\tisMap(value) ||\n\t\tisSet(value)\n\t)\n}\n\nexport function isPlainObject(value) {\n\tif (!value || typeof value !== \"object\") return false\n\tif (Array.isArray(value)) return true\n\tconst proto = Object.getPrototypeOf(value)\n\treturn !proto || proto === Object.prototype\n}\n\nexport function original(value) {\n\tif (value && value[DRAFT_STATE]) {\n\t\treturn value[DRAFT_STATE].base\n\t}\n\t// otherwise return undefined\n}\n\n// We use Maps as `drafts` for Sets, not Objects\n// See proxy.js\nexport function assignSet(target, override) {\n\toverride.forEach(value => {\n\t\t// When we add new drafts we have to remove their originals if present\n\t\tconst prev = original(value)\n\t\tif (prev) target.delete(prev)\n\t\ttarget.add(value)\n\t})\n\treturn target\n}\n\n// We use Maps as `drafts` for Maps, not Objects\n// See proxy.js\nexport function assignMap(target, override) {\n\toverride.forEach((value, key) => target.set(key, value))\n\treturn target\n}\n\nexport const assign =\n\tObject.assign ||\n\t((target, ...overrides) => {\n\t\toverrides.forEach(override =>\n\t\t\tObject.keys(override).forEach(key => (target[key] = override[key]))\n\t\t)\n\t\treturn target\n\t})\n\nexport const ownKeys =\n\ttypeof Reflect !== \"undefined\" && Reflect.ownKeys\n\t\t? Reflect.ownKeys\n\t\t: typeof Object.getOwnPropertySymbols !== \"undefined\"\n\t\t? obj =>\n\t\t\t\tObject.getOwnPropertyNames(obj).concat(\n\t\t\t\t\tObject.getOwnPropertySymbols(obj)\n\t\t\t\t)\n\t\t: Object.getOwnPropertyNames\n\nexport function shallowCopy(base, invokeGetters = false) {\n\tif (Array.isArray(base)) return base.slice()\n\tif (isMap(base)) return new Map(base)\n\tif (isSet(base)) return new Set(base)\n\tconst clone = Object.create(Object.getPrototypeOf(base))\n\townKeys(base).forEach(key => {\n\t\tif (key === DRAFT_STATE) {\n\t\t\treturn // Never copy over draft state.\n\t\t}\n\t\tconst desc = Object.getOwnPropertyDescriptor(base, key)\n\t\tlet {value} = desc\n\t\tif (desc.get) {\n\t\t\tif (!invokeGetters) {\n\t\t\t\tthrow new Error(\"Immer drafts cannot have computed properties\")\n\t\t\t}\n\t\t\tvalue = desc.get.call(base)\n\t\t}\n\t\tif (desc.enumerable) {\n\t\t\tclone[key] = value\n\t\t} else {\n\t\t\tObject.defineProperty(clone, key, {\n\t\t\t\tvalue,\n\t\t\t\twritable: true,\n\t\t\t\tconfigurable: true\n\t\t\t})\n\t\t}\n\t})\n\treturn clone\n}\n\nexport function each(obj, iter) {\n\tif (Array.isArray(obj) || isMap(obj) || isSet(obj)) {\n\t\tobj.forEach((entry, index) => iter(index, entry, obj))\n\t} else {\n\t\townKeys(obj).forEach(key => iter(key, obj[key], obj))\n\t}\n}\n\nexport function isEnumerable(base, prop) {\n\tconst desc = Object.getOwnPropertyDescriptor(base, prop)\n\treturn !!desc && desc.enumerable\n}\n\nexport function has(thing, prop) {\n\treturn isMap(thing)\n\t\t? thing.has(prop)\n\t\t: Object.prototype.hasOwnProperty.call(thing, prop)\n}\n\nexport function get(thing, prop) {\n\treturn isMap(thing) ? thing.get(prop) : thing[prop]\n}\n\nexport function is(x, y) {\n\t// From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n\tif (x === y) {\n\t\treturn x !== 0 || 1 / x === 1 / y\n\t} else {\n\t\treturn x !== x && y !== y\n\t}\n}\n\nexport const hasSymbol = typeof Symbol !== \"undefined\"\n\nexport const hasMap = typeof Map !== \"undefined\"\n\nexport function isMap(target) {\n\treturn hasMap && target instanceof Map\n}\n\nexport const hasSet = typeof Set !== \"undefined\"\n\nexport function isSet(target) {\n\treturn hasSet && target instanceof Set\n}\n\nexport function makeIterable(next) {\n\tlet self\n\treturn (self = {\n\t\t[Symbol.iterator]: () => self,\n\t\tnext\n\t})\n}\n\n/** Map.prototype.values _-or-_ Map.prototype.entries */\nexport function iterateMapValues(state, prop, receiver) {\n\tconst isEntries = prop !== \"values\"\n\treturn () => {\n\t\tconst iterator = latest(state)[Symbol.iterator]()\n\t\treturn makeIterable(() => {\n\t\t\tconst result = iterator.next()\n\t\t\tif (!result.done) {\n\t\t\t\tconst [key] = result.value\n\t\t\t\tconst value = receiver.get(key)\n\t\t\t\tresult.value = isEntries ? [key, value] : value\n\t\t\t}\n\t\t\treturn result\n\t\t})\n\t}\n}\n\nexport function makeIterateSetValues(createProxy) {\n\tfunction iterateSetValues(state, prop) {\n\t\tconst isEntries = prop === \"entries\"\n\t\treturn () => {\n\t\t\tconst iterator = latest(state)[Symbol.iterator]()\n\t\t\treturn makeIterable(() => {\n\t\t\t\tconst result = iterator.next()\n\t\t\t\tif (!result.done) {\n\t\t\t\t\tconst value = wrapSetValue(state, result.value)\n\t\t\t\t\tresult.value = isEntries ? [value, value] : value\n\t\t\t\t}\n\t\t\t\treturn result\n\t\t\t})\n\t\t}\n\t}\n\n\tfunction wrapSetValue(state, value) {\n\t\tconst key = original(value) || value\n\t\tlet draft = state.drafts.get(key)\n\t\tif (!draft) {\n\t\t\tif (state.finalized || !isDraftable(value) || state.finalizing) {\n\t\t\t\treturn value\n\t\t\t}\n\t\t\tdraft = createProxy(value, state)\n\t\t\tstate.drafts.set(key, draft)\n\t\t\tif (state.modified) {\n\t\t\t\tstate.copy.add(draft)\n\t\t\t}\n\t\t}\n\t\treturn draft\n\t}\n\n\treturn iterateSetValues\n}\n\nfunction latest(state) {\n\treturn state.copy || state.base\n}\n\nexport function clone(obj) {\n\tif (!isDraftable(obj)) return obj\n\tif (Array.isArray(obj)) return obj.map(clone)\n\tif (isMap(obj)) return new Map(obj)\n\tif (isSet(obj)) return new Set(obj)\n\tconst cloned = Object.create(Object.getPrototypeOf(obj))\n\tfor (const key in obj) cloned[key] = clone(obj[key])\n\treturn cloned\n}\n\nexport function freeze(obj, deep = false) {\n\tif (!isDraftable(obj) || isDraft(obj) || Object.isFrozen(obj)) return\n\tif (isSet(obj)) {\n\t\tobj.add = obj.clear = obj.delete = dontMutateFrozenCollections\n\t} else if (isMap(obj)) {\n\t\tobj.set = obj.clear = obj.delete = dontMutateFrozenCollections\n\t}\n\tObject.freeze(obj)\n\tif (deep) each(obj, (_, value) => freeze(value, true))\n}\n\nfunction dontMutateFrozenCollections() {\n\tthrow new Error(\"This object has been frozen and should not be mutated\")\n}\n","import {DRAFT_STATE} from \"./common\"\n\n/** Each scope represents a `produce` call. */\nexport class ImmerScope {\n\tconstructor(parent) {\n\t\tthis.drafts = []\n\t\tthis.parent = parent\n\n\t\t// Whenever the modified draft contains a draft from another scope, we\n\t\t// need to prevent auto-freezing so the unowned draft can be finalized.\n\t\tthis.canAutoFreeze = true\n\n\t\t// To avoid prototype lookups:\n\t\tthis.patches = null\n\t}\n\tusePatches(patchListener) {\n\t\tif (patchListener) {\n\t\t\tthis.patches = []\n\t\t\tthis.inversePatches = []\n\t\t\tthis.patchListener = patchListener\n\t\t}\n\t}\n\trevoke() {\n\t\tthis.leave()\n\t\tthis.drafts.forEach(revoke)\n\t\tthis.drafts = null // Make draft-related methods throw.\n\t}\n\tleave() {\n\t\tif (this === ImmerScope.current) {\n\t\t\tImmerScope.current = this.parent\n\t\t}\n\t}\n}\n\nImmerScope.current = null\nImmerScope.enter = function() {\n\treturn (this.current = new ImmerScope(this.current))\n}\n\nfunction revoke(draft) {\n\tdraft[DRAFT_STATE].revoke()\n}\n","\"use strict\"\nimport {\n\teach,\n\thas,\n\tis,\n\tisDraft,\n\tisDraftable,\n\tisEnumerable,\n\tisMap,\n\tisSet,\n\thasSymbol,\n\tshallowCopy,\n\tDRAFT_STATE,\n\titerateMapValues,\n\tmakeIterable,\n\tmakeIterateSetValues\n} from \"./common\"\nimport {ImmerScope} from \"./scope\"\n\nexport function willFinalize(scope, result, isReplaced) {\n\tscope.drafts.forEach(draft => {\n\t\tdraft[DRAFT_STATE].finalizing = true\n\t})\n\tif (!isReplaced) {\n\t\tif (scope.patches) {\n\t\t\tmarkChangesRecursively(scope.drafts[0])\n\t\t}\n\t\t// This is faster when we don't care about which attributes changed.\n\t\tmarkChangesSweep(scope.drafts)\n\t}\n\t// When a child draft is returned, look for changes.\n\telse if (isDraft(result) && result[DRAFT_STATE].scope === scope) {\n\t\tmarkChangesSweep(scope.drafts)\n\t}\n}\n\nexport function createProxy(base, parent) {\n\tconst isArray = Array.isArray(base)\n\tconst draft = clonePotentialDraft(base)\n\n\tif (isMap(base)) {\n\t\tproxyMap(draft)\n\t} else if (isSet(base)) {\n\t\tproxySet(draft)\n\t} else {\n\t\teach(draft, prop => {\n\t\t\tproxyProperty(draft, prop, isArray || isEnumerable(base, prop))\n\t\t})\n\t}\n\n\t// See \"proxy.js\" for property documentation.\n\tconst scope = parent ? parent.scope : ImmerScope.current\n\tconst state = {\n\t\tscope,\n\t\tmodified: false,\n\t\tfinalizing: false, // es5 only\n\t\tfinalized: false,\n\t\tassigned: isMap(base) ? new Map() : {},\n\t\tparent,\n\t\tbase,\n\t\tdraft,\n\t\tdrafts: isSet(base) ? new Map() : null,\n\t\tcopy: null,\n\t\trevoke,\n\t\trevoked: false // es5 only\n\t}\n\n\tcreateHiddenProperty(draft, DRAFT_STATE, state)\n\tscope.drafts.push(draft)\n\treturn draft\n}\n\nfunction revoke() {\n\tthis.revoked = true\n}\n\nfunction latest(state) {\n\treturn state.copy || state.base\n}\n\n// Access a property without creating an Immer draft.\nfunction peek(draft, prop) {\n\tconst state = draft[DRAFT_STATE]\n\tif (state && !state.finalizing) {\n\t\tstate.finalizing = true\n\t\tconst value = draft[prop]\n\t\tstate.finalizing = false\n\t\treturn value\n\t}\n\treturn draft[prop]\n}\n\nfunction get(state, prop) {\n\tassertUnrevoked(state)\n\tconst value = peek(latest(state), prop)\n\tif (state.finalizing) return value\n\t// Create a draft if the value is unmodified.\n\tif (value === peek(state.base, prop) && isDraftable(value)) {\n\t\tprepareCopy(state)\n\t\treturn (state.copy[prop] = createProxy(value, state))\n\t}\n\treturn value\n}\n\nfunction set(state, prop, value) {\n\tassertUnrevoked(state)\n\tstate.assigned[prop] = true\n\tif (!state.modified) {\n\t\tif (is(value, peek(latest(state), prop))) return\n\t\tmarkChanged(state)\n\t\tprepareCopy(state)\n\t}\n\tstate.copy[prop] = value\n}\n\nfunction markChanged(state) {\n\tif (!state.modified) {\n\t\tstate.modified = true\n\t\tif (state.parent) markChanged(state.parent)\n\t}\n}\n\nfunction prepareCopy(state) {\n\tif (!state.copy) state.copy = clonePotentialDraft(state.base)\n}\n\nfunction clonePotentialDraft(base) {\n\tconst state = base && base[DRAFT_STATE]\n\tif (state) {\n\t\tstate.finalizing = true\n\t\tconst draft = shallowCopy(state.draft, true)\n\t\tstate.finalizing = false\n\t\treturn draft\n\t}\n\treturn shallowCopy(base)\n}\n\n// property descriptors are recycled to make sure we don't create a get and set closure per property,\n// but share them all instead\nconst descriptors = {}\n\nfunction proxyProperty(draft, prop, enumerable) {\n\tlet desc = descriptors[prop]\n\tif (desc) {\n\t\tdesc.enumerable = enumerable\n\t} else {\n\t\tdescriptors[prop] = desc = {\n\t\t\tconfigurable: true,\n\t\t\tenumerable,\n\t\t\tget() {\n\t\t\t\treturn get(this[DRAFT_STATE], prop)\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tset(this[DRAFT_STATE], prop, value)\n\t\t\t}\n\t\t}\n\t}\n\tObject.defineProperty(draft, prop, desc)\n}\n\nfunction proxyMap(target) {\n\tObject.defineProperties(target, mapTraps)\n\n\tif (hasSymbol) {\n\t\tObject.defineProperty(\n\t\t\ttarget,\n\t\t\tSymbol.iterator,\n\t\t\tproxyMethod(iterateMapValues)\n\t\t)\n\t}\n}\n\nconst mapTraps = finalizeTraps({\n\tsize: state => latest(state).size,\n\thas: state => key => latest(state).has(key),\n\tset: state => (key, value) => {\n\t\tif (latest(state).get(key) !== value) {\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\tstate.assigned.set(key, true)\n\t\t\tstate.copy.set(key, value)\n\t\t}\n\t\treturn state.draft\n\t},\n\tdelete: state => key => {\n\t\tprepareCopy(state)\n\t\tmarkChanged(state)\n\t\tstate.assigned.set(key, false)\n\t\tstate.copy.delete(key)\n\t\treturn false\n\t},\n\tclear: state => () => {\n\t\tif (!state.copy) {\n\t\t\tprepareCopy(state)\n\t\t}\n\t\tmarkChanged(state)\n\t\tstate.assigned = new Map()\n\t\tfor (const key of latest(state).keys()) {\n\t\t\tstate.assigned.set(key, false)\n\t\t}\n\t\treturn state.copy.clear()\n\t},\n\tforEach: (state, key, reciever) => cb => {\n\t\tlatest(state).forEach((value, key, map) => {\n\t\t\tcb(reciever.get(key), key, map)\n\t\t})\n\t},\n\tget: state => key => {\n\t\tconst value = latest(state).get(key)\n\n\t\tif (state.finalizing || state.finalized || !isDraftable(value)) {\n\t\t\treturn value\n\t\t}\n\n\t\tif (value !== state.base.get(key)) {\n\t\t\treturn value\n\t\t}\n\t\tconst draft = createProxy(value, state)\n\t\tprepareCopy(state)\n\t\tstate.copy.set(key, draft)\n\t\treturn draft\n\t},\n\tkeys: state => () => latest(state).keys(),\n\tvalues: iterateMapValues,\n\tentries: iterateMapValues\n})\n\nfunction proxySet(target) {\n\tObject.defineProperties(target, setTraps)\n\n\tif (hasSymbol) {\n\t\tObject.defineProperty(\n\t\t\ttarget,\n\t\t\tSymbol.iterator,\n\t\t\tproxyMethod(iterateSetValues)\n\t\t)\n\t}\n}\n\nconst iterateSetValues = makeIterateSetValues(createProxy)\n\nconst setTraps = finalizeTraps({\n\tsize: state => {\n\t\treturn latest(state).size\n\t},\n\tadd: state => value => {\n\t\tif (!latest(state).has(value)) {\n\t\t\tmarkChanged(state)\n\t\t\tif (!state.copy) {\n\t\t\t\tprepareCopy(state)\n\t\t\t}\n\t\t\tstate.copy.add(value)\n\t\t}\n\t\treturn state.draft\n\t},\n\tdelete: state => value => {\n\t\tmarkChanged(state)\n\t\tif (!state.copy) {\n\t\t\tprepareCopy(state)\n\t\t}\n\t\treturn state.copy.delete(value)\n\t},\n\thas: state => key => {\n\t\treturn latest(state).has(key)\n\t},\n\tclear: state => () => {\n\t\tmarkChanged(state)\n\t\tif (!state.copy) {\n\t\t\tprepareCopy(state)\n\t\t}\n\t\treturn state.copy.clear()\n\t},\n\tkeys: iterateSetValues,\n\tentries: iterateSetValues,\n\tvalues: iterateSetValues,\n\tforEach: state => (cb, thisArg) => {\n\t\tconst iterator = iterateSetValues(state)()\n\t\tlet result = iterator.next()\n\t\twhile (!result.done) {\n\t\t\tcb.call(thisArg, result.value, result.value, state.draft)\n\t\t\tresult = iterator.next()\n\t\t}\n\t}\n})\n\nfunction finalizeTraps(traps) {\n\treturn Object.keys(traps).reduce(function(acc, key) {\n\t\tconst builder = key === \"size\" ? proxyAttr : proxyMethod\n\t\tacc[key] = builder(traps[key], key)\n\t\treturn acc\n\t}, {})\n}\n\nfunction proxyAttr(fn) {\n\treturn {\n\t\tget() {\n\t\t\tconst state = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\treturn fn(state)\n\t\t}\n\t}\n}\n\nfunction proxyMethod(trap, key) {\n\treturn {\n\t\tget() {\n\t\t\treturn function(...args) {\n\t\t\t\tconst state = this[DRAFT_STATE]\n\t\t\t\tassertUnrevoked(state)\n\t\t\t\treturn trap(state, key, state.draft)(...args)\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction assertUnrevoked(state) {\n\tif (state.revoked === true)\n\t\tthrow new Error(\n\t\t\t\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" +\n\t\t\t\tJSON.stringify(latest(state))\n\t\t)\n}\n\n// This looks expensive, but only proxies are visited, and only objects without known changes are scanned.\nfunction markChangesSweep(drafts) {\n\t// The natural order of drafts in the `scope` array is based on when they\n\t// were accessed. By processing drafts in reverse natural order, we have a\n\t// better chance of processing leaf nodes first. When a leaf node is known to\n\t// have changed, we can avoid any traversal of its ancestor nodes.\n\tfor (let i = drafts.length - 1; i >= 0; i--) {\n\t\tconst state = drafts[i][DRAFT_STATE]\n\t\tif (!state.modified) {\n\t\t\tif (Array.isArray(state.base)) {\n\t\t\t\tif (hasArrayChanges(state)) markChanged(state)\n\t\t\t} else if (isMap(state.base)) {\n\t\t\t\tif (hasMapChanges(state)) markChanged(state)\n\t\t\t} else if (isSet(state.base)) {\n\t\t\t\tif (hasSetChanges(state)) markChanged(state)\n\t\t\t} else if (hasObjectChanges(state)) {\n\t\t\t\tmarkChanged(state)\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction markChangesRecursively(object) {\n\tif (!object || typeof object !== \"object\") return\n\tconst state = object[DRAFT_STATE]\n\tif (!state) return\n\tconst {base, draft, assigned} = state\n\tif (!Array.isArray(object)) {\n\t\t// Look for added keys.\n\t\tObject.keys(draft).forEach(key => {\n\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\tif (base[key] === undefined && !has(base, key)) {\n\t\t\t\tassigned[key] = true\n\t\t\t\tmarkChanged(state)\n\t\t\t} else if (!assigned[key]) {\n\t\t\t\t// Only untouched properties trigger recursion.\n\t\t\t\tmarkChangesRecursively(draft[key])\n\t\t\t}\n\t\t})\n\t\t// Look for removed keys.\n\t\tObject.keys(base).forEach(key => {\n\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\tif (draft[key] === undefined && !has(draft, key)) {\n\t\t\t\tassigned[key] = false\n\t\t\t\tmarkChanged(state)\n\t\t\t}\n\t\t})\n\t} else if (hasArrayChanges(state)) {\n\t\tmarkChanged(state)\n\t\tassigned.length = true\n\t\tif (draft.length < base.length) {\n\t\t\tfor (let i = draft.length; i < base.length; i++) assigned[i] = false\n\t\t} else {\n\t\t\tfor (let i = base.length; i < draft.length; i++) assigned[i] = true\n\t\t}\n\t\tfor (let i = 0; i < draft.length; i++) {\n\t\t\t// Only untouched indices trigger recursion.\n\t\t\tif (assigned[i] === undefined) markChangesRecursively(draft[i])\n\t\t}\n\t}\n}\n\nfunction hasObjectChanges(state) {\n\tconst {base, draft} = state\n\n\t// Search for added keys and changed keys. Start at the back, because\n\t// non-numeric keys are ordered by time of definition on the object.\n\tconst keys = Object.keys(draft)\n\tfor (let i = keys.length - 1; i >= 0; i--) {\n\t\tconst key = keys[i]\n\t\tconst baseValue = base[key]\n\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\tif (baseValue === undefined && !has(base, key)) {\n\t\t\treturn true\n\t\t}\n\t\t// Once a base key is deleted, future changes go undetected, because its\n\t\t// descriptor is erased. This branch detects any missed changes.\n\t\telse {\n\t\t\tconst value = draft[key]\n\t\t\tconst state = value && value[DRAFT_STATE]\n\t\t\tif (state ? state.base !== baseValue : !is(value, baseValue)) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t}\n\t}\n\n\t// At this point, no keys were added or changed.\n\t// Compare key count to determine if keys were deleted.\n\treturn keys.length !== Object.keys(base).length\n}\n\nfunction hasArrayChanges(state) {\n\tconst {draft} = state\n\tif (draft.length !== state.base.length) return true\n\t// See #116\n\t// If we first shorten the length, our array interceptors will be removed.\n\t// If after that new items are added, result in the same original length,\n\t// those last items will have no intercepting property.\n\t// So if there is no own descriptor on the last position, we know that items were removed and added\n\t// N.B.: splice, unshift, etc only shift values around, but not prop descriptors, so we only have to check\n\t// the last one\n\tconst descriptor = Object.getOwnPropertyDescriptor(draft, draft.length - 1)\n\t// descriptor can be null, but only for newly created sparse arrays, eg. new Array(10)\n\tif (descriptor && !descriptor.get) return true\n\t// For all other cases, we don't have to compare, as they would have been picked up by the index setters\n\treturn false\n}\n\nfunction hasMapChanges(state) {\n\tconst {base, draft} = state\n\n\tif (base.size !== draft.size) return true\n\n\t// IE11 supports only forEach iteration\n\tlet hasChanges = false\n\tdraft.forEach(function(value, key) {\n\t\tif (!hasChanges) {\n\t\t\thasChanges = isDraftable(value) ? value.modified : value !== base.get(key)\n\t\t}\n\t})\n\treturn hasChanges\n}\n\nfunction hasSetChanges(state) {\n\tconst {base, draft} = state\n\n\tif (base.size !== draft.size) return true\n\n\t// IE11 supports only forEach iteration\n\tlet hasChanges = false\n\tdraft.forEach(function(value, key) {\n\t\tif (!hasChanges) {\n\t\t\thasChanges = isDraftable(value) ? value.modified : !base.has(key)\n\t\t}\n\t})\n\treturn hasChanges\n}\n\nfunction createHiddenProperty(target, prop, value) {\n\tObject.defineProperty(target, prop, {\n\t\tvalue: value,\n\t\tenumerable: false,\n\t\twritable: true\n\t})\n}\n","\"use strict\"\nimport {\n\tassign,\n\teach,\n\thas,\n\tis,\n\tisDraftable,\n\tisDraft,\n\tisMap,\n\tisSet,\n\thasSymbol,\n\tshallowCopy,\n\tmakeIterable,\n\tDRAFT_STATE,\n\tassignMap,\n\tassignSet,\n\toriginal,\n\titerateMapValues,\n\tmakeIterateSetValues\n} from \"./common\"\nimport {ImmerScope} from \"./scope\"\n\n// Do nothing before being finalized.\nexport function willFinalize() {}\n\n/**\n * Returns a new draft of the `base` object.\n *\n * The second argument is the parent draft-state (used internally).\n */\nexport function createProxy(base, parent) {\n\tconst scope = parent ? parent.scope : ImmerScope.current\n\tconst state = {\n\t\t// Track which produce call this is associated with.\n\t\tscope,\n\t\t// True for both shallow and deep changes.\n\t\tmodified: false,\n\t\t// Used during finalization.\n\t\tfinalized: false,\n\t\t// Track which properties have been assigned (true) or deleted (false).\n\t\tassigned: {},\n\t\t// The parent draft state.\n\t\tparent,\n\t\t// The base state.\n\t\tbase,\n\t\t// The base proxy.\n\t\tdraft: null,\n\t\t// Any property proxies.\n\t\tdrafts: {},\n\t\t// The base copy with any updated values.\n\t\tcopy: null,\n\t\t// Called by the `produce` function.\n\t\trevoke: null\n\t}\n\n\tlet target = state\n\tlet traps = objectTraps\n\tif (Array.isArray(base)) {\n\t\ttarget = [state]\n\t\ttraps = arrayTraps\n\t}\n\t// Map drafts must support object keys, so we use Map objects to track changes.\n\telse if (isMap(base)) {\n\t\ttraps = mapTraps\n\t\tstate.drafts = new Map()\n\t\tstate.assigned = new Map()\n\t}\n\t// Set drafts use a Map object to track which of its values are drafted.\n\t// And we don't need the \"assigned\" property, because Set objects have no keys.\n\telse if (isSet(base)) {\n\t\ttraps = setTraps\n\t\tstate.drafts = new Map()\n\t}\n\n\tconst {revoke, proxy} = Proxy.revocable(target, traps)\n\n\tstate.draft = proxy\n\tstate.revoke = revoke\n\n\tscope.drafts.push(proxy)\n\treturn proxy\n}\n\n/**\n * Object drafts\n */\n\nconst objectTraps = {\n\tget(state, prop) {\n\t\tif (prop === DRAFT_STATE) return state\n\t\tlet {drafts} = state\n\n\t\t// Check for existing draft in unmodified state.\n\t\tif (!state.modified && has(drafts, prop)) {\n\t\t\treturn drafts[prop]\n\t\t}\n\n\t\tconst value = latest(state)[prop]\n\t\tif (state.finalized || !isDraftable(value)) {\n\t\t\treturn value\n\t\t}\n\n\t\t// Check for existing draft in modified state.\n\t\tif (state.modified) {\n\t\t\t// Assigned values are never drafted. This catches any drafts we created, too.\n\t\t\tif (value !== peek(state.base, prop)) return value\n\t\t\t// Store drafts on the copy (when one exists).\n\t\t\tdrafts = state.copy\n\t\t}\n\n\t\treturn (drafts[prop] = createProxy(value, state))\n\t},\n\thas(state, prop) {\n\t\treturn prop in latest(state)\n\t},\n\townKeys(state) {\n\t\treturn Reflect.ownKeys(latest(state))\n\t},\n\tset(state, prop, value) {\n\t\tif (!state.modified) {\n\t\t\tconst baseValue = peek(state.base, prop)\n\t\t\t// Optimize based on value's truthiness. Truthy values are guaranteed to\n\t\t\t// never be undefined, so we can avoid the `in` operator. Lastly, truthy\n\t\t\t// values may be drafts, but falsy values are never drafts.\n\t\t\tconst isUnchanged = value\n\t\t\t\t? is(baseValue, value) || value === state.drafts[prop]\n\t\t\t\t: is(baseValue, value) && prop in state.base\n\t\t\tif (isUnchanged) return true\n\t\t\tmarkChanged(state)\n\t\t}\n\t\tstate.assigned[prop] = true\n\t\tstate.copy[prop] = value\n\t\treturn true\n\t},\n\tdeleteProperty(state, prop) {\n\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\tif (peek(state.base, prop) !== undefined || prop in state.base) {\n\t\t\tstate.assigned[prop] = false\n\t\t\tmarkChanged(state)\n\t\t} else if (state.assigned[prop]) {\n\t\t\t// if an originally not assigned property was deleted\n\t\t\tdelete state.assigned[prop]\n\t\t}\n\t\tif (state.copy) delete state.copy[prop]\n\t\treturn true\n\t},\n\t// Note: We never coerce `desc.value` into an Immer draft, because we can't make\n\t// the same guarantee in ES5 mode.\n\tgetOwnPropertyDescriptor(state, prop) {\n\t\tconst owner = latest(state)\n\t\tconst desc = Reflect.getOwnPropertyDescriptor(owner, prop)\n\t\tif (desc) {\n\t\t\tdesc.writable = true\n\t\t\tdesc.configurable = !Array.isArray(owner) || prop !== \"length\"\n\t\t}\n\t\treturn desc\n\t},\n\tdefineProperty() {\n\t\tthrow new Error(\"Object.defineProperty() cannot be used on an Immer draft\") // prettier-ignore\n\t},\n\tgetPrototypeOf(state) {\n\t\treturn Object.getPrototypeOf(state.base)\n\t},\n\tsetPrototypeOf() {\n\t\tthrow new Error(\"Object.setPrototypeOf() cannot be used on an Immer draft\") // prettier-ignore\n\t}\n}\n\n/**\n * Array drafts\n */\n\nconst arrayTraps = {}\neach(objectTraps, (key, fn) => {\n\tarrayTraps[key] = function() {\n\t\targuments[0] = arguments[0][0]\n\t\treturn fn.apply(this, arguments)\n\t}\n})\narrayTraps.deleteProperty = function(state, prop) {\n\tif (isNaN(parseInt(prop))) {\n\t\tthrow new Error(\"Immer only supports deleting array indices\") // prettier-ignore\n\t}\n\treturn objectTraps.deleteProperty.call(this, state[0], prop)\n}\narrayTraps.set = function(state, prop, value) {\n\tif (prop !== \"length\" && isNaN(parseInt(prop))) {\n\t\tthrow new Error(\"Immer only supports setting array indices and the 'length' property\") // prettier-ignore\n\t}\n\treturn objectTraps.set.call(this, state[0], prop, value)\n}\n\n// Used by Map and Set drafts\nconst reflectTraps = makeReflectTraps([\n\t\"ownKeys\",\n\t\"has\",\n\t\"set\",\n\t\"deleteProperty\",\n\t\"defineProperty\",\n\t\"getOwnPropertyDescriptor\",\n\t\"preventExtensions\",\n\t\"isExtensible\",\n\t\"getPrototypeOf\"\n])\n\n/**\n * Map drafts\n */\n\nconst mapTraps = makeTrapsForGetters({\n\t[DRAFT_STATE]: state => state,\n\tsize: state => latest(state).size,\n\thas: state => key => latest(state).has(key),\n\tset: state => (key, value) => {\n\t\tconst values = latest(state)\n\t\tif (!values.has(key) || values.get(key) !== value) {\n\t\t\tmarkChanged(state)\n\t\t\tstate.assigned.set(key, true)\n\t\t\tstate.copy.set(key, value)\n\t\t}\n\t\treturn state.draft\n\t},\n\tdelete: state => key => {\n\t\tif (latest(state).has(key)) {\n\t\t\tmarkChanged(state)\n\t\t\tstate.assigned.set(key, false)\n\t\t\treturn state.copy.delete(key)\n\t\t}\n\t\treturn false\n\t},\n\tclear: state => () => {\n\t\tmarkChanged(state)\n\t\tstate.assigned = new Map()\n\t\tfor (const key of latest(state).keys()) {\n\t\t\tstate.assigned.set(key, false)\n\t\t}\n\t\treturn state.copy.clear()\n\t},\n\tforEach: (state, _, receiver) => (cb, thisArg) =>\n\t\tlatest(state).forEach((_, key, map) => {\n\t\t\tconst value = receiver.get(key)\n\t\t\tcb.call(thisArg, value, key, map)\n\t\t}),\n\tget: state => key => {\n\t\tconst drafts = state[state.modified ? \"copy\" : \"drafts\"]\n\t\tif (drafts.has(key)) {\n\t\t\treturn drafts.get(key)\n\t\t}\n\n\t\tconst value = latest(state).get(key)\n\t\tif (state.finalized || !isDraftable(value)) {\n\t\t\treturn value\n\t\t}\n\n\t\tconst draft = createProxy(value, state)\n\t\tdrafts.set(key, draft)\n\t\treturn draft\n\t},\n\tkeys: state => () => latest(state).keys(),\n\tvalues: iterateMapValues,\n\tentries: iterateMapValues,\n\t[hasSymbol ? Symbol.iterator : \"@@iterator\"]: iterateMapValues\n})\n\nconst iterateSetValues = makeIterateSetValues(createProxy)\n/**\n * Set drafts\n */\n\nconst setTraps = makeTrapsForGetters({\n\t[DRAFT_STATE]: state => state,\n\tsize: state => latest(state).size,\n\thas: state => key => latest(state).has(key),\n\tadd: state => value => {\n\t\tif (!latest(state).has(value)) {\n\t\t\tmarkChanged(state)\n\t\t\tstate.copy.add(value)\n\t\t}\n\t\treturn state.draft\n\t},\n\tdelete: state => value => {\n\t\tmarkChanged(state)\n\t\treturn state.copy.delete(value)\n\t},\n\tclear: state => () => {\n\t\tmarkChanged(state)\n\t\treturn state.copy.clear()\n\t},\n\tforEach: state => (cb, thisArg) => {\n\t\tconst iterator = iterateSetValues(state)()\n\t\tlet result = iterator.next()\n\t\twhile (!result.done) {\n\t\t\tcb.call(thisArg, result.value, result.value, state.draft)\n\t\t\tresult = iterator.next()\n\t\t}\n\t},\n\tkeys: iterateSetValues,\n\tvalues: iterateSetValues,\n\tentries: iterateSetValues,\n\t[hasSymbol ? Symbol.iterator : \"@@iterator\"]: iterateSetValues\n})\n\n/**\n * Helpers\n */\n\n// Retrieve the latest values of the draft.\nfunction latest(state) {\n\treturn state.copy || state.base\n}\n\n// Access a property without creating an Immer draft.\nfunction peek(draft, prop) {\n\tconst state = draft[DRAFT_STATE]\n\tconst desc = Reflect.getOwnPropertyDescriptor(\n\t\tstate ? latest(state) : draft,\n\t\tprop\n\t)\n\treturn desc && desc.value\n}\n\nfunction markChanged(state) {\n\tif (!state.modified) {\n\t\tstate.modified = true\n\n\t\tconst {base, drafts, parent} = state\n\t\tconst copy = shallowCopy(base)\n\n\t\tif (isSet(base)) {\n\t\t\t// Note: The `drafts` property is preserved for Set objects, since\n\t\t\t// we need to keep track of which values are drafted.\n\t\t\tassignSet(copy, drafts)\n\t\t} else {\n\t\t\t// Merge nested drafts into the copy.\n\t\t\tif (isMap(base)) assignMap(copy, drafts)\n\t\t\telse assign(copy, drafts)\n\t\t\tstate.drafts = null\n\t\t}\n\n\t\tstate.copy = copy\n\t\tif (parent) {\n\t\t\tmarkChanged(parent)\n\t\t}\n\t}\n}\n\n/** Create traps that all use the `Reflect` API on the `latest(state)` */\nfunction makeReflectTraps(names) {\n\treturn names.reduce((traps, name) => {\n\t\ttraps[name] = (state, ...args) => Reflect[name](latest(state), ...args)\n\t\treturn traps\n\t}, {})\n}\n\nfunction makeTrapsForGetters(getters) {\n\treturn {\n\t\t...reflectTraps,\n\t\tget(state, prop, receiver) {\n\t\t\treturn getters.hasOwnProperty(prop)\n\t\t\t\t? getters[prop](state, prop, receiver)\n\t\t\t\t: Reflect.get(state, prop, receiver)\n\t\t},\n\t\tsetPrototypeOf(state) {\n\t\t\tthrow new Error(\"Object.setPrototypeOf() cannot be used on an Immer draft\") // prettier-ignore\n\t\t}\n\t}\n}\n","import {get, each, isMap, isSet, has, clone} from \"./common\"\n\nexport function generatePatches(state, basePath, patches, inversePatches) {\n\tconst generatePatchesFn = Array.isArray(state.base)\n\t\t? generateArrayPatches\n\t\t: isSet(state.base)\n\t\t? generateSetPatches\n\t\t: generatePatchesFromAssigned\n\n\tgeneratePatchesFn(state, basePath, patches, inversePatches)\n}\n\nfunction generateArrayPatches(state, basePath, patches, inversePatches) {\n\tlet {base, copy, assigned} = state\n\n\t// Reduce complexity by ensuring `base` is never longer.\n\tif (copy.length < base.length) {\n\t\t;[base, copy] = [copy, base]\n\t\t;[patches, inversePatches] = [inversePatches, patches]\n\t}\n\n\tconst delta = copy.length - base.length\n\n\t// Find the first replaced index.\n\tlet start = 0\n\twhile (base[start] === copy[start] && start < base.length) {\n\t\t++start\n\t}\n\n\t// Find the last replaced index. Search from the end to optimize splice patches.\n\tlet end = base.length\n\twhile (end > start && base[end - 1] === copy[end + delta - 1]) {\n\t\t--end\n\t}\n\n\t// Process replaced indices.\n\tfor (let i = start; i < end; ++i) {\n\t\tif (assigned[i] && copy[i] !== base[i]) {\n\t\t\tconst path = basePath.concat([i])\n\t\t\tpatches.push({\n\t\t\t\top: \"replace\",\n\t\t\t\tpath,\n\t\t\t\tvalue: copy[i]\n\t\t\t})\n\t\t\tinversePatches.push({\n\t\t\t\top: \"replace\",\n\t\t\t\tpath,\n\t\t\t\tvalue: base[i]\n\t\t\t})\n\t\t}\n\t}\n\n\tconst replaceCount = patches.length\n\n\t// Process added indices.\n\tfor (let i = end + delta - 1; i >= end; --i) {\n\t\tconst path = basePath.concat([i])\n\t\tpatches[replaceCount + i - end] = {\n\t\t\top: \"add\",\n\t\t\tpath,\n\t\t\tvalue: copy[i]\n\t\t}\n\t\tinversePatches.push({\n\t\t\top: \"remove\",\n\t\t\tpath\n\t\t})\n\t}\n}\n\n// This is used for both Map objects and normal objects.\nfunction generatePatchesFromAssigned(state, basePath, patches, inversePatches) {\n\tconst {base, copy} = state\n\teach(state.assigned, (key, assignedValue) => {\n\t\tconst origValue = get(base, key)\n\t\tconst value = get(copy, key)\n\t\tconst op = !assignedValue ? \"remove\" : has(base, key) ? \"replace\" : \"add\"\n\t\tif (origValue === value && op === \"replace\") return\n\t\tconst path = basePath.concat(key)\n\t\tpatches.push(op === \"remove\" ? {op, path} : {op, path, value})\n\t\tinversePatches.push(\n\t\t\top === \"add\"\n\t\t\t\t? {op: \"remove\", path}\n\t\t\t\t: op === \"remove\"\n\t\t\t\t? {op: \"add\", path, value: origValue}\n\t\t\t\t: {op: \"replace\", path, value: origValue}\n\t\t)\n\t})\n}\n\nfunction generateSetPatches(state, basePath, patches, inversePatches) {\n\tlet {base, copy} = state\n\n\tlet i = 0\n\tfor (const value of base) {\n\t\tif (!copy.has(value)) {\n\t\t\tconst path = basePath.concat([i])\n\t\t\tpatches.push({\n\t\t\t\top: \"remove\",\n\t\t\t\tpath,\n\t\t\t\tvalue\n\t\t\t})\n\t\t\tinversePatches.unshift({\n\t\t\t\top: \"add\",\n\t\t\t\tpath,\n\t\t\t\tvalue\n\t\t\t})\n\t\t}\n\t\ti++\n\t}\n\ti = 0\n\tfor (const value of copy) {\n\t\tif (!base.has(value)) {\n\t\t\tconst path = basePath.concat([i])\n\t\t\tpatches.push({\n\t\t\t\top: \"add\",\n\t\t\t\tpath,\n\t\t\t\tvalue\n\t\t\t})\n\t\t\tinversePatches.unshift({\n\t\t\t\top: \"remove\",\n\t\t\t\tpath,\n\t\t\t\tvalue\n\t\t\t})\n\t\t}\n\t\ti++\n\t}\n}\n\nexport const applyPatches = (draft, patches) => {\n\tfor (const patch of patches) {\n\t\tconst {path, op} = patch\n\n\t\tif (!path.length) throw new Error(\"Illegal state\")\n\n\t\tlet base = draft\n\t\tfor (let i = 0; i < path.length - 1; i++) {\n\t\t\tbase = get(base, path[i])\n\t\t\tif (!base || typeof base !== \"object\")\n\t\t\t\tthrow new Error(\"Cannot apply patch, path doesn't resolve: \" + path.join(\"/\")) // prettier-ignore\n\t\t}\n\n\t\tconst value = clone(patch.value) // used to clone patch to ensure original patch is not modified, see #411\n\n\t\tconst key = path[path.length - 1]\n\t\tswitch (op) {\n\t\t\tcase \"replace\":\n\t\t\t\tif (isMap(base)) {\n\t\t\t\t\tbase.set(key, value)\n\t\t\t\t} else if (isSet(base)) {\n\t\t\t\t\tthrow new Error('Sets cannot have \"replace\" patches.')\n\t\t\t\t} else {\n\t\t\t\t\t// if value is an object, then it's assigned by reference\n\t\t\t\t\t// in the following add or remove ops, the value field inside the patch will also be modifyed\n\t\t\t\t\t// so we use value from the cloned patch\n\t\t\t\t\tbase[key] = value\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\tcase \"add\":\n\t\t\t\tif (isSet(base)) {\n\t\t\t\t\tbase.delete(patch.value)\n\t\t\t\t}\n\n\t\t\t\tArray.isArray(base)\n\t\t\t\t\t? base.splice(key, 0, value)\n\t\t\t\t\t: isMap(base)\n\t\t\t\t\t? base.set(key, value)\n\t\t\t\t\t: isSet(base)\n\t\t\t\t\t? base.add(value)\n\t\t\t\t\t: (base[key] = value)\n\t\t\t\tbreak\n\t\t\tcase \"remove\":\n\t\t\t\tArray.isArray(base)\n\t\t\t\t\t? base.splice(key, 1)\n\t\t\t\t\t: isMap(base)\n\t\t\t\t\t? base.delete(key)\n\t\t\t\t\t: isSet(base)\n\t\t\t\t\t? base.delete(patch.value)\n\t\t\t\t\t: delete base[key]\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"Unsupported patch operation: \" + op)\n\t\t}\n\t}\n\n\treturn draft\n}\n","import * as legacyProxy from \"./es5\"\nimport * as modernProxy from \"./proxy\"\nimport {applyPatches, generatePatches} from \"./patches\"\nimport {\n\tassign,\n\teach,\n\thas,\n\tis,\n\tisDraft,\n\tisSet,\n\tget,\n\tisMap,\n\tisDraftable,\n\tisEnumerable,\n\tshallowCopy,\n\tDRAFT_STATE,\n\tNOTHING,\n\tfreeze\n} from \"./common\"\nimport {ImmerScope} from \"./scope\"\n\nfunction verifyMinified() {}\n\nconst configDefaults = {\n\tuseProxies:\n\t\ttypeof Proxy !== \"undefined\" &&\n\t\ttypeof Proxy.revocable !== \"undefined\" &&\n\t\ttypeof Reflect !== \"undefined\",\n\tautoFreeze:\n\t\ttypeof process !== \"undefined\"\n\t\t\t? process.env.NODE_ENV !== \"production\"\n\t\t\t: verifyMinified.name === \"verifyMinified\",\n\tonAssign: null,\n\tonDelete: null,\n\tonCopy: null\n}\n\nexport class Immer {\n\tconstructor(config) {\n\t\tassign(this, configDefaults, config)\n\t\tthis.setUseProxies(this.useProxies)\n\t\tthis.produce = this.produce.bind(this)\n\t\tthis.produceWithPatches = this.produceWithPatches.bind(this)\n\t}\n\tproduce(base, recipe, patchListener) {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\" && typeof recipe !== \"function\") {\n\t\t\tconst defaultBase = recipe\n\t\t\trecipe = base\n\n\t\t\tconst self = this\n\t\t\treturn function curriedProduce(base = defaultBase, ...args) {\n\t\t\t\treturn self.produce(base, draft => recipe.call(this, draft, ...args)) // prettier-ignore\n\t\t\t}\n\t\t}\n\n\t\t// prettier-ignore\n\t\t{\n\t\t\tif (typeof recipe !== \"function\") {\n\t\t\t\tthrow new Error(\"The first or second argument to `produce` must be a function\")\n\t\t\t}\n\t\t\tif (patchListener !== undefined && typeof patchListener !== \"function\") {\n\t\t\t\tthrow new Error(\"The third argument to `produce` must be a function or undefined\")\n\t\t\t}\n\t\t}\n\n\t\tlet result\n\n\t\t// Only plain objects, arrays, and \"immerable classes\" are drafted.\n\t\tif (isDraftable(base)) {\n\t\t\tconst scope = ImmerScope.enter()\n\t\t\tconst proxy = this.createProxy(base)\n\t\t\tlet hasError = true\n\t\t\ttry {\n\t\t\t\tresult = recipe(proxy)\n\t\t\t\thasError = false\n\t\t\t} finally {\n\t\t\t\t// finally instead of catch + rethrow better preserves original stack\n\t\t\t\tif (hasError) scope.revoke()\n\t\t\t\telse scope.leave()\n\t\t\t}\n\t\t\tif (typeof Promise !== \"undefined\" && result instanceof Promise) {\n\t\t\t\treturn result.then(\n\t\t\t\t\tresult => {\n\t\t\t\t\t\tscope.usePatches(patchListener)\n\t\t\t\t\t\treturn this.processResult(result, scope)\n\t\t\t\t\t},\n\t\t\t\t\terror => {\n\t\t\t\t\t\tscope.revoke()\n\t\t\t\t\t\tthrow error\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\tscope.usePatches(patchListener)\n\t\t\treturn this.processResult(result, scope)\n\t\t} else {\n\t\t\tresult = recipe(base)\n\t\t\tif (result === NOTHING) return undefined\n\t\t\tif (result === undefined) result = base\n\t\t\tthis.maybeFreeze(result, true)\n\t\t\treturn result\n\t\t}\n\t}\n\tproduceWithPatches(arg1, arg2, arg3) {\n\t\tif (typeof arg1 === \"function\") {\n\t\t\tconst self = this\n\t\t\treturn (state, ...args) =>\n\t\t\t\tthis.produceWithPatches(state, draft => arg1(draft, ...args))\n\t\t}\n\t\t// non-curried form\n\t\tif (arg3)\n\t\t\tthrow new Error(\"A patch listener cannot be passed to produceWithPatches\")\n\t\tlet patches, inversePatches\n\t\tconst nextState = this.produce(arg1, arg2, (p, ip) => {\n\t\t\tpatches = p\n\t\t\tinversePatches = ip\n\t\t})\n\t\treturn [nextState, patches, inversePatches]\n\t}\n\tcreateDraft(base) {\n\t\tif (!isDraftable(base)) {\n\t\t\tthrow new Error(\"First argument to `createDraft` must be a plain object, an array, or an immerable object\") // prettier-ignore\n\t\t}\n\t\tconst scope = ImmerScope.enter()\n\t\tconst proxy = this.createProxy(base)\n\t\tproxy[DRAFT_STATE].isManual = true\n\t\tscope.leave()\n\t\treturn proxy\n\t}\n\tfinishDraft(draft, patchListener) {\n\t\tconst state = draft && draft[DRAFT_STATE]\n\t\tif (!state || !state.isManual) {\n\t\t\tthrow new Error(\"First argument to `finishDraft` must be a draft returned by `createDraft`\") // prettier-ignore\n\t\t}\n\t\tif (state.finalized) {\n\t\t\tthrow new Error(\"The given draft is already finalized\") // prettier-ignore\n\t\t}\n\t\tconst {scope} = state\n\t\tscope.usePatches(patchListener)\n\t\treturn this.processResult(undefined, scope)\n\t}\n\tsetAutoFreeze(value) {\n\t\tthis.autoFreeze = value\n\t}\n\tsetUseProxies(value) {\n\t\tthis.useProxies = value\n\t\tassign(this, value ? modernProxy : legacyProxy)\n\t}\n\tapplyPatches(base, patches) {\n\t\t// If a patch replaces the entire state, take that replacement as base\n\t\t// before applying patches\n\t\tlet i\n\t\tfor (i = patches.length - 1; i >= 0; i--) {\n\t\t\tconst patch = patches[i]\n\t\t\tif (patch.path.length === 0 && patch.op === \"replace\") {\n\t\t\t\tbase = patch.value\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\tif (isDraft(base)) {\n\t\t\t// N.B: never hits if some patch a replacement, patches are never drafts\n\t\t\treturn applyPatches(base, patches)\n\t\t}\n\t\t// Otherwise, produce a copy of the base state.\n\t\treturn this.produce(base, draft =>\n\t\t\tapplyPatches(draft, patches.slice(i + 1))\n\t\t)\n\t}\n\t/** @internal */\n\tprocessResult(result, scope) {\n\t\tconst baseDraft = scope.drafts[0]\n\t\tconst isReplaced = result !== undefined && result !== baseDraft\n\t\tthis.willFinalize(scope, result, isReplaced)\n\t\tif (isReplaced) {\n\t\t\tif (baseDraft[DRAFT_STATE].modified) {\n\t\t\t\tscope.revoke()\n\t\t\t\tthrow new Error(\"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\") // prettier-ignore\n\t\t\t}\n\t\t\tif (isDraftable(result)) {\n\t\t\t\t// Finalize the result in case it contains (or is) a subset of the draft.\n\t\t\t\tresult = this.finalize(result, null, scope)\n\t\t\t\tthis.maybeFreeze(result)\n\t\t\t}\n\t\t\tif (scope.patches) {\n\t\t\t\tscope.patches.push({\n\t\t\t\t\top: \"replace\",\n\t\t\t\t\tpath: [],\n\t\t\t\t\tvalue: result\n\t\t\t\t})\n\t\t\t\tscope.inversePatches.push({\n\t\t\t\t\top: \"replace\",\n\t\t\t\t\tpath: [],\n\t\t\t\t\tvalue: baseDraft[DRAFT_STATE].base\n\t\t\t\t})\n\t\t\t}\n\t\t} else {\n\t\t\t// Finalize the base draft.\n\t\t\tresult = this.finalize(baseDraft, [], scope)\n\t\t}\n\t\tscope.revoke()\n\t\tif (scope.patches) {\n\t\t\tscope.patchListener(scope.patches, scope.inversePatches)\n\t\t}\n\t\treturn result !== NOTHING ? result : undefined\n\t}\n\t/**\n\t * @internal\n\t * Finalize a draft, returning either the unmodified base state or a modified\n\t * copy of the base state.\n\t */\n\tfinalize(draft, path, scope) {\n\t\tconst state = draft[DRAFT_STATE]\n\t\tif (!state) {\n\t\t\tif (Object.isFrozen(draft)) return draft\n\t\t\treturn this.finalizeTree(draft, null, scope)\n\t\t}\n\t\t// Never finalize drafts owned by another scope.\n\t\tif (state.scope !== scope) {\n\t\t\treturn draft\n\t\t}\n\t\tif (!state.modified) {\n\t\t\tthis.maybeFreeze(state.base, true)\n\t\t\treturn state.base\n\t\t}\n\t\tif (!state.finalized) {\n\t\t\tstate.finalized = true\n\t\t\tthis.finalizeTree(state.draft, path, scope)\n\n\t\t\t// We cannot really delete anything inside of a Set. We can only replace the whole Set.\n\t\t\tif (this.onDelete && !isSet(state.base)) {\n\t\t\t\t// The `assigned` object is unreliable with ES5 drafts.\n\t\t\t\tif (this.useProxies) {\n\t\t\t\t\tconst {assigned} = state\n\t\t\t\t\teach(assigned, (prop, exists) => {\n\t\t\t\t\t\tif (!exists) this.onDelete(state, prop)\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\t// TODO: Figure it out for Maps and Sets if we need to support ES5\n\t\t\t\t\tconst {base, copy} = state\n\t\t\t\t\teach(base, prop => {\n\t\t\t\t\t\tif (!has(copy, prop)) this.onDelete(state, prop)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.onCopy) {\n\t\t\t\tthis.onCopy(state)\n\t\t\t}\n\n\t\t\t// At this point, all descendants of `state.copy` have been finalized,\n\t\t\t// so we can be sure that `scope.canAutoFreeze` is accurate.\n\t\t\tif (this.autoFreeze && scope.canAutoFreeze) {\n\t\t\t\tfreeze(state.copy, false)\n\t\t\t}\n\n\t\t\tif (path && scope.patches) {\n\t\t\t\tgeneratePatches(state, path, scope.patches, scope.inversePatches)\n\t\t\t}\n\t\t}\n\t\treturn state.copy\n\t}\n\t/**\n\t * @internal\n\t * Finalize all drafts in the given state tree.\n\t */\n\tfinalizeTree(root, rootPath, scope) {\n\t\tconst state = root[DRAFT_STATE]\n\t\tif (state) {\n\t\t\tif (!this.useProxies) {\n\t\t\t\t// Create the final copy, with added keys and without deleted keys.\n\t\t\t\tstate.copy = shallowCopy(state.draft, true)\n\t\t\t}\n\t\t\troot = state.copy\n\t\t}\n\n\t\tconst needPatches = !!rootPath && !!scope.patches\n\t\tconst finalizeProperty = (prop, value, parent) => {\n\t\t\tif (value === parent) {\n\t\t\t\tthrow Error(\"Immer forbids circular references\")\n\t\t\t}\n\n\t\t\t// In the `finalizeTree` method, only the `root` object may be a draft.\n\t\t\tconst isDraftProp = !!state && parent === root\n\t\t\tconst isSetMember = isSet(parent)\n\n\t\t\tif (isDraft(value)) {\n\t\t\t\tconst path =\n\t\t\t\t\tisDraftProp &&\n\t\t\t\t\tneedPatches &&\n\t\t\t\t\t!isSetMember && // Set objects are atomic since they have no keys.\n\t\t\t\t\t!has(state.assigned, prop) // Skip deep patches for assigned keys.\n\t\t\t\t\t\t? rootPath.concat(prop)\n\t\t\t\t\t\t: null\n\n\t\t\t\t// Drafts owned by `scope` are finalized here.\n\t\t\t\tvalue = this.finalize(value, path, scope)\n\t\t\t\treplace(parent, prop, value)\n\n\t\t\t\t// Drafts from another scope must prevent auto-freezing.\n\t\t\t\tif (isDraft(value)) {\n\t\t\t\t\tscope.canAutoFreeze = false\n\t\t\t\t}\n\n\t\t\t\t// Unchanged drafts are never passed to the `onAssign` hook.\n\t\t\t\tif (isDraftProp && value === get(state.base, prop)) return\n\t\t\t}\n\t\t\t// Unchanged draft properties are ignored.\n\t\t\telse if (isDraftProp && is(value, get(state.base, prop))) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\t// Search new objects for unfinalized drafts. Frozen objects should never contain drafts.\n\t\t\telse if (isDraftable(value) && !Object.isFrozen(value)) {\n\t\t\t\teach(value, finalizeProperty)\n\t\t\t\tthis.maybeFreeze(value)\n\t\t\t}\n\n\t\t\tif (isDraftProp && this.onAssign && !isSetMember) {\n\t\t\t\tthis.onAssign(state, prop, value)\n\t\t\t}\n\t\t}\n\n\t\teach(root, finalizeProperty)\n\t\treturn root\n\t}\n\tmaybeFreeze(value, deep = false) {\n\t\tif (this.autoFreeze && !isDraft(value)) {\n\t\t\tfreeze(value, deep)\n\t\t}\n\t}\n}\n\nfunction replace(parent, prop, value) {\n\tif (isMap(parent)) {\n\t\tparent.set(prop, value)\n\t} else if (isSet(parent)) {\n\t\t// In this case, the `prop` is actually a draft.\n\t\tparent.delete(prop)\n\t\tparent.add(value)\n\t} else if (Array.isArray(parent) || isEnumerable(parent, prop)) {\n\t\t// Preserve non-enumerable properties.\n\t\tparent[prop] = value\n\t} else {\n\t\tObject.defineProperty(parent, prop, {\n\t\t\tvalue,\n\t\t\twritable: true,\n\t\t\tconfigurable: true\n\t\t})\n\t}\n}\n","import {Immer} from \"./immer\"\n\nconst immer = new Immer()\n\n/**\n * The `produce` function takes a value and a \"recipe function\" (whose\n * return value often depends on the base state). The recipe function is\n * free to mutate its first argument however it wants. All mutations are\n * only ever applied to a __copy__ of the base state.\n *\n * Pass only a function to create a \"curried producer\" which relieves you\n * from passing the recipe function every time.\n *\n * Only plain objects and arrays are made mutable. All other objects are\n * considered uncopyable.\n *\n * Note: This function is __bound__ to its `Immer` instance.\n *\n * @param {any} base - the initial state\n * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n * @param {Function} patchListener - optional function that will be called with all the patches produced here\n * @returns {any} a new state, or the initial state if nothing was modified\n */\nexport const produce = immer.produce\nexport default produce\n\n/**\n * Like `produce`, but `produceWithPatches` always returns a tuple\n * [nextState, patches, inversePatches] (instead of just the next state)\n */\nexport const produceWithPatches = immer.produceWithPatches.bind(immer)\n\n/**\n * Pass true to automatically freeze all copies created by Immer.\n *\n * By default, auto-freezing is disabled in production.\n */\nexport const setAutoFreeze = immer.setAutoFreeze.bind(immer)\n\n/**\n * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n * always faster than using ES5 proxies.\n *\n * By default, feature detection is used, so calling this is rarely necessary.\n */\nexport const setUseProxies = immer.setUseProxies.bind(immer)\n\n/**\n * Apply an array of Immer patches to the first argument.\n *\n * This function is a producer, which means copy-on-write is in effect.\n */\nexport const applyPatches = immer.applyPatches.bind(immer)\n\n/**\n * Create an Immer draft from the given base state, which may be a draft itself.\n * The draft can be modified until you finalize it with the `finishDraft` function.\n */\nexport const createDraft = immer.createDraft.bind(immer)\n\n/**\n * Finalize an Immer draft from a `createDraft` call, returning the base state\n * (if no changes were made) or a modified copy. The draft must *not* be\n * mutated afterwards.\n *\n * Pass a function as the 2nd argument to generate Immer patches based on the\n * changes that were made.\n */\nexport const finishDraft = immer.finishDraft.bind(immer)\n\nexport {\n\toriginal,\n\tisDraft,\n\tisDraftable,\n\tNOTHING as nothing,\n\tDRAFTABLE as immerable\n} from \"./common\"\n\nexport {Immer}\n","/**\r\n * @preserve Copyright 2010-2019 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { Frame } from \"../Types\";\r\n\r\n/**\r\n * Module:          PlayerFrames\r\n * Responsibility:  Contains player related frames\r\n */\r\n\r\nexport function getPlayerFrame(): Frame {\r\n\r\n    const playerFrame: Frame = [\r\n        [\"0\", \"0\", \"B\", \"B\", \"0\", \"0\"],\r\n        [\"A\", \"B\", \"F\", \"F\", \"B\", \"A\"],\r\n        [\"B\", \"F\", \"0\", \"0\", \"F\", \"B\"],\r\n    ];\r\n\r\n    return playerFrame;\r\n}\r\n\r\nexport function getPlayerFormationFrames(): Frame[] {\r\n    const playerFormationFrames: Frame[] = [\r\n        [[\"B\", \"B\"]],  // nozzle tip\r\n        [[\"F\", \"F\"]],  // nozle bottom\r\n        [              // left wing\r\n            [\"A\", \"B\"],\r\n            [\"B\", \"F\"],\r\n        ],\r\n        [              // right wing\r\n            [\"B\", \"A\"],\r\n            [\"F\", \"B\"]\r\n        ],\r\n    ];\r\n\r\n    return playerFormationFrames;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseEnemy from \"./Base/BaseEnemy\";\r\nimport PlayerState, { AlivePlayer } from \"./State/Player/PlayerState\";\r\nimport { allGameKeys, GameKeys } from \"./Utility/KeyboardEvents\";\r\n\r\n/**\r\n * Module:          Guard\r\n * Responsibility:  TypeGuards\r\n */\r\n\r\nnamespace Guard {\r\n    export function isValidGameKey(value: string): value is GameKeys {\r\n        return allGameKeys.indexOf(value as GameKeys) !== -1;\r\n    }\r\n\r\n    /**\r\n     * TypeGuard for enemies\r\n     */\r\n    export function isEnemy(value: any): value is BaseEnemy {\r\n        return value && value.getObjectType() === \"enemy\";\r\n    }\r\n\r\n    /**\r\n     * Checks if the player is alive (and if the hitboxes and nozzleLocation are defined)\r\n     * @param {PlayerState} value.\r\n     * @returns {AlivePlayer}. An interface that extends PlayerState but changes 'type' | undefined o just the type.\r\n     */\r\n    export function isPlayerAlive(value: PlayerState): value is AlivePlayer {\r\n        return value.alive && value.hitboxes !== undefined && value.nozzleLocation !== undefined;\r\n    }\r\n}\r\n\r\nexport default Guard;\r\n","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport KeyValuePair from \"../Models/KeyValuePair\";\r\n\r\n/**\r\n * Module:          Lib\r\n * Responsibility:  A library containing various helper functions\r\n */\r\n\r\n/**\r\n * Picks a random number within a range.\r\n * @param {number} max. Maximum value.\r\n * @param {number} min. Minimum value.\r\n */\r\nexport function randomNumberInRange(max: number, min: number): number {\r\n    return Math.floor(Math.random() * (max - min) + min);\r\n}\r\n\r\n/**\r\n * Calculates the new time to be used between ticks based on the passed factor.\r\n * @param {number} time. The time to use as a base.\r\n * @param {number} factor. A factor > 1 is an increase, < 1 a decrease.\r\n */\r\nexport function calculateTimeSpeedIncrease(time: number, factor: number): number {\r\n    return time * 1 / factor;\r\n}\r\n\r\n/**\r\n * Splits a URI that uses ? to pass stuff into key value pairs. Only used in playground to debug.\r\n * @param {string} query.\r\n * @returns {KeyValuePair}. An array of keys and valyes.\r\n */\r\nexport function getURLQueryKVPs(query: string): KeyValuePair[] {\r\n    const kvps = query.split(\"?\");\r\n    return kvps.map((item) => {\r\n        const kvp = item.split(\"=\");\r\n        return {\r\n            key: kvp[0],\r\n            value: kvp[1],\r\n        };\r\n    });\r\n}\r\n\r\n/**\r\n * 50/50 change to return true of false\r\n * @returns {boolean}. True or false.\r\n */\r\nexport function coinFlip(): boolean {\r\n    return Math.floor(Math.random() * 2) === 1;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport ILocationProvider from \"../Interfaces/ILocationProvider\";\r\nimport { GameLocation } from \"../Models/GameLocation\";\r\n\r\n/**\r\n * Module:          BaseLocationProvider\r\n * Responsibility:  BaseClass for most location providers.\r\n */\r\n\r\nexport default abstract class BaseLocationProvider implements ILocationProvider {\r\n\r\n    /**\r\n     * Angle. Can change and be used to bounce enemies of the sides and bottom.\r\n     */\r\n    protected angle: number;\r\n\r\n    /**\r\n     * Speed the enemy travels at.\r\n     */\r\n    protected speed: number;\r\n\r\n    /**\r\n     * Initial speed for the enemy. Used o calculate speed increases.\r\n     */\r\n    protected baseSpeed: number;\r\n\r\n    /**\r\n     * The width of the enemy. Used to determine if an enemy is moving off the screen.\r\n     */\r\n    protected width: number;\r\n\r\n    /**\r\n     * Height of the enemy. Also used to determine if an enemy is moving off screen.\r\n     */\r\n    protected height: number;\r\n\r\n    /**\r\n     * Left position of the enemy.\r\n     */\r\n    protected left: number;\r\n\r\n    /**\r\n     * Top position of the enemy.\r\n     */\r\n    protected top: number;\r\n\r\n    /**\r\n     * Initialize the object.\r\n     * @param {number} left. Inital left.\r\n     * @param {number} top. Initial top.\r\n     * @param {number} speed. Initial speed.\r\n     * @param {number} angle. Movement angle.\r\n     * @param {number} width. Width of the enemy.\r\n     * @param {number} height. Height of the enemy.\r\n     */\r\n    constructor(left: number, top: number, speed: number, angle: number, width: number, height: number) {\r\n        this.left = left;\r\n        this.top = top;\r\n        this.angle = angle;\r\n        this.speed = speed;\r\n        this.baseSpeed = speed;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n\r\n    /**\r\n     * Returns a location. Implement specific movement behaviours in a diriving class.\r\n     * @param {number} left. Left coordinate.\r\n     * @param {number} top. Top coordinate.\r\n     * @param {number} width. Width of the object.\r\n     * @param {number} height. Height of the object.\r\n     */\r\n    public getCurrentLocation(): GameLocation {\r\n        return { left: this.left, top: this.top };\r\n    }\r\n\r\n    /**\r\n     * Updates the state of the location provider.\r\n     * @param {number} tick. Current tick\r\n     */\r\n    public abstract updateState(tick: number): void;\r\n\r\n    /**\r\n     * increases the speed by the provided factor.\r\n     * @param {number} factor.\r\n     */\r\n    public increaseSpeed(factor: number): void {\r\n        this.speed = this.baseSpeed * factor;\r\n    }\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          StateProviders\r\n * Responsibility:  Functions that provide a state object.\r\n */\r\n\r\nimport { produce } from \"immer\";\r\nimport BaseEnemy from \"../Base/BaseEnemy\";\r\nimport Explosion from \"../Models/Explosion\";\r\nimport { Frame } from \"../Types\";\r\nimport { getFrameHitbox } from \"../Utility/Frame\";\r\nimport { fallsWithinGameField, getLocation } from \"../Utility/Location\";\r\nimport { EnemyState } from \"./EnemyLevel/EnemyState\";\r\nimport { ParticleState } from \"./Player/ParticleState\";\r\nimport { appState } from \"./Store\";\r\n\r\nexport namespace StateProviders {\r\n    /**\r\n     * Gets a particle state object.\r\n     * @export\r\n     * @param {number} left. Left coordinate.\r\n     * @param {number} top. Top coordinate\r\n     * @param {number} speed. Speed of the particle in px/tick\r\n     * @param {number} angle. Direction angle\r\n     * @param {Frame} frame. Frame to render.\r\n     * @param {number} [acceletation=1]. Below 1 slows down, above 1 speeds up. 1 by default\r\n     * @param {number} [hitboxTopOffset=0]. Offset, in game pixels, that increases the top of the hitbox.\r\n     * @param {number} [hitboxBottomOffset=0]. Offset, in game pixels, that increases the bottom of the hitbox.\r\n     * @returns {ParticleState}\r\n     */\r\n    export function getParticleState(\r\n        left: number,\r\n        top: number,\r\n        speed: number,\r\n        angle: number,\r\n        frame: Frame,\r\n        acceletation: number = 1,\r\n        hitboxTopOffset: number = 0,\r\n        hitboxBottomOffset: number = 0): ParticleState {\r\n\r\n        const bulletHitbox = getFrameHitbox(left, top, frame, hitboxTopOffset, hitboxBottomOffset);\r\n\r\n        const bullet: ParticleState = {\r\n            acceletation,\r\n            angle,\r\n            coloredFrame: frame,\r\n            hitbox: bulletHitbox,\r\n            speed,\r\n            left,\r\n            top,\r\n        };\r\n\r\n        return bullet;\r\n    }\r\n\r\n    /**\r\n     * Gets a particle state object.\r\n     * @export\r\n     * @param {number} left. Left coordinate.\r\n     * @param {number} top. Top coordinate\r\n     * @param {number} speed. Speed of the particle in px/tick\r\n     * @param {number} angle. Direction angle\r\n     * @param {Frame} frame. Frame to render.\r\n     * @param {number} order. The id of the owner. aka. The ship that fired the bullet.\r\n     * @param {number} [hitboxTopOffset=0]. Offset, in game pixels, that increases the top of the hitbox.\r\n     * @param {number} [hitboxBottomOffset=0]. Offset, in game pixels, that increases the bottom of the hitbox.\r\n     * @returns {ParticleState}\r\n     */\r\n    export function getBulletParticleState(\r\n        left: number,\r\n        top: number,\r\n        speed: number,\r\n        angle: number,\r\n        frame: Frame,\r\n        ownerId: number,\r\n        hitboxTopOffset: number = 0,\r\n        hitboxBottomOffset: number = 0): ParticleState {\r\n\r\n        const particle = getParticleState(left, top, speed, angle, frame, 1, hitboxTopOffset, hitboxBottomOffset);\r\n        particle.owner = ownerId;\r\n\r\n        return particle;\r\n    }\r\n\r\n    /**\r\n     * particleProvider. Provides particle objects based on an Explosion asset.\r\n     * @param {number} left. Left coordinate.\r\n     * @param {number} top. Top coordinate.\r\n     * @param {ExplosionProviderFunction} getExplosion. Explosion asset used to generate particle objects.\r\n     * @returns {Particle[]}. Resulting particles.\r\n     */\r\n    export function explosionShrapnellProvider(left: number, top: number, explosion: Explosion): ParticleState[] {\r\n\r\n        const particles: ParticleState[] = [];\r\n        for (let i = 0; i < explosion.particleFrameIndexes.length; i++) {\r\n            // Create an array with every particle frame.\r\n            const particleFrameIndex = explosion.particleFrameIndexes[i];\r\n            const particleFrame = explosion.particleFrames[particleFrameIndex];\r\n\r\n            const angle = explosion.angles[i];\r\n            const speed = explosion.useSpeed ? explosion.speed : explosion.speeds[i];\r\n\r\n            const p = StateProviders.getParticleState(left, top, speed, angle, particleFrame, explosion.acceleration, 0, 0);\r\n            particles.push(p);\r\n        }\r\n\r\n        return particles;\r\n    }\r\n\r\n    /**\r\n     * Retrns a new particle state with updated speeds and locations.\r\n     * @param {ParticleState[]} particles. Array of ParticleState\r\n     * @returns {ParticleState[]}. Remaining particles with updated speeds and locations.\r\n     */\r\n    export function getUpdatedParticleState(particles: ParticleState[]): ParticleState[] {\r\n\r\n        const nextState: ParticleState[] = [];\r\n        for (const particle of particles) {\r\n\r\n            const updatedParticle = produce(particle, (draft) => {\r\n                const newLocation = getLocation(particle.left, particle.top, particle.angle, particle.speed);\r\n                const hitbox = getFrameHitbox(newLocation.left, newLocation.top, particle.coloredFrame);\r\n\r\n                if (fallsWithinGameField(hitbox.left, hitbox.right, newLocation.top, hitbox.bottom)) {\r\n                    draft.left = newLocation.left;\r\n                    draft.top = newLocation.top;\r\n                    draft.speed = particle.speed * particle.acceletation;\r\n                    draft.hitbox = getFrameHitbox(newLocation.left, newLocation.top, particle.coloredFrame);\r\n                }\r\n            });\r\n\r\n            if (particle !== updatedParticle) {\r\n                nextState.push(updatedParticle);\r\n            }\r\n        }\r\n\r\n        return nextState;\r\n    }\r\n\r\n    /**\r\n     * Gets the enemy's ship's state. Throws an exception if the enemy could not be found.\r\n     * @export\r\n     * @param {BaseEnemy} enemy\r\n     * @returns {EnemyState}\r\n     */\r\n    export function getEnemyState(enemy: BaseEnemy): EnemyState {\r\n        const state = appState().enemyLevelState.enemies.find((e) => e.enemyId === enemy.getId());\r\n\r\n        if (state === undefined) {\r\n            throw new Error(\"Could not retrive state for enemy \" + enemy.getId());\r\n        }\r\n\r\n        return state;\r\n    }\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { GameLocation } from \"../Models/GameLocation\";\r\nimport { getPlayerFrame } from \"../Player/PlayerFrames\";\r\nimport { getFrameDimensions } from \"../Utility/Frame\";\r\nimport dimensionProvider from \"./DimensionProvider\";\r\n\r\n/**\r\n * Module:          PlayerSpawnLocationProvider\r\n * Responsibility:  Providers the location where the ship should spawn in a level with enemeies\r\n */\r\n\r\nconst {\r\n    pixelSize,\r\n    fullGameWidth,\r\n    fullGameHeight\r\n} = dimensionProvider();\r\n\r\nconst shipDimensions = getFrameDimensions(getPlayerFrame());\r\n\r\nconst leftSpawnPosition = (fullGameWidth / 2) - shipDimensions.width / 2;\r\nconst topSpawnPosition = fullGameHeight - pixelSize * 8;\r\n\r\n/**\r\n * Gets the ship's spawn location, center screen.\r\n */\r\nexport default function getShipSpawnLocation(): GameLocation {\r\n    return {\r\n        left: leftSpawnPosition,\r\n        top: topSpawnPosition,\r\n    };\r\n}\r\n","\r\n/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport CGAColors from \"../Constants/CGAColors\";\r\nimport WarpLevelConstants from \"../Constants/WarpLevelConstants\";\r\nimport { GameRectangle } from \"../Models/GameRectangle\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport ctxProvider from \"../Providers/Render/CtxProvider\";\r\n\r\n/**\r\n * Module:          StaticRenders\r\n * Responsibility:  Starts the game\r\n */\r\n\r\nconst {\r\n    pixelSize,\r\n    gameField,\r\n    statusBarBottom,\r\n    fullGameWidth\r\n} = dimensionProvider();\r\n\r\nexport function drawBackground(): void {\r\n    clearGameFieldBackground();\r\n}\r\n\r\n/**\r\n * Renders the entire canvas black\r\n */\r\nfunction clearGameFieldBackground(): void {\r\n    const ctx = ctxProvider();\r\n    ctx.fillStyle = CGAColors.black;\r\n    ctx.fillRect(gameField.left, gameField.top, gameField.right, gameField.bottom);\r\n}\r\n\r\n/**\r\n * Draws a solid red recangle where the game's score is displayed.\r\n */\r\nexport function drawGameFieldBorder(): void {\r\n    const ctx = ctxProvider();\r\n    ctx.fillStyle = CGAColors.blue;\r\n\r\n    // Draw the top field border.\r\n    ctx.fillRect(0, statusBarBottom, fullGameWidth, pixelSize);\r\n\r\n    // Draw the right field border.\r\n    ctx.fillRect(gameField.right, statusBarBottom, pixelSize, gameField.bottom);\r\n\r\n    // // Draw the bottom field border.\r\n    ctx.fillRect(0, gameField.bottom, fullGameWidth, pixelSize);\r\n\r\n    // // Draw the left field border.\r\n    ctx.fillRect(0, statusBarBottom, pixelSize, gameField.bottom);\r\n}\r\n\r\n/**\r\n * Draws the background of the warp level.\r\n * @param {string} additionalColor. The additional color.\r\n */\r\nexport function drawWarpBackground(additionalColor: string, gate: GameRectangle[]): void {\r\n    const ctx = ctxProvider();\r\n\r\n    // The first line in a warp level is always white.\r\n    // we'll use this flag to altername between white and a randonly picked color.\r\n    let drawWhite = true;\r\n    let left = WarpLevelConstants.left;\r\n\r\n    while (WarpLevelConstants.right >= left) {\r\n        if (drawWhite) {\r\n            ctx.fillStyle = CGAColors.white;\r\n            drawWhite = false;\r\n        } else {\r\n            ctx.fillStyle = additionalColor;\r\n            drawWhite = true;\r\n        }\r\n\r\n        ctx.fillRect(left, WarpLevelConstants.top, pixelSize, WarpLevelConstants.height);\r\n        left += pixelSize;\r\n    }\r\n\r\n    ctx.fillStyle = \"black\";\r\n\r\n    gate.forEach((r) => ctx.fillRect(r.left, r.top, r.right - r.left, r.bottom - r.top));\r\n}\r\n","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { calculateTimeSpeedIncrease } from \"../Utility/Lib\";\r\n\r\n/**\r\n * Module:          TickHandler\r\n * Responsibility:  Handles a game tick.\r\n */\r\n\r\nexport default class TickHandler {\r\n\r\n    /**\r\n     * Keeps track of the last time the tick handler ticked.\r\n     */\r\n    private lastTick = 0;\r\n\r\n    /**\r\n     * Time between ticks when we have to do something.\r\n     */\r\n    private time: number;\r\n\r\n    /**\r\n     * The function called when the time between ticks has passed.\r\n     */\r\n    private onTimePassed: (tick: number) => void;\r\n\r\n    /**\r\n     * Base time between actions without modification\r\n     */\r\n    private baseTime: number;\r\n\r\n    /**\r\n     * Creates the TickHandler class.\r\n     * @param {number} time. The time that should pass between ticks.\r\n     * @param {() => void} onTickPassed. The function to call when the specified time has passed between ticks.\r\n     */\r\n    constructor(time: number, onTimePassed: (tick: number) => void) {\r\n        this.time = time;\r\n        this.baseTime = time;\r\n        this.onTimePassed = onTimePassed;\r\n    }\r\n\r\n    /**\r\n     * Tick\r\n     * @param {number} tick. The current tick.\r\n     */\r\n    public tick(tick: number): void {\r\n        if (tick - this.lastTick >= this.time) {\r\n            this.onTimePassed(tick);\r\n\r\n            this.lastTick = tick;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Increase speed means lowering time between actions.\r\n     * @param {number} factor. 1 = no change. > 1 means faster.\r\n     */\r\n    public increaseSpeed(factor: number): void {\r\n        this.time = calculateTimeSpeedIncrease(this.baseTime, factor);\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport dimensionProvider from \"./DimensionProvider\";\r\n\r\n/**\r\n * Module:          speedProvider\r\n * Responsibility:  Calculate the relative speed based on the screensize.\r\n */\r\n\r\nconst {\r\n    gameField\r\n} = dimensionProvider();\r\n\r\nexport default function speedProvider(speed: number): number {\r\n    // 1600 is the size of the canvas when I was developing the game. All game speeds are based on this.\r\n    return speed * (gameField.right / 1600);\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { addPhaser, nextLevel } from \"../State/Game/GameActions\";\r\nimport { dispatch } from \"../State/Store\";\r\n\r\n/**\r\n * Module:          HandleLevelWon\r\n * Responsibility:  Define what should happen when the player wins a level.\r\n */\r\n\r\nexport default function handleLevelWon(): void {\r\n    // Add a phaser because that's a level won reward.\r\n    dispatch(addPhaser());\r\n\r\n    // Move to the next level.\r\n    dispatch(nextLevel());\r\n}","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","import CGAColors from \"../Constants/CGAColors\";\r\nimport { GameRectangle } from \"../Models/GameRectangle\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport ctxProvider from \"../Providers/Render/CtxProvider\";\r\nimport { appState } from \"../State/Store\";\r\n\r\nconst {\r\n    pixelSize,\r\n    fullGameWidth,\r\n    fullGameHeight\r\n} = dimensionProvider();\r\n\r\nexport function DEBUGGING_renderHitboxes() {\r\n    const { playerState, enemyLevelState } = appState();\r\n    const hitboxes = enemyLevelState.enemies.map((e) => e.hitbox);\r\n\r\n    // Add player if defined.\r\n    if (playerState.hitboxes) {\r\n        hitboxes.push(playerState.hitboxes.bottom);\r\n        hitboxes.push(playerState.hitboxes.middle);\r\n    }\r\n\r\n    // Add bullet if defined.\r\n    if (playerState.bulletState?.hitbox) {\r\n        hitboxes.push(playerState.bulletState.hitbox);\r\n    }\r\n\r\n    enemyLevelState.bullets.forEach((b) => hitboxes.push(b.hitbox));\r\n    enemyLevelState.shrapnells.forEach((b) => hitboxes.push(b.hitbox));\r\n\r\n    // Draw a circle around each object using the\r\n    // coordiates and radius of the hitbox.\r\n    for (const hitbox of hitboxes) {\r\n\r\n        if (hitbox !== undefined) {\r\n            DEBUGGING_drawGameRect(hitbox, CGAColors.lightRed);\r\n        }\r\n    }\r\n}\r\n\r\nexport function DEBUGGING_drawGameRect(hitbox: GameRectangle, color: string, lineWith: number = 2) {\r\n    const ctx = ctxProvider();\r\n    ctx.beginPath();\r\n    ctx.strokeStyle = color;\r\n    ctx.rect(hitbox.left, hitbox.top, hitbox.right - hitbox.left, hitbox.bottom - hitbox.top);\r\n    ctx.lineWidth = lineWith;\r\n    ctx.stroke();\r\n    ctx.closePath();\r\n}\r\n\r\n/**\r\n * Debugggin function. Draws a grid in the screen for animation alignment.\r\n */\r\nexport function DEBUGGING_drawGrid(gridDetail?: number): void {\r\n\r\n    if (gridDetail === undefined) {\r\n        gridDetail = 1;\r\n    }\r\n\r\n    const ctx = ctxProvider();\r\n    for (let r = 0; r < 120; r += 1) {\r\n        ctx.beginPath();\r\n        const y = r * pixelSize * gridDetail;\r\n        ctx.lineTo(0, y);\r\n        ctx.lineTo(fullGameWidth, y);\r\n        ctx.lineWidth = 1;\r\n        ctx.strokeStyle = \"white\";\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n    }\r\n\r\n    for (let r = 0; r < 160; r += 1) {\r\n        ctx.beginPath();\r\n        const x = r * pixelSize * gridDetail;\r\n        ctx.lineTo(x, 0);\r\n        ctx.lineTo(x, fullGameHeight);\r\n        ctx.lineWidth = 1;\r\n        ctx.strokeStyle = \"white\";\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Constants\r\n * Responsibility:  Constants for the debugging state\r\n */\r\n\r\nnamespace Constants {\r\n    export const setDebuggingState = \"setDebuggingState\";\r\n}\r\n\r\nexport default Constants;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Constants for enemy level actions and reducer.\r\n */\r\n\r\nnamespace Constants {\r\n    export const resetLevelState = \"resetLevelState\";\r\n    export const addParticle = \"addParticle\";\r\n    export const addParticles = \"addParticles\";\r\n    export const setShrapnellState = \"setShrapnellState\";\r\n    export const addExplosionCenter = \"addExplosionCenter\";\r\n    export const setPhaserLocations = \"setPhaserLocations\";\r\n    export const clearPhaserLocations = \"clearPhaserLocations\";\r\n    export const setFireInterval = \"setFireInterval\";\r\n    export const setExplosionCenters = \"setExplosionCenters\";\r\n    export const addBullet = \"addBullet\";\r\n    export const setBulletState = \"setBulletState\";\r\n    export const setTotalEnemies = \"setTotalEnemies\";\r\n    export const addOrUpdateEnemy = \"addOrUpdateEnemy\";\r\n    export const removeEnemy = \"removeEnemy\";\r\n}\r\n\r\nexport default Constants;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Constants\r\n * Responsibility:  Constants used by the GameState reducer and by the Action creator functions\r\n */\r\n\r\nnamespace Constants {\r\n    export const setLives = \"setLives\";\r\n    export const addLife = \"addLife\";\r\n    export const removeLife = \"removeLife\";\r\n    export const increaseScore = \"increaseScore\";\r\n    export const addLevel = \"addLevel\";\r\n    export const setLevel = \"setLevel\";\r\n    export const nextLevel = \"nextLevel\";\r\n    export const addLifeAndPhaser = \"addLifeAndPhaser\";\r\n    export const setPhasers = \"setPhasers\";\r\n    export const addPhaser = \"addPhaser\";\r\n    export const removePhaser = \"removePhaser\";\r\n    export const setPause = \"setPause\";\r\n    export const setWarpLevelComplexity = \"setWarpLevelComplexity\";\r\n}\r\n\r\nexport default Constants;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { GameKeys } from \"../../Utility/KeyboardEvents\";\r\n\r\n/**\r\n * Module:          Constants\r\n * Responsibility:  Constants for valid keys used by the GameState\r\n */\r\n\r\nnamespace Constants {\r\n    export const arrowUp: GameKeys = \"ArrowUp\";\r\n    export const arrowDown: GameKeys = \"ArrowDown\";\r\n    export const arrowLeft: GameKeys = \"ArrowLeft\";\r\n    export const arrowRight: GameKeys = \"ArrowRight\";\r\n    export const backspace: GameKeys = \"Backspace\";\r\n    export const f1: GameKeys = \"F1\";\r\n    export const f2: GameKeys = \"F2\";\r\n    export const space: GameKeys = \"Space\";\r\n    export const keyup = \"KeyUp\";\r\n    export const keydown = \"KeyDown\";\r\n}\r\n\r\nexport default Constants;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Constants\r\n * Responsibility:  Constants used to determine the action type for the PlayerState.\r\n */\r\n\r\n/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Constants\r\n * Responsibility:  Provide constants for the player reducer and actions.\r\n */\r\n\r\nnamespace Constants {\r\n    export const setPlayerIsAlive = \"setPlayerIsAlive\";\r\n    export const setPlayerMovementLimit = \"setPlayerMovementLimit\";\r\n    export const setPlayerLocationData = \"setPlayerLocationData\";\r\n    export const setPlayerBulletState = \"setPlayerBulletState\";\r\n}\r\n\r\nexport default Constants;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\n\r\n/**\r\n * Module:          WarpLevelConstants\r\n * Responsibility:  Constants for the warp level.\r\n */\r\n\r\nconst {\r\n    pixelSize,\r\n    gameField\r\n} = dimensionProvider();\r\n\r\nexport namespace WarpLevelConstants {\r\n    export const heightPixelCount = 72;\r\n    export const top = pixelSize * 8;\r\n    export const height = heightPixelCount * pixelSize;\r\n    export const left = gameField.left + pixelSize;\r\n    export const right = gameField.right - pixelSize * 2;\r\n    export const bottom = top + height;\r\n    export const width = pixelSize * 16;\r\n}\r\n\r\nexport default WarpLevelConstants;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { Frame } from \"../Types\";\r\nimport Mutators from \"../Utility/FrameMutators\";\r\n\r\n/**\r\n * Module:          Numbers\r\n * Responsibility:  Numbers 0 to 9. All colors are variant and can be set with single function call.\r\n */\r\n\r\nexport default function getNumbers(color: string): Frame[] {\r\n    const numbers: Frame[] = [\r\n        [\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"0\", \"0\", \"V\", \"0\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"0\", \"0\", \"V\", \"0\"],\r\n            [\"0\", \"0\", \"V\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n        ],\r\n        [\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"0\", \"V\", \"0\"],\r\n            [\"0\", \"V\", \"0\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n\r\n        ],\r\n        [\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"0\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"0\", \"V\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"0\", \"0\", \"V\", \"0\"],\r\n            [\"0\", \"0\", \"V\", \"0\"],\r\n\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n            [\"0\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"0\", \"V\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"0\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"0\", \"V\", \"0\"],\r\n            [\"0\", \"V\", \"0\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n        ],\r\n        [\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"V\"],\r\n            [\"0\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n        ],\r\n    ];\r\n\r\n    Mutators.Frames.setColor(numbers, color);\r\n    return numbers;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseEnemy from \"../Base/BaseEnemy\";\r\nimport { angles } from \"../Constants/Angles\";\r\nimport { FrameTimes, Locations, MovementAngles, Speeds } from \"../Constants/Constants\";\r\nimport { AsteroidEnemy } from \"../Enemies/Asteroid/AsteroidEnemy\";\r\nimport { getAsteroidOffsetFrames } from \"../Enemies/Asteroid/GetAsteroidOffsetFrames\";\r\nimport BalloonEnemy from \"../Enemies/Balloon/BalloonEnemy\";\r\nimport getBalloonOffsetFrames from \"../Enemies/Balloon/GetBalloonOffsetFrames\";\r\nimport BirdEnemy from \"../Enemies/Bird/BirdEnemy\";\r\nimport { default as getBirdOffsetFrames, default as getBirdResource } from \"../Enemies/Bird/GetBirdOffsetFrames\";\r\nimport DevilEnemy from \"../Enemies/Devil/DevilEnemy\";\r\nimport getDevilOffsetFrames from \"../Enemies/Devil/GetDevilOffsetFrames\";\r\nimport getDiaboloOffsetFrames from \"../Enemies/Diabolo/GetDiaboloOffsetFrames\";\r\nimport getOrbResource from \"../Enemies/Orb/GetOrbOffsetFrames\";\r\nimport OrbEnemy from \"../Enemies/Orb/OrbEnemy\";\r\nimport getPistonOffsetFrames from \"../Enemies/Piston/GetPistonOffsetFrames\";\r\nimport PistonEnemy from \"../Enemies/Piston/PistonEnemy\";\r\nimport getRobotResource from \"../Enemies/Robot/GetRobotOffsetFrames\";\r\nimport RobotEnemy from \"../Enemies/Robot/RobotEnemy\";\r\nimport { getSpaceMonsterOffsetFrames } from \"../Enemies/SpaceMonster/SpaceMonster\";\r\nimport { SpaceMonster as SpaceMonsterEnemy } from \"../Enemies/SpaceMonster/SpaceMonsterEnemy\";\r\nimport getSpinnerOffsetFrames from \"../Enemies/Spinner/GetSpinnerOffsetFrames\";\r\nimport SpinnerEnemy from \"../Enemies/Spinner/SpinnerEnemy\";\r\nimport { GameLocation } from \"../Models/GameLocation\";\r\nimport getExplosion01 from \"../SharedFrames/Explosion01\";\r\nimport getExplosion02 from \"../SharedFrames/Explosion02\";\r\nimport getExplosion03 from \"../SharedFrames/Explosion03\";\r\nimport getExplosion04 from \"../SharedFrames/Explosion04\";\r\nimport getExplosion05 from \"../SharedFrames/Explosion05\";\r\nimport { Enemies } from \"../Types\";\r\nimport { getRandomArrayElement } from \"../Utility/Array\";\r\nimport { getRandomFrameKeyIndex } from \"../Utility/Frame\";\r\nimport dimensionProvider from \"./DimensionProvider\";\r\nimport BackAndForthFrameProvider from \"./FrameProviders/BackAndForthFrameProvider\";\r\nimport CircleFrameProvider from \"./FrameProviders/CircleFrameProvider\";\r\nimport AsteroidLocationProvider from \"./LocationProviders/AsteroidLocationProvider\";\r\nimport DevilLocationProvider from \"./LocationProviders/DevilLocationProvider\";\r\nimport MoveDownAppearUpLocationProvider from \"./LocationProviders/MoveDownAppearUpLocaionProvider\";\r\nimport SideAppearOtherSideLocationProvider from \"./LocationProviders/SideAppearOtherSideLocationProvider\";\r\nimport SideAppearOtherSideVariesSpeed from \"./LocationProviders/SideAppearOtherSideVariesSpeed\";\r\nimport SideToSideUpAndDown from \"./LocationProviders/SideToSideUpAndDownLocationProvider\";\r\nimport Wobble from \"./LocationProviders/Wobble\";\r\n\r\n/**\r\n * Module:          EnemyFactory\r\n * Responsibility:  Creates an enemy.\r\n */\r\n\r\nconst {\r\n    pixelSize,\r\n    gameField\r\n} = dimensionProvider();\r\n\r\nexport default function enemyFactory(enemy: Enemies, location?: GameLocation): BaseEnemy {\r\n    switch (enemy) {\r\n        case \"bird\": {\r\n\r\n            if (location === undefined) {\r\n                throw new Error(\"Bird enemy requires a location\");\r\n            }\r\n\r\n            const resource = getBirdOffsetFrames();\r\n            const { maxSizes: { width, height } } = resource;\r\n\r\n            const frameProvider = new BackAndForthFrameProvider(getRandomFrameKeyIndex(resource.frames));\r\n            const randomMovementAngle = getRandomArrayElement(MovementAngles.bird);\r\n            const locationProvider = new SideToSideUpAndDown(location.left, location.top, Speeds.Movement.bird, randomMovementAngle, width, height, gameField.top, gameField.bottom);\r\n\r\n            return new BirdEnemy(FrameTimes.bird, getBirdResource, getExplosion01, locationProvider, frameProvider);\r\n        }\r\n\r\n        case \"robot\": {\r\n\r\n            if (location === undefined) {\r\n                throw new Error(\"Robot enemy requires a starting position\");\r\n            }\r\n\r\n            const { maxBottom } = Locations.Enemies.robot;\r\n            const { maxSizes: { width, height } } = getRobotResource();\r\n\r\n            const frameProvider = new BackAndForthFrameProvider(0);\r\n            const locationProvider = new SideAppearOtherSideLocationProvider(location.left, location.top, Speeds.Movement.robot, MovementAngles.robot, width, height, gameField.top, maxBottom);\r\n            return new RobotEnemy(FrameTimes.robot, locationProvider, frameProvider, getExplosion02, getRobotResource);\r\n        }\r\n\r\n        case \"orb\": {\r\n            if (location === undefined) {\r\n                throw new Error(\"Orb enemy requires a starting location\");\r\n            }\r\n\r\n            const { maxSizes: { width, height } } = getOrbResource();\r\n            const { maxTop, maxBottom } = Locations.Enemies.Orb;\r\n\r\n            const frameProvider = new CircleFrameProvider(0);\r\n            const locationProvider = new MoveDownAppearUpLocationProvider(location.left, location.top, Speeds.Movement.orb, MovementAngles.orb, width, height, maxTop, maxBottom);\r\n            return new OrbEnemy(FrameTimes.orb, getOrbResource, getExplosion02, locationProvider, frameProvider);\r\n        }\r\n        case \"spinner\": {\r\n            if (location === undefined) {\r\n                throw new Error(\"Spinner enemy requires a starting location\");\r\n            }\r\n            const { frames, maxSizes: { width, height } } = getSpinnerOffsetFrames();\r\n            const verticalBounds = pixelSize * 6;\r\n\r\n            const maxTop = location.top - verticalBounds;\r\n            const maxBottom = location.top + verticalBounds;\r\n\r\n            const frameProvider = new CircleFrameProvider(getRandomFrameKeyIndex(frames));\r\n            const randomAngle = getRandomArrayElement(MovementAngles.spinner);\r\n            const locationProvider = new SideToSideUpAndDown(location.left, location.top, Speeds.Movement.spinner, randomAngle, width, height, maxTop, maxBottom);\r\n            return new SpinnerEnemy(FrameTimes.spinner, getSpinnerOffsetFrames, getExplosion01, locationProvider, frameProvider);\r\n        }\r\n\r\n        case \"balloon\": {\r\n            if (location === undefined) {\r\n                throw new Error(\"Balloon enemy requires a starting location\");\r\n            }\r\n\r\n            const { frames, maxSizes: { width, height } } = getBalloonOffsetFrames();\r\n            const frameProvider = new CircleFrameProvider(getRandomFrameKeyIndex(frames));\r\n            const locationProvider = new Wobble(location.left, location.top, Speeds.Movement.balloon, 0, width, height, 200);\r\n            return new BalloonEnemy(FrameTimes.balloon, getBalloonOffsetFrames, getExplosion03, locationProvider, frameProvider);\r\n\r\n        }\r\n        case \"asteroid-down\": {\r\n            const { maxSizes: { width, height } } = getAsteroidOffsetFrames();\r\n            const frameProvider = new CircleFrameProvider(0);\r\n            const locationProvider = new AsteroidLocationProvider(width, height, [angles.down], Speeds.Movement.asteroid);\r\n\r\n            // Astroids don't change frames over time, they change frames when they're hit.\r\n            return new AsteroidEnemy(0, getAsteroidOffsetFrames, getExplosion04, locationProvider, frameProvider);\r\n        }\r\n\r\n        case \"piston\": {\r\n            if (location === undefined) {\r\n                throw new Error(\"Balloon enemy requires a starting location\");\r\n            }\r\n\r\n            const { maxSizes: { width } } = getPistonOffsetFrames();\r\n            const frameProvider = new BackAndForthFrameProvider(0);\r\n\r\n            const locationProvider = new SideAppearOtherSideVariesSpeed(\r\n                location.left,\r\n                location.top,\r\n                MovementAngles.piston,\r\n                width,\r\n                gameField.top,\r\n                gameField.bottom,\r\n                frameProvider,\r\n                Speeds.Movement.Piston.slow,\r\n                Speeds.Movement.Piston.fast,\r\n                [0, 1, 2],\r\n                [3, 4]);\r\n\r\n            return new PistonEnemy(FrameTimes.piston, getPistonOffsetFrames, getExplosion02, locationProvider, frameProvider);\r\n        }\r\n\r\n        case \"diabolo\": {\r\n            if (location === undefined) {\r\n                throw new Error(\"Diabolo enemy requires a starting location\");\r\n            }\r\n\r\n            const { maxSizes: { width, height }, frames } = getDiaboloOffsetFrames();\r\n            const frameProvider = new CircleFrameProvider(getRandomFrameKeyIndex(frames));\r\n\r\n            const randomAngle = getRandomArrayElement(MovementAngles.diabolo);\r\n            const locationProvider = new SideToSideUpAndDown(\r\n                location.left,\r\n                location.top,\r\n                Speeds.Movement.diabolo,\r\n                randomAngle,\r\n                width,\r\n                height,\r\n                gameField.top,\r\n                gameField.bottom\r\n            );\r\n\r\n            return new PistonEnemy(FrameTimes.piston, getDiaboloOffsetFrames, getExplosion01, locationProvider, frameProvider);\r\n        }\r\n\r\n        case \"spacemonster-down\": {\r\n            const { maxSizes: { width, height } } = getSpaceMonsterOffsetFrames();\r\n            const frameProvider = new CircleFrameProvider(0);\r\n            const locationProvider = new AsteroidLocationProvider(width, height, [angles.down], Speeds.Movement.asteroid);\r\n\r\n            // Space monsters do not change frames over time, they change frame depending on their position on the screen.\r\n            return new SpaceMonsterEnemy(0, getSpaceMonsterOffsetFrames, getExplosion05, locationProvider, frameProvider);\r\n        }\r\n\r\n        case \"devil\": {\r\n            if (location === undefined) {\r\n                throw new Error(\"Devil enemy requires a starting location\");\r\n            }\r\n\r\n            const { maxSizes: { width, height }, frames } = getDevilOffsetFrames();\r\n            const frameProvider = new CircleFrameProvider(getRandomFrameKeyIndex(frames));\r\n\r\n            const locationProvider = new DevilLocationProvider(\r\n                location.left,\r\n                location.top,\r\n                Speeds.Movement.devil,\r\n                MovementAngles.devil,\r\n                width,\r\n                height,\r\n                gameField.top,\r\n                Locations.Enemies.Devil.maxBottom,\r\n            );\r\n\r\n            // Frames have no time, the frame of the devil is determined by where it is headed.\r\n            return new DevilEnemy(0, getDevilOffsetFrames, getExplosion01, locationProvider, frameProvider);\r\n        }\r\n\r\n        default:\r\n            throw new Error(\"Unknown enemy \" + enemy);\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport IGetCurrentIndex from \"../Interfaces/IGetCurrentFrame\";\r\nimport { Frame } from \"../Types\";\r\nimport { copyFrame, copyFrames, getFrameByIndex } from \"../Utility/Frame\";\r\n\r\n/**\r\n * Module:          BaseFrameProvider\r\n * Responsibility:  BaseClass for most frame providers.\r\n */\r\n\r\nexport default abstract class BaseFrameProvider implements IGetCurrentIndex {\r\n    /**\r\n     * Animation frames.\r\n     */\r\n    private frames?: Frame[];\r\n\r\n    /**\r\n     * The current frame for an animated enemy.\r\n     */\r\n    protected frameIndex: number;\r\n\r\n    /**\r\n     * Added to the current frame index.\r\n     */\r\n    protected add = 1;\r\n\r\n    /**\r\n     * Maximum index for the provided frames.\r\n     */\r\n    protected maxIndex: number;\r\n\r\n    /**\r\n     * Initializes the EnemyBase class\r\n     * @param {Frames} frames. Frames.\r\n     * @param {number} startFrameIndex. The first frame to return.\r\n     */\r\n    constructor(startFrameIndex: number) {\r\n        this.frameIndex = startFrameIndex;\r\n        this.maxIndex = -1;\r\n    }\r\n\r\n    /**\r\n     * Called from within an enemy to set the frames.\r\n     * @param {Frame[]} frames.\r\n     */\r\n    public setFrames(frames: Frame[]): void {\r\n        this.frames = copyFrames(frames);\r\n        this.maxIndex = frames.length - 1;\r\n    }\r\n\r\n    /**\r\n     * Gets the current frame.\r\n     * @returns {Frame}. A frame\r\n     */\r\n    public getCurrentFrame(): Frame {\r\n\r\n        if (this.frames === undefined) {\r\n            throw new Error(\"Set the frames.\");\r\n        }\r\n\r\n        const returnValue = getFrameByIndex(this.frames, this.frameIndex);\r\n        return copyFrame(returnValue);\r\n    }\r\n\r\n    /**\r\n     * Returns gets the next frame.\r\n     * @returns {Frame}.\r\n     */\r\n    public abstract getNextFrame(): Frame;\r\n\r\n    /**\r\n     * Returns the current frame index.\r\n     * @returns {number}. The current frame index.\r\n     */\r\n    public getCurrentIndex(): number {\r\n        return this.frameIndex;\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport Guard from \"../Guard\";\r\nimport { setPause } from \"../State/Game/GameActions\";\r\nimport { keyDown, keyUp } from \"../State/Keyboard/KeyboardActions\";\r\nimport { appState, dispatch } from \"../State/Store\";\r\n\r\n/**\r\n * Module:          KeyboardEVents\r\n * Responsibility:  handle keyboard events.\r\n */\r\n\r\n/**\r\n * Valid game keys.\r\n */\r\nexport type GameKeys =\r\n    \"ArrowUp\" |\r\n    \"ArrowDown\" |\r\n    \"ArrowLeft\" |\r\n    \"ArrowRight\" |\r\n    \"Backspace\" |\r\n    \"F1\" |\r\n    \"F2\" |\r\n    \"Space\";\r\n\r\n/**\r\n * Array of valid game keys.\r\n */\r\nexport const allGameKeys: GameKeys[] = [\r\n    \"ArrowDown\",\r\n    \"ArrowLeft\",\r\n    \"ArrowRight\",\r\n    \"ArrowUp\",\r\n    \"Backspace\",\r\n    \"F1\",\r\n    \"F2\",\r\n    \"Space\",\r\n];\r\n\r\n/**\r\n * onKeyDown. Fired when a game control key is pushed down..\r\n * @param {KeyboardEvent} event. A keyboard event.\r\n */\r\nfunction onKeyDown(event: KeyboardEvent): void {\r\n\r\n    const {\r\n        playerState,\r\n        gameState\r\n    } = appState();\r\n\r\n    if (Guard.isValidGameKey(event.code)) {\r\n        // Only dispatch if the key is a game control key.\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n\r\n        // If the space bar is hit and the player is alive the player pauses the game\r\n        // otherwise, the space bar is used to pause formation.\r\n        if (event.code === \"Space\" && playerState.alive) {\r\n            if (gameState.pause) {\r\n                dispatch(setPause(false));\r\n            } else {\r\n                dispatch(setPause(true));\r\n            }\r\n        } else {\r\n            dispatch(keyDown(event.code));\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * onKeyUp. Fired when a game control key is let go.\r\n * @param {KeyboardEvent} event. A keyboard event.\r\n */\r\nfunction onKeyUp(event: KeyboardEvent): void {\r\n    if (Guard.isValidGameKey(event.code)) {\r\n        // Only dispatch if the key is a game control key.\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n\r\n        dispatch(keyUp(event.code));\r\n    }\r\n}\r\n\r\n/**\r\n * Adds event listeners for keyup and keydown.\r\n */\r\nexport function registerListeners(): void {\r\n    window.addEventListener(\"keyup\", onKeyUp);\r\n    window.addEventListener(\"keydown\", onKeyDown);\r\n}\r\n\r\n/**\r\n * Removes the event listeners\r\n */\r\nexport function unregisterListeners(): void {\r\n    window.removeEventListener(\"keyup\", onKeyUp);\r\n    window.removeEventListener(\"keydown\", onKeyDown);\r\n}\r\n","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseEnemy from \"../Base/BaseEnemy\";\r\nimport CGAColors from \"../Constants/CGAColors\";\r\nimport GameLoop from \"../GameLoop\";\r\nimport getPhaserLocations from \"../Player/GetPhaserLocations\";\r\nimport { playerIsHit } from \"../Player/PlayerHelper\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport renderFrame from \"../Render/RenderFrame\";\r\nimport { clearPhaserLocations, removeEnemy, setPhaserLocations, setTotalEnemies } from \"../State/EnemyLevel/EnemyLevelActions\";\r\nimport { EnemyState } from \"../State/EnemyLevel/EnemyState\";\r\nimport { increaseScore, removePhaser, setPause } from \"../State/Game/GameActions\";\r\nimport { ParticleState } from \"../State/Player/ParticleState\";\r\nimport { setPlayerBulletState } from \"../State/Player/PlayerActions\";\r\nimport { appState, dispatch } from \"../State/Store\";\r\nimport { dispatchExplosion } from \"../StateHandlers/DispatchExplosion\";\r\nimport { handlePlayerDeath } from \"../StateHandlers/HandlePlayerDeath\";\r\nimport { Frame } from \"../Types\";\r\nimport { getRandomArrayElement } from \"../Utility/Array\";\r\nimport { overlaps } from \"../Utility/Geometry\";\r\n\r\n/**\r\n * Module:          EnemyLevelRunner\r\n * Responsibility:  Handles all state reactions and action for levels that contain enemies.\r\n */\r\n\r\n/**\r\n * Array of current game objects on screen.\r\n */\r\n\r\nconst localState: { enemies: BaseEnemy[] } = {\r\n    enemies: [],\r\n};\r\n\r\nconst phaserFrame: Frame = [\r\n    [CGAColors.yellow, CGAColors.yellow]\r\n];\r\n\r\nconst {\r\n    pixelSize\r\n} = dimensionProvider();\r\n\r\nexport namespace EnemyLevelRunner {\r\n    /**\r\n     * Runner function that can be registered in the GameLoop.\r\n     * @param {number} tick. The current tick.\r\n     */\r\n    export function run(tick: number): void {\r\n        updateState(tick);\r\n        GameLoop.registerDraw(draw);\r\n    }\r\n\r\n    export function setEnemies(newEnemies: BaseEnemy[]): void {\r\n        localState.enemies = newEnemies;\r\n        dispatch(setTotalEnemies(newEnemies.length));\r\n    }\r\n\r\n    export function addEnemy(newEnemy: BaseEnemy): void {\r\n        localState.enemies.push(newEnemy);\r\n    }\r\n}\r\n\r\nexport default EnemyLevelRunner;\r\n\r\n/**\r\n * Handles all level state changes.\r\n * @param {number} tick. Current tick.\r\n */\r\nfunction updateState(tick: number) {\r\n    handleSelfDestruct(tick);\r\n    handlePhaser(tick);\r\n    handleEnemies(tick);\r\n    handleHitDetection(tick);\r\n}\r\n\r\n/**\r\n * Draws all objects part of the level but not the player.\r\n * @param {number} tick. Tick.\r\n */\r\nfunction draw(): void {\r\n    const { enemies, bullets, phaserLocations } = appState().enemyLevelState;\r\n\r\n    // Draw all the game objects\r\n    for (const enemyState of enemies) {\r\n        if (enemyState.currentFrame !== undefined) {\r\n            renderFrame(enemyState.offsetLeft, enemyState.offsetTop, enemyState.currentFrame);\r\n        }\r\n    }\r\n\r\n    for (const bullet of bullets) {\r\n        renderFrame(bullet.left, bullet.top, bullet.coloredFrame);\r\n    }\r\n\r\n    phaserLocations.forEach((pf) => renderFrame(pf.left, pf.top, phaserFrame));\r\n}\r\n\r\n/**\r\n * Handles all hit detection.\r\n */\r\nfunction handleHitDetection(tick: number) {\r\n\r\n    // Check if the player was hit.\r\n    enemyHitPlayerDetection(tick);\r\n\r\n    // Check if the player hit anything\r\n    playerHitEnemyDetection(tick);\r\n\r\n    // Check if the player was hit by shrapnell.\r\n    playerHitByParticle(tick, appState().enemyLevelState.shrapnells);\r\n\r\n    // Check if the player was hit by a bullet.\r\n    playerHitByParticle(tick, appState().enemyLevelState.bullets);\r\n}\r\n\r\n/**\r\n * Check if the player hit an enemy.\r\n * @param {number} tick. Current tick.\r\n */\r\nfunction playerHitEnemyDetection(tick: number) {\r\n    const { playerState, enemyLevelState } = appState();\r\n    if (playerState.bulletState !== undefined && playerState.bulletState.hitbox !== undefined) {\r\n\r\n        const playerBulletHitbox = playerState.bulletState.hitbox;\r\n        const hitEnemy = enemyLevelState.enemies.find((e) => {\r\n            if (overlaps(playerBulletHitbox, e.hitbox)) {\r\n                return true;\r\n            }\r\n        });\r\n\r\n        if (hitEnemy !== undefined) {\r\n            handleEnemyHitByplayer(tick, hitEnemy);\r\n\r\n            dispatch(setPlayerBulletState(undefined));\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Handles the actions that can occur of the player hits a enemy.\r\n * @param {number} tick. Current tick\r\n * @param {EnemyState} hitEnemy. Enemy hit by the player.\r\n */\r\nfunction handleEnemyHitByplayer(tick: number, hitEnemy: EnemyState): void {\r\n    if (hitEnemy.hitpoints === 1) {\r\n        handleEnemyDestruction(tick, hitEnemy);\r\n    } else {\r\n        const enemy = localState.enemies.find((e) => e.getId() === hitEnemy.enemyId);\r\n        if (enemy) {\r\n            enemy.recudeHitpoints();\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Check if an enemy physically hit the player.\r\n * @param {number} tick. Current tick.\r\n */\r\nfunction enemyHitPlayerDetection(tick: number) {\r\n    const { enemyLevelState, playerState } = appState();\r\n    if (playerState.alive) {\r\n        const hit = enemyLevelState.enemies.some((e) => playerIsHit(playerState.hitboxes, e.hitbox));\r\n\r\n        if (hit) {\r\n            handlePlayerDeath(tick);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Check if the player was hit by a particle. This can be an enemy bullet or a piece of shrapnell.\r\n * @param {number} tick. Current tuck\r\n * @param {ParticleState[]} particles. Particles.\r\n */\r\nfunction playerHitByParticle(tick: number, particles: ParticleState[]): void {\r\n\r\n    const { playerState } = appState();\r\n    if (playerState.alive) {\r\n        const hit = particles.some((e) => playerIsHit(playerState.hitboxes, e.hitbox));\r\n\r\n        if (hit) {\r\n            handlePlayerDeath(tick);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Handles enemy state updates.\r\n * @param {number} tick. Current tick\r\n */\r\nfunction handleEnemies(tick: number): void {\r\n    localState.enemies.forEach((e) => {\r\n        e.updateState(tick);\r\n    });\r\n}\r\n\r\n/**\r\n * Handle self destruct.\r\n */\r\nfunction handleSelfDestruct(tick: number): void {\r\n    const { playerState, enemyLevelState } = appState();\r\n\r\n    if (playerState.alive && appState().keyboardState.selfDestruct) {\r\n        enemyLevelState.enemies.forEach((es) => dispatchExplosion(es.offsetLeft, es.offsetTop, es.coloredExplosion, tick));\r\n        dispatchExplosion(playerState.left, playerState.top, playerState.coloredExplosion, tick);\r\n        handlePlayerDeath(tick);\r\n        localState.enemies = [];\r\n    }\r\n}\r\n\r\n/**\r\n * handles the destruction of an enemy.\r\n * @param {BaseEnemy} enemy.\r\n */\r\nfunction handleEnemyDestruction(tick: number, enemy: EnemyState): void {\r\n    const { enemyLevelState } = appState();\r\n\r\n    localState.enemies = localState.enemies.filter((e) => {\r\n        if (e.getId() !== enemy.enemyId) {\r\n            e.increaseSpeed(enemyLevelState.totalNumberOfEnemies / (localState.enemies.length - 1));\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    });\r\n\r\n    dispatchExplosion(enemy.offsetLeft, enemy.offsetTop, enemy.coloredExplosion, tick);\r\n    dispatch(removeEnemy(enemy.enemyId));\r\n    dispatch(increaseScore(enemy.points));\r\n}\r\n\r\n/**\r\n * Handles the firing of a phaser charge.\r\n */\r\nfunction handlePhaser(tick: number): void {\r\n    const { enemyLevelState, playerState, gameState, keyboardState } = appState();\r\n\r\n    if (playerState.alive &&\r\n        playerState.nozzleLocation &&\r\n        keyboardState.phraser &&\r\n        enemyLevelState.enemies.length > 0 &&\r\n        gameState.phasers > 0 &&\r\n        enemyLevelState.phaserLocations.length === 0) {\r\n\r\n        const randomEnemy = getRandomArrayElement(enemyLevelState.enemies);\r\n        const playerNozzleLocation = playerState.nozzleLocation;\r\n        const randomEnemyCenter = randomEnemy.centerLocation;\r\n        if (randomEnemyCenter !== undefined) {\r\n            // Remove one phaser.\r\n            dispatch(removePhaser());\r\n            const phaserLocations = getPhaserLocations(playerNozzleLocation.left, playerNozzleLocation.top, randomEnemyCenter.left, randomEnemyCenter.top);\r\n            dispatch(setPhaserLocations(phaserLocations));\r\n\r\n            // Pause the game for a very brief period. This is what the original game did\r\n            // when you fired a phasor shot.\r\n            dispatch(setPause(true));\r\n            window.setTimeout(() => {\r\n                // Unpause the game to let rendering continue.\r\n                dispatch(setPause(false));\r\n\r\n                // Deal the with the enemy that got hit.\r\n\r\n                handleEnemyHitByplayer(tick, randomEnemy);\r\n                dispatch(clearPhaserLocations());\r\n            }, 100);\r\n        }\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          QueueExplosionRender\r\n * Responsibility:  Helper function to add a full explosion to the state.\r\n */\r\n\r\nimport Explosion from \"../Models/Explosion\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport { addExplosionCenter } from \"../State/EnemyLevel/EnemyLevelActions\";\r\nimport { ExplosionCenterState } from \"../State/EnemyLevel/ExplosionCenterState\";\r\nimport { StateProviders } from \"../State/StateProviders\";\r\nimport { dispatch } from \"../State/Store\";\r\nimport { getFrameHitbox } from \"../Utility/Frame\";\r\n\r\nconst {\r\n    pixelSize\r\n} = dimensionProvider();\r\n\r\n/**\r\n * Handles the dispatches to add an explosion with shrapnell to the state.\r\n * @param {number} left. Left coordinate.\r\n * @param {number} top. Top coordinate.\r\n * @param {Explosion} explosion. An explosion asset.\r\n * @param {Particle[]} targetParticleArray. The array where the particles will be pushed into. Helps keep track of particles belonging to the player or an enemy.\r\n */\r\nexport function dispatchExplosion(left: number, top: number, coloredExplosion: Explosion, tick: number): void {\r\n\r\n    const newShrapnell = StateProviders.explosionShrapnellProvider(left, top, coloredExplosion);\r\n    const explosionHitbox = getFrameHitbox(left, top, coloredExplosion.explosionCenterFrame, pixelSize);\r\n\r\n    const newExplosion: ExplosionCenterState = {\r\n        left,\r\n        top,\r\n        startTick: tick,\r\n        hitbox: explosionHitbox,\r\n        coloredFrame: coloredExplosion.explosionCenterFrame,\r\n        explosionCenterDelay: coloredExplosion.explosionCenterDelay,\r\n    };\r\n\r\n    dispatch(addExplosionCenter(newExplosion, newShrapnell));\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          handlePlayerDeath\r\n * Responsibility:  Performs the required dispatches when the player dies.\r\n */\r\n\r\nimport { removeLife } from \"../State/Game/GameActions\";\r\nimport { setPlayerBulletState, setPlayerIsAlive } from \"../State/Player/PlayerActions\";\r\nimport { appState, dispatch } from \"../State/Store\";\r\nimport { dispatchExplosion } from \"./DispatchExplosion\";\r\n\r\n/**\r\n * Handles a the player's death.\r\n * @param {number} tick\r\n */\r\nexport function handlePlayerDeath(tick: number): void {\r\n\r\n    const { playerState: { left, top, coloredExplosion }, debuggingState, enemyLevelState: {enemies, totalNumberOfEnemies} } = appState();\r\n\r\n    // Don't let the player die once they've killed all enemies.\r\n    if (debuggingState.playerIsImmortal || enemies.length === 0 && totalNumberOfEnemies > 0) {\r\n        return;\r\n    }\r\n\r\n    dispatchExplosion(left, top, coloredExplosion, tick);\r\n\r\n    dispatch(removeLife());\r\n    dispatch(setPlayerIsAlive(false));\r\n    dispatch(setPlayerBulletState(undefined));\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport GameLoop from \"../GameLoop\";\r\nimport { drawLevelBanner } from \"../GameScreen/LevelBanner\";\r\nimport { drawBackground } from \"../GameScreen/StaticRenders\";\r\nimport ILevel from \"../Interfaces/ILevel\";\r\nimport { enemyLevelContentFactory } from \"../Providers/EnemyLevelContentProvider\";\r\nimport EnemyLevelRunner from \"../Runners/EnemyLevelRunner\";\r\nimport { resetLevelState } from \"../State/EnemyLevel/EnemyLevelActions\";\r\nimport { setPlayerMovementLimit } from \"../State/Player/PlayerActions\";\r\nimport { appState, dispatch } from \"../State/Store\";\r\nimport handleLevelWon from \"../StateHandlers/HandleLevelWon\";\r\nimport { Enemies } from \"../Types\";\r\n\r\nexport default class EnemyLevel implements ILevel {\r\n\r\n    /**\r\n     * Array of subscriptions registered in the GameLoop. Disposed when the level is disposed.\r\n     */\r\n    private subscriptions: Array<() => void> = [];\r\n\r\n    /**\r\n     * Enemies of the level.\r\n     */\r\n    private enemies: Enemies;\r\n\r\n    /**\r\n     * Constructs the base level\r\n     * @param {TickFunction} stateManager. A function that will handle the state for the level.\r\n     * @param {() => boolean} monitorLevelWon. A function that checks fort he win condition of a level.\r\n     */\r\n    constructor(enemies: Enemies) {\r\n        this.enemies = enemies;\r\n    }\r\n\r\n    /**\r\n     * Register subscriptions.\r\n     * @param {function} f.\r\n     */\r\n    protected registerSubscription(f: () => void) {\r\n        this.subscriptions.push(f);\r\n    }\r\n\r\n    /**\r\n     * Begin this level.\r\n     * @param {() => void} levelReady. Optional callback that is called when the level is ready to begin.\r\n     */\r\n    public begin(levelReady?: () => void): void {\r\n\r\n        const { enemies, bulletRunner } = enemyLevelContentFactory(this.enemies);\r\n\r\n        const {\r\n            gameState\r\n        } = appState();\r\n\r\n        dispatch(setPlayerMovementLimit(\"immobile\"));\r\n\r\n        // Register the background draw function so it runs in the game loop.\r\n        this.registerSubscription(GameLoop.registerBackgroundDrawing(drawBackground));\r\n\r\n        // Draw the level banner to show which round we're at.\r\n        let level = 0;\r\n        if (gameState.level !== undefined) {\r\n            level = gameState.level;\r\n        }\r\n\r\n        // Draw the level banner, then start the level.\r\n        drawLevelBanner(level, () => {\r\n            // Register the stateManager so it can act on state changes in the level.\r\n            this.registerSubscription(GameLoop.registerUpdateState(EnemyLevelRunner.run));\r\n\r\n            if (bulletRunner !== undefined) {\r\n                this.registerSubscription(GameLoop.registerUpdateState((tick) => bulletRunner.updateState(tick)));\r\n            }\r\n\r\n            // Add the enemies to the enemy level runner. The registered stateManager will take it from here.\r\n            EnemyLevelRunner.setEnemies(enemies);\r\n\r\n            // Add a function to the GameLoop that will check if a level has been won.\r\n            this.registerSubscription(GameLoop.registerUpdateState(() => this.monitorLevelWonRun()));\r\n\r\n            dispatch(setPlayerMovementLimit(\"none\"));\r\n\r\n            if (levelReady !== undefined) {\r\n                levelReady();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Disposes subscriptions\r\n     */\r\n    public dispose(): void {\r\n        dispatch(resetLevelState());\r\n        // The subscription array contains functions that remove themselves\r\n        // from the GameLoop. Call all of them to remove them from the GameLoop.\r\n        this.subscriptions.forEach((s) => s());\r\n    }\r\n\r\n    /**\r\n     * This method uses the passed in monotorLeveLWon function to check if we can procede to the next level.\r\n     */\r\n    protected monitorLevelWonRun(): void {\r\n\r\n        // Use the provided function to check if the level has been completed.\r\n        if (this.levelClear()) {\r\n            handleLevelWon();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Functions that checks if the level is completely clear.\r\n     * @returns {boolean}. True if the enemies and shrapnell is gone.\r\n     */\r\n    private levelClear(): boolean {\r\n        const { enemyLevelState: { enemies, shrapnells } } = appState();\r\n        if (enemies.length === 0 && shrapnells.length === 0) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport CGAColors from \"../Constants/CGAColors\";\r\nimport GameLoop from \"../GameLoop\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport ctxProvider from \"../Providers/Render/CtxProvider\";\r\nimport renderFrame from \"../Render/RenderFrame\";\r\nimport getCharacters from \"../SharedFrames/Characters\";\r\nimport getNumbers from \"../SharedFrames/Numbers\";\r\nimport { Frame } from \"../Types\";\r\nimport { getFrameByIndex, getFrameDimensions } from \"../Utility/Frame\";\r\nimport getCharacter from \"../Utility/getCharacter\";\r\n\r\n/**\r\n * Module:          LevelBanner\r\n * Responsibility:  Shows the ROUND XX message before the level begins.\r\n */\r\n\r\nconst {\r\n    pixelSize,\r\n    gameField\r\n} = dimensionProvider();\r\n\r\nconst ctx = ctxProvider();\r\n\r\nconst greenCharacters = getCharacters(CGAColors.lightGreen);\r\nconst greenNumbers = getNumbers(CGAColors.lightGreen);\r\n\r\nconst roundCharacters = [\r\n    getCharacter(greenCharacters, \"R\"),\r\n    getCharacter(greenCharacters, \"O\"),\r\n    getCharacter(greenCharacters, \"U\"),\r\n    getCharacter(greenCharacters, \"N\"),\r\n    getCharacter(greenCharacters, \"D\"),\r\n];\r\n\r\nconst {\r\n    width\r\n} = getFrameDimensions(roundCharacters[0]);\r\n\r\nconst top = gameField.bottom * 0.33;\r\nconst left = pixelSize * 26;\r\nconst barwidth = pixelSize * 30;\r\nconst roundWidth = 76 * pixelSize;\r\nconst charSpacing = pixelSize * 2;\r\n\r\nexport function drawLevelBanner(level: number | undefined, start: () => void): void {\r\n\r\n    let levelNumber = 0;\r\n    if (level !== undefined) {\r\n        levelNumber = level;\r\n    }\r\n\r\n    const sub = GameLoop.registerBackgroundDrawing(() => draw(levelNumber));\r\n\r\n    // Draw the level banner for 1 second. The use the callback to signal the called something else\r\n    // can now be done.\r\n    window.setTimeout(() => {\r\n        sub();\r\n        start();\r\n    }, 1000);\r\n}\r\n\r\n/**\r\n * Draws the level banner for the passed level.\r\n * @param {number} level. Level the level banner should show.\r\n */\r\nfunction draw(level: number): void {\r\n    let barcolor: string;\r\n    let bartop = top;\r\n    for (let i = 0; i < 3; i++) {\r\n        if (i % 2 === 0) {\r\n            barcolor = CGAColors.red;\r\n        } else {\r\n            barcolor = CGAColors.brown;\r\n        }\r\n\r\n        ctx.fillStyle = barcolor;\r\n        ctx.fillRect(left, bartop, barwidth, pixelSize);\r\n        ctx.fillRect(left + roundWidth, bartop, barwidth, pixelSize);\r\n\r\n        bartop += pixelSize * 2;\r\n    }\r\n\r\n    let levelNumberStartPos: number = 0;\r\n    for (let i = 0; i < 5; i++) {\r\n        const spacing = i === 0 ? 0 : charSpacing * i;\r\n        const charLeft = left + barwidth + charSpacing * 2 + spacing + width * i;\r\n\r\n        levelNumberStartPos = charLeft;\r\n\r\n        renderFrame(charLeft, top, roundCharacters[i]);\r\n    }\r\n\r\n    levelNumberStartPos += width + charSpacing;\r\n\r\n    let leftNumber: string | undefined;\r\n    let rightNumber: string | undefined;\r\n\r\n    let leftNumberFrame: Frame | undefined;\r\n    let rightNumberFrame: Frame;\r\n\r\n    const stringLevel = level.toString();\r\n\r\n    const rightNumberPosition = levelNumberStartPos + width + charSpacing;\r\n\r\n    if (level >= 10) {\r\n        leftNumber = stringLevel[0];\r\n        rightNumber = stringLevel[1];\r\n\r\n        leftNumberFrame = getFrameByIndex(greenNumbers, parseInt(leftNumber, 10));\r\n        rightNumberFrame = getFrameByIndex(greenNumbers, parseInt(rightNumber, 10));\r\n\r\n    } else {\r\n        rightNumber = stringLevel;\r\n        rightNumberFrame = getFrameByIndex(greenNumbers, parseInt(rightNumber, 10));\r\n    }\r\n\r\n    // Render the left number if it's available.\r\n    if (leftNumber && leftNumberFrame) {\r\n        renderFrame(levelNumberStartPos, top, leftNumberFrame);\r\n    }\r\n\r\n    // Always render the right number.\r\n    renderFrame(rightNumberPosition, top, rightNumberFrame);\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          2pxBullet\r\n * Responsibility:  Define a bullet 2 pixels wide. Variant color allows it to be any color.\r\n */\r\n\r\nimport { Frame } from \"../Types\";\r\nimport Mutators from \"../Utility/FrameMutators\";\r\n\r\nexport default function getTwoPixelBullet(color?: string): Frame {\r\n    const twoPixelBullet: Frame = [\r\n        [\"V\", \"V\"],\r\n    ];\r\n\r\n    if (color !== undefined) {\r\n        Mutators.Frame.setColor(twoPixelBullet, color);\r\n    }\r\n\r\n    return twoPixelBullet;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { GameLocation } from \"../Models/GameLocation\";\r\nimport { getPlayerFrame } from \"../Player/PlayerFrames\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport { setPlayerLocationData } from \"../State/Player/PlayerActions\";\r\nimport { appState, dispatch } from \"../State/Store\";\r\nimport { getFrameDimensions, getFrameHitbox } from \"../Utility/Frame\";\r\nimport { getAngle, getNextX, getNextY } from \"../Utility/Geometry\";\r\n\r\n/**\r\n * Module:          PlayerMovementHandler\r\n * Responsibility:  Handles changes to the player due to movement.\r\n */\r\n\r\nconst {\r\n    pixelSize,\r\n    gameField\r\n} = dimensionProvider();\r\n\r\n// Used in player hitbox calculation, never changes so it can be a constant.\r\nconst doublePixel = pixelSize * 2;\r\n\r\n// The player's hitbox is a bit smaller than the actual ship. This feels better when playing the game.\r\nconst playerHitboxAdjustment = pixelSize * 0.3;\r\n\r\nconst {\r\n    width: playerWidth,\r\n    height: playerHeight\r\n} = getFrameDimensions(getPlayerFrame());\r\n\r\n/**\r\n * Handles player movement.\r\n * @param {number} speed. Speed the ship can travel. Can vary depending on the level or if the player ship is forming.\r\n */\r\nexport function playerMovementHandler(speed: number): void {\r\n    const { keyboardState, playerState } = appState();\r\n\r\n    const localKeyboardState = { ...keyboardState };\r\n\r\n    // By default the speed for x and y is the speed passed to the movement\r\n    const speedX = speed;\r\n    let speedY = speed;\r\n\r\n    // Certain levels limit the movement of the player.\r\n    // We'll use a fresh keyboardState object and make some adjustments.\r\n    switch (playerState.moveLimit) {\r\n        case \"immobile\":\r\n            return;\r\n        case \"sideways\":\r\n            // Used when the player forms. Override the keyboard state.\r\n            localKeyboardState.down = localKeyboardState.up = false;\r\n            break;\r\n        case \"forceup\":\r\n            // Used when the player travels through a warp gate.\r\n            localKeyboardState.up = true;\r\n            localKeyboardState.down = false;\r\n            speedY = 4;\r\n            break;\r\n        case \"none\":\r\n        // Make not changes and allow 360 degrees of freedown\r\n        default:\r\n        // No default;\r\n    }\r\n\r\n    const angle = getAngle(localKeyboardState);\r\n    const { left: nextX, top: nextY } = getNextLocationForPlayer(angle, speedX, speedY, playerState.left, playerState.top);\r\n\r\n    const hitBox = getFrameHitbox(nextX, nextY, playerState.coloredFrame, 0);\r\n\r\n    const middleHitbox = {\r\n        ...hitBox,\r\n        left: hitBox.left + doublePixel + playerHitboxAdjustment,\r\n        right: hitBox.right - doublePixel - playerHitboxAdjustment,\r\n        top: hitBox.top + playerHitboxAdjustment,\r\n        bottom: hitBox.bottom - playerHitboxAdjustment,\r\n    };\r\n\r\n    const bottomHitbox = {\r\n        ...hitBox,\r\n        top: hitBox.top + pixelSize + playerHitboxAdjustment,\r\n        left: hitBox.left + playerHitboxAdjustment,\r\n        right: hitBox.right - playerHitboxAdjustment,\r\n        bottom: hitBox.bottom - playerHitboxAdjustment,\r\n    };\r\n\r\n    const hitBoxes = { middle: middleHitbox, bottom: bottomHitbox };\r\n\r\n    const nozzleLocation = {\r\n        left: nextX + pixelSize * 2,\r\n        top: nextY,\r\n    };\r\n\r\n    dispatch(setPlayerLocationData(nextX, nextY, hitBoxes, nozzleLocation));\r\n}\r\n\r\n/**\r\n * Returns the next locatoin for the player taking into account, no movement and moving outside the game field.\r\n * @export\r\n * @param {number} angle\r\n * @param {number} speedX\r\n * @param {number} currentX\r\n * @param {number} currentY\r\n * @returns {GameLocation}\r\n */\r\nfunction getNextLocationForPlayer(angle: number, speedX: number, speedY: number, currentX: number, currentY: number): GameLocation {\r\n    const currentLocation = { left: currentX, top: currentY };\r\n    if (angle === -1) {\r\n        return currentLocation;\r\n    }\r\n\r\n    const nextX = getNextX(angle, speedX, currentX);\r\n    const nextY = getNextY(angle, speedY, currentY);\r\n\r\n    if (nextX < gameField.left || nextX + playerWidth > gameField.right) {\r\n        return currentLocation;\r\n    }\r\n\r\n    if (nextY + playerHeight > gameField.bottom || nextY < gameField.top) {\r\n        return currentLocation;\r\n    }\r\n\r\n    return {\r\n        left: nextX,\r\n        top: nextY,\r\n    };\r\n}","export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport GameLoop from \"./GameLoop\";\r\nimport { drawGameFieldBorder } from \"./GameScreen/StaticRenders\";\r\nimport { drawStatusBar } from \"./GameScreen/StatusBar\";\r\nimport subscribeToStoreChanges from \"./Levels/SubscribeToStore\";\r\nimport playerSpawnManager from \"./Player/PlayerSpawnManager\";\r\nimport dimensionProvider from \"./Providers/DimensionProvider\";\r\nimport ctxProvider from \"./Providers/Render/CtxProvider\";\r\nimport genericRunner from \"./Runners/GenericRunner\";\r\nimport playerRunner from \"./Runners/PlayerRunner\";\r\nimport { setDebuggingState } from \"./State/Debugging/DebuggingActions\";\r\nimport DebuggingState from \"./State/Debugging/DebuggingState\";\r\nimport { addPhaser, increaseScore, nextLevel, setLevel, setLives, setPhasers, setWarpGamteComplexity } from \"./State/Game/GameActions\";\r\nimport { WarpLevelComplexity } from \"./State/Game/WarpLevelTypes\";\r\nimport { dispatch } from \"./State/Store\";\r\nimport { registerListeners } from \"./Utility/KeyboardEvents\";\r\nimport { getURLQueryKVPs } from \"./Utility/Lib\";\r\n\r\n/**\r\n * Module:          Index\r\n * Responsibility:  Entry point for the game\r\n */\r\n\r\nwindow.onload = () => {\r\n\r\n    const canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\r\n    if (canvas) {\r\n        // Initialize the dimentions of the canvas.\r\n        canvas.width = dimensionProvider().fullGameWidth;\r\n        canvas.height = dimensionProvider().fullGameHeight;\r\n\r\n        const queryKeyValuePairs = getURLQueryKVPs(window.location.search);\r\n\r\n        const showPlayGround = queryKeyValuePairs.some((kvp) => kvp.key === \"playground\");\r\n        const showCanvas = queryKeyValuePairs.some((kvp) => kvp.key === \"canvas\");\r\n        let level = queryKeyValuePairs.find((kvp) => kvp.key === \"level\")?.value;\r\n        const drawGrid = queryKeyValuePairs.find((kvp) => kvp.key === \"grid\");\r\n        const showhitboxes = queryKeyValuePairs.find((kvp) => kvp.key === \"hitboxes\");\r\n        const immortal = queryKeyValuePairs.find((kvp) => kvp.key === \"god\");\r\n\r\n        if (showPlayGround) {\r\n\r\n            const debuggingState: DebuggingState = {};\r\n\r\n            if (!level) {\r\n                level = \"0\";\r\n            }\r\n\r\n            startEssential();\r\n\r\n            dispatch(setLives(900));\r\n            dispatch(setPhasers(900));\r\n\r\n            if (level) {\r\n                dispatch(setLevel(parseInt(level, 10)));\r\n            }\r\n\r\n            GameLoop.Start();\r\n\r\n            if (immortal) {\r\n                debuggingState.playerIsImmortal = true;\r\n            }\r\n\r\n            if (drawGrid) {\r\n                let gridDetail: number | undefined;\r\n                if (drawGrid.value) {\r\n                    gridDetail = parseInt(drawGrid.value, 10);\r\n                }\r\n\r\n                debuggingState.drawGrid = true;\r\n                debuggingState.gridDetail = gridDetail;\r\n            }\r\n\r\n            if (showhitboxes) {\r\n                debuggingState.drawHitboxes = true;\r\n            }\r\n\r\n            dispatch(setDebuggingState(debuggingState));\r\n\r\n            (window as any).r42 = {\r\n                setLevel: (n: number) => dispatch(setLevel(n)),\r\n                nextLevel: () => dispatch(nextLevel()),\r\n                setPhasers: (n: number) => dispatch(setPhasers(n)),\r\n                setLives: (n: number) => dispatch(setLives(n)),\r\n                increaseScore: (n: number) => dispatch(increaseScore(n)),\r\n                addPhaser: () => dispatch(addPhaser()),\r\n                setWarpLevelComplexity: (n: WarpLevelComplexity) => dispatch(setWarpGamteComplexity(n)),\r\n                setDebuggingState: (v: DebuggingState) => dispatch(setDebuggingState(v)),\r\n            };\r\n\r\n        } else if (showCanvas) {\r\n            // canvas testing\r\n            const ctx = ctxProvider();\r\n\r\n            // Green.\r\n            ctx.fillStyle = \"#00AA00\";\r\n\r\n            (window as any).r42 = ctx;\r\n        } else {\r\n            startGame();\r\n        }\r\n    }\r\n};\r\n\r\nfunction startGame(): void {\r\n\r\n    startEssential();\r\n    dispatch(setPhasers(1));\r\n    dispatch(setLives(2));\r\n\r\n    dispatch(setLevel(1));\r\n    GameLoop.Start();\r\n}\r\n\r\nfunction startEssential() {\r\n    subscribeToStoreChanges();\r\n    registerListeners();\r\n\r\n    GameLoop.registerForegroundDrawing(drawStatusBar);\r\n    GameLoop.registerForegroundDrawing(drawGameFieldBorder);\r\n    GameLoop.registerUpdateState(playerRunner);\r\n    GameLoop.registerUpdateState(playerSpawnManager);\r\n    GameLoop.registerUpdateState(genericRunner);\r\n}","import $$observable from 'symbol-observable';\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error('It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error('You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected the listener to be a function.');\n    }\n\n    if (isDispatching) {\n      throw new Error('You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api-reference/store#subscribelistener for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error('You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api-reference/store#subscribelistener for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionDescription = actionType && \"action \\\"\" + String(actionType) + \"\\\"\" || 'an action';\n  return \"Given \" + actionDescription + \", reducer \\\"\" + key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\";\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle \" + ActionTypes.INIT + \" or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n        throw new Error(errorMessage);\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(\"bindActionCreators expected an object or a function, instead received \" + (actionCreators === null ? 'null' : typeof actionCreators) + \". \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    keys.push.apply(keys, Object.getOwnPropertySymbols(object));\n  }\n\n  if (enumerableOnly) keys = keys.filter(function (sym) {\n    return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n  });\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error('Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread2({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\n\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \"production\". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { ActionTypes as __DO_NOT_USE__ActionTypes, applyMiddleware, bindActionCreators, combineReducers, compose, createStore };\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport Constants from \"./DebuggingConstants\";\r\nimport DebuggingState from \"./DebuggingState\";\r\nimport { DebuggingTypes } from \"./DebuggingTypes\";\r\n\r\n/**\r\n * Module:          debuggingReducer\r\n * Responsibility:  Handles the debugging state.\r\n */\r\n\r\n/**\r\n * debuggingReducer\r\n * @param {DebuggingState} state. The current state.\r\n * @param {ActionPayload<any>} action. The desired action with optional paylood.\r\n * @returns {DebuggingState}. New state.\r\n */\r\nexport default function debuggingReducer(state: DebuggingState = {}, action: DebuggingTypes): DebuggingState {\r\n    switch (action.type) {\r\n        case Constants.setDebuggingState:\r\n            state = { ...action.state };\r\n            break;\r\n    }\r\n\r\n    return state;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          LevelReducuer\r\n * Responsibility:  LevelReducer.\r\n */\r\n\r\nimport produce from \"immer\";\r\nimport Constants from \"./EnemyLevelConstants\";\r\nimport EnemyLevelState from \"./EnemyLevelState\";\r\nimport { EnemyLevelTypes } from \"./EnemyLevelTypes\";\r\n\r\n/**\r\n * enemyLevelReducer\r\n * @param {EnemyLevelState} state. The current state.\r\n * @param {ActionPayload<any>} action. The desired action with optional paylood.\r\n * @returns {EnemyLevelState}. New state.\r\n */\r\nexport default function enemyLevelReducer(state: EnemyLevelState = initState(), action: EnemyLevelTypes): EnemyLevelState {\r\n\r\n    const newState = produce(state, (draft) => {\r\n        switch (action.type) {\r\n            case Constants.addExplosionCenter:\r\n                draft.explosionCenters.push(action.explosionCenter);\r\n                draft.shrapnells.push(...action.shrapnell);\r\n                break;\r\n            case Constants.setShrapnellState:\r\n                draft.shrapnells = action.shrapnell;\r\n                break;\r\n            case Constants.addParticle:\r\n                draft.shrapnells.push(action.particle);\r\n                break;\r\n            case Constants.addParticles:\r\n                draft.shrapnells.push(...action.particles);\r\n                break;\r\n            case Constants.setPhaserLocations:\r\n                draft.phaserLocations = action.payload;\r\n                break;\r\n            case Constants.clearPhaserLocations:\r\n                draft.phaserLocations = [];\r\n                break;\r\n            case Constants.setFireInterval:\r\n                draft.fireInterval = action.payload;\r\n                break;\r\n            case Constants.setExplosionCenters:\r\n                draft.explosionCenters = action.explosionCenters;\r\n                break;\r\n            case Constants.addBullet:\r\n                draft.bullets.push(action.bullet);\r\n                break;\r\n            case Constants.setBulletState:\r\n                draft.bullets = action.bullets;\r\n                break;\r\n            case Constants.setTotalEnemies:\r\n                draft.totalNumberOfEnemies = action.totalEnemies;\r\n                break;\r\n            case Constants.addOrUpdateEnemy:\r\n                const index = state.enemies.findIndex((es) => es.enemyId === action.enemyState.enemyId);\r\n                if (index > -1) {\r\n                    draft.enemies[index] = action.enemyState;\r\n                } else {\r\n                    draft.enemies.push(action.enemyState);\r\n                }\r\n                break;\r\n            case Constants.removeEnemy:\r\n                draft.enemies = draft.enemies.filter((es) => es.enemyId !== action.enemyId);\r\n                break;\r\n        }\r\n    });\r\n\r\n    if (action.type === Constants.resetLevelState) {\r\n        return initState();\r\n    }\r\n\r\n    return newState;\r\n}\r\n\r\nfunction initState(): EnemyLevelState {\r\n    return {\r\n        shrapnells: [],\r\n        phaserLocations: [],\r\n        fireInterval: 0,\r\n        explosionCenters: [],\r\n        bullets: [],\r\n        totalNumberOfEnemies: 0,\r\n        enemies: [],\r\n    };\r\n}","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport produce from \"immer\";\r\nimport Constants from \"./GameConstants\";\r\nimport GameState from \"./GameState\";\r\nimport { GameStateTypes } from \"./GameTypes\";\r\nimport getWarpGateComplexity from \"./WarpGameComplexities\";\r\n\r\n/**\r\n * Module:          GameStateReducer\r\n * Responsibility:  Reducer for the game state\r\n */\r\n\r\n/**\r\n * gameStateReducer\r\n * @param {DebuggingState} state. The current state.\r\n * @param {ActionPayload<any>} action. The desired action with optional paylood.\r\n * @returns {GameState}. New state.\r\n */\r\nexport default function gameStateReducer(state: GameState = initState(), action: GameStateTypes): GameState {\r\n    return produce(state, (draft) => {\r\n        switch (action.type) {\r\n            case Constants.increaseScore:\r\n                draft.score += action.payload;\r\n                break;\r\n            case Constants.setLives:\r\n                draft.lives = action.payload;\r\n                break;\r\n            case Constants.addLife:\r\n                draft.lives += 1;\r\n                break;\r\n            case Constants.removeLife:\r\n                draft.lives -= 1;\r\n                break;\r\n            case Constants.setPhasers:\r\n                draft.phasers = action.payload;\r\n                break;\r\n            case Constants.addPhaser:\r\n                draft.phasers += 1;\r\n                break;\r\n            case Constants.removePhaser:\r\n                draft.phasers--;\r\n                break;\r\n            case Constants.addLevel:\r\n                if (draft.level) {\r\n                    draft.level++;\r\n                }\r\n                break;\r\n            case Constants.setLevel:\r\n                draft.level = action.payload;\r\n                break;\r\n            case Constants.nextLevel:\r\n                if (draft.level === 42) {\r\n                    draft.level = 1;\r\n                } else if (draft.level !== undefined) {\r\n                    draft.level++;\r\n                }\r\n\r\n                break;\r\n            case Constants.addLifeAndPhaser:\r\n                draft.lives++;\r\n                draft.phasers++;\r\n                break;\r\n            case Constants.setPause:\r\n                draft.pause = action.payload;\r\n                break;\r\n            case Constants.setWarpLevelComplexity:\r\n                draft.warpLevelSteps = getWarpGateComplexity(action.complexity);\r\n                break;\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Initialize the state\r\n * @returns {GameState}. Fresh GameState.\r\n */\r\nfunction initState(): GameState {\r\n    return {\r\n        level: undefined,\r\n        lives: 0,\r\n        score: 0,\r\n        phasers: 0,\r\n        pause: false,\r\n        warpLevelSteps: getWarpGateComplexity(0),\r\n    };\r\n}\r\n","import { WarpLevelComplexity, WarpLevelComplexitySteps, WarpLevelSteps } from \"./WarpLevelTypes\";\r\n\r\n/**\r\n * Typed constants that defined the warp gate complexities.\r\n */\r\nconst warpLevelComplexities: WarpLevelComplexitySteps = {\r\n    0: {\r\n        stepsX: [0, 2, 2, 4],\r\n        stepsY: [4, 4, 6, 8]\r\n    },\r\n    1: {\r\n        stepsX: [0, 2, 2, 4],\r\n        stepsY: [4, 4, 6, 6],\r\n    },\r\n    2: {\r\n        stepsX: [0, 2, 2, 4],\r\n        stepsY: [4, 4, 4, 6],\r\n    },\r\n    3: {\r\n        stepsX: [2, 2, 4, 4],\r\n        stepsY: [2, 4, 4, 6],\r\n    },\r\n    4: {\r\n        stepsX: [2, 2, 2, 4],\r\n        stepsY: [2, 2, 4],\r\n    },\r\n    5: {\r\n        stepsX: [2, 2, 2, 4],\r\n        stepsY: [2, 2, 4],\r\n    },\r\n    6: {\r\n        stepsX: [2, 2, 4, 4],\r\n        stepsY: [2, 4],\r\n    },\r\n    7: {\r\n        stepsX: [2, 2, 4, 4],\r\n        stepsY: [2],\r\n    },\r\n    8: {\r\n        stepsX: [2, 2, 4, 4],\r\n        stepsY: [2],\r\n    }\r\n};\r\n\r\nexport default function getWarpGateComplexity(complexity: WarpLevelComplexity): WarpLevelSteps {\r\n    return warpLevelComplexities[complexity];\r\n}","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          KeyboardReducer\r\n * Responsibility:  Handles keyup and keydown events and stores the currently held down heys.\r\n */\r\n\r\nimport produce from \"immer\";\r\nimport Constants from \"./KeyboardConstants\";\r\nimport KeyboardState from \"./KeyboardState\";\r\nimport { KeyboardTypes } from \"./KeyboardTypes\";\r\n\r\n/**\r\n * keyboardStateReducer\r\n * @param {DebuggingState} state. The current state.\r\n * @param {ActionPayload<any>} action. The desired action with optional paylood.\r\n * @returns {KeyboardState}. New state.\r\n */\r\nexport default function keyboardStateReducer(state: KeyboardState = initState(), action: KeyboardTypes): KeyboardState {\r\n\r\n    return produce(state, (draft) => {\r\n\r\n        let keyDown = false;\r\n        if (action.type === Constants.keydown) {\r\n            keyDown = true;\r\n        } else if (action.type === Constants.keyup) {\r\n            keyDown = false;\r\n        }\r\n\r\n        switch (action.payload) {\r\n            case undefined:\r\n                break;\r\n            case Constants.arrowUp:\r\n                draft.up = keyDown;\r\n                break;\r\n            case Constants.arrowDown:\r\n                draft.down = keyDown;\r\n                break;\r\n            case Constants.arrowLeft:\r\n                draft.left = keyDown;\r\n                break;\r\n            case Constants.arrowRight:\r\n                draft.right = keyDown;\r\n                break;\r\n            case Constants.backspace:\r\n                draft.selfDestruct = keyDown;\r\n                break;\r\n            case Constants.f1:\r\n                draft.fire = keyDown;\r\n                break;\r\n            case Constants.f2:\r\n                draft.phraser = keyDown;\r\n                break;\r\n            case Constants.space:\r\n                draft.space = keyDown;\r\n                break;\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Initialize KeyboardState\r\n * @returns {KeyboardState}. Initial keyboard state.\r\n */\r\nfunction initState(): KeyboardState {\r\n    return {\r\n        up: false,\r\n        down: false,\r\n        left: false,\r\n        right: false,\r\n        fire: false,\r\n        phraser: false,\r\n        selfDestruct: false,\r\n        space: false,\r\n    };\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport produce from \"immer\";\r\nimport getPlayerExplosion from \"../../Player/PlayerExplosion\";\r\nimport { getPlayerFrame } from \"../../Player/PlayerFrames\";\r\nimport getShipSpawnLocation from \"../../Providers/PlayerSpawnLocationProvider\";\r\nimport Mutators from \"../../Utility/FrameMutators\";\r\nimport Constants from \"./PlayerConstants\";\r\nimport PlayerState from \"./PlayerState\";\r\nimport { PlayerStateTypes } from \"./PlayerTypes\";\r\n\r\n/**\r\n * Module:          playerReducer\r\n * Responsibility:  Handles the player's state.\r\n */\r\n\r\n/**\r\n * playerReducer\r\n * @param {PlayerState} state. The current state.\r\n * @param {ActionPayload<any>} action. The desired action with optional paylood.\r\n * @returns {PlayerState}. New state.\r\n */\r\nexport default function playerReducer(state: PlayerState = initState(), action: PlayerStateTypes): PlayerState {\r\n    return produce(state, (draft) => {\r\n        switch (action.type) {\r\n            case Constants.setPlayerIsAlive:\r\n                draft.alive = action.playerIsAlive;\r\n                break;\r\n            case Constants.setPlayerMovementLimit:\r\n                draft.moveLimit = action.payload;\r\n                break;\r\n            case Constants.setPlayerLocationData:\r\n                draft.left = action.payload.left;\r\n                draft.top = action.payload.top;\r\n                draft.hitboxes = action.payload.hitboxes;\r\n                draft.nozzleLocation = action.payload.nozzleLocation;\r\n                break;\r\n            case Constants.setPlayerBulletState:\r\n                draft.bulletState = action.particleState;\r\n                break;\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Initialize the base player state.\r\n * @returns {PlayerState}\r\n */\r\nfunction initState(): PlayerState {\r\n    const playerExplosion = getPlayerExplosion();\r\n    Mutators.Frame.convertHexToCGA(playerExplosion.explosionCenterFrame);\r\n\r\n    playerExplosion.particleFrames.forEach((p) => Mutators.Frame.convertHexToCGA(p));\r\n\r\n    const spawnLocation = getShipSpawnLocation();\r\n\r\n    const playerFrame = getPlayerFrame();\r\n    Mutators.Frame.convertHexToCGA(playerFrame);\r\n\r\n    return {\r\n        alive: false,\r\n        moveLimit: \"none\",\r\n        left: spawnLocation.left,\r\n        top: spawnLocation.top,\r\n        hitboxes: undefined,\r\n        nozzleLocation: { left: 0, top: 0 },\r\n        coloredExplosion: playerExplosion,\r\n        coloredFrame: playerFrame,\r\n        bulletState: undefined,\r\n    };\r\n}","\r\n/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport Explosion from \"../Models/Explosion\";\r\n\r\n/**\r\n * Module:          PlayerExplosion\r\n * Responsibility:  Explosion effect only for the player\r\n */\r\n\r\nexport default function getPlayerExplosion(): Explosion {\r\n\r\n    const playerExplosion: Explosion = {\r\n        explosionCenterFrame: [\r\n            [\"0\", \"0\", \"2\", \"2\", \"0\", \"0\"],\r\n            [\"4\", \"E\", \"0\", \"0\", \"E\", \"4\"],\r\n        ],\r\n        particleFrames: [\r\n            [\r\n                [\"C\", \"C\"], // red block\r\n            ],\r\n            [\r\n                [\"E\", \"C\"], // yellow red block\r\n            ],\r\n            [\r\n                [\"C\", \"E\"], // red yellow block\r\n            ],\r\n            [\r\n                [\"F\", \"C\"], // white red block\r\n            ],\r\n            [\r\n                [\"C\", \"F\"], // red white block\r\n            ],\r\n        ],\r\n        particleFrameIndexes: [\r\n            0, 0, 0, 0, 0,\r\n            1, 1, 1, 1,\r\n            2, 2, 2, 2,\r\n            2, 3, 3, 3,\r\n            4, 4, 4, 4,\r\n            0, 0,\r\n            0, 0,\r\n        ],\r\n        angles: [\r\n            270, 270, 270, 270, 270, // five red block flying up.\r\n            210, 210, 210, 210, // four yellow red blocks.\r\n            330, 330, 330, 300, // four red yellow blocks.\r\n            195, 195, 195, 195, // four white red blocks.\r\n            345, 345, 345, 345, // four red yellow blocks.\r\n            180, 180, // two red blocks\r\n            0, 0 // two red blocks\r\n        ],\r\n        speeds: [\r\n            3, 4.5, 7, 8, 10, // Speeds for the first angles.\r\n            3, 4.5, 7, 8, // Speeds for the second row of angles.\r\n            3, 4.5, 7, 8, // Speeds for the third row of angles.\r\n            3, 4.5, 7, 8, // Speeds for the fourh row of angles.\r\n            3, 4.5, 7, 8, // Speeds for the fith fow of angles\r\n            4.5, 8, // Speeds for the fith fow of angles\r\n            4.5, 8, // Speeds for the fith fow of angles\r\n        ],\r\n        acceleration: 1.10,\r\n        explosionCenterDelay: 20,\r\n        useSpeed: false,\r\n        speed: 0, // not used.\r\n    };\r\n\r\n    return playerExplosion;\r\n}","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          HexToCGAConverter.\r\n * Responsibility:  Convert hex color to a CGA color\r\n */\r\n\r\nimport CGAColors from \"../Constants/CGAColors\";\r\n\r\nexport default function hexToCGAConverter(hex: string): string {\r\n    switch (hex) {\r\n        case \"0\":\r\n            return CGAColors.black;\r\n        case \"1\":\r\n            return CGAColors.blue;\r\n        case \"2\":\r\n            return CGAColors.green;\r\n        case \"3\":\r\n            return CGAColors.cyan;\r\n        case \"4\":\r\n            return CGAColors.red;\r\n        case \"5\":\r\n            return CGAColors.magenta;\r\n        case \"6\":\r\n            return CGAColors.brown;\r\n        case \"7\":\r\n            return CGAColors.lightGray;\r\n        case \"8\":\r\n            return CGAColors.darkGray;\r\n        case \"9\":\r\n            return CGAColors.lightBlue;\r\n        case \"A\":\r\n            return CGAColors.lightGreen;\r\n        case \"B\":\r\n            return CGAColors.lightCyan;\r\n        case \"C\":\r\n            return CGAColors.lightRed;\r\n        case \"D\":\r\n            return CGAColors.lightMagenta;\r\n        case \"E\":\r\n            return CGAColors.yellow;\r\n        case \"F\":\r\n            return CGAColors.white;\r\n        default:\r\n            return \"\";\r\n    }\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport CGAColors from \"../Constants/CGAColors\";\r\nimport { getPlayerFrame } from \"../Player/PlayerFrames\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport ctxProvider from \"../Providers/Render/CtxProvider\";\r\nimport renderFrame from \"../Render/RenderFrame\";\r\nimport getNumbers from \"../SharedFrames/Numbers\";\r\nimport { appState } from \"../State/Store\";\r\nimport { Frame } from \"../Types\";\r\nimport { getFrameByIndex, getFrameDimensions } from \"../Utility/Frame\";\r\nimport Mutators from \"../Utility/FrameMutators\";\r\nimport { padLeft } from \"../Utility/String\";\r\n\r\n/**\r\n * Module:          StatusBar\r\n * Responsibility:  Drawn at the top of the screen for score, phasers, lives and level.\r\n */\r\n\r\nconst ctx = ctxProvider();\r\n\r\nconst {\r\n    statusBarBottom,\r\n    pixelSize,\r\n    fullGameWidth\r\n} = dimensionProvider();\r\n\r\nconst numberFrames = getNumbers(CGAColors.yellow);\r\n\r\nconst lifeFrame = getPlayerFrame();\r\nMutators.Frame.setColor(lifeFrame, CGAColors.yellow);\r\n\r\n// Score constants\r\nconst scoreStartPosition = 4 * pixelSize;\r\nconst scoreSpacing = 2 * pixelSize;\r\nconst scoreBackgroundWidth = 45 * pixelSize;\r\n\r\n// Phaser constants.\r\nconst phaserStartPosition = scoreBackgroundWidth;\r\nconst phaserSpacing = pixelSize * 2;\r\nconst phaserBackgroundWidth = pixelSize * 50;\r\n\r\n// The phaser frame is only used in the status bar.\r\n// no point in moving it to anther file.\r\nconst phaserFrame: Frame = [\r\n    [\"E\", \"0\"],\r\n    [\"E\", \"0\"],\r\n    [\"E\", \"E\"],\r\n    [\"0\", \"E\"],\r\n    [\"0\", \"E\"],\r\n];\r\n\r\nMutators.Frame.convertHexToCGA(phaserFrame);\r\n\r\n// Lives constants.\r\nconst livesSpacing = 2 * pixelSize;\r\nconst lifeFrameWidth = getFrameDimensions(lifeFrame).width;\r\n\r\n// Level number constants.\r\nconst leftNumberLeft = pixelSize * 148;\r\nconst rightNumberLeft = pixelSize * 154;\r\nconst scoreBoardHeight = pixelSize * 6;\r\n\r\n/**\r\n * Main funtion that draw the entire status bar.\r\n */\r\nexport function drawStatusBar(): void {\r\n    ctx.fillStyle = CGAColors.red;\r\n    ctx.fillRect(0, 0, fullGameWidth, scoreBoardHeight);\r\n    drawScore();\r\n    drawPhasers();\r\n    drawLives();\r\n    drawLevel();\r\n}\r\n\r\n/**\r\n * Draw the level indicator.\r\n */\r\nfunction drawScore(): void {\r\n    const { gameState } = appState();\r\n    const scoreString = padLeft(gameState.score.toString(), 6, \"0\");\r\n\r\n    let cnt = 0;\r\n    for (const n of scoreString) {\r\n        const frame = getFrameByIndex(numberFrames, parseInt(n, 10));\r\n\r\n        const actualSpacing = cnt === 0 ? 0 : scoreSpacing;\r\n        let left = cnt * (getFrameDimensions(frame).width + actualSpacing);\r\n        left = scoreStartPosition + left;\r\n        renderFrame(left, 0, frame);\r\n        cnt++;\r\n    }\r\n}\r\n\r\nfunction drawPhasers(): void {\r\n    const { gameState } = appState();\r\n\r\n    const maxPhasersToBeDrawn = gameState.phasers < 11 ? gameState.phasers : 11;\r\n\r\n    for (let i = 0; i < maxPhasersToBeDrawn; i++) {\r\n        const actualSpacing = i === 0 ? 0 : phaserSpacing;\r\n        const left = phaserStartPosition + i * pixelSize + i * actualSpacing;\r\n\r\n        if (left <= phaserStartPosition + phaserBackgroundWidth) {\r\n            renderFrame(left, 0, phaserFrame);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Draws the player lives. These are drawn from right.\r\n */\r\nfunction drawLives(): void {\r\n    const { gameState } = appState();\r\n    let left = 135 * pixelSize;\r\n\r\n    const maxLivesToBeDrawn = gameState.lives <= 8 ? gameState.lives : 8;\r\n\r\n    for (let lives = 1; lives <= maxLivesToBeDrawn; lives++) {\r\n        renderFrame(left, pixelSize, lifeFrame);\r\n        left -= livesSpacing + lifeFrameWidth;\r\n    }\r\n}\r\n\r\nfunction drawLevel(): void {\r\n    const { gameState } = appState();\r\n    let paddedLevelString = \"0\";\r\n    if (gameState.level !== undefined) {\r\n        paddedLevelString = padLeft(gameState.level.toString(), 2, \"0\");\r\n    }\r\n\r\n    const rightNumber = parseInt(paddedLevelString[1], 10);\r\n    const leftNumber = parseInt(paddedLevelString[0], 10);\r\n\r\n    const rightFrame = getFrameByIndex(numberFrames, rightNumber);\r\n    const leftFrame = getFrameByIndex(numberFrames, leftNumber);\r\n\r\n    renderFrame(leftNumberLeft, 0, leftFrame);\r\n    renderFrame(rightNumberLeft, 0, rightFrame);\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          String\r\n * Responsibility:  String utility functions\r\n */\r\n\r\n/**\r\n * pads a string on its left size until it is a given length\r\n * @param {string} value. Value to pad left.\r\n * @param {number} length. Length of the desired output.\r\n * @param {string} paddWidth. Character to pad width.\r\n */\r\nexport function padLeft(value: string, length: number, padWidth: string): string {\r\n\r\n    if (value.length >= length) {\r\n        return value;\r\n    } else {\r\n\r\n        const padLength = length - value.length;\r\n        let padding = \"\";\r\n\r\n        for (let i = 0; i < padLength; i++) {\r\n            padding += padWidth;\r\n        }\r\n\r\n        return padding + value;\r\n    }\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          SubscribeToStore\r\n * Responsibility:  Creates a Redux Store subscription that monitors state changes\r\n *                  that trigger a state action.\r\n */\r\n\r\nimport ILevel from \"../Interfaces/ILevel\";\r\nimport { addLifeAndPhaser } from \"../State/Game/GameActions\";\r\nimport { appState, appStore, dispatch } from \"../State/Store\";\r\nimport { levelFactory } from \"./LevelFactory\";\r\n\r\n// Used to track changes in level\r\nlet levelNumber: number;\r\n\r\n// Current level object.\r\nlet currentLevel: ILevel;\r\n\r\n// Used to track changes in score to award ships and phasers.\r\nlet currentScore = 0;\r\n\r\n/**\r\n * Lazy load a subscription to the redux store.\r\n */\r\nexport default function subscribeToStoreChanges(): void {\r\n\r\n    // We'll monitor changes in the state on which we ant to act.\r\n    appStore().subscribe(() => {\r\n        const { gameState } = appState();\r\n\r\n        // Handle level change acting on a change in level.\r\n        if (gameState.level !== undefined && levelNumber !== gameState.level) {\r\n            levelNumber = gameState.level;\r\n\r\n            if (currentLevel) {\r\n                currentLevel.dispose();\r\n            }\r\n\r\n            // Get new level\r\n            currentLevel = levelFactory(levelNumber);\r\n\r\n            if (currentLevel !== undefined) {\r\n                currentLevel.begin();\r\n            }\r\n        }\r\n\r\n        if (gameState.score - currentScore >= 7500) {\r\n            // Each 7500 points the player is given an extra life and phaser. This\r\n            // can be done in a single dispatch.\r\n            currentScore = gameState.score;\r\n            dispatch(addLifeAndPhaser());\r\n        }\r\n    });\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          LevelFactory\r\n * Responsibility:  Provide Level objects\r\n */\r\n\r\nimport ILevel from \"../Interfaces/ILevel\";\r\nimport { setWarpGamteComplexity } from \"../State/Game/GameActions\";\r\nimport { appState, dispatch } from \"../State/Store\";\r\nimport { AsteroidLevel } from \"./AsteroidLevel\";\r\nimport EnemyLevel from \"./EnemyLevel\";\r\nimport WarpLevel from \"./WarpLevel\";\r\n\r\n/**\r\n * LevelFactory. Provides level objects\r\n * @param {number} level. The desired level.\r\n * @returns {BaseEnemyLevel}. A level.\r\n */\r\nexport function levelFactory(level: number): ILevel {\r\n    switch (level) {\r\n        case 0:\r\n            // Test level\r\n            return new WarpLevel();\r\n        case 1:\r\n            return new EnemyLevel(\"bird\");\r\n        case 2:\r\n            return new EnemyLevel(\"robot\");\r\n        case 3:\r\n            return new EnemyLevel(\"orb\");\r\n        case 4:\r\n            dispatch(setWarpGamteComplexity(0));\r\n            return new WarpLevel();\r\n        case 5:\r\n            return new EnemyLevel(\"spinner\");\r\n        case 6:\r\n            return new EnemyLevel(\"balloon\");\r\n        case 7:\r\n            return new AsteroidLevel(\"asteroid-down\");\r\n        case 8:\r\n            dispatch(setWarpGamteComplexity(1));\r\n            return new WarpLevel();\r\n        case 9:\r\n            return new EnemyLevel(\"piston\");\r\n        case 10:\r\n            return new EnemyLevel(\"diabolo\");\r\n        case 11:\r\n            return new EnemyLevel(\"spacemonster-down\");\r\n        case 12:\r\n            dispatch(setWarpGamteComplexity(2));\r\n            return new WarpLevel();\r\n        case 13:\r\n            return new EnemyLevel(\"devil\");\r\n        case 14:\r\n            return new EnemyLevel(\"balloon\");\r\n        default:\r\n            return new EnemyLevel(\"bird\");\r\n    }\r\n}\r\n\r\n/**\r\n * clearedEnemies.\r\n * @returns {boolean}. Returns true if all enemies (and particles) have been removed from the ApplicationState.\r\n */\r\n\r\nfunction time(): boolean {\r\n    return false;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport GameLoop from \"../GameLoop\";\r\nimport enemyFactory from \"../Providers/EnemyFactory\";\r\nimport EnemyLevelRunner from \"../Runners/EnemyLevelRunner\";\r\nimport { resetLevelState } from \"../State/EnemyLevel/EnemyLevelActions\";\r\nimport { appState, dispatch } from \"../State/Store\";\r\nimport handleLevelWon from \"../StateHandlers/HandleLevelWon\";\r\nimport { Enemies } from \"../Types\";\r\nimport EnemyLevel from \"./EnemyLevel\";\r\n\r\n/**\r\n * Module:          AsteroidLevel\r\n * Responsibility:  Level with asteroids\r\n */\r\n\r\nexport class AsteroidLevel extends EnemyLevel {\r\n\r\n    /**\r\n     * When true the time is up and the level is won.\r\n     */\r\n    private timeUp = false;\r\n\r\n    constructor(enemies: Enemies) {\r\n        super(enemies);\r\n    }\r\n\r\n    public begin(): void {\r\n\r\n        // Use the optional callback to register handleRespawn when the level is ready to begin.\r\n        super.begin(() => {\r\n            this.registerSubscription(GameLoop.registerUpdateState(() => this.handleRespawn()));\r\n\r\n            // After 20 seconds the player wins.\r\n            window.setTimeout(() => {\r\n                this.timeUp = true;\r\n            }, 20000);\r\n        });\r\n    }\r\n\r\n    public handleRespawn(): void {\r\n        const {\r\n            enemyLevelState: { enemies }\r\n        } = appState();\r\n\r\n        if (enemies.length < 8) {\r\n            const newEnemy = enemyFactory(\"asteroid-down\");\r\n            EnemyLevelRunner.addEnemy(newEnemy);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Override from EnemyLevel.\r\n     */\r\n    protected monitorLevelWonRun(): void {\r\n        const {\r\n            playerState: { alive }\r\n        } = appState();\r\n\r\n        // It is possible to skip these levels when you die and\r\n        // stop your formation, however, like the original game\r\n        // you have to complete your formation before the level\r\n        // will finish.\r\n        if (this.timeUp && alive) {\r\n            handleLevelWon();\r\n        }\r\n    }\r\n\r\n    public dispose(): void {\r\n        super.dispose();\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseEnemy from \"../../Base/BaseEnemy\";\r\nimport BaseFrameProvider from \"../../Base/BaseFrameProvider\";\r\nimport CGAColors from \"../../Constants/CGAColors\";\r\nimport ILocationProvider from \"../../Interfaces/ILocationProvider\";\r\nimport { ExplosionProviderFunction, OffsetFramesProviderFunction } from \"../../Types\";\r\nimport Mutators from \"../../Utility/FrameMutators\";\r\n\r\n/**\r\n * Module:          AsteroidEnemy\r\n * Responsibility:  An asteroid. A piece of rock really.\r\n */\r\n\r\nexport class AsteroidEnemy extends BaseEnemy {\r\n\r\n    /**\r\n     * The astroid is the only enem that uses hitpoints. It starts with 4.\r\n     */\r\n    private hitpoints = 4;\r\n\r\n    constructor(\r\n        frameChangeTime: number,\r\n        getOffsetFrames: OffsetFramesProviderFunction,\r\n        getExplosion: ExplosionProviderFunction,\r\n        locationProvider: ILocationProvider,\r\n        frameProvider: BaseFrameProvider) {\r\n        super(frameChangeTime,\r\n            getOffsetFrames,\r\n            getExplosion,\r\n            locationProvider,\r\n            frameProvider);\r\n\r\n        Mutators.Frame.setColor(this.explosion.explosionCenterFrame, CGAColors.lightRed);\r\n        this.explosion.particleFrames.forEach((pf) => Mutators.Frame.setColor(pf, CGAColors.lightRed));\r\n    }\r\n\r\n    /**\r\n     * Update state.\r\n     * @param {number} tick. Current tick. \r\n     */\r\n    public updateState(tick: number): void {\r\n        super.updateState(tick);\r\n\r\n        this.dispatchCurrentState();\r\n    }\r\n\r\n    /**\r\n     * Returns points for this enemy.\r\n     * @returns {number}. Points.\r\n     */\r\n    public getPoints(): number {\r\n        return 300;\r\n    }\r\n\r\n    public getHitpoints(): number {\r\n        return this.hitpoints;\r\n    }\r\n\r\n    public recudeHitpoints(): void {\r\n        this.hitpoints--;\r\n        // A reduction in hitpoints shows the next frame. This makes it\r\n        // appear as if the asteroid is getting damaged.\r\n        this.frameProvider.getNextFrame();\r\n    }\r\n\r\n    /**\r\n     * Frame change handler.\r\n     */\r\n    protected onFrameChange(): void {\r\n\r\n        // The asteroid is an odd duck here. It doesn't change frames to be animated\r\n        // but to show damage to it.\r\n        // So, we return the current frame and change the frame when the astroid is hit.\r\n        const newFrame = this.frameProvider.getCurrentFrame();\r\n        Mutators.Frame.convertHexToCGA(newFrame);\r\n        this.currentFrame = newFrame;\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { OffsetFrames } from \"../../Models/OffsetFrames\";\r\nimport { getMaximumFrameDimensions } from \"../../Utility/Frame\";\r\n\r\n/**\r\n * Module:          GetAsteroidOffsetFrames\r\n * Responsibility:  Returns the requires\r\n */\r\n\r\nexport function getAsteroidOffsetFrames(): OffsetFrames {\r\n    const resource = {\r\n        frames: [\r\n            [\r\n                [\"0\", \"0\", \"6\", \"6\", \"0\", \"0\"],\r\n                [\"0\", \"6\", \"6\", \"6\", \"6\", \"0\"],\r\n                [\"6\", \"6\", \"6\", \"6\", \"6\", \"6\"],\r\n                [\"6\", \"6\", \"6\", \"6\", \"6\", \"6\"],\r\n                [\"0\", \"6\", \"6\", \"6\", \"6\", \"0\"],\r\n                [\"0\", \"0\", \"6\", \"6\", \"0\", \"0\"],\r\n            ],\r\n            [\r\n                [\"0\", \"0\", \"6\", \"6\", \"0\", \"0\"],\r\n                [\"0\", \"6\", \"6\", \"6\", \"6\", \"0\"],\r\n                [\"6\", \"6\", \"C\", \"C\", \"6\", \"6\"],\r\n                [\"6\", \"6\", \"C\", \"C\", \"6\", \"6\"],\r\n                [\"0\", \"6\", \"6\", \"6\", \"6\", \"0\"],\r\n                [\"0\", \"0\", \"6\", \"6\", \"0\", \"0\"],\r\n            ],\r\n            [\r\n                [\"0\", \"0\", \"6\", \"6\", \"0\", \"0\"],\r\n                [\"0\", \"6\", \"C\", \"C\", \"6\", \"0\"],\r\n                [\"6\", \"C\", \"C\", \"C\", \"C\", \"6\"],\r\n                [\"6\", \"C\", \"C\", \"C\", \"C\", \"6\"],\r\n                [\"0\", \"6\", \"C\", \"C\", \"6\", \"0\"],\r\n                [\"0\", \"0\", \"6\", \"6\", \"0\", \"0\"],\r\n            ], [\r\n                [\"0\", \"0\", \"C\", \"C\", \"0\", \"0\"],\r\n                [\"0\", \"C\", \"C\", \"C\", \"C\", \"0\"],\r\n                [\"C\", \"C\", \"C\", \"C\", \"C\", \"C\"],\r\n                [\"C\", \"C\", \"C\", \"C\", \"C\", \"C\"],\r\n                [\"0\", \"C\", \"C\", \"C\", \"C\", \"0\"],\r\n                [\"0\", \"0\", \"C\", \"C\", \"0\", \"0\"],\r\n            ]\r\n        ],\r\n        offSets: [],\r\n        maxSizes: { width: 0, height: 0 }\r\n    };\r\n\r\n    resource.maxSizes = getMaximumFrameDimensions(resource.frames);\r\n\r\n    return resource;\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseEnemy from \"../../Base/BaseEnemy\";\r\nimport BaseFrameProvider from \"../../Base/BaseFrameProvider\";\r\nimport ILocationProvider from \"../../Interfaces/ILocationProvider\";\r\nimport { ExplosionProviderFunction, OffsetFramesProviderFunction } from \"../../Types\";\r\nimport Mutators from \"../../Utility/FrameMutators\";\r\n\r\n/**\r\n * Module:          BalloonEnemey\r\n * Responsibility:  Handles the Baloon enemny.\r\n */\r\n\r\nexport default class BalloonEnemy extends BaseEnemy {\r\n\r\n    constructor(\r\n        frameChangeTime: number,\r\n        getFrames: OffsetFramesProviderFunction,\r\n        getExplosion: ExplosionProviderFunction,\r\n        locationProvider: ILocationProvider,\r\n        frameProvider: BaseFrameProvider) {\r\n        super(\r\n            frameChangeTime,\r\n            getFrames,\r\n            getExplosion,\r\n            locationProvider,\r\n            frameProvider);\r\n\r\n        Mutators.Frame.convertHexToCGA(this.explosion.explosionCenterFrame);\r\n        this.explosion.particleFrames.forEach((pf) => Mutators.Frame.convertHexToCGA(pf));\r\n    }\r\n\r\n    /**\r\n     * Update the Spinner state.\r\n     * @param {number} tick. Current tick.\r\n     */\r\n    public updateState(tick: number): void {\r\n        super.updateState(tick);\r\n        this.dispatchCurrentState();\r\n    }\r\n\r\n    /**\r\n     * Called when a frame change is required. The Spinner frames are all colored at initialisation so we can keep this simple.\r\n     */\r\n    protected onFrameChange(): void {\r\n        const nextFrame = this.frameProvider.getNextFrame();\r\n        Mutators.Frame.convertHexToCGA(nextFrame);\r\n        this.currentFrame = nextFrame;\r\n    }\r\n\r\n    /**\r\n     * Returns the points of the Spinner enemy.\r\n     * @returns {number}.\r\n     */\r\n    public getPoints(): number {\r\n        return 200;\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { OffsetFrames } from \"../../Models/OffsetFrames\";\r\nimport { getMaximumFrameDimensions } from \"../../Utility/Frame\";\r\n\r\n/**\r\n * Module:          GetBalloonOffsetFrames\r\n * Responsibility:  Define the offset frames of the Balloon enemy.\r\n */\r\n\r\nexport default function getBalloonOffsetFrames(): OffsetFrames {\r\n    const resource = {\r\n        frames: [\r\n            [\r\n                [\"0\", \"E\", \"E\", \"E\", \"E\", \"0\"],\r\n                [\"A\", \"E\", \"E\", \"E\", \"E\", \"A\"],\r\n                [\"A\", \"E\", \"E\", \"E\", \"E\", \"A\"],\r\n                [\"0\", \"E\", \"E\", \"E\", \"E\", \"0\"],\r\n                [\"0\", \"0\", \"E\", \"E\", \"0\", \"0\"],\r\n            ],\r\n            [\r\n                [\"0\", \"E\", \"E\", \"E\", \"E\", \"0\"],\r\n                [\"A\", \"A\", \"E\", \"E\", \"E\", \"E\"],\r\n                [\"A\", \"A\", \"E\", \"E\", \"E\", \"E\"],\r\n                [\"0\", \"E\", \"E\", \"E\", \"E\", \"0\"],\r\n                [\"0\", \"0\", \"E\", \"E\", \"0\", \"0\"],\r\n            ],\r\n            [\r\n                [\"0\", \"E\", \"E\", \"E\", \"E\", \"0\"],\r\n                [\"E\", \"A\", \"A\", \"E\", \"E\", \"E\"],\r\n                [\"E\", \"A\", \"A\", \"E\", \"E\", \"E\"],\r\n                [\"0\", \"E\", \"E\", \"E\", \"E\", \"0\"],\r\n                [\"0\", \"0\", \"E\", \"E\", \"0\", \"0\"],\r\n            ],\r\n            [\r\n                [\"0\", \"E\", \"E\", \"E\", \"E\", \"0\"],\r\n                [\"E\", \"E\", \"A\", \"A\", \"E\", \"E\"],\r\n                [\"E\", \"E\", \"A\", \"A\", \"E\", \"E\"],\r\n                [\"0\", \"E\", \"E\", \"E\", \"E\", \"0\"],\r\n                [\"0\", \"0\", \"E\", \"E\", \"0\", \"0\"],\r\n            ],\r\n            [\r\n                [\"0\", \"E\", \"E\", \"E\", \"E\", \"0\"],\r\n                [\"E\", \"E\", \"E\", \"A\", \"A\", \"E\"],\r\n                [\"E\", \"E\", \"E\", \"A\", \"A\", \"E\"],\r\n                [\"0\", \"E\", \"E\", \"E\", \"E\", \"0\"],\r\n                [\"0\", \"0\", \"E\", \"E\", \"0\", \"0\"],\r\n            ],\r\n            [\r\n                [\"0\", \"E\", \"E\", \"E\", \"E\", \"0\"],\r\n                [\"E\", \"E\", \"E\", \"E\", \"A\", \"A\"],\r\n                [\"E\", \"E\", \"E\", \"E\", \"A\", \"A\"],\r\n                [\"0\", \"E\", \"E\", \"E\", \"E\", \"0\"],\r\n                [\"0\", \"0\", \"E\", \"E\", \"0\", \"0\"],\r\n            ],\r\n        ],\r\n        offSets: [],\r\n        maxSizes: { width: 0, height: 0 }\r\n    };\r\n\r\n    resource.maxSizes = getMaximumFrameDimensions(resource.frames);\r\n\r\n    return resource;\r\n}\r\n","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseEnemy from \"../../Base/BaseEnemy\";\r\nimport BaseFrameProvider from \"../../Base/BaseFrameProvider\";\r\nimport CGAColors from \"../../Constants/CGAColors\";\r\nimport TickHandler from \"../../Handlers/TickHandler\";\r\nimport ILocationProvider from \"../../Interfaces/ILocationProvider\";\r\nimport { ExplosionProviderFunction, Frame, OffsetFramesProviderFunction } from \"../../Types\";\r\nimport { getRandomArrayElement } from \"../../Utility/Array\";\r\nimport Mutators from \"../../Utility/FrameMutators\";\r\n\r\n/**\r\n * Module:          Bird enemy\r\n * Responsibility:  Defines the behaviour of the bird enemy first seen in level 1.\r\n */\r\n\r\nconst colors = [CGAColors.lightMagenta, CGAColors.yellow, CGAColors.lightCyan, CGAColors.lightRed];\r\n\r\nexport default class BirdEnemy extends BaseEnemy {\r\n\r\n    /**\r\n     * Hanels color changes.\r\n     */\r\n    private colorTickHandler: TickHandler;\r\n\r\n    /**\r\n     * Creates the object.\r\n     */\r\n    constructor(\r\n        frameChangeTime: number,\r\n        getOffsetFrames: OffsetFramesProviderFunction,\r\n        getExplosion: ExplosionProviderFunction,\r\n        locationProvider: ILocationProvider,\r\n        frameProvider: BaseFrameProvider) {\r\n        super(\r\n            frameChangeTime,\r\n            getOffsetFrames,\r\n            getExplosion,\r\n            locationProvider,\r\n            frameProvider);\r\n\r\n        this.colorTickHandler = new TickHandler(40, () => this.onColorChange());\r\n\r\n        Mutators.Frame.setColor(this.explosion.explosionCenterFrame, CGAColors.white);\r\n        Mutators.Frame.setColor(this.explosion.particleFrames[0], CGAColors.white);\r\n        Mutators.Frame.setColor(this.explosion.particleFrames[1], CGAColors.white);\r\n    }\r\n\r\n    /**\r\n     * Updates the objects state.\r\n     * @param {tick: number} tick. Current tick.\r\n     */\r\n    public updateState(tick: number): void {\r\n        super.updateState(tick);\r\n\r\n        this.colorTickHandler.tick(tick);\r\n        this.dispatchCurrentState();\r\n    }\r\n\r\n    /**\r\n     * Returns the points for the bird.\r\n     * @returns {number}. Points rewarded when the BirdEnemy is destroyed.\r\n     */\r\n    public getPoints(): number {\r\n        return 200;\r\n    }\r\n\r\n    /**\r\n     * Called by a TickHandler when the bird should change color.\r\n     */\r\n    private onColorChange(): void {\r\n        const currentFrame = this.frameProvider.getCurrentFrame();\r\n        this.setCurrentFrameColor(currentFrame);\r\n    }\r\n\r\n    /**\r\n     * Sets the current's frame color\r\n     * @param {Frame} frame. Frame to set the color on.\r\n     */\r\n    private setCurrentFrameColor(frame: Frame) {\r\n        Mutators.Frame.setColor(frame, getRandomArrayElement(colors));\r\n        this.currentFrame = frame;\r\n    }\r\n\r\n    /**\r\n     * Changes the frame of the OrbEnemy. Also ensures the new frame is given colors.\r\n     */\r\n    protected onFrameChange(): void {\r\n        const nextFrame = this.frameProvider.getNextFrame();\r\n        this.setCurrentFrameColor(nextFrame);\r\n    }\r\n}","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { OffsetFrames } from \"../../Models/OffsetFrames\";\r\nimport { getMaximumFrameDimensions } from \"../../Utility/Frame\";\r\n\r\n/**\r\n * Module:          GetBirdOffsetFrames\r\n * Responsibility:  Define animation frames for the bird enemy.\r\n */\r\n\r\nexport default function getBirdOffsetFrames(): OffsetFrames {\r\n    const resource: OffsetFrames = {\r\n        frames: [\r\n            [\r\n                [\"0\", \"V\", \"0\", \"V\", \"0\"],\r\n                [\"V\", \"0\", \"V\", \"0\", \"V\"],\r\n                [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n            ],\r\n            [\r\n                [\"0\", \"V\", \"V\", \"0\", \"V\", \"V\", \"0\"],\r\n                [\"V\", \"0\", \"0\", \"V\", \"0\", \"0\", \"V\"],\r\n                [\"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\"],\r\n            ],\r\n            [\r\n                [\"V\", \"V\", \"V\", \"0\", \"V\", \"V\", \"V\"],\r\n                [\"0\", \"0\", \"0\", \"V\", \"0\", \"0\", \"0\"],\r\n            ],\r\n            [\r\n                [\"V\", \"0\", \"0\", \"0\", \"0\", \"0\", \"V\"],\r\n                [\"0\", \"V\", \"V\", \"0\", \"V\", \"V\", \"0\"],\r\n                [\"0\", \"0\", \"0\", \"V\", \"0\", \"0\", \"0\"],\r\n            ],\r\n        ],\r\n        offSets: [\r\n            {\r\n                top: 1,\r\n                left: 1,\r\n            },\r\n            {\r\n                top: 1,\r\n                left: 0,\r\n            },\r\n            {\r\n                top: 1,\r\n                left: 0,\r\n            },\r\n            {\r\n                top: 0,\r\n                left: 0,\r\n            }\r\n        ],\r\n        maxSizes: { width: 0, height: 0 }\r\n    };\r\n\r\n    resource.maxSizes = getMaximumFrameDimensions(resource.frames);\r\n\r\n    return resource;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseEnemy from \"../../Base/BaseEnemy\";\r\nimport BaseFrameProvider from \"../../Base/BaseFrameProvider\";\r\nimport CGAColors from \"../../Constants/CGAColors\";\r\nimport ILocationDirectionProvider from \"../../Interfaces/ILocationDirectionProvider\";\r\nimport { ExplosionProviderFunction, OffsetFramesProviderFunction } from \"../../Types\";\r\nimport Mutators from \"../../Utility/FrameMutators\";\r\n\r\n/**\r\n * Module:          DevilEnemey\r\n * Responsibility:  Handles the Devil enemny.\r\n */\r\n\r\nexport default class DevilEnemy extends BaseEnemy {\r\n\r\n    /**\r\n     * A location provider than also provides a method that gives the general direction: left or right.\r\n     */\r\n    private locationDirecntionProvider: ILocationDirectionProvider;\r\n\r\n    /**\r\n     * Constuct the devil.\r\n     */\r\n    constructor(\r\n        frameChangeTime: number,\r\n        getFrames: OffsetFramesProviderFunction,\r\n        getExplosion: ExplosionProviderFunction,\r\n        locationProvider: ILocationDirectionProvider,\r\n        frameProvider: BaseFrameProvider) {\r\n        super(\r\n            frameChangeTime,\r\n            getFrames,\r\n            getExplosion,\r\n            locationProvider,\r\n            frameProvider);\r\n\r\n        Mutators.Frame.setColor(this.explosion.explosionCenterFrame, CGAColors.white);\r\n        Mutators.Frame.setColor(this.explosion.particleFrames[0], CGAColors.white);\r\n        Mutators.Frame.setColor(this.explosion.particleFrames[1], CGAColors.white);\r\n\r\n        this.locationDirecntionProvider = locationProvider;\r\n    }\r\n\r\n    /**\r\n     * Update the Devil state.\r\n     * @param {number} tick. Current tick\r\n     */\r\n    public updateState(tick: number): void {\r\n        super.updateState(tick);\r\n\r\n        if (this.locationDirecntionProvider.getDirection() === \"left\") {\r\n            // Frame going left is index 0, there's two frames so a get next frames switches to the\r\n            // frame of the devil heading right.\r\n            if (this.frameProvider.getCurrentIndex() !== 0) {\r\n                this.frameProvider.getNextFrame();\r\n            }\r\n        } else if (this.locationDirecntionProvider.getDirection() === \"right\") {\r\n            // Frame going left is index 0, there's two frames so a get next frames switches to the\r\n            // frame of the devil heading right.\r\n            if (this.frameProvider.getCurrentIndex() !== 1) {\r\n                this.frameProvider.getNextFrame();\r\n            }\r\n        }\r\n\r\n        this.dispatchCurrentState();\r\n    }\r\n\r\n    /**\r\n     * Called when a frame change is required. The Devil frames are all colored at initialisation so we can keep this simple.\r\n     */\r\n    protected onFrameChange(): void {\r\n        const nextFrame = this.frameProvider.getCurrentFrame();\r\n        Mutators.Frame.convertHexToCGA(nextFrame);\r\n        this.currentFrame = nextFrame;\r\n    }\r\n\r\n    /**\r\n     * Returns the points of the Devil enemy.\r\n     * @returns {number}.\r\n     */\r\n    public getPoints(): number {\r\n        return 100;\r\n    }\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { OffsetFrames } from \"../../Models/OffsetFrames\";\r\nimport { getMaximumFrameDimensions } from \"../../Utility/Frame\";\r\n\r\n/**\r\n * Module:          GetDevilOffsetFrames\r\n * Responsibility:  Define the frames of the Devil enemy.\r\n */\r\n\r\nexport default function getDevilOffsetFrames(): OffsetFrames {\r\n    const resource = {\r\n        frames: [\r\n            [\r\n                [\"0\", \"4\", \"4\", \"0\"],\r\n                [\"4\", \"4\", \"4\", \"4\"],\r\n                [\"A\", \"4\", \"A\", \"4\"],\r\n                [\"4\", \"4\", \"4\", \"4\"],\r\n                [\"4\", \"4\", \"4\", \"4\"],\r\n                [\"4\", \"0\", \"4\", \"0\"],\r\n                [\"4\", \"0\", \"4\", \"0\"],\r\n            ],\r\n            [\r\n                [\"0\", \"4\", \"4\", \"0\"],\r\n                [\"4\", \"4\", \"4\", \"4\"],\r\n                [\"4\", \"A\", \"4\", \"A\"],\r\n                [\"4\", \"4\", \"4\", \"4\"],\r\n                [\"4\", \"4\", \"4\", \"4\"],\r\n                [\"0\", \"4\", \"0\", \"4\"],\r\n                [\"0\", \"4\", \"0\", \"4\"],\r\n            ]\r\n        ],\r\n        offSets: [],\r\n        maxSizes: { width: 0, height: 0}\r\n    };\r\n\r\n    resource.maxSizes = getMaximumFrameDimensions(resource.frames);\r\n\r\n    return resource;\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { OffsetFrames } from \"../../Models/OffsetFrames\";\r\nimport { getMaximumFrameDimensions } from \"../../Utility/Frame\";\r\n\r\n/**\r\n * Module:          GetDiaboloOffsetFrames\r\n * Responsibility:  Define the frames of the diabolo enemy.\r\n */\r\n\r\nexport default function getDiaboloOffsetFrames(): OffsetFrames {\r\n    const resource = {\r\n        frames: [\r\n            [\r\n                [\"9\", \"9\", \"9\", \"9\"],\r\n                [\"9\", \"9\", \"9\", \"9\"],\r\n                [\"4\", \"0\", \"0\", \"0\"],\r\n                [\"4\", \"0\", \"0\", \"0\"],\r\n                [\"9\", \"9\", \"9\", \"9\"],\r\n                [\"9\", \"9\", \"9\", \"9\"],\r\n            ],\r\n            [\r\n                [\"9\", \"9\", \"9\", \"9\"],\r\n                [\"9\", \"9\", \"9\", \"9\"],\r\n                [\"0\", \"4\", \"0\", \"0\"],\r\n                [\"0\", \"4\", \"0\", \"0\"],\r\n                [\"9\", \"9\", \"9\", \"9\"],\r\n                [\"9\", \"9\", \"9\", \"9\"],\r\n            ],\r\n            [\r\n                [\"9\", \"9\", \"9\", \"9\"],\r\n                [\"9\", \"9\", \"9\", \"9\"],\r\n                [\"0\", \"0\", \"4\", \"0\"],\r\n                [\"0\", \"0\", \"4\", \"0\"],\r\n                [\"9\", \"9\", \"9\", \"9\"],\r\n                [\"9\", \"9\", \"9\", \"9\"],\r\n            ],\r\n            [\r\n                [\"9\", \"9\", \"9\", \"9\"],\r\n                [\"9\", \"9\", \"9\", \"9\"],\r\n                [\"0\", \"0\", \"0\", \"4\"],\r\n                [\"0\", \"0\", \"0\", \"4\"],\r\n                [\"9\", \"9\", \"9\", \"9\"],\r\n                [\"9\", \"9\", \"9\", \"9\"],\r\n            ],\r\n        ],\r\n        offSets: [],\r\n        maxSizes: { width: 0, height: 0}\r\n    };\r\n\r\n    resource.maxSizes = getMaximumFrameDimensions(resource.frames);\r\n\r\n    return resource;\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { OffsetFrames } from \"../../Models/OffsetFrames\";\r\nimport { getMaximumFrameDimensions } from \"../../Utility/Frame\";\r\n\r\n/**\r\n * Module:          GetOrbOffsetFrames\r\n * Responsibility:  Define the frames for the orb enemy\r\n */\r\n\r\nexport default function getOrbOffsetFrames(): OffsetFrames {\r\n\r\n    const orbMainFrame = [\r\n        [\"0\", \"V0\", \"V0\", \"0\"],\r\n        [\"V0\", \"V1\", \"V1\", \"V0\"],\r\n        [\"V0\", \"V1\", \"V1\", \"V0\"],\r\n        [\"0\", \"V0\", \"V0\", \"0\"],\r\n    ];\r\n\r\n    const resource: OffsetFrames = {\r\n        frames: [],\r\n        offSets: [\r\n            // Move up\r\n            {\r\n                left: 0,\r\n                top: 0,\r\n            },\r\n            {\r\n                left: 0,\r\n                top: -2,\r\n            },\r\n            {\r\n                left: 0,\r\n                top: -4,\r\n            },\r\n            {\r\n                left: 0,\r\n                top: -6,\r\n            },\r\n            // Move right\r\n            {\r\n                left: 2,\r\n                top: -6,\r\n            },\r\n            {\r\n                left: 4,\r\n                top: -6,\r\n            },\r\n            {\r\n                left: 6,\r\n                top: -6,\r\n            },\r\n            // Move down\r\n            {\r\n                left: 6,\r\n                top: -4,\r\n            },\r\n            {\r\n                left: 6,\r\n                top: -2,\r\n            },\r\n            {\r\n                left: 6,\r\n                top: 0,\r\n            },\r\n            // Move left\r\n            {\r\n                left: 4,\r\n                top: 0,\r\n            },\r\n            {\r\n                left: 2,\r\n                top: 0,\r\n            }\r\n        ],\r\n        maxSizes: { width: 0, height: 0 }\r\n    };\r\n\r\n    resource.offSets.forEach(() => {\r\n        resource.frames.push(orbMainFrame);\r\n    });\r\n\r\n    resource.maxSizes = getMaximumFrameDimensions(resource.frames);\r\n\r\n    return resource;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseEnemy from \"../../Base/BaseEnemy\";\r\nimport BaseFrameProvider from \"../../Base/BaseFrameProvider\";\r\nimport CGAColors from \"../../Constants/CGAColors\";\r\nimport { Locations } from \"../../Constants/Constants\";\r\nimport TickHandler from \"../../Handlers/TickHandler\";\r\nimport ILocationProvider from \"../../Interfaces/ILocationProvider\";\r\nimport dimensionProvider from \"../../Providers/DimensionProvider\";\r\nimport { ExplosionProviderFunction, Frame, OffsetFramesProviderFunction } from \"../../Types\";\r\nimport { getFrameDimensions } from \"../../Utility/Frame\";\r\nimport Mutators from \"../../Utility/FrameMutators\";\r\n\r\n/**\r\n * Module:          OrbEnemy\r\n * Responsibility:  Define behaviour of the orb enemy.\r\n */\r\n\r\n// The orb constantly varies between a specific set of color combinations. This array is used to set them.\r\nconst colors: string[][] = [\r\n    [CGAColors.lightGreen, CGAColors.lightBlue],\r\n    [CGAColors.brown, CGAColors.lightGreen],\r\n    [CGAColors.lightBlue, CGAColors.white],\r\n    [CGAColors.white, CGAColors.brown],\r\n];\r\n\r\nconst {\r\n    gameField\r\n} = dimensionProvider();\r\n\r\nexport default class OrbEnemy extends BaseEnemy {\r\n    /**\r\n     * Handles the color change ticks.\r\n     */\r\n    private colorTickHandler: TickHandler;\r\n\r\n    /**\r\n     * Tracks the current color index.\r\n     */\r\n    private currentColorIndex = 0;\r\n\r\n    /**\r\n     * Construct the enemy.\r\n     */\r\n    constructor(\r\n        frameChangeTime: number,\r\n        getFrames: OffsetFramesProviderFunction,\r\n        getExplosion: ExplosionProviderFunction,\r\n        locationProvider: ILocationProvider,\r\n        frameProvider: BaseFrameProvider) {\r\n        super(\r\n            frameChangeTime,\r\n            getFrames,\r\n            getExplosion,\r\n            locationProvider,\r\n            frameProvider);\r\n\r\n        // We only have one frame in this enemy but its color DOES change. Set the currentFrame to the only available one\r\n        // and sets its color to the first color set so we get a a good render when the enemy first appears.\r\n        this.updateCurrentFrameAndColor(this.frameProvider.getCurrentFrame());\r\n\r\n        Mutators.Frame.setColor(this.explosion.explosionCenterFrame, CGAColors.magenta);\r\n        Mutators.Frames.setColor(this.explosion.particleFrames, CGAColors.magenta);\r\n\r\n        this.colorTickHandler = new TickHandler(100, () => this.onColorChange());\r\n    }\r\n\r\n    /**\r\n     * Called by a TickHandler when the bird should change color.\r\n     */\r\n    private onColorChange(): void {\r\n        this.currentColorIndex++;\r\n        if (this.currentColorIndex >= colors.length) {\r\n            this.currentColorIndex = 0;\r\n        }\r\n\r\n        this.updateCurrentFrameAndColor(this.frameProvider.getCurrentFrame());\r\n    }\r\n\r\n    /**\r\n     * Sets the current frame and its color.\r\n     * @param {Frame} frame. A frame.\r\n     */\r\n    private updateCurrentFrameAndColor(frame: Frame): void {\r\n        const currentColor = colors[this.currentColorIndex];\r\n        if (currentColor === undefined) {\r\n            throw new Error(\"Color cannot be undefined.\");\r\n        }\r\n\r\n        Mutators.Frame.setColor(frame, ...currentColor);\r\n        this.currentFrame = frame;\r\n    }\r\n\r\n    /**\r\n     * Changes the frame of the OrbEnemy. Also ensures the new frame is given colors.\r\n     */\r\n    protected onFrameChange(): void {\r\n        const frame = this.frameProvider.getNextFrame();\r\n        this.updateCurrentFrameAndColor(frame);\r\n    }\r\n\r\n    /**\r\n     * Updates the objects state.\r\n     * @param {number} tick. Current tick.\r\n     */\r\n    public updateState(tick: number): void {\r\n        super.updateState(tick);\r\n\r\n        this.colorTickHandler.tick(tick);\r\n\r\n        if (this.currentFrame) {\r\n            const { height } = getFrameDimensions(this.currentFrame);\r\n            const { top } = this.locationProvider.getCurrentLocation();\r\n            const offset = top - this.offsetTop;\r\n\r\n            if (this.offsetTop < gameField.top) {\r\n                this.offsetTop = Locations.Enemies.Orb.maxBottom - offset;\r\n            } else if (this.offsetTop + height > Locations.Enemies.Orb.maxBottom) {\r\n                this.offsetTop = gameField.top + offset;\r\n            }\r\n        }\r\n\r\n        this.dispatchCurrentState();\r\n    }\r\n\r\n    /**\r\n     * Returns the points of this enemy.\r\n     * @returns {number}. The points.\r\n     */\r\n    public getPoints(): number {\r\n        return 200;\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { OffsetFrames } from \"../../Models/OffsetFrames\";\r\nimport { getMaximumFrameDimensions } from \"../../Utility/Frame\";\r\n\r\n/**\r\n * Module:          GetPistonOffsetFrames\r\n * Responsibility:  Define the offset frames of the Piston enemy.\r\n */\r\n\r\nexport default function getPistonOffsetFrames(): OffsetFrames {\r\n    const resource = {\r\n        frames: [\r\n            [\r\n                [\"3\", \"3\", \"3\"],\r\n                [\"C\", \"3\", \"C\"],\r\n                [\"C\", \"C\", \"C\"],\r\n                [\"C\", \"3\", \"C\"],\r\n                [\"0\", \"3\", \"0\"],\r\n            ],\r\n            [\r\n                [\"3\", \"3\", \"3\"],\r\n                [\"C\", \"3\", \"C\"],\r\n                [\"C\", \"C\", \"C\"],\r\n                [\"C\", \"3\", \"C\"],\r\n                [\"0\", \"3\", \"0\"],\r\n            ],\r\n            [\r\n                [\"3\", \"3\", \"3\"],\r\n                [\"C\", \"3\", \"C\"],\r\n                [\"C\", \"C\", \"C\"],\r\n                [\"C\", \"3\", \"C\"],\r\n                [\"0\", \"3\", \"0\"],\r\n            ],\r\n            [\r\n                [\"3\", \"3\", \"3\"],\r\n                [\"0\", \"3\", \"0\"],\r\n                [\"C\", \"3\", \"C\"],\r\n                [\"C\", \"C\", \"C\"],\r\n                [\"C\", \"3\", \"C\"],\r\n            ],\r\n            [\r\n                [\"3\", \"3\", \"3\"],\r\n                [\"0\", \"3\", \"0\"],\r\n                [\"0\", \"3\", \"0\"],\r\n                [\"C\", \"3\", \"C\"],\r\n                [\"C\", \"C\", \"C\"],\r\n                [\"C\", \"0\", \"C\"],\r\n            ],\r\n\r\n        ],\r\n        offSets: [\r\n            {\r\n                left: 0,\r\n                top: 0\r\n            },\r\n            {\r\n                left: 0,\r\n                top: 0\r\n            },\r\n            {\r\n                left: 0,\r\n                top: 0\r\n            },\r\n            {\r\n                left: 0,\r\n                top: -1,\r\n            },\r\n            {\r\n                left: 0,\r\n                top: -2,\r\n            }\r\n        ],\r\n        maxSizes: { width: 0, height: 0 }\r\n    };\r\n\r\n    resource.maxSizes = getMaximumFrameDimensions(resource.frames);\r\n\r\n    return resource;\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseEnemy from \"../../Base/BaseEnemy\";\r\nimport BaseFrameProvider from \"../../Base/BaseFrameProvider\";\r\nimport CGAColors from \"../../Constants/CGAColors\";\r\nimport ILocationProvider from \"../../Interfaces/ILocationProvider\";\r\nimport { ExplosionProviderFunction, OffsetFramesProviderFunction } from \"../../Types\";\r\nimport Mutators from \"../../Utility/FrameMutators\";\r\n\r\n/**\r\n * Module:          PistonEnemey\r\n * Responsibility:  Handles the Piston enemny.\r\n */\r\n\r\nexport default class PistonEnemy extends BaseEnemy {\r\n    constructor(\r\n        frameChangeTime: number,\r\n        getFrames: OffsetFramesProviderFunction,\r\n        getExplosion: ExplosionProviderFunction,\r\n        locationProvider: ILocationProvider,\r\n        frameProvider: BaseFrameProvider) {\r\n        super(\r\n            frameChangeTime,\r\n            getFrames,\r\n            getExplosion,\r\n            locationProvider,\r\n            frameProvider);\r\n\r\n        Mutators.Frame.setColor(this.explosion.explosionCenterFrame, CGAColors.white);\r\n        Mutators.Frame.setColor(this.explosion.particleFrames[0], CGAColors.white);\r\n        Mutators.Frame.setColor(this.explosion.particleFrames[1], CGAColors.white);\r\n    }\r\n\r\n    /**\r\n     * Update the Piston state.\r\n     * @param tick\r\n     */\r\n    public updateState(tick: number): void {\r\n        super.updateState(tick);\r\n\r\n        this.dispatchCurrentState();\r\n    }\r\n\r\n    /**\r\n     * Called when a frame change is required. The Piston frames are all colored at initialisation so we can keep this simple.\r\n     */\r\n    protected onFrameChange(): void {\r\n        const newFrame = this.frameProvider.getNextFrame();\r\n        Mutators.Frame.convertHexToCGA(newFrame);\r\n        this.currentFrame = newFrame;\r\n    }\r\n\r\n    /**\r\n     * Returns the points of the Piston enemy.\r\n     * @returns {number}.\r\n     */\r\n    public getPoints(): number {\r\n        return 200;\r\n    }\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { OffsetFrames } from \"../../Models/OffsetFrames\";\r\nimport { getMaximumFrameDimensions } from \"../../Utility/Frame\";\r\n\r\n/**\r\n * Module:          GetRobotOffsetFrames\r\n * Responsibility:  Define the frames of the RobotEnemy\r\n */\r\n\r\nexport default function getRobotOffsetFrames(): OffsetFrames {\r\n\r\n    let offsetCount = 0;\r\n    const resource: OffsetFrames = {\r\n        frames: [\r\n            [\r\n                [\"0\", \"V\", \"V\", \"V\", \"0\"],\r\n                [\"V\", \"V\", \"V\", \"V\", \"V\"],\r\n                [\"V\", \"0\", \"V\", \"0\", \"V\"],\r\n                [\"V\", \"V\", \"V\", \"V\", \"V\"],\r\n                [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n                [\"V\", \"V\", \"V\", \"V\", \"V\"],\r\n                [\"0\", \"V\", \"0\", \"V\", \"0\"],\r\n                [\"0\", \"V\", \"0\", \"V\", \"0\"],\r\n                [\"V\", \"V\", \"0\", \"V\", \"V\"],\r\n            ],\r\n            [\r\n                [\"0\", \"V\", \"V\", \"V\", \"0\"],\r\n                [\"V\", \"V\", \"V\", \"V\", \"V\"],\r\n                [\"V\", \"0\", \"V\", \"0\", \"V\"],\r\n                [\"V\", \"V\", \"V\", \"V\", \"V\"],\r\n                [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n                [\"V\", \"V\", \"V\", \"V\", \"V\"],\r\n                [\"0\", \"V\", \"0\", \"V\", \"0\"],\r\n                [\"V\", \"V\", \"0\", \"V\", \"V\"],\r\n            ],\r\n            [\r\n                [\"0\", \"V\", \"V\", \"V\", \"0\"],\r\n                [\"V\", \"V\", \"V\", \"V\", \"V\"],\r\n                [\"V\", \"0\", \"V\", \"0\", \"V\"],\r\n                [\"V\", \"V\", \"V\", \"V\", \"V\"],\r\n                [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n                [\"V\", \"V\", \"V\", \"V\", \"V\"],\r\n                [\"V\", \"V\", \"0\", \"V\", \"V\"],\r\n            ],\r\n        ],\r\n        offSets: [\r\n            {\r\n                top: offsetCount,\r\n                left: 0,\r\n            },\r\n            {\r\n                top: offsetCount,\r\n                left: 0,\r\n            },\r\n            {\r\n                top: offsetCount,\r\n                left: 0,\r\n            },\r\n            {\r\n                top: ++offsetCount,\r\n                left: 0,\r\n            },\r\n            {\r\n                top: ++offsetCount,\r\n                left: 0,\r\n            },\r\n            {\r\n                top: offsetCount += 1,\r\n                left: 0,\r\n            },\r\n            {\r\n                top: offsetCount += 1,\r\n                left: 0,\r\n            },\r\n            {\r\n                top: offsetCount += 2,\r\n                left: 0\r\n            },\r\n            {\r\n                top: offsetCount += 1,\r\n                left: 0\r\n            }\r\n        ],\r\n        maxSizes: { width: 0, height: 0 }\r\n    };\r\n\r\n    // Add frame 0 an additional 7 times to make the animation look good.\r\n    resource.frames = [\r\n        resource.frames[0],\r\n        resource.frames[0],\r\n        resource.frames[0],\r\n        resource.frames[0],\r\n        resource.frames[0],\r\n        resource.frames[0],\r\n        ...resource.frames,\r\n    ];\r\n\r\n    resource.maxSizes = getMaximumFrameDimensions(resource.frames);\r\n\r\n    return resource;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseEnemy from \"../../Base/BaseEnemy\";\r\nimport BaseFrameProvider from \"../../Base/BaseFrameProvider\";\r\nimport CGAColors from \"../../Constants/CGAColors\";\r\nimport ILocationProvider from \"../../Interfaces/ILocationProvider\";\r\nimport { ExplosionProviderFunction, OffsetFramesProviderFunction } from \"../../Types\";\r\nimport { getRandomArrayElement } from \"../../Utility/Array\";\r\nimport Mutators from \"../../Utility/FrameMutators\";\r\n\r\n/**\r\n * Module:          RobotEnemey\r\n * Responsibility:  Handles the Robot enemny.\r\n */\r\n\r\nconst colors = [\r\n    CGAColors.lightBlue,\r\n    CGAColors.lightCyan,\r\n    CGAColors.lightRed,\r\n    CGAColors.lightGreen,\r\n    CGAColors.lightBlue,\r\n    CGAColors.lightMagenta,\r\n    CGAColors.lightCyan,\r\n];\r\n\r\nexport default class RobotEnemy extends BaseEnemy {\r\n    private color: string;\r\n\r\n    constructor(\r\n        frameChangeTime: number,\r\n        locationProvider: ILocationProvider,\r\n        frameProvider: BaseFrameProvider,\r\n        getExplosion: ExplosionProviderFunction,\r\n        getFrames: OffsetFramesProviderFunction) {\r\n        super(\r\n            frameChangeTime,\r\n            getFrames,\r\n            getExplosion,\r\n            locationProvider,\r\n            frameProvider);\r\n\r\n        this.color = getRandomArrayElement(colors);\r\n\r\n        Mutators.Frame.setColor(this.explosion.explosionCenterFrame, this.color);\r\n        Mutators.Frame.setColor(this.explosion.particleFrames[0], this.color);\r\n    }\r\n\r\n    /**\r\n     * Update the robot state.\r\n     * @param tick\r\n     */\r\n    public updateState(tick: number): void {\r\n        super.updateState(tick);\r\n\r\n        this.dispatchCurrentState();\r\n    }\r\n\r\n    /**\r\n     * Called when a frame change is required. The robot frames are all colored at initialisation so we can keep this simple.\r\n     */\r\n    protected onFrameChange(): void {\r\n        const nextFrame = this.frameProvider.getNextFrame();\r\n        Mutators.Frame.setColor(nextFrame, this.color);\r\n        this.currentFrame = nextFrame;\r\n    }\r\n\r\n    /**\r\n     * Returns the points of the robot enemy.\r\n     * @returns {number}.\r\n     */\r\n    public getPoints(): number {\r\n        return 100;\r\n    }\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { OffsetFrames } from \"../../Models/OffsetFrames\";\r\nimport { getMaximumFrameDimensions } from \"../../Utility/Frame\";\r\n\r\n/**\r\n * Module:          GetSpacemonsterOffsetFrames\r\n * Responsibility:  Returns the requires\r\n */\r\n\r\nexport function getSpaceMonsterOffsetFrames(): OffsetFrames {\r\n    const resource = {\r\n        frames: [\r\n            [\r\n                [\"7\", \"7\"],\r\n                [\"7\", \"7\"],\r\n                [\"7\", \"7\"],\r\n                [\"7\", \"7\"],\r\n                [\"7\", \"7\"],\r\n            ],\r\n            [\r\n                [\"0\", \"0\", \"7\", \"7\", \"0\", \"0\"],\r\n                [\"0\", \"0\", \"7\", \"7\", \"0\", \"0\"],\r\n                [\"0\", \"0\", \"7\", \"7\", \"0\", \"0\"],\r\n                [\"0\", \"7\", \"0\", \"0\", \"7\", \"0\"],\r\n                [\"7\", \"0\", \"0\", \"0\", \"0\", \"7\"],\r\n            ]\r\n        ],\r\n        offSets: [\r\n            {\r\n                left: 2,\r\n                top: 0\r\n            },\r\n            {\r\n                left: 0,\r\n                top: 0\r\n            }\r\n        ],\r\n        maxSizes: { width: 0, height: 0 }\r\n    };\r\n\r\n    resource.maxSizes = getMaximumFrameDimensions(resource.frames);\r\n\r\n    return resource;\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseEnemy from \"../../Base/BaseEnemy\";\r\nimport BaseFrameProvider from \"../../Base/BaseFrameProvider\";\r\nimport CGAColors from \"../../Constants/CGAColors\";\r\nimport ILocationProvider from \"../../Interfaces/ILocationProvider\";\r\nimport dimensionProvider from \"../../Providers/DimensionProvider\";\r\nimport { ExplosionProviderFunction, OffsetFramesProviderFunction } from \"../../Types\";\r\nimport { getRandomArrayElement } from \"../../Utility/Array\";\r\nimport Mutators from \"../../Utility/FrameMutators\";\r\n\r\n/**\r\n * Module:          SpaceMonster\r\n * Responsibility:  Opens its mouth when it gets to the bottom of the screen.\r\n */\r\n\r\nconst {\r\n    pixelSize\r\n} = dimensionProvider();\r\n\r\nconst jawsOpenTop = pixelSize * 55;\r\n\r\nconst explosionColors = [\r\n    CGAColors.yellow,\r\n    CGAColors.lightGreen,\r\n    CGAColors.lightBlue,\r\n];\r\n\r\nexport class SpaceMonster extends BaseEnemy {\r\n\r\n    /**\r\n     * Flag used to track if the jaws of the Space Monster are open or not.\r\n     */\r\n    private jawsClosed = true;\r\n\r\n    constructor(\r\n        frameChangeTime: number,\r\n        getOffsetFrames: OffsetFramesProviderFunction,\r\n        getExplosion: ExplosionProviderFunction,\r\n        locationProvider: ILocationProvider,\r\n        frameProvider: BaseFrameProvider) {\r\n        super(frameChangeTime,\r\n            getOffsetFrames,\r\n            getExplosion,\r\n            locationProvider,\r\n            frameProvider);\r\n\r\n        const color = getRandomArrayElement(explosionColors);\r\n        Mutators.Frame.setColor(this.explosion.explosionCenterFrame, color);\r\n        this.explosion.particleFrames.forEach((pf) => Mutators.Frame.setColor(pf, color));\r\n    }\r\n\r\n    public updateState(tick: number): void {\r\n        super.updateState(tick);\r\n\r\n        // When the Space monster gets close to the bottom it opens its jaws.\r\n        if (this.offsetTop >= jawsOpenTop && this.jawsClosed) {\r\n            this.frameProvider.getNextFrame();\r\n            this.jawsClosed = false;\r\n        } else if (this.offsetTop < jawsOpenTop && this.jawsClosed === false) {\r\n            this.frameProvider.getNextFrame();\r\n            this.jawsClosed = true;\r\n        }\r\n\r\n        this.dispatchCurrentState();\r\n    }\r\n\r\n    public getPoints(): number {\r\n        return 300;\r\n    }\r\n\r\n    /**\r\n     * Frame change handler.\r\n     */\r\n    protected onFrameChange(): void {\r\n\r\n        // The Leanasteroid is an odd duck here. It doesn't change frames to be animated\r\n        // but to show damage to it.\r\n        // So, we return the current frame and change the frame when the astroid is hit.\r\n        const newFrame = this.frameProvider.getCurrentFrame();\r\n        Mutators.Frame.convertHexToCGA(newFrame);\r\n        this.currentFrame = newFrame;\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { OffsetFrames } from \"../../Models/OffsetFrames\";\r\nimport { getMaximumFrameDimensions } from \"../../Utility/Frame\";\r\n\r\n/**\r\n * Module:          GetSpinnerOffsetFrames\r\n * Responsibility:  Define the frames of the spinner enemy.\r\n */\r\n\r\nexport default function getSpinnerOffsetFrames(): OffsetFrames {\r\n    const resource = {\r\n        frames: [\r\n            [\r\n                [\"0\", \"A\", \"0\"],\r\n                [\"0\", \"C\", \"0\"],\r\n                [\"0\", \"A\", \"0\"],\r\n            ],\r\n            [\r\n                [\"0\", \"0\", \"A\"],\r\n                [\"0\", \"C\", \"0\"],\r\n                [\"A\", \"0\", \"0\"],\r\n            ],\r\n            [\r\n                [\"0\", \"0\", \"0\"],\r\n                [\"A\", \"C\", \"A\"],\r\n                [\"0\", \"0\", \"0\"],\r\n            ],\r\n            [\r\n                [\"A\", \"0\", \"0\"],\r\n                [\"0\", \"C\", \"0\"],\r\n                [\"0\", \"0\", \"A\"],\r\n            ]\r\n        ],\r\n        offSets: [],\r\n        maxSizes: { width: 0, height: 0}\r\n    };\r\n\r\n    resource.maxSizes = getMaximumFrameDimensions(resource.frames);\r\n\r\n    return resource;\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseEnemy from \"../../Base/BaseEnemy\";\r\nimport BaseFrameProvider from \"../../Base/BaseFrameProvider\";\r\nimport CGAColors from \"../../Constants/CGAColors\";\r\nimport ILocationProvider from \"../../Interfaces/ILocationProvider\";\r\nimport { ExplosionProviderFunction, OffsetFramesProviderFunction } from \"../../Types\";\r\nimport Mutators from \"../../Utility/FrameMutators\";\r\n\r\n/**\r\n * Module:          SpinnerEnemeys\r\n * Responsibility:  Handles the Spinner enemny.\r\n */\r\n\r\nexport default class SpinnerEnemy extends BaseEnemy {\r\n\r\n    constructor(\r\n        frameChangeTime: number,\r\n        getFrames: OffsetFramesProviderFunction,\r\n        getExplosion: ExplosionProviderFunction,\r\n        locationProvider: ILocationProvider,\r\n        frameProvider: BaseFrameProvider) {\r\n        super(\r\n            frameChangeTime,\r\n            getFrames,\r\n            getExplosion,\r\n            locationProvider,\r\n            frameProvider);\r\n\r\n        Mutators.Frame.setColor(this.explosion.explosionCenterFrame, CGAColors.white);\r\n        Mutators.Frame.setColor(this.explosion.particleFrames[0], CGAColors.white);\r\n        Mutators.Frame.setColor(this.explosion.particleFrames[1], CGAColors.white);\r\n    }\r\n\r\n    /**\r\n     * Update the Spinner state.\r\n     * @param tick\r\n     */\r\n    public updateState(tick: number): void {\r\n        super.updateState(tick);\r\n        this.dispatchCurrentState();\r\n    }\r\n\r\n    /**\r\n     * Called when a frame change is required. The Spinner frames are all colored at initialisation so we can keep this simple.\r\n     */\r\n    protected onFrameChange(): void {\r\n        const nextFrame = this.frameProvider.getNextFrame();\r\n        Mutators.Frame.convertHexToCGA(nextFrame);\r\n        this.currentFrame = nextFrame;\r\n    }\r\n\r\n    /**\r\n     * Returns the points of the Spinner enemy.\r\n     * @returns {number}.\r\n     */\r\n    public getPoints(): number {\r\n        return 200;\r\n    }\r\n}\r\n","\r\n/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport Explosion from \"../Models/Explosion\";\r\nimport Mutators from \"../Utility/FrameMutators\";\r\n\r\n/**\r\n * Module:          Explosion01.\r\n */\r\n\r\nexport default function getExplosion01(centerColor?: string, shrapnellColor?: string): Explosion {\r\n    const explosion01: Explosion = {\r\n        explosionCenterFrame: [\r\n            [\"V\", \"0\", \"V\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"0\", \"V\", \"0\", \"V\"],\r\n        ],\r\n        particleFrames: [\r\n            [\r\n                [\"V\"],\r\n            ],\r\n            [\r\n                [\"V\", \"V\"]\r\n            ],\r\n        ],\r\n        angles: [160, 180, 200, 340, 0, 20],\r\n        particleFrameIndexes: [0, 1, 0, 0, 1, 0],\r\n        speed: 17,\r\n        acceleration: 1.05,\r\n        explosionCenterDelay: 30,\r\n        speeds: [], // not used, all particles travel at the same speed\r\n        useSpeed: true,\r\n    };\r\n\r\n    if (centerColor) {\r\n        Mutators.Frame.setColor(explosion01.explosionCenterFrame, centerColor);\r\n    }\r\n\r\n    if (shrapnellColor) {\r\n        Mutators.Frames.setColor(explosion01.particleFrames, shrapnellColor);\r\n    }\r\n\r\n    return explosion01;\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport Explosion from \"../Models/Explosion\";\r\n\r\n/**\r\n * Module:          Explosion02\r\n */\r\n\r\nexport default function getExplosion02(): Explosion {\r\n    const Explosion02: Explosion = {\r\n        explosionCenterFrame: [\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"0\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"0\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n        ],\r\n        particleFrames: [\r\n            [\r\n                [\"V\", \"V\"]\r\n            ],\r\n        ],\r\n        angles: [160, 180, 200, 340, 0, 20],\r\n        particleFrameIndexes: [0, 0, 0, 0, 0, 0],\r\n        speed: 12,\r\n        acceleration: 1.05,\r\n        explosionCenterDelay: 20,\r\n        speeds: [], // not used, all particles travel at the same speed\r\n        useSpeed: true,\r\n    };\r\n\r\n    return Explosion02;\r\n}","\r\n/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport Explosion from \"../Models/Explosion\";\r\nimport Mutators from \"../Utility/FrameMutators\";\r\n\r\n/**\r\n * Module:          Explosion03.\r\n */\r\n\r\nexport default function getExplosion03(): Explosion {\r\n    const explosion01: Explosion = {\r\n        explosionCenterFrame: [\r\n            [\"E\", \"A\", \"A\", \"E\"],\r\n            [\"E\", \"E\", \"E\", \"E\"],\r\n            [\"E\", \"A\", \"A\", \"E\"],\r\n        ],\r\n        particleFrames: [\r\n            [\r\n                [\"E\", \"A\"],\r\n            ],\r\n            [\r\n                [\"E\", \"E\"]\r\n            ],\r\n            [\r\n                [\"A\", \"E\"],\r\n            ],\r\n        ],\r\n        angles: [160, 180, 200, 340, 0, 20],\r\n        particleFrameIndexes: [0, 1, 0, 2, 1, 2],\r\n        speed: 17,\r\n        acceleration: 1.05,\r\n        explosionCenterDelay: 50,\r\n        speeds: [], // not used, all particles travel at the same speed\r\n        useSpeed: true,\r\n    };\r\n\r\n    return explosion01;\r\n}\r\n","\r\n/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport Explosion from \"../Models/Explosion\";\r\n\r\n/**\r\n * Module:          Explosion04\r\n */\r\n\r\nexport default function getExplosion04(): Explosion {\r\n    const explosion: Explosion = {\r\n        explosionCenterFrame: [\r\n            [\"V\", \"V\", \"0\", \"V\", \"V\"],\r\n            [\"V\", \"V\", \"0\", \"V\", \"V\"],\r\n        ],\r\n        particleFrames: [\r\n            [\r\n                [\"V\", \"V\"],\r\n            ]\r\n        ],\r\n        angles: [160, 150, 20, 30],\r\n        particleFrameIndexes: [0, 0, 0, 0],\r\n        speed: 25,\r\n        acceleration: 1.00,\r\n        explosionCenterDelay: 10,\r\n        speeds: [], // not used, all particles travel at the same speed\r\n        useSpeed: true,\r\n    };\r\n\r\n    return explosion;\r\n}\r\n","\r\n/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport Explosion from \"../Models/Explosion\";\r\n\r\n/**\r\n * Module:          Explosion05\r\n */\r\n\r\nexport default function getExplosion05(): Explosion {\r\n    const explosion: Explosion = {\r\n        explosionCenterFrame: [\r\n            [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n        ],\r\n        particleFrames: [\r\n            [\r\n                [\"V\"],\r\n            ]\r\n        ],\r\n        angles: [160, 150, 20, 30],\r\n        particleFrameIndexes: [0, 0, 0, 0],\r\n        speed: 25,\r\n        acceleration: 1.00,\r\n        explosionCenterDelay: 10,\r\n        speeds: [], // not used, all particles travel at the same speed\r\n        useSpeed: true,\r\n    };\r\n\r\n    return explosion;\r\n}\r\n","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseFrameProvider from \"../../Base/BaseFrameProvider\";\r\nimport { Frame } from \"../../Types\";\r\n\r\n/**\r\n * Module:          BackAndForthFrameProvider\r\n * Responsibility:  Provides frames. But when the last frame is given it will return the previous one until it hits the first frame.\r\n */\r\n\r\nexport default class BackAndForthFrameProvider extends BaseFrameProvider {\r\n\r\n    /**\r\n     * Returns the current frame and sets the next one. Goes back and forth between frames.\r\n     * @returns {Frame}. A frame.\r\n     */\r\n    public getNextFrame(): Frame {\r\n        this.frameIndex += this.add;\r\n\r\n        if (this.frameIndex > this.maxIndex) {\r\n            this.frameIndex = this.maxIndex;\r\n        }\r\n\r\n        if ((this.frameIndex === this.maxIndex) || this.frameIndex === 0) {\r\n            this.add *= -1;\r\n        }\r\n\r\n        return  this.getCurrentFrame();\r\n    }\r\n}","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseFrameProvider from \"../../Base/BaseFrameProvider\";\r\nimport { Frame } from \"../../Types\";\r\n\r\n/**\r\n * Module:          CircleFrameProvider\r\n * Responsibility:  Provides frame one after another, if the last frame is given it resets to the first.\r\n */\r\n\r\nexport default class CircleFrameProvider extends BaseFrameProvider {\r\n\r\n    /**\r\n     * Returns the next frame using clockwise rotation.\r\n     * @returns {Frame}. A frame.\r\n     */\r\n    public getNextFrame(): Frame {\r\n        this.frameIndex += 1;\r\n\r\n        if (this.frameIndex > this.maxIndex) {\r\n            this.frameIndex = 0;\r\n        }\r\n\r\n        return this.getCurrentFrame();\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport ILocationProvider from \"../../Interfaces/ILocationProvider\";\r\nimport { GameLocation } from \"../../Models/GameLocation\";\r\nimport { Angle } from \"../../Types\";\r\nimport { getRandomArrayElement } from \"../../Utility/Array\";\r\nimport { randomNumberInRange } from \"../../Utility/Lib\";\r\nimport { getLocation } from \"../../Utility/Location\";\r\nimport dimensionProvider from \"../DimensionProvider\";\r\n\r\n/**\r\n * Module:          AsteroidLocationProvider\r\n * Responsibility:  Provides movement for asteroids.\r\n */\r\n\r\nconst {\r\n    gameField\r\n} = dimensionProvider();\r\n\r\nexport default class AsteroidLocationProvider implements ILocationProvider {\r\n    private width: number;\r\n    private height: number;\r\n    private angles: any[];\r\n    private top: number;\r\n    private left: number;\r\n    private angle: Angle;\r\n    private speeds: number[];\r\n    private speed: number;\r\n    private maxBottom: number;\r\n    private startTop: number;\r\n\r\n    constructor(width: number, height: number, angles: Angle[], speeds: number[]) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.angles = angles;\r\n        this.speeds = speeds;\r\n\r\n        const doubleHeight =  this.height * 2;\r\n        this.top = gameField.top - doubleHeight;\r\n        this.left = this.getRandomLeft();\r\n        this.angle = getRandomArrayElement(angles);\r\n        this.speed =  getRandomArrayElement(speeds);\r\n\r\n        this.maxBottom = gameField.bottom + doubleHeight;\r\n        this.startTop = gameField.top - doubleHeight;\r\n    }\r\n\r\n    public getCurrentLocation(): GameLocation {\r\n        return {\r\n            left: this.left,\r\n            top: this.top,\r\n        };\r\n    }\r\n\r\n    public updateState(tick: number): void {\r\n        const nextLocation = getLocation(this.left, this.top, this.angle, this.speed);\r\n\r\n        this.left = nextLocation.left;\r\n        this.top = nextLocation.top;\r\n\r\n        if (this.top > this.maxBottom) {\r\n            // Reduce top by 2x height for a nice and smooth reapperance of the asteroid\r\n            this.top = this.startTop;\r\n            this.left = this.getRandomLeft();\r\n            this.angle = getRandomArrayElement(this.angles);\r\n            this.speed = getRandomArrayElement(this.speeds);\r\n        }\r\n    }\r\n\r\n    public increaseSpeed(factor: number): void {\r\n        // Does nothing.\r\n    }\r\n\r\n    private getRandomLeft(): number {\r\n        return randomNumberInRange(gameField.right - this.width, this.width);\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { angles } from \"../../Constants/Angles\";\r\nimport Guard from \"../../Guard\";\r\nimport ILocationDirectionProvider from \"../../Interfaces/ILocationDirectionProvider\";\r\nimport { GameLocation } from \"../../Models/GameLocation\";\r\nimport { appState } from \"../../State/Store\";\r\nimport { getRandomArrayElement } from \"../../Utility/Array\";\r\nimport { getLeftOrRightFromAngle } from \"../../Utility/Geometry\";\r\nimport { getNextLocationAndAngle, getLocation } from \"../../Utility/Location\";\r\nimport TickHandler from \"../../Handlers/TickHandler\";\r\n\r\n/**\r\n * Module:          DevilLocationProvider\r\n * Responsibility:  Location provider for the devil enemy.\r\n *                  This enemy moves in diagonal lines but moves down when it can fire. Then, it moves up. Also\r\n *                  It picks a random angle when it hits the top screen.\r\n */\r\n\r\nexport default class DevilLocationProvider implements ILocationDirectionProvider {\r\n    private bottomLimit: number;\r\n    private topLimit: number;\r\n    private left: number;\r\n    private top: number;\r\n    private speed: number;\r\n    private width: number;\r\n    private height: number;\r\n    private baseSpeed: number;\r\n    private angle: number;\r\n    private sideAngles: number[];\r\n\r\n    private attacking: boolean;\r\n    private recovering: boolean;\r\n    constructor(\r\n        left: number,\r\n        top: number,\r\n        speed: number,\r\n        sideAngles: number[],\r\n        width: number,\r\n        height: number,\r\n        topLimit: number,\r\n        bottomLimit: number) {\r\n\r\n        this.left = left;\r\n        this.top = top;\r\n        this.speed = speed;\r\n        this.baseSpeed = speed;\r\n        this.sideAngles = sideAngles;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.angle = getRandomArrayElement(sideAngles);\r\n        this.topLimit = topLimit;\r\n        this.bottomLimit = bottomLimit;\r\n\r\n        this.attacking = false;\r\n        this.recovering = false;\r\n    }\r\n    public getDirection(): \"left\" | \"right\" | undefined {\r\n        return getLeftOrRightFromAngle(this.angle);\r\n    }\r\n\r\n    /**\r\n     * Returns the current location\r\n     * @returns {GameLocation}. The location.\r\n     */\r\n    public getCurrentLocation(): GameLocation {\r\n        return { left: this.left, top: this.top };\r\n    }\r\n\r\n    /**\r\n     * Increases movement speed.\r\n     * @param {number} factor. Factor.\r\n     */\r\n\r\n    public increaseSpeed(factor: number): void {\r\n        this.speed = this.baseSpeed * factor;\r\n    }\r\n\r\n    /**\r\n     * Updates the state\r\n     * @param {number} tick. Current tick\r\n     */\r\n    public updateState(tick: number): void {\r\n\r\n        const {\r\n            playerState\r\n        } = appState();\r\n\r\n        if (Guard.isPlayerAlive(playerState)) {\r\n            const { hitboxes: { bottom: playerBottomHixbox } } = playerState;\r\n\r\n            // When the player moves underneath this enemy it moves down to attcck except when it is going up after an attack or if it is still attacking.\r\n            if (this.left > playerBottomHixbox.left &&\r\n                this.left < playerBottomHixbox.right &&\r\n                this.recovering === false && this.attacking === false) {\r\n                this.angle = angles.down;\r\n                this.attacking = true;\r\n\r\n            } else if (this.top - this.height <= this.topLimit && this.recovering) {\r\n\r\n                // The enemy finished moving up so it's recovered from an attack.\r\n                this.recovering = false;\r\n                this.angle = getRandomArrayElement(this.sideAngles);\r\n\r\n            } else if (this.top >= this.bottomLimit && this.attacking) {\r\n                // The enemy has hit the bottom limit while doing an attack, now it must recover.\r\n                this.recovering = true;\r\n\r\n                // Attack done. Time  to recover.\r\n                this.attacking = false;\r\n                this.angle = angles.up;\r\n            }\r\n        }\r\n\r\n        // Regular movement.\r\n        if (!this.attacking && !this.recovering) {\r\n            const { location: { left, top }, angle } = getNextLocationAndAngle(\r\n                this.left,\r\n                this.top,\r\n                this.angle,\r\n                this.speed,\r\n                this.width,\r\n                this.height,\r\n                this.topLimit,\r\n                this.bottomLimit\r\n            );\r\n\r\n            this.left = left;\r\n            this.top = top;\r\n            this.angle = angle;\r\n        } else {\r\n            // On the attack or on recovert.\r\n            const { left, top } = getLocation(this.left, this.top, this.angle, this.speed);\r\n            this.left = left;\r\n            this.top = top;\r\n        }\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Actions\r\n * Responsibility:  Action definitions for the Keyboard State\r\n */\r\n\r\nimport { GameKeys } from \"../../Utility/KeyboardEvents\";\r\nimport Constants from \"./KeyboardConstants\";\r\nimport { KeyDown, KeyUp } from \"./KeyboardTypes\";\r\n\r\nexport function keyDown(key: GameKeys): KeyDown {\r\n    return {\r\n        type: Constants.keydown,\r\n        payload: key,\r\n    };\r\n}\r\n\r\nexport function keyUp(key: GameKeys): KeyUp {\r\n    return {\r\n        type: Constants.keyup,\r\n        payload: key\r\n    };\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseLocationProvider from \"../../Base/BaseLocationProvider\";\r\nimport { GameLocation } from \"../../Models/GameLocation\";\r\nimport { getLocation } from \"../../Utility/Location\";\r\n\r\n/**\r\n * Module:          MoveDownAppearUp\r\n * Responsibility:  A location provider where the enemy moves down to a certain point and then reappears at the top of the screen.\r\n *                  Enemies will bounce from up to down a few times just like the original game.\r\n */\r\n\r\nexport default class MoveDownAppearUpLocationProvider extends BaseLocationProvider {\r\n    private maxTop: number;\r\n    private maxBottom: number;\r\n\r\n    /**\r\n     * Constructs the immobile location provider.\r\n     */\r\n    constructor(left: number, top: number, speed: number, angle: number, width: number, height: number, maxTop: number, maxBottom: number) {\r\n        super(left, top, speed, angle, width, height);\r\n\r\n        this.maxTop = 0;\r\n        this.maxBottom = maxBottom;\r\n    }\r\n\r\n    /**\r\n     * Returns the given location.\r\n     */\r\n    public getCurrentLocation(): GameLocation {\r\n\r\n        if (this.top + this.height > this.maxBottom) {\r\n            this.top = this.maxTop;\r\n        }\r\n\r\n        return getLocation(this.left, this.top, this.angle, this.speed);\r\n    }\r\n\r\n    public updateState(tick: number): void {\r\n        const { left, top } = getLocation(this.left, this.top, this.angle, this.speed);\r\n        this.left = left;\r\n        this.top = top;\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseLocationProvider from \"../../Base/BaseLocationProvider\";\r\nimport { getLeftOrRightFromAngle } from \"../../Utility/Geometry\";\r\nimport { getLocation, getNextLocationWithinBoundaries } from \"../../Utility/Location\";\r\nimport dimensionProvider from \"../DimensionProvider\";\r\n\r\n/**\r\n * Module:          Left to right, then left.\r\n * Responsibility:  Location provider for enemies that move from left to right and up then down.\r\n */\r\n\r\nconst {\r\n    gameField\r\n} = dimensionProvider();\r\n\r\nexport default class SideAppearOtherSideLocationProvider extends BaseLocationProvider {\r\n    private maxTop: number;\r\n    private maxBottom: number;\r\n\r\n    /**\r\n     *\r\n     */\r\n    constructor(\r\n        left: number,\r\n        top: number,\r\n        speed: number,\r\n        angle: number,\r\n        width: number,\r\n        height: number,\r\n        maxTop: number,\r\n        maxBottom: number) {\r\n        super(left, top, speed, angle, width, height);\r\n\r\n        this.maxTop = maxTop;\r\n        this.maxBottom = maxBottom;\r\n    }\r\n\r\n    public updateState(tick: number): void {\r\n        const { left, top } = getNextLocationWithinBoundaries(\r\n            this.left,\r\n            this.top,\r\n            this.width,\r\n            this.angle,\r\n            this.speed,\r\n            this.maxTop,\r\n            this.maxBottom\r\n        );\r\n\r\n        this.left = left;\r\n        this.top = top;\r\n    }\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport IGetCurrentIndex from \"../../Interfaces/IGetCurrentFrame\";\r\nimport ILocationProvider from \"../../Interfaces/ILocationProvider\";\r\nimport { GameLocation } from \"../../Models/GameLocation\";\r\nimport { getNextLocationWithinBoundaries } from \"../../Utility/Location\";\r\nimport dimensionProvider from \"../DimensionProvider\";\r\n\r\n/**\r\n * Module:          SideAppearOtherSideVariesSpeed\r\n * Responsibility:  A location provider where the enemies move to one side and reappear at the other side, but depending on the current frame have different movement\r\n *                  speeds\r\n */\r\n\r\nconst {\r\n    gameField\r\n} = dimensionProvider();\r\n\r\nexport default class SideAppearOtherSideVariesSpeed implements ILocationProvider {\r\n\r\n    /**\r\n     * A function that returns the index of the frame currently being rendered.\r\n     */\r\n    private indexProvider: IGetCurrentIndex;\r\n\r\n    /**\r\n     * Left position.\r\n     */\r\n    private left: number;\r\n\r\n    /**\r\n     * Top position\\.\r\n     */\r\n    private top: number;\r\n\r\n    /**\r\n     * Movement angle.\r\n     */\r\n    private angle: number;\r\n\r\n    /**\r\n     * Object width.\r\n     */\r\n    private width: number;\r\n\r\n    /**\r\n     * Maximum top position.\r\n     */\r\n    private maxTop: number;\r\n\r\n    /**\r\n     * Maximum bottom position.\r\n     */\r\n    private maxBottom: number;\r\n\r\n    /**\r\n     * Initial slow speed.\r\n     */\r\n    private baseSlowSpeed: number;\r\n\r\n    /**\r\n     * Initial fast speed.\r\n     */\r\n    private baseFastSpeed: number;\r\n\r\n    /**\r\n     * Current slow speed.\r\n     */\r\n    private slowSpeed: number;\r\n\r\n    /**\r\n     * Current fast speed.\r\n     */\r\n    private fastSpeed: number;\r\n\r\n    /**\r\n     * Frame indexes where to use the slow speed.\r\n     */\r\n    private slowFrames: number[];\r\n\r\n    /**\r\n     * Frame indexes where to use the fast speed.\r\n     */\r\n    private fastFrames: number[];\r\n    /**\r\n     *\r\n     */\r\n    constructor(\r\n        left: number,\r\n        top: number,\r\n        angle: number,\r\n        width: number,\r\n        maxTop: number,\r\n        maxBottom: number,\r\n        indexProvider: IGetCurrentIndex,\r\n        slowSpeed: number,\r\n        fastSpeed: number,\r\n        slowFrames: number[],\r\n        fastFrames: number[]) {\r\n\r\n        this.left = left;\r\n        this.top = top;\r\n        this.angle = angle;\r\n        this.width = width;\r\n        this.maxTop = maxTop;\r\n        this.maxBottom = maxBottom;\r\n        this.indexProvider = indexProvider;\r\n\r\n        this.baseSlowSpeed = slowSpeed;\r\n        this.baseFastSpeed = fastSpeed;\r\n\r\n        this.slowSpeed = slowSpeed;\r\n        this.fastSpeed = fastSpeed;\r\n\r\n        this.slowFrames = slowFrames;\r\n        this.fastFrames = fastFrames;\r\n    }\r\n\r\n    public getCurrentLocation(): GameLocation {\r\n        return { left: this.left, top: this.top };\r\n\r\n    }\r\n    public updateState(tick?: number | undefined): void {\r\n        const currentFrameIndex = this.indexProvider.getCurrentIndex();\r\n\r\n        let speed = 0;\r\n        if (this.slowFrames.indexOf(currentFrameIndex) > -1) {\r\n            speed = this.slowSpeed;\r\n        } else if (this.fastFrames.indexOf(currentFrameIndex) > -1) {\r\n            speed = this.fastSpeed;\r\n        } else {\r\n            throw new Error(\"Index \" + currentFrameIndex + \" was not found in the slowFrames or fastFrames array\");\r\n        }\r\n\r\n        const { left, top } = getNextLocationWithinBoundaries(\r\n            this.left,\r\n            this.top,\r\n            this.width,\r\n            this.angle,\r\n            speed,\r\n            this.maxTop,\r\n            this.maxBottom\r\n        );\r\n\r\n        this.left = left;\r\n        this.top = top;\r\n    }\r\n\r\n    /**\r\n     * increases the speed by the provided factor.\r\n     * @param {number} factor.\r\n     */\r\n    public increaseSpeed(factor: number): void {\r\n        this.slowSpeed = this.baseSlowSpeed * factor;\r\n        this.fastSpeed = this.baseFastSpeed * factor;\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseLocationProvider from \"../../Base/BaseLocationProvider\";\r\nimport ILocationProvider from \"../../Interfaces/ILocationProvider\";\r\nimport { getNextLocationAndAngle } from \"../../Utility/Location\";\r\nimport dimensionProvider from \"../DimensionProvider\";\r\n\r\n/**\r\n * Module:          SideToSideUpAndDown\r\n * Responsibility:  Location provider for enemies that move from left to right and up then down.\r\n */\r\n\r\nconst {\r\n    gameField,\r\n} = dimensionProvider();\r\n\r\nexport default class SideToSideUpAndDownLocationProvider extends BaseLocationProvider implements ILocationProvider {\r\n    private bottomLimit: number;\r\n    private topLimit: number;\r\n\r\n    constructor(left: number, top: number, speed: number, angle: number, width: number, height: number, topLimit: number, bottomLimit: number) {\r\n        super(left, top, speed, angle, width, height);\r\n\r\n        this.topLimit = topLimit;\r\n        this.bottomLimit = bottomLimit;\r\n    }\r\n\r\n    public updateState(tick: number): void {\r\n        const { location: { left, top}, angle} = getNextLocationAndAngle(\r\n            this.left,\r\n            this.top,\r\n            this.angle,\r\n            this.speed,\r\n            this.width,\r\n            this.height,\r\n            this.topLimit,\r\n            this.bottomLimit\r\n        );\r\n\r\n        this.left = left;\r\n        this.top = top;\r\n        this.angle = angle;\r\n    }\r\n}\r\n","import BaseLocationProvider from \"../../Base/BaseLocationProvider\";\r\nimport { getAngles } from \"../../Constants/Angles\";\r\nimport { getRandomArrayElement } from \"../../Utility/Array\";\r\nimport { getLocation } from \"../../Utility/Location\";\r\nimport dimensionProvider from \"../DimensionProvider\";\r\n\r\nconst {\r\n    gameField\r\n} = dimensionProvider();\r\n\r\nexport default class Wobble extends BaseLocationProvider {\r\n\r\n    private angleSwitchTimeout: number;\r\n\r\n    private lastTick: number = 0;\r\n    private angles: number[];\r\n\r\n    constructor(left: number, top: number, speed: number, angle: number, width: number, height: number, angleSwitchTimeout: number) {\r\n        super(left, top, speed, angle, width, height);\r\n\r\n        this.angleSwitchTimeout = angleSwitchTimeout;\r\n\r\n        this.angles = getAngles();\r\n    }\r\n\r\n    public updateState(tick: number): void {\r\n\r\n        if (tick > this.angleSwitchTimeout + this.lastTick) {\r\n            this.angle = getRandomArrayElement(this.angles);\r\n            this.lastTick = tick;\r\n        }\r\n\r\n        const newLocation = getLocation(this.left, this.top, this.angle, this.speed);\r\n\r\n        if (newLocation.left <= gameField.left || newLocation.left + this.width >= gameField.right) {\r\n            this.angle = 180 - this.angle;\r\n        }\r\n\r\n        if (newLocation.top <= gameField.top || newLocation.top >= gameField.bottom - this.height) {\r\n            this.angle *= -1;\r\n        }\r\n\r\n        const nextLocation = getLocation(this.left, this.top, this.angle, this.speed);\r\n        this.left = nextLocation.left;\r\n        this.top = nextLocation.top;\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport speedProvider from \"../Providers/SpeedProvider\";\r\nimport { calculateAngle } from \"../Utility/Geometry\";\r\nimport { calculateDistance, getLocation } from \"../Utility/Location\";\r\n\r\n/**\r\n * Module:          GetPhaserFrames\r\n * Responsibility:  Calculate the game locations to draw a phaser beam.\r\n */\r\n\r\nconst {\r\n    pixelSize\r\n} = dimensionProvider();\r\n\r\nexport default function getPhaserLocations(sourceLeft: number, sourceTop: number, targetLeft: number, targetTop: number): Array<{left: number, top: number}> {\r\n\r\n    // offset left by one game pixel to ensure the phaser appears at the nozzle of the ship.\r\n    const angle = calculateAngle(sourceLeft, sourceTop, targetLeft, targetTop);\r\n    let distance = calculateDistance(sourceLeft, sourceTop, targetLeft, targetTop);\r\n\r\n    let left = sourceLeft;\r\n    let top = sourceTop;\r\n\r\n    const returnValue: Array<{left: number, top: number}> = [];\r\n\r\n    while (distance >= 0) {\r\n        returnValue.push(getLocation(left, top, angle, pixelSize));\r\n        distance -= speedProvider(pixelSize);\r\n        const nextLocation = getLocation(left, top, angle, pixelSize);\r\n        left = nextLocation.left;\r\n        top = nextLocation.top;\r\n    }\r\n\r\n    return returnValue;\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { GameRectangle } from \"../Models/GameRectangle\";\r\nimport { PlayerHitboxes } from \"../State/Player/PlayerState\";\r\nimport { overlaps } from \"../Utility/Geometry\";\r\n\r\n/**\r\n * Module:          PlayerHelper\r\n * Responsibility:  Helper functions to aid with player related logic.\r\n */\r\n\r\n/**\r\n * Determines if one of the player's hitboxes overlaps with the provided hitbox.\r\n * @export\r\n * @param {PlayerHitboxes} playerHitboxes. The player's hitboxes.\r\n * @param {GameRectangle} hitbox. Another hitbox.\r\n * @returns {boolean}. True if there's overlap. False other or if any of the hitboxes is undefined.\r\n */\r\nexport function playerIsHit(playerHitboxes: PlayerHitboxes | undefined, hitbox: GameRectangle | undefined): boolean {\r\n    if (playerHitboxes === undefined) {\r\n        return false;\r\n    }\r\n\r\n    if (hitbox === undefined) {\r\n        return false;\r\n    }\r\n\r\n    const hitMiddle = overlaps(playerHitboxes.middle, hitbox);\r\n    const hitBottom = overlaps(playerHitboxes.bottom, hitbox);\r\n\r\n    return hitMiddle || hitBottom;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { Frame } from \"../Types\";\r\nimport Mutators from \"../Utility/FrameMutators\";\r\n\r\n/**\r\n * Module:          Characters\r\n * Responsibility:  Define character frames. A to Z with some other characters\r\n *                  All these are all frames which can be rendered directly.\r\n *                  on screen using the renderFrame function.\r\n *                  Their colors are \"V\". Meaning \"Variant\" so they\r\n *                  can be set with a single function call.\r\n */\r\n\r\nexport default function getCharacters(color: string): Frame[] {\r\n    const Characters: Frame[] = [\r\n        [\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n        ],\r\n        [\r\n            [\"0\", \"V\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"0\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"V\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\"],\r\n            [\"0\", \"V\", \"0\"],\r\n            [\"0\", \"V\", \"0\"],\r\n            [\"0\", \"V\", \"0\"],\r\n            [\"V\", \"V\", \"V\"],\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"0\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"V\", \"0\"],\r\n            [\"V\", \"V\", \"0\", \"0\"],\r\n            [\"V\", \"0\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"0\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"V\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n        ],\r\n        [\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n        ],\r\n        [\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"V\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"V\"],\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n        ],\r\n        [\r\n            [\"0\", \"V\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"0\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\", \"V\", \"V\"],\r\n            [\"0\", \"0\", \"V\", \"0\", \"0\"],\r\n            [\"0\", \"0\", \"V\", \"0\", \"0\"],\r\n            [\"0\", \"0\", \"V\", \"0\", \"0\"],\r\n            [\"0\", \"0\", \"V\", \"0\", \"0\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"0\", \"V\", \"0\"],\r\n            [\"0\", \"V\", \"0\", \"V\", \"0\"],\r\n            [\"0\", \"0\", \"V\", \"0\", \"0\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"V\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"V\", \"0\"],\r\n            [\"0\", \"V\", \"0\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"0\", \"V\", \"0\"],\r\n            [\"0\", \"0\", \"V\", \"0\", \"0\"],\r\n            [\"0\", \"V\", \"0\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"0\", \"V\", \"0\"],\r\n            [\"0\", \"0\", \"V\", \"0\", \"0\"],\r\n            [\"0\", \"0\", \"V\", \"0\", \"0\"],\r\n            [\"0\", \"0\", \"V\", \"0\", \"0\"],\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"0\", \"0\", \"V\", \"0\"],\r\n            [\"0\", \"V\", \"0\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n        ],\r\n        [\r\n            [\"0\"],\r\n            [\"0\"],\r\n            [\"0\"],\r\n            [\"0\"],\r\n            [\"0\"],\r\n        ],\r\n    ];\r\n\r\n    Mutators.Frames.setColor(Characters, color);\r\n    return Characters;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { Frame } from \"../Types\";\r\n\r\n/**\r\n * Module:          getCharacter\r\n * Responsibility:  Return a character\r\n */\r\n\r\n/**\r\n * Get character\r\n * @param {Frame[]} frames. Character frames.\r\n * @param {string} character. Character frame to rturn.\r\n * @returns {Frame}. Character frame.\r\n */\r\nexport default function getCharacter(frames: Frame[], character: string): Frame {\r\n    const upperCaseCharacter = character.toUpperCase();\r\n\r\n    if (upperCaseCharacter === \"SPACE\") {\r\n        return frames[character.length - 1];\r\n    } else {\r\n        const cc = upperCaseCharacter.charCodeAt(0) - 65;\r\n        return frames[cc];\r\n    }\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseEnemy from \"../Base/BaseEnemy\";\r\nimport CGAColors from \"../Constants/CGAColors\";\r\nimport { Speeds } from \"../Constants/Constants\";\r\nimport orbSpawnLocations from \"../Enemies/Orb/OrbEnemiesSpawnLocations\";\r\nimport pistonSpawnLocations from \"../Enemies/Piston/PistonSpawnLocations\";\r\nimport robotSpawnLocations from \"../Enemies/Robot/RobotSpawnLocations\";\r\nimport BulletRunner from \"../Runners/BulletRunner\";\r\nimport { Enemies } from \"../Types\";\r\nimport enemyFactory from \"./EnemyFactory\";\r\nimport devilShipsToFire from \"./ShipsToFireProviders/DevilShipsToFire\";\r\nimport firstEnemyOccasionalDown from \"./ShipsToFireProviders/FirstEnemyOccasionalDown\";\r\nimport maxFiveDiagonal from \"./ShipsToFireProviders/MaxFiveDiagonal\";\r\nimport maxThreeDown from \"./ShipsToFireProviders/MaxThreeDown\";\r\nimport sevenSixSeverGridProvider from \"./SpawnLocations/SevenSixSevenGridProvider\";\r\n\r\n/**\r\n * Module:          EnemyFactory\r\n * Responsibility:  Create enemy objects\r\n */\r\n\r\nexport function enemyLevelContentFactory(enemy: Enemies): { bulletRunner?: BulletRunner, enemies: BaseEnemy[] } {\r\n    switch (enemy) {\r\n        case \"bird\": {\r\n            const enemies = sevenSixSeverGridProvider().map((location) => enemyFactory(\"bird\", location));\r\n            return {\r\n                enemies,\r\n            };\r\n        }\r\n\r\n        case \"robot\": {\r\n            const enemies = robotSpawnLocations.map((location) => enemyFactory(\"robot\", location));\r\n            const bulletRunner = new BulletRunner(CGAColors.lightRed, Speeds.Bullets.robot, firstEnemyOccasionalDown);\r\n\r\n            return {\r\n                enemies,\r\n                bulletRunner,\r\n            };\r\n        }\r\n\r\n        case \"orb\": {\r\n            const enemies = [orbSpawnLocations.map((location) => enemyFactory(\"orb\", location))[0]];\r\n            const bulletRunner = new BulletRunner(CGAColors.magenta, Speeds.Bullets.orb, maxFiveDiagonal);\r\n\r\n            return {\r\n                enemies,\r\n                bulletRunner,\r\n            };\r\n        }\r\n\r\n        case \"spinner\": {\r\n\r\n            const enemies = sevenSixSeverGridProvider().map((location) => enemyFactory(\"spinner\", location));\r\n            const bulletRunner = new BulletRunner(CGAColors.white, Speeds.Bullets.spinner, maxFiveDiagonal);\r\n\r\n            return {\r\n                enemies,\r\n                bulletRunner,\r\n            };\r\n        }\r\n\r\n        case \"balloon\": {\r\n\r\n            const enemies = sevenSixSeverGridProvider().map((location) => enemyFactory(\"balloon\", location));\r\n            const bulletRunner = new BulletRunner(CGAColors.blue, Speeds.Bullets.balloon, maxFiveDiagonal);\r\n\r\n            return {\r\n                enemies,\r\n                bulletRunner\r\n            };\r\n        }\r\n\r\n        case \"asteroid-down\": {\r\n            const enemies: BaseEnemy[] = [];\r\n\r\n            for (let i = 0; i < 7; i++) {\r\n                enemies.push(enemyFactory(\"asteroid-down\"));\r\n            }\r\n\r\n            return {\r\n                enemies\r\n            };\r\n        }\r\n\r\n        case \"piston\": {\r\n            const enemies = pistonSpawnLocations.map((rl) => enemyFactory(\"piston\", rl));\r\n            const bulletRunner = new BulletRunner(CGAColors.blue, Speeds.Bullets.balloon, maxThreeDown);\r\n\r\n            return {\r\n                enemies,\r\n                bulletRunner\r\n            };\r\n        }\r\n\r\n        case \"diabolo\": {\r\n            const enemies = sevenSixSeverGridProvider().map((location) => enemyFactory(\"diabolo\", location));\r\n            const bulletRunner = new BulletRunner(CGAColors.yellow, Speeds.Bullets.diabolo, maxFiveDiagonal);\r\n\r\n            return {\r\n                enemies,\r\n                bulletRunner\r\n            };\r\n        }\r\n\r\n        case \"spacemonster-down\": {\r\n            const enemies: BaseEnemy[] = [];\r\n\r\n            for (let i = 0; i < 7; i++) {\r\n                enemies.push(enemyFactory(\"spacemonster-down\"));\r\n            }\r\n\r\n            return {\r\n                enemies\r\n            };\r\n        }\r\n\r\n        case \"devil\": {\r\n\r\n            const enemies = sevenSixSeverGridProvider().map((location) => enemyFactory(\"devil\", location));\r\n            const bulletRunner = new BulletRunner(CGAColors.lightGreen, Speeds.Bullets.devil, devilShipsToFire);\r\n\r\n            return {\r\n                enemies,\r\n                bulletRunner,\r\n            };\r\n        }\r\n\r\n        default:\r\n            throw new Error(`Unknown enemy ${enemy}`);\r\n    }\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { Locations } from \"../../Constants/Constants\";\r\nimport { GameLocation } from \"../../Models/GameLocation\";\r\nimport dimensionProvider from \"../../Providers/DimensionProvider\";\r\n\r\n/**\r\n * Module:          OrbSpawnLocations\r\n * Responsibility:  Returns the orb spawn locations.\r\n */\r\n\r\nconst {\r\n    pixelSize,\r\n} = dimensionProvider();\r\n\r\nconst orbSpawnLocations: GameLocation[] = [];\r\nconst top = Locations.Enemies.Orb.topStart;\r\nlet left = pixelSize * 16;\r\nconst spacing = pixelSize * 6;\r\n\r\nfor (let i = 0; i < 22; i++) {\r\n    const value = {\r\n        left,\r\n        top,\r\n    };\r\n\r\n    left += spacing;\r\n\r\n    orbSpawnLocations.push(value);\r\n}\r\n\r\nexport default orbSpawnLocations;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { Locations } from \"../../Constants/Constants\";\r\nimport { GameLocation } from \"../../Models/GameLocation\";\r\nimport dimensionProvider from \"../../Providers/DimensionProvider\";\r\n\r\n/**\r\n * Module:          PistonSpawnLocations\r\n * Responsibility:  Returns the Piston spawn locations.\r\n */\r\n\r\nconst {\r\n    gameField,\r\n    pixelSize,\r\n} = dimensionProvider();\r\n\r\nconst pistonSpawnLocations: GameLocation[] = [];\r\nconst top = Locations.Enemies.Piston.topStart;\r\nlet left = gameField.left + pixelSize * 18;\r\nconst spacing = pixelSize * 12;\r\n\r\nfor (let i = 0; i < 11; i++) {\r\n\r\n    const value = {\r\n        left,\r\n        top,\r\n    };\r\n\r\n    left += spacing;\r\n\r\n    pistonSpawnLocations.push(value);\r\n}\r\n\r\nexport default pistonSpawnLocations;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { Locations } from \"../../Constants/Constants\";\r\nimport { GameLocation } from \"../../Models/GameLocation\";\r\nimport dimensionProvider from \"../../Providers/DimensionProvider\";\r\nimport { getFrameDimensions } from \"../../Utility/Frame\";\r\nimport getRobotOffsetFrames from \"./GetRobotOffsetFrames\";\r\n\r\n/**\r\n * Module:          RobotSpawnLocations\r\n * Responsibility:  Returns the robot spawn locations.\r\n */\r\n\r\nconst {\r\n    pixelSize,\r\n} = dimensionProvider();\r\n\r\nconst robotSpawnLocations: GameLocation[] = [];\r\n\r\nconst top = Locations.Enemies.robot.topStart;\r\nlet left = pixelSize * 12;\r\nconst spacing = pixelSize * 8;\r\n\r\nfor (let i = 0; i < 14; i++) {\r\n\r\n    const value = {\r\n        left,\r\n        top,\r\n    };\r\n\r\n    left += spacing;\r\n\r\n    robotSpawnLocations.push(value);\r\n}\r\n\r\nexport default robotSpawnLocations;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport getTwoPixelBullet from \"../SharedFrames/twoPXBullet\";\r\nimport { addBullet, addOrUpdateEnemy } from \"../State/EnemyLevel/EnemyLevelActions\";\r\nimport { StateProviders } from \"../State/StateProviders\";\r\nimport { appState, dispatch } from \"../State/Store\";\r\nimport { Frame, ShipsToFireFunction } from \"../Types\";\r\nimport Mutators from \"../Utility/FrameMutators\";\r\n\r\n/**\r\n * Module:          StraightDownBulletProvider\r\n * Responsibility:  Shoots a bullet straight down\r\n */\r\n\r\nconst {\r\n    pixelSize\r\n} = dimensionProvider();\r\n\r\n/**\r\n * Class the handles al bullet business.\r\n * @export\r\n * @class BulletRunner\r\n */\r\nexport default class BulletRunner {\r\n    /**\r\n     * The bullet frame that will be fired.\r\n     */\r\n    private coloredBulletFrame: Frame;\r\n\r\n    /**\r\n     * Speed of the bullets shot by the enemy.\r\n     */\r\n    private speed: number;\r\n\r\n    /**\r\n     * The color of the bullet fired.\r\n     */\r\n    private bulletColor: string;\r\n\r\n    /**\r\n     * A function that provides an array of ships that will fire and the angle at which they will fire.\r\n     */\r\n    private shipsToFire: ShipsToFireFunction;\r\n\r\n    /**\r\n     * Creates an instance of BulletRunner.\r\n     * @param {FrameProviderFunction} getBulletFrame. A function that returns a bullet frame.\r\n     * @param {string} bulletColor. The color of the bullet.\r\n     * @param {number} speed. The speed of the bullet.\r\n     * @param {ShipsToFireFunction} shipsToFire. A function that returns shits that can fire.\r\n     * @param {FireCheckFunction} fireCheck. A function that checks individual ships if they can fire.\r\n     * @memberof BulletRunner\r\n     */\r\n    constructor(\r\n        bulletColor: string,\r\n        speed: number,\r\n        shipsToFire: ShipsToFireFunction) {\r\n\r\n        this.speed = speed;\r\n        this.bulletColor = bulletColor;\r\n        this.shipsToFire = shipsToFire;\r\n\r\n        this.coloredBulletFrame = getTwoPixelBullet();\r\n        Mutators.Frame.setColor(this.coloredBulletFrame, this.bulletColor);\r\n    }\r\n\r\n    /**\r\n     * Determines which enemies can fire and how. Then dispatches bullets to the state.\r\n     * @param {number} tick. Current tick.\r\n     */\r\n    public updateState(tick: number): void {\r\n\r\n        const {\r\n            playerState: { alive}\r\n        } = appState();\r\n\r\n        // Enemies do not fire when the player is dead.\r\n        if (!alive) {\r\n            return;\r\n        }\r\n\r\n        const shipsToFire = this.shipsToFire(tick);\r\n\r\n        // The candiates are sorted so the enemeies with the best odds of hitting the player\r\n        // are at the top. Now we'll use the firecheck function to get an array of enemies that\r\n        // can actually fire.\r\n        for (const shipToFire of shipsToFire) {\r\n\r\n            const { angle, enemy: { hitbox, enemyId }, enemy } = shipToFire;\r\n\r\n            if (angle !== undefined) {\r\n\r\n                const left = hitbox.left + ((hitbox.right - hitbox.left) / 2) - pixelSize;\r\n                const top = hitbox.bottom + pixelSize;\r\n\r\n                const bullet = StateProviders.getBulletParticleState(\r\n                    left,\r\n                    top,\r\n                    this.speed,\r\n                    angle,\r\n                    this.coloredBulletFrame,\r\n                    enemyId,\r\n                );\r\n\r\n                dispatch(addBullet(bullet));\r\n            }\r\n        }\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { angles } from \"../../Constants/Angles\";\r\nimport Guard from \"../../Guard\";\r\nimport ShipToFire from \"../../ShipsToFire\";\r\nimport { EnemyState } from \"../../State/EnemyLevel/EnemyState\";\r\nimport { appState } from \"../../State/Store\";\r\nimport dimensionProvider from \"../DimensionProvider\";\r\n\r\n/**\r\n * Module:          Devil\r\n * Responsibility:  Ships to fire function for the devil enemy.\r\n */\r\n\r\nconst maxBullets = 3;\r\n\r\nconst {\r\n    pixelSize2x\r\n} = dimensionProvider();\r\n\r\n/**\r\n * A function that selects the orbs that should fire.\r\n * @param {number} tick. Current tick\r\n */\r\nexport default function devilShipsToFire(tick: number): ShipToFire[] {\r\n\r\n    const {\r\n        enemyLevelState: { bullets, enemies },\r\n    } = appState();\r\n    const returnValue: ShipToFire[] = [];\r\n\r\n    const remainingBullets = maxBullets - bullets.length;\r\n\r\n    if (remainingBullets === 0) {\r\n        return returnValue;\r\n    }\r\n\r\n    const candidates = getCandidates();\r\n\r\n    if (candidates.length === 0) {\r\n        return returnValue;\r\n    }\r\n\r\n    const enemyToFire = candidates[0];\r\n\r\n    if (enemyToFire !== undefined) {\r\n        const queuedTofire = returnValue.find((e) => e.enemy.enemyId === enemyToFire.enemyId) !== undefined;\r\n        const mayFire = enemies.length < maxBullets || !bullets.some((bullet) => bullet.owner === enemyToFire.enemyId);\r\n        if (!queuedTofire && mayFire) {\r\n            returnValue.push({ enemy: enemyToFire, angle: angles.down });\r\n        }\r\n    }\r\n\r\n    return returnValue;\r\n}\r\n\r\nfunction getCandidates(): EnemyState[] {\r\n\r\n    const {\r\n        enemyLevelState: { enemies },\r\n        playerState\r\n    } = appState();\r\n    if (!Guard.isPlayerAlive(playerState)) {\r\n        return [];\r\n    }\r\n\r\n    const { hitboxes: { bottom: bottomhitbox } } = playerState;\r\n\r\n    return enemies.filter((enemy) => enemy.hitbox.left + pixelSize2x >= bottomhitbox.left && enemy.hitbox.right <= bottomhitbox.right + pixelSize2x);\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { angles } from \"../../Constants/Angles\";\r\nimport ShipToFire from \"../../ShipsToFire\";\r\nimport { appState } from \"../../State/Store\";\r\n\r\n/**\r\n * Module:          firstEnemyOccasionalDown\r\n * Responsibility:  First enemy shoots a bullet downs on occasion.\r\n */\r\n\r\nexport default function firstEnemyOccasionalDown(): ShipToFire[] {\r\n    const {\r\n        enemies: enemyState,\r\n    } = appState().enemyLevelState;\r\n\r\n    const returnValue: ShipToFire[] = [];\r\n\r\n    const lastEnemy = enemyState[enemyState.length - 1];\r\n\r\n    if (lastEnemy !== undefined) {\r\n        const rnd = Math.ceil(Math.random() * 20);\r\n        if (rnd === 1) {\r\n            returnValue.push({ enemy: lastEnemy, angle: angles.down });\r\n        }\r\n    }\r\n\r\n    return returnValue;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          MaxFiveDiagonal\r\n * Responsibility:  Provides 5 enemies to fire.\r\n */\r\n\r\nimport { angles } from \"../../Constants/Angles\";\r\nimport Guard from \"../../Guard\";\r\nimport ShipToFire from \"../../ShipsToFire\";\r\nimport { EnemyState } from \"../../State/EnemyLevel/EnemyState\";\r\nimport { appState } from \"../../State/Store\";\r\nimport { Angle } from \"../../Types\";\r\nimport { calculateAngle, calculateAngleDifference } from \"../../Utility/Geometry\";\r\n\r\nconst maxBullets = 5;\r\n\r\ntype Candidates = Array<{ enemy: EnemyState, angleDifference: number, angle: number }>;\r\n\r\n/**\r\n * A function that selects the orbs that should fire.\r\n * @param {number} tick. Current tick\r\n */\r\nexport default function maxFiveDiagonal(tick: number): ShipToFire[] {\r\n\r\n    const {\r\n        enemyLevelState: { bullets, enemies }\r\n    } = appState();\r\n\r\n    const returnValue: ShipToFire[] = [];\r\n    const bulletsToFire = maxBullets - bullets.length;\r\n\r\n    if (bulletsToFire === 0) {\r\n        return returnValue;\r\n    }\r\n\r\n    const candidates = getBestCandiates(tick);\r\n\r\n    if (candidates.length === 0) {\r\n        return returnValue;\r\n    }\r\n\r\n    for (let b = 0; b < bulletsToFire; b++) {\r\n\r\n        let index = b;\r\n\r\n        // If the number of bullets is more than the candidates the best\r\n        // Candidate gets to fire.\r\n        if (candidates.length <= b) {\r\n            index = 0;\r\n        }\r\n\r\n        const candiate = candidates[index];\r\n        const { enemy, angle } = candiate;\r\n\r\n        const queuedTofire = returnValue.find((e) => e.enemy.enemyId === enemy.enemyId) !== undefined;\r\n        const mayFire = !bullets.some((bullet) => bullet.owner === enemy.enemyId) || enemies.length < maxBullets;\r\n\r\n        if (!queuedTofire && mayFire) {\r\n            returnValue.push({ enemy, angle });\r\n        }\r\n    }\r\n\r\n    return returnValue;\r\n}\r\n\r\n/**\r\n * Returns candicates for firing.\r\n */\r\nfunction getBestCandiates(tick: number): Candidates {\r\n\r\n    const {\r\n        enemyLevelState: { enemies, bullets },\r\n        playerState\r\n    } = appState();\r\n\r\n    // To determine which enemies have the best change of hitting\r\n    // the player we calculate difference between the angle at which the\r\n    // enemy will fire vs the angle towards the player.\r\n    const candidates: Candidates = [];\r\n\r\n    let above = 0;\r\n    let below = 0;\r\n    for (const enemy of enemies) {\r\n        const center = enemy.centerLocation;\r\n\r\n        if (center) {\r\n            const angleToPlayer = calculateAngle(center.left, center.top, playerState.left, playerState.top);\r\n            const angle = getBestAngle(enemy);\r\n\r\n            if (center.top > playerState.top) {\r\n                below += 1;\r\n            } else {\r\n                above += 1;\r\n            }\r\n\r\n            if (angle !== undefined && angleToPlayer !== undefined) {\r\n                const angleDifference = calculateAngleDifference(angle, angleToPlayer);\r\n                candidates.push({ enemy, angleDifference, angle });\r\n            }\r\n        }\r\n    }\r\n\r\n    // If the player is below the orbs, the ones with the lowest angle difference have the best shot\r\n    // If the player is above the orbs, the situation is revesed.\r\n    const sortFunction = above > below ? (a: number, b: number) => a < b : (a: number, b: number) => a > b;\r\n\r\n    candidates.sort((e1, e2) => {\r\n        if (sortFunction(e1.angleDifference, e2.angleDifference)) {\r\n            return -1;\r\n        } else {\r\n            return 1;\r\n        }\r\n    });\r\n\r\n    return candidates;\r\n}\r\n\r\n/**\r\n * Retuns the best angle for an enemy.\r\n * @param {EnemyState} enemy. Single enemy.\r\n */\r\nfunction getBestAngle(enemy: EnemyState): Angle {\r\n\r\n    const {\r\n        playerState,\r\n        enemyLevelState: { enemies }\r\n    } = appState();\r\n\r\n    // do nothin when the player is dead.\r\n    if (!Guard.isPlayerAlive(playerState)) {\r\n        return undefined;\r\n    }\r\n\r\n    const { hitboxes } = playerState;\r\n\r\n    // Increase the change the orb enemy will fire down as its numbers are reduced.\r\n    const rnd = Math.ceil(Math.random() * enemies.length / 1.5);\r\n    const canFireDown = rnd === 1;\r\n\r\n    if (canFireDown) {\r\n        const {\r\n            centerLocation,\r\n        } = enemy;\r\n\r\n        if (centerLocation !== undefined) {\r\n            // Check if it makes sense for the orb to fire down. If not, it'll pick one of its diagonal angles.\r\n            if (centerLocation.left >= hitboxes.middle.left && centerLocation.left <= hitboxes.middle.right) {\r\n                return angles.down;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (enemy.offsetLeft < hitboxes.middle.left) {\r\n        return angles.rightdown;\r\n    } else {\r\n        return angles.leftdown;\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { angles } from \"../../Constants/Angles\";\r\nimport ShipToFire from \"../../ShipsToFire\";\r\nimport { appState } from \"../../State/Store\";\r\nimport { getRandomArrayElement } from \"../../Utility/Array\";\r\n\r\n/**\r\n * Module:          MaxFiveDiagonal\r\n * Responsibility:  Provides 5 enemies to fire.\r\n */\r\n\r\nconst maxBullets = 3;\r\n\r\n/**\r\n * A function that selects the orbs that should fire.\r\n * @param {number} tick. Current tick\r\n */\r\nexport default function maxThreeDown(tick: number): ShipToFire[] {\r\n\r\n    const {\r\n        enemyLevelState: { bullets, enemies }\r\n    } = appState();\r\n    const returnValue: ShipToFire[] = [];\r\n\r\n    const remainingBullets = maxBullets - bullets.length;\r\n\r\n    if (remainingBullets === 0) {\r\n        return returnValue;\r\n    }\r\n\r\n    const enemyToFire = getRandomArrayElement(enemies);\r\n\r\n    if (enemyToFire !== undefined) {\r\n        const queuedTofire = returnValue.find((e) => e.enemy.enemyId === enemyToFire.enemyId) !== undefined;\r\n        const mayFire = enemies.length < maxBullets || !bullets.some((bullet) => bullet.owner === enemyToFire.enemyId);\r\n        if (!queuedTofire && mayFire) {\r\n            returnValue.push({ enemy: enemyToFire, angle: angles.down });\r\n        }\r\n    }\r\n\r\n    return returnValue;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { GameLocation } from \"../../Models/GameLocation\";\r\nimport dimensionProvider from \"../DimensionProvider\";\r\n\r\n/**\r\n * Module:          Provides the locations for enemies that start in a grid of 7 / 6 / 7\r\n */\r\n\r\nconst {\r\n    pixelSize,\r\n    gameField,\r\n} = dimensionProvider();\r\n\r\nconst topStart = pixelSize * 9;\r\nconst verticalSpacing = pixelSize * 8;\r\n\r\nexport const firstAndThirdRowLeftStart = 30;\r\nexport const secondRowLeftStart = 40;\r\nexport const firstAndSecondRowSpacing = 16;\r\nexport const secondRowSpacing = 16;\r\n\r\nexport default function sevenSixSeverGridProvider(): GameLocation[] {\r\n    const returnValue: GameLocation[] = [];\r\n\r\n    let top = topStart;\r\n\r\n    // Top row.\r\n    for (let i = 0; i < 7; i++) {\r\n        returnValue.push({\r\n            left: (firstAndThirdRowLeftStart * pixelSize) + firstAndSecondRowSpacing * i * pixelSize,\r\n            top: gameField.top + top,\r\n        });\r\n    }\r\n\r\n    top += verticalSpacing;\r\n\r\n    // Second.\r\n    for (let i = 0; i < 6; i++) {\r\n        returnValue.push({\r\n            left: (secondRowLeftStart * pixelSize) + secondRowSpacing * i * pixelSize,\r\n            top: gameField.top + top,\r\n        });\r\n    }\r\n\r\n    top += verticalSpacing;\r\n\r\n    // Third row\r\n    for (let i = 0; i < 7; i++) {\r\n        returnValue.push({\r\n            left: (firstAndThirdRowLeftStart * pixelSize) + firstAndSecondRowSpacing * i * pixelSize,\r\n            top: gameField.top + top,\r\n        });\r\n    }\r\n\r\n    return returnValue;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport CGAColors from \"../Constants/CGAColors\";\r\nimport WarpLevelConstants from \"../Constants/WarpLevelConstants\";\r\nimport { DEBUGGING_drawGameRect } from \"../Debugging/Debugging\";\r\nimport GameLoop from \"../GameLoop\";\r\nimport { drawLevelBanner } from \"../GameScreen/LevelBanner\";\r\nimport { drawBackground, drawWarpBackground } from \"../GameScreen/StaticRenders\";\r\nimport Guard from \"../Guard\";\r\nimport ILevel from \"../Interfaces/ILevel\";\r\nimport { GameRectangle } from \"../Models/GameRectangle\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport getShipSpawnLocation from \"../Providers/PlayerSpawnLocationProvider\";\r\nimport { increaseScore } from \"../State/Game/GameActions\";\r\nimport { setPlayerLocationData, setPlayerMovementLimit } from \"../State/Player/PlayerActions\";\r\nimport { appState, dispatch } from \"../State/Store\";\r\nimport handleLevelWon from \"../StateHandlers/HandleLevelWon\";\r\nimport { handlePlayerDeath } from \"../StateHandlers/HandlePlayerDeath\";\r\nimport { getRandomArrayElement } from \"../Utility/Array\";\r\nimport { coinFlip } from \"../Utility/Lib\";\r\nimport { fallsWithin } from \"../Utility/Location\";\r\n\r\n/**\r\n * Module:          WarpLevel\r\n * Responsibility:  Warp level for the player to pass though.\r\n */\r\n\r\n// The colors used alternate between white and something else for background drawing.\r\nconst backgroundColor: string[] = [\r\n    CGAColors.brown,\r\n    CGAColors.green,\r\n    CGAColors.magenta,\r\n    CGAColors.blue,\r\n];\r\n\r\nconst {\r\n    pixelSize,\r\n    fullGameWidth,\r\n    gameField\r\n} = dimensionProvider();\r\n\r\n// This constants 'left' takes the width of the wrap gate corridor into consireration.\r\n// Always start a warp game using this left so we ensure the player is aligned perfectly.\r\nconst warpGateInitialleft = fullGameWidth / 2 - (16 * pixelSize) / 2;\r\n\r\nexport default class WarpLevel implements ILevel {\r\n\r\n    /**\r\n     * An array of game loop subscriptions.\r\n     */\r\n    private gameLoopSubscriptions: Array<(tick?: number) => void> = [];\r\n\r\n    /**\r\n     * Start the level. Required by contract.\r\n     */\r\n    public begin(): void {\r\n        dispatch(setPlayerMovementLimit(\"immobile\"));\r\n\r\n        const spawnLocation = getShipSpawnLocation();\r\n        dispatch(setPlayerLocationData(spawnLocation.left, spawnLocation.top));\r\n\r\n        // Register the background draw function so it runs in the game loop.\r\n        this.gameLoopSubscriptions.push(GameLoop.registerBackgroundDrawing(drawBackground));\r\n\r\n        // Determine which additional color next to white the warp background will have.\r\n        const colorIndex = Math.ceil(Math.random() * backgroundColor.length - 1);\r\n        const additionalColor = backgroundColor[colorIndex];\r\n\r\n        const {\r\n            gameState\r\n        } = appState();\r\n\r\n        // Show the level banner for this warp gate levels. Warp gates show the level banner BEFORE the back ground\r\n        // is drawn otherwise the level banner is impossible to read.\r\n        drawLevelBanner(gameState.level, () => {\r\n            // Generate the warpgate so we can draw a path and calculate the hitboxes of the adjecent walls. The complexity of the\r\n            // warp gate is taken from the GameState, the WarpGate class hasn't a clue how complicated the gate will be.\r\n            const warpGate = this.calculateWarpGate(gameField.left, gameField.right, gameState.warpLevelSteps.stepsX, gameState.warpLevelSteps.stepsY);\r\n            const badSpace = this.getWallHitboxes(warpGate);\r\n\r\n            // Banner is gone, time to draw the background of the warp gate background and path.\r\n            this.gameLoopSubscriptions.push(GameLoop.registerBackgroundDrawing(() => drawWarpBackground(additionalColor, warpGate)));\r\n\r\n            // Add a function to the GameLoop that will check if a level has been won.\r\n            this.gameLoopSubscriptions.push(GameLoop.registerUpdateState(() => this.monitorLevelWon()));\r\n\r\n            // Add a function to the GameLoop that checks if the player has reached the end of the warp gate. This will\r\n            // trigger progression to the next level.\r\n            this.gameLoopSubscriptions.push(GameLoop.registerUpdateState((tick) => this.hitDetection(tick, badSpace)));\r\n\r\n            dispatch(setPlayerMovementLimit(\"forceup\"));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get the warp gate's wall hitboxes derived from the warpgate.\r\n     * @param {GameRectangle[]} warpGate. Hitboxes for the walls.\r\n     */\r\n    private getWallHitboxes(warpGate: GameRectangle[]): Array<{ left: GameRectangle, right: GameRectangle }> {\r\n        return warpGate\r\n            .map((wg) => {\r\n                return {\r\n                    left: {\r\n                        left: gameField.left,\r\n                        right: wg.left,\r\n                        top: wg.top,\r\n                        bottom: wg.bottom,\r\n                    },\r\n                    right: {\r\n                        left: wg.right,\r\n                        right: gameField.right,\r\n                        top: wg.top,\r\n                        bottom: wg.bottom,\r\n                    },\r\n                };\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Detect if a player hit a wall.\r\n     * @param {number} tick. Current tick.\r\n     * @param {BadSpace} badSpace. Where not to go.\r\n     */\r\n    private hitDetection(tick: number, badSpace: Array<{ left: GameRectangle; right: GameRectangle }>): void {\r\n        const { playerState, debuggingState } = appState();\r\n        if (Guard.isPlayerAlive(playerState)) {\r\n\r\n            const { hitboxes, alive } = playerState;\r\n\r\n            const hitside = badSpace.some((sb) => {\r\n                const { left: leftDanger, right: rightDanger } = sb;\r\n                const { middle, bottom } = hitboxes;\r\n\r\n                return fallsWithin(bottom.left, bottom.right, bottom.top, bottom.bottom, leftDanger.left, leftDanger.right, leftDanger.top, leftDanger.bottom) ||\r\n                    fallsWithin(bottom.left, bottom.right, bottom.top, bottom.bottom, rightDanger.left, rightDanger.right, rightDanger.top, rightDanger.bottom) ||\r\n                    fallsWithin(middle.left, middle.right, middle.top, middle.bottom, leftDanger.left, leftDanger.right, leftDanger.top, leftDanger.bottom) ||\r\n                    fallsWithin(middle.left, middle.right, middle.top, middle.bottom, rightDanger.left, rightDanger.right, rightDanger.top, rightDanger.bottom);\r\n            });\r\n\r\n            if (hitside && alive) {\r\n                handlePlayerDeath(tick);\r\n            }\r\n        }\r\n\r\n        if (debuggingState.drawHitboxes) {\r\n            badSpace.forEach((bs) => {\r\n                GameLoop.registerDraw(() => DEBUGGING_drawGameRect(bs.left, \"red\"));\r\n                GameLoop.registerDraw(() => DEBUGGING_drawGameRect(bs.right, \"red\"));\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Calculates the warp gate.\r\n     * @param {number} outerLeft.\r\n     * @param {number} outerRight.\r\n     * @param {number} stepSizesX.\r\n     * @param {number} stepSizesY.\r\n     */\r\n    private calculateWarpGate(outerLeft: number, outerRight: number, stepSizesX: number[], stepSizesY: number[]): GameRectangle[] {\r\n\r\n        const safeZone: GameRectangle[] = [];\r\n\r\n        let direction = warpGateInitialleft;\r\n\r\n        // We'll start at the bottom and draw up. This\r\n        // allows me to ensure a safe position for the player to\r\n        // enter the warp gate.\r\n        let bottom = WarpLevelConstants.bottom;\r\n\r\n        const pixelsToGo = WarpLevelConstants.heightPixelCount;\r\n        let pixelsToDo = 0;\r\n\r\n        let stepSizeY = getRandomArrayElement(stepSizesY);\r\n        let stepSizeX = getRandomArrayElement(stepSizesX);\r\n\r\n        while (pixelsToDo + stepSizeY < pixelsToGo) {\r\n            const up = stepSizeY * pixelSize;\r\n\r\n            const rect: GameRectangle = {\r\n                left: direction,\r\n                top: bottom - up,\r\n                right: direction + WarpLevelConstants.width, // aka the width\r\n                bottom, // aka the height.\r\n            };\r\n\r\n            // New left\r\n            const verticalMove = stepSizeX * pixelSize;\r\n\r\n            // 50/50 change that the warp gate goes left or right.\r\n            const leftOrRight = coinFlip();\r\n            if (leftOrRight) {\r\n                // Left\r\n                direction -= verticalMove;\r\n            } else {\r\n                // Right\r\n                direction += verticalMove;\r\n            }\r\n\r\n            // Prevent the warp gate from going off screen by fliping the direction.\r\n            if (direction <= outerLeft || direction + WarpLevelConstants.width >= outerRight) {\r\n                direction *= -1;\r\n            }\r\n\r\n            // bottom moves up.\r\n            bottom -= up;\r\n\r\n            // Reduce pixels to do.\r\n            pixelsToDo += stepSizeY;\r\n            safeZone.push(rect);\r\n\r\n            stepSizeY = getRandomArrayElement(stepSizesY);\r\n            stepSizeX = getRandomArrayElement(stepSizesX);\r\n        }\r\n\r\n        // Deal with some left over space\r\n        if (pixelsToDo !== 0) {\r\n            const rect: GameRectangle = {\r\n                left: direction,\r\n                top: WarpLevelConstants.top,\r\n                right: direction + WarpLevelConstants.width,\r\n                bottom\r\n            };\r\n\r\n            safeZone.push(rect);\r\n        }\r\n\r\n        return safeZone;\r\n    }\r\n\r\n    /**\r\n     * Checks if the level is won whe the player reaches the end of the warp gate.\r\n     */\r\n    private monitorLevelWon(): void {\r\n\r\n        const {\r\n            playerState: { top },\r\n        } = appState();\r\n\r\n        if (top < gameField.top + pixelSize * 3) {\r\n            handleLevelWon();\r\n\r\n            // Warp levels reward 1400 points when you make it.\r\n            dispatch(increaseScore(1400));\r\n\r\n            // Reset the player to the spawn location after a warp level or they'll appear\r\n            // in the top of the screen right in the middle of enemies.\r\n            const spawnLocation = getShipSpawnLocation();\r\n            dispatch(setPlayerLocationData(spawnLocation.left, spawnLocation.top));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Dispose stuff.\r\n     */\r\n    public dispose(): void {\r\n        // Dispose all game loop subscriptions.\r\n        this.gameLoopSubscriptions.forEach((s) => s());\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport GameLoop from \"../GameLoop\";\r\nimport { playerMovementHandler } from \"../Handlers/PlayerMovementHandler\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport getPlayerSpawnLocation from \"../Providers/PlayerSpawnLocationProvider\";\r\nimport { setPlayerIsAlive, setPlayerLocationData, setPlayerMovementLimit } from \"../State/Player/PlayerActions\";\r\nimport { appState, dispatch } from \"../State/Store\";\r\nimport { MoveLimits } from \"../Types\";\r\nimport { getFrameReturner } from \"../Utility/Frame\";\r\nimport { getLocation } from \"../Utility/Location\";\r\nimport PlayerFormationPart from \"./PlayerFormationPart\";\r\nimport { getPlayerFormationFrames } from \"./PlayerFrames\";\r\n\r\n/**\r\n * Module:          PlayerSpawnManager\r\n * Responsibility:  Handles player respawning.\r\n */\r\n\r\nconst {\r\n    pixelSize,\r\n} = dimensionProvider();\r\n\r\nconst particleTravelDistance = pixelSize * 60;\r\nconst nozzleDistance = particleTravelDistance + pixelSize;\r\nconst nozzleOutAngle = 270;\r\nconst leftWingOutAngle = 200;\r\nconst rightWingOutAngle = 340;\r\n\r\nconst playerFormationFrames = getPlayerFormationFrames();\r\n\r\nlet nozzleTopPart: PlayerFormationPart;\r\nlet nozzleBottomPart: PlayerFormationPart;\r\nlet leftWingPart: PlayerFormationPart;\r\nlet rightWingPart: PlayerFormationPart;\r\n\r\nlet allMovingParts: PlayerFormationPart[] = [];\r\n\r\nlet formationSpeed: \"slow\" | \"fast\";\r\n\r\nlet formationInProgress = false;\r\n\r\nlet currentMovementLimit: MoveLimits = \"none\";\r\n\r\n/**\r\n * playerSpawnManager. Once register in the GameLoop this function will check\r\n * the state if the player can and show respawn.\r\n */\r\nexport default function playerSpawnManager(): void {\r\n    const { playerState, enemyLevelState: { enemies, shrapnells, bullets } } = appState();\r\n\r\n    if (!playerState.alive && formationInProgress === false && shrapnells.length === 0) {\r\n        if (enemies.length > 0) { // Enemies in the level\r\n            if (bullets.length === 0) { // wait till there's no particles.\r\n                setup(\"slow\", \"sideways\"); // Start the slow formation where the player has control.\r\n            }\r\n        } else {\r\n            // No enemies, fast formation\r\n            setup(\"fast\", \"immobile\");\r\n        }\r\n    }\r\n\r\n    if (formationInProgress) {\r\n        updateState();\r\n        GameLoop.registerDraw(draw);\r\n    }\r\n}\r\n\r\n/**\r\n * Creates the player formation particles.\r\n */\r\nfunction createParticles(): void {\r\n\r\n    const {\r\n        playerState\r\n    } = appState();\r\n\r\n    const left = playerState.left;\r\n    const top = playerState.top;\r\n\r\n    const nozzleTip = getLocation(left, top, nozzleOutAngle, nozzleDistance);\r\n    const nozzleBottom = getLocation(left, top, nozzleOutAngle, particleTravelDistance);\r\n    const leftWing = getLocation(left, top, leftWingOutAngle, particleTravelDistance);\r\n    const rightWing = getLocation(left, top, rightWingOutAngle, particleTravelDistance);\r\n\r\n    nozzleTopPart = new PlayerFormationPart(\r\n        nozzleTip.left,\r\n        nozzleTip.top,\r\n        getFrameReturner(playerFormationFrames[0]),\r\n        0,\r\n        pixelSize * 2,\r\n        0);\r\n\r\n    nozzleBottomPart = new PlayerFormationPart(\r\n        nozzleBottom.left,\r\n        nozzleBottom.top,\r\n        getFrameReturner(playerFormationFrames[1]),\r\n        0,\r\n        pixelSize * 2,\r\n        pixelSize);\r\n\r\n    leftWingPart = new PlayerFormationPart(\r\n        leftWing.left,\r\n        leftWing.top,\r\n        getFrameReturner(playerFormationFrames[2]),\r\n        0,\r\n        0,\r\n        pixelSize);\r\n\r\n    rightWingPart = new PlayerFormationPart(\r\n        rightWing.left,\r\n        rightWing.top,\r\n        getFrameReturner(playerFormationFrames[3]),\r\n        0,\r\n        pixelSize * 4,\r\n        pixelSize);\r\n\r\n    allMovingParts = [nozzleTopPart, nozzleBottomPart, leftWingPart, rightWingPart].filter((p) => p !== undefined);\r\n}\r\n\r\n/**\r\n * Forms the player quickly. Does not allow movement.\r\n * @param {() => void)} formationDoneCallback. Called when the formation animation has completed.\r\n * @param {\"fast\" | \"slow\"} speed. Speed of the player formation.\r\n * @param {MoveLimits} limit. Movement limit impaired on the player while the ship is forming.\r\n */\r\nfunction setup(speed: \"fast\" | \"slow\", limit: MoveLimits): void {\r\n    formationSpeed = speed;\r\n\r\n    // Store the current movement limit so we can restore it once the player has formed.\r\n    currentMovementLimit = appState().playerState.moveLimit;\r\n\r\n    const  {left, top }  = getPlayerSpawnLocation();\r\n    dispatch(setPlayerLocationData(left, top));\r\n    createParticles();\r\n\r\n    if (speed === \"fast\") {\r\n        allMovingParts.forEach((p) => p.setSpeed(30));\r\n    } else {\r\n        allMovingParts.forEach((p) => p.setSpeed(10));\r\n    }\r\n\r\n    dispatch(setPlayerMovementLimit(limit));\r\n    formationInProgress = true;\r\n}\r\n\r\n/**\r\n * Main function that draws the player formation.\r\n */\r\nfunction updateState(): void {\r\n    const { keyboardState } = appState();\r\n\r\n    if (keyboardState.space === false && formationSpeed === \"slow\" && allMovingParts.some((p) => p.traveling())) {\r\n        allMovingParts.forEach((p) => {\r\n            p.updateState();\r\n        });\r\n\r\n        playerMovementHandler(5);\r\n    } else if (formationSpeed === \"fast\") {\r\n        allMovingParts.forEach((p) => {\r\n            p.updateState();\r\n        });\r\n    }\r\n\r\n    if (allMovingParts.every((p) => p.traveling() === false)) {\r\n        dispatch(setPlayerIsAlive(true));\r\n        dispatch(setPlayerMovementLimit(currentMovementLimit));\r\n        allMovingParts = [];\r\n        formationInProgress = false;\r\n    }\r\n}\r\n\r\n/**\r\n * Draw the moving parts.\r\n */\r\nfunction draw(): void {\r\n    allMovingParts.forEach((p) => p.draw());\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport speedProvider from \"../Providers/SpeedProvider\";\r\nimport renderFrame from \"../Render/RenderFrame\";\r\nimport { appState } from \"../State/Store\";\r\nimport { Frame, FrameProviderFunction } from \"../Types\";\r\nimport Mutators from \"../Utility/FrameMutators\";\r\nimport { calculateAngle } from \"../Utility/Geometry\";\r\nimport { calculateDistance, getLocation } from \"../Utility/Location\";\r\n\r\n/**\r\n * Module:          PlayerFormationPart\r\n * Responsibility:  A particle that travels a distance and then stops being drawn.\r\n */\r\n\r\nconst minimumDistance = speedProvider(20);\r\n\r\nexport default class PlayerFormationPart {\r\n\r\n    /**\r\n     * Current particle location\r\n     */\r\n    private currentLeftLocation: number;\r\n\r\n    /**\r\n     * Current top location\r\n     */\r\n    private currentTopLocation: number;\r\n\r\n    /**\r\n     * Particle speed.\r\n     */\r\n\r\n    private speed: number;\r\n\r\n    /**\r\n     * The current frame.\r\n     */\r\n    private currentFrame: Frame;\r\n\r\n    /**\r\n     * Offset to add to the left.\r\n     */\r\n    private leftOffset: number;\r\n\r\n    /**\r\n     * Offset to add to the top.\r\n     */\r\n    private topOffset: number;\r\n\r\n    /**\r\n     * Construct the object.\r\n     * @param {number} left. Left coordinate.\r\n     * @param {number} top. Top coordinate\r\n     * @param {FrameProviderFunction} getFrame. Frame to render for this part.\r\n     * @param {number} speed. Speed at which the part travels.\r\n     * @param {number} leftOffset. Number of pixels to add to the initial left position and the target left position.\r\n     * @param {number} topOffset. Number of pixels to add to the initial top position and the target top position.\r\n     */\r\n    constructor(left: number, top: number, getFrame: FrameProviderFunction, speed: number, leftOffset: number, topOffset: number) {\r\n\r\n        this.currentFrame = getFrame();\r\n        Mutators.Frame.convertHexToCGA(this.currentFrame);\r\n\r\n        this.currentLeftLocation = left + leftOffset;\r\n        this.currentTopLocation = top + topOffset;\r\n        this.leftOffset = leftOffset;\r\n        this.topOffset = topOffset;\r\n\r\n        this.speed = speed;\r\n    }\r\n\r\n    /**\r\n     * Update the state of the object.\r\n     */\r\n    public updateState(): void {\r\n\r\n        const {\r\n            playerState\r\n        } = appState();\r\n\r\n        const targetLeftLocation = playerState.left + this.leftOffset;\r\n        const targetTopLocation = playerState.top + this.topOffset;\r\n\r\n        const angle = calculateAngle(this.currentLeftLocation, this.currentTopLocation, targetLeftLocation, targetTopLocation);\r\n        const distance = calculateDistance(this.currentLeftLocation, this.currentTopLocation, targetLeftLocation, targetTopLocation);\r\n\r\n        if (distance > minimumDistance) {\r\n            const nextLocation = getLocation(this.currentLeftLocation, this.currentTopLocation, angle, this.speed);\r\n            this.currentLeftLocation = nextLocation.left;\r\n            this.currentTopLocation = nextLocation.top;\r\n        } else {\r\n            this.currentLeftLocation = targetLeftLocation;\r\n            this.currentTopLocation = targetTopLocation;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Draw the particle.\r\n     */\r\n    public draw(): void {\r\n        renderFrame(this.currentLeftLocation, this.currentTopLocation, this.currentFrame);\r\n    }\r\n\r\n    /**\r\n     * Returns true if the particle is still traveling to its location.\r\n     * @returns {boolean}. True if the particle is still traveling.\r\n     */\r\n    public traveling(): boolean {\r\n        const {\r\n            playerState\r\n        } = appState();\r\n\r\n        const targetLeftLocation = playerState.left + this.leftOffset;\r\n        const targetTopLocation = playerState.top + this.topOffset;\r\n\r\n        const distance = calculateDistance(this.currentLeftLocation, this.currentTopLocation, targetLeftLocation, targetTopLocation);\r\n        return distance > minimumDistance;\r\n    }\r\n\r\n    /**\r\n     * Sets the speed of the particle.\r\n     * @param {number} speed. Desired particle speed.\r\n     */\r\n    public setSpeed(speed: number): void {\r\n        this.speed = speed;\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          GenericRunner\r\n * Responsibility:  Handles generic state updates that can occur in any level.\r\n */\r\n\r\nimport GameLoop from \"../GameLoop\";\r\nimport renderFrame from \"../Render/RenderFrame\";\r\nimport { setBulletState, setExplosionCenters, setShrapnellState } from \"../State/EnemyLevel/EnemyLevelActions\";\r\nimport { StateProviders } from \"../State/StateProviders\";\r\nimport { appState, dispatch } from \"../State/Store\";\r\n\r\nexport default function genericRunner(tick: number): void {\r\n    handleExplosionCenters(tick);\r\n    handleBullets();\r\n    handleShrapnell();\r\n    GameLoop.registerDraw(draw);\r\n}\r\n\r\n/**\r\n * Handles explosion centers.\r\n * @param {number} tick. Current tick\r\n */\r\nfunction handleExplosionCenters(tick: number): void {\r\n    const { explosionCenters } = appState().enemyLevelState;\r\n\r\n    const remainingExplosions = explosionCenters.filter((ec) => ec.startTick + ec.explosionCenterDelay > tick);\r\n    dispatch(setExplosionCenters(remainingExplosions));\r\n}\r\n\r\n/**\r\n * Handle bullet movement.\r\n */\r\nfunction handleBullets(): void {\r\n    const bullets = appState().enemyLevelState.bullets;\r\n    const newState = StateProviders.getUpdatedParticleState(bullets);\r\n\r\n    dispatch(setBulletState(newState));\r\n}\r\n\r\n/**\r\n * Handles particles state updates.\r\n * @param {number} tick. Current tick.\r\n */\r\nfunction handleShrapnell(): void {\r\n    const newState = StateProviders.getUpdatedParticleState(appState().enemyLevelState.shrapnells);\r\n    dispatch(setShrapnellState(newState));\r\n}\r\n\r\nfunction draw(): void {\r\n    const { explosionCenters, shrapnells } = appState().enemyLevelState;\r\n    for (const center of explosionCenters) {\r\n        renderFrame(center.left, center.top, center.coloredFrame);\r\n    }\r\n\r\n    for (const shrapnell of shrapnells) {\r\n        renderFrame(shrapnell.left, shrapnell.top, shrapnell.coloredFrame);\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { angles } from \"../Constants/Angles\";\r\nimport CGAColors from \"../Constants/CGAColors\";\r\nimport { Speeds } from \"../Constants/Constants\";\r\nimport GameLoop from \"../GameLoop\";\r\nimport { playerMovementHandler } from \"../Handlers/PlayerMovementHandler\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport renderFrame from \"../Render/RenderFrame\";\r\nimport getTwoPixelBullet from \"../SharedFrames/twoPXBullet\";\r\nimport { ParticleState } from \"../State/Player/ParticleState\";\r\nimport { setPlayerBulletState } from \"../State/Player/PlayerActions\";\r\nimport { StateProviders } from \"../State/StateProviders\";\r\nimport { appState, dispatch } from \"../State/Store\";\r\nimport { getFrameHitbox } from \"../Utility/Frame\";\r\nimport { fallsWithinGameField, getLocation } from \"../Utility/Location\";\r\n\r\n/**\r\n * Module:          PlayerRunner\r\n * Responsibility:  Module dedicated to managing player state.\r\n */\r\n\r\nexport default function playerRunner(): void {\r\n    updateState();\r\n    GameLoop.registerDraw(draw);\r\n}\r\n\r\nconst {\r\n    pixelSize,\r\n} = dimensionProvider();\r\n\r\nconst playerBulletFrame = getTwoPixelBullet(CGAColors.yellow);\r\n\r\n/**\r\n * Updates the player state.\r\n */\r\nfunction updateState(): void {\r\n    const {\r\n        playerState\r\n    } = appState();\r\n\r\n    // Important! The player runner is responsible for handling player action while the\r\n    // player is alive. When the player dies the PlayerSpawnManager takes over.\r\n    if (!playerState.alive) {\r\n        return;\r\n    }\r\n\r\n    playerMovementHandler(10);\r\n\r\n    handlePlayerBulletMovement();\r\n    handlePlayerBulletFiring();\r\n}\r\n\r\n/**\r\n * Checks if the player can fire and if they pressed the fire key. If so, a bullet is dispatched to the state.\r\n */\r\nfunction handlePlayerBulletFiring(): void {\r\n    const { playerState, keyboardState } = appState();\r\n    if (playerState.nozzleLocation !== undefined && keyboardState.fire && playerState.bulletState === undefined) {\r\n        const nozzleLocation = playerState.nozzleLocation;\r\n        const bullet = getPlayerBullet(nozzleLocation.left, nozzleLocation.top);\r\n        dispatch(setPlayerBulletState(bullet));\r\n    }\r\n}\r\n\r\n/**\r\n * Moves the bullet up until it reached the top of the game game field.\r\n * If the bullet hits something, that handled in the EnemyLevelRunner.\r\n */\r\nfunction handlePlayerBulletMovement(): void {\r\n    const { playerState } = appState();\r\n    if (playerState.bulletState !== undefined) {\r\n        const bullet = playerState.bulletState;\r\n        const nextLocation = getLocation(bullet.left, bullet.top, bullet.angle, bullet.speed);\r\n        const newHitbox = getFrameHitbox(nextLocation.left, nextLocation.top, bullet.coloredFrame);\r\n\r\n        if (fallsWithinGameField(newHitbox.left, newHitbox.right, nextLocation.top, newHitbox.bottom)) {\r\n            const newState = getPlayerBullet(nextLocation.left, nextLocation.top);\r\n            dispatch(setPlayerBulletState(newState));\r\n        } else {\r\n            dispatch(setPlayerBulletState(undefined));\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Gets a player bullet particle state.\r\n * @param {number} left\r\n * @param {number} top\r\n * @returns {ParticleState}\r\n */\r\nfunction getPlayerBullet(left: number, top: number): ParticleState {\r\n    return StateProviders.getParticleState(left, top, Speeds.Bullets.player, angles.up, playerBulletFrame, 1, -0.5 * pixelSize, -0.5 * pixelSize);\r\n}\r\n\r\n/**\r\n * Draw the player and player bullet.\r\n */\r\nfunction draw(): void {\r\n    const { playerState } = appState();\r\n    if (playerState.alive) {\r\n        renderFrame(playerState.left, playerState.top, playerState.coloredFrame);\r\n    }\r\n\r\n    if (playerState.bulletState) {\r\n        const bullet = playerState.bulletState;\r\n        renderFrame(bullet.left, bullet.top, bullet.coloredFrame);\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Actions\r\n * Responsibility:  Actions for Debugging state.\r\n */\r\n\r\nimport Constants from \"./DebuggingConstants\";\r\nimport DebuggingState from \"./DebuggingState\";\r\nimport { SetDebuggingState } from \"./DebuggingTypes\";\r\n\r\nexport function setDebuggingState(state: DebuggingState): SetDebuggingState {\r\n    return {\r\n\r\n        type: Constants.setDebuggingState,\r\n        state,\r\n    };\r\n}"],"sourceRoot":""}