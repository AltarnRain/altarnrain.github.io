{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Providers/DimensionProvider.ts","webpack:///./src/State/Store.ts","webpack:///./src/Utility/Frame.ts","webpack:///./src/Constants/CGAColors.ts","webpack:///./src/Utility/FrameMutators.ts","webpack:///./src/Utility/Location.ts","webpack:///./src/GameLoop.ts","webpack:///./src/State/Game/GameActions.ts","webpack:///./src/Utility/Geometry.ts","webpack:///./src/State/Player/PlayerActions.ts","webpack:///./src/Providers/CtxProvider.ts","webpack:///./node_modules/immer/src/common.js","webpack:///./node_modules/immer/src/scope.js","webpack:///./node_modules/immer/src/es5.js","webpack:///./node_modules/immer/src/proxy.js","webpack:///./node_modules/immer/src/patches.js","webpack:///./node_modules/immer/src/immer.js","webpack:///./node_modules/immer/src/index.js","webpack:///./src/Render/RenderFrame.ts","webpack:///./src/State/EnemyLevel/EnemyLevelActions.ts","webpack:///./src/Player/PlayerFrames.ts","webpack:///./src/Utility/Array.ts","webpack:///./src/Constants/Angles.ts","webpack:///./src/State/StateProviders.ts","webpack:///./src/Constants/EnemyMovementSpeeds.ts","webpack:///./src/Guard.ts","webpack:///./src/Base/BaseEnemyLevel.ts","webpack:///./src/Constants/MovementAngles.ts","webpack:///./src/Enemies/EnemyFactory.ts","webpack:///./src/Base/BaseLocationProvider.ts","webpack:///./src/Base/BaseEnemy.ts","webpack:///./src/Handlers/TickHandler.ts","webpack:///./src/Utility/Lib.tsx","webpack:///./src/Constants/BulletSpeeds.ts","webpack:///./src/SharedFrames/twoPXBullet.ts","webpack:///./node_modules/symbol-observable/es/index.js","webpack:///./src/Debugging/Debugging.ts","webpack:///./src/State/Debugging/DebuggingConstants.ts","webpack:///./src/State/EnemyLevel/EnemyLevelConstants.ts","webpack:///./src/State/Game/GameConstants.ts","webpack:///./src/State/Keyboard/KeyboardConstants.ts","webpack:///./src/Providers/PlayerSpawnLocationProvider.ts","webpack:///./src/State/Player/PlayerConstants.ts","webpack:///./src/SharedFrames/Numbers.ts","webpack:///./src/Runners/EnemyLevelRunner.ts","webpack:///./src/Providers/SpeedProvider.ts","webpack:///./src/StateHandlers/DispatchExplosion.ts","webpack:///./src/StateHandlers/HandlePlayerDeath.ts","webpack:///./src/GameScreen/StaticRenders.ts","webpack:///./src/Constants/WarpLevelConstants.ts","webpack:///./src/Base/BaseFrameProvider.ts","webpack:///./src/Enemies/Orb/OrbFrames.ts","webpack:///./src/Enemies/Robot/RobotFrames.ts","webpack:///./src/BulletProviders/BulletRunner.ts","webpack:///./src/Constants/FireFrequences.ts","webpack:///./src/Utility/KeyboardEvents.ts","webpack:///./src/Handlers/MovePlayerHandler.ts","webpack:///./node_modules/symbol-observable/es/ponyfill.js","webpack:///./src/index.ts","webpack:///./node_modules/redux/es/redux.js","webpack:///(webpack)/buildin/global.js","webpack:///(webpack)/buildin/harmony-module.js","webpack:///./src/State/Debugging/DebuggingReducer.ts","webpack:///./node_modules/process/browser.js","webpack:///./src/State/EnemyLevel/EnemyLevelReducer.ts","webpack:///./src/State/Game/GameStateReducer.ts","webpack:///./src/State/Game/WarpGameComplexities.ts","webpack:///./src/State/Keyboard/KeyboardStateReducer.ts","webpack:///./src/State/Player/PlayerReducer.ts","webpack:///./src/Player/PlayerExplosion.ts","webpack:///./src/Utility/HexToCGAConverter.ts","webpack:///./src/GameScreen/StatusBar.ts","webpack:///./src/Utility/String.ts","webpack:///./src/Levels/SubscribeToStore.ts","webpack:///./src/Levels/LevelFactory.ts","webpack:///./src/Player/GetPhaserLocations.ts","webpack:///./src/Player/PlayerHelper.ts","webpack:///./src/Levels/Level01.ts","webpack:///./src/GameScreen/LevelBanner.ts","webpack:///./src/SharedFrames/Characters.ts","webpack:///./src/Utility/getCharacter.ts","webpack:///./src/Enemies/Bird/BirdSpawnLoctions.ts","webpack:///./src/Constants/EnemyFrameTime.ts","webpack:///./src/LocationProviders/MoveDownAppearUpLocaionProvider.ts","webpack:///./src/LocationProviders/SideToSideUpAndDownLocationProvider.ts","webpack:///./src/LocationProviders/VanishRightAppearLeftLocationProvider.ts","webpack:///./src/Providers/BackAndForthFrameProvider.ts","webpack:///./src/Providers/CircleFrameProvider.ts","webpack:///./src/SharedFrames/Explosion01.ts","webpack:///./src/SharedFrames/Explosion02.ts","webpack:///./src/Enemies/Bird/BirdEnemy.ts","webpack:///./src/Enemies/Bird/BirdFrames.ts","webpack:///./src/Enemies/Orb/OrbEnemy.ts","webpack:///./src/Enemies/Robot/RobotEnemy.ts","webpack:///./src/Levels/Level02.ts","webpack:///./src/Enemies/Robot/RobotSpawnLocationsAndColor.ts","webpack:///./src/Enemies/Robot/RobotsToFire.ts","webpack:///./src/FireAngleProviders/DownAngleProvider.ts","webpack:///./src/FireChecks/RobotFireCheck.ts","webpack:///./src/Levels/Level03.ts","webpack:///./src/Enemies/Orb/OrbEnemiesSpawnLocations.ts","webpack:///./src/Enemies/Orb/OrbsToFire.ts","webpack:///./src/State/Keyboard/KeyboardActions.ts","webpack:///./src/FireAngleProviders/OrbEnemyAngleProvider.ts","webpack:///./src/FireChecks/OrbFireCheck.ts","webpack:///./src/Levels/WarpLevel.ts","webpack:///./src/Player/PlayerSpawnManager.ts","webpack:///./src/Player/PlayerFormationPart.ts","webpack:///./src/Runners/GenericRunner.ts","webpack:///./src/Runners/PlayerRunner.ts","webpack:///./src/State/Debugging/DebuggingActions.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","gameDimensions","body","document","getElementById","rect","getBoundingClientRect","height","pixelSize","Math","floor","fullGameHeight","fullGameWidth","statusBarBottom","pixelSize2x","gameField","left","top","right","bottom","allReducers","combineReducers","enemyLevelState","playerState","debuggingState","gameState","keyboardState","store","createReduxStore","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","appStore","getState","action","dispatch","getFrameDimensions","frame","undefined","width","length","copyFrame","newFrame","row","newRow","push","copyFrames","frames","newFrames","copyExplosion","explosion","newExplosion","particleFrames","explosionCenterFrame","allFrameDimensions","map","f","allWidths","af","allHeights","max","dimensions","objectKeys","keys","round","random","index","Error","topOffset","bottomOffset","frameCopy","CGAColors","black","blue","green","cyan","red","magenta","brown","lightGray","darkGray","lightBlue","lightGreen","lightCyan","lightRed","lightMagenta","yellow","white","validColors","Mutators","Frames","Frame","setColor","colors","convertHexToCGA","forEach","rowIndex","cellColor","cellIndex","useColor","indexOf","colorIndex","replace","parseInt","fallsWithin","outerLeft","outerRight","outerTop","outerBottom","left1","top1","left2","top2","xd","yd","sqrt","pow","angle","speed","relativeSpeed","getNextX","getNextY","leftOffset","mainHandle","updateStateFunctions","backgroundDrawFunctions","drawFunctions","GameLoop","run","tick","requestAnimationFrame","Start","Stop","cancelAnimationFrame","registerUpdateState","filter","registerBackgroundDrawing","registerDraw","score","type","increaseScore","payload","lives","setLives","addLife","removeLife","phasers","setPhasers","addPhaser","removePhaser","addLevel","level","setLevel","nextLevel","addLifeAndPhaser","pause","setPause","complexity","setWarpLevelComplexity","currentX","cos","PI","currentY","sin","state","up","angles","leftup","rightup","down","leftdown","rightdown","hitbox1","hitbox2","newAngle","startLeft","startTop","endLeft","endTop","dx","dy","atan2","angle1","angle2","angleDifference","abs","outerRect","innerRect","outerRectWidth","outerRectHeight","widthDifference","heightDifference","playerAlive","setPlayerIsAlive","playerIsAlive","moveLimit","setPlayerMovementLimit","hitboxes","nozzleLocation","setPlayerLocationData","particleState","setPlayerBulletState","cachedCtx","canvas","getContext","NOTHING","DRAFTABLE","for","DRAFT_STATE","isDraft","isDraftable","Array","isArray","proto","getPrototypeOf","isPlainObject","constructor","isMap","isSet","original","base","const","assign","target","overrides","override","ownKeys","Reflect","getOwnPropertySymbols","obj","getOwnPropertyNames","concat","shallowCopy","invokeGetters","slice","Map","Set","clone","desc","getOwnPropertyDescriptor","writable","configurable","each","iter","entry","isEnumerable","prop","has","thing","is","x","y","hasSymbol","hasMap","hasSet","makeIterable","next","self","iterator","iterateMapValues","receiver","isEntries","latest","result","done","makeIterateSetValues","createProxy","draft","drafts","finalized","finalizing","set","modified","copy","add","wrapSetValue","cloned","freeze","deep","isFrozen","clear","delete","dontMutateFrozenCollections","_","ImmerScope","parent","canAutoFreeze","patches","revoke","clonePotentialDraft","defineProperties","mapTraps","proxyMethod","setTraps","iterateSetValues","proxySet","descriptors","assertUnrevoked","peek","prepareCopy","this","assigned","markChanged","proxyProperty","scope","current","revoked","createHiddenProperty","usePatches","patchListener","inversePatches","leave","enter","finalizeTraps","size","reciever","cb","values","entries","thisArg","traps","reduce","acc","builder","proxyAttr","fn","trap","args","JSON","stringify","markChangesSweep","let","hasArrayChanges","hasMapChanges","hasSetChanges","hasObjectChanges","baseValue","descriptor","hasChanges","isReplaced","markChangesRecursively","objectTraps","arrayTraps","Proxy","revocable","proxy","deleteProperty","owner","setPrototypeOf","arguments","apply","isNaN","reflectTraps","makeTrapsForGetters","prev","assignMap","getters","generateArrayPatches","basePath","delta","start","end","path","op","replaceCount","generatePatchesFromAssigned","assignedValue","origValue","generateSetPatches","unshift","applyPatches","patch","join","splice","configDefaults","useProxies","autoFreeze","process","onAssign","onDelete","onCopy","Immer","config","setUseProxies","produce","produceWithPatches","recipe","defaultBase","hasError","Promise","then","processResult","error","maybeFreeze","arg1","arg2","arg3","ip","createDraft","isManual","finishDraft","setAutoFreeze","modernProxy","legacyProxy","baseDraft","willFinalize","finalize","finalizeTree","exists","generatePatches","root","rootPath","needPatches","finalizeProperty","isDraftProp","isSetMember","immer","ctx","columns","columnIndex","color","fillStyle","fillRect","resetLevelState","particle","addParticle","particles","addParticles","explosionCenter","shrapnell","addExplosionCenter","setShrapnellState","locations","setPhaserLocations","clearPhaserLocations","interval","setFireInterval","explosionCenters","setExplosionCenters","bullet","addBullet","bullets","setBulletState","totalEnemies","setTotalEnemies","enemyState","addOrUpdateEnemy","enemyId","removeEnemy","arr","StateProviders","getParticleState","acceletation","hitboxTopOffset","hitboxBottomOffset","coloredFrame","hitbox","getFrameHitbox","getBulletParticleState","ownerId","explosionShrapnellProvider","particleFrameIndexes","particleFrameIndex","particleFrame","useSpeed","speeds","acceleration","getUpdatedParticleState","nextState","updatedParticle","newLocation","getLocation","fallsWithinGameField","getEnemyState","enemy","appState","enemies","find","e","getId","birdMovementSpeed","robotMovementSpeed","orbMovementSpeed","Guard","isValidGameKey","allGameKeys","isEnemy","getObjectType","isPlayerAlive","alive","stateManager","monitorLevelWon","subscriptions","storeSub","subscribe","registerSubscription","drawBackground","levelBannerSub","drawLevelBanner","fireInterval","bulletRunner","updateState","setTimeout","setEnemies","monitorLevelWonRun","birdRandomAngles","robotAngle","orbAngle","frameProvider","getRandomFrameKeyIndex","getMaximumFrameDimensions","locationProvider","birdFrameTime","robotFrameTime","getExplosion02","orbFrameTime","baseSpeed","factor","negativepixelSize","BaseEnemy","frameChangeTime","getOffsetFrames","getExplosion","frameTickHandler","onFrameChange","offSetFrames","offSets","setFrames","currentFrame","getCurrentFrame","getOffsetLocation","offsetLeft","offsetTop","idCounter","offsetLocation","coloredExplosion","hitpoints","getHitpoints","getHitbox","centerLocation","getCenterLocation","lastFireTick","points","getPoints","frameOffsets","getCurrentIndex","getCurrentLocation","increaseSpeed","getFrameCenter","time","onTimePassed","lastTick","baseTime","calculateTimeSpeedIncrease","min","query","split","item","kvp","playerBulletSpeed","robotBulletSpeed","orbBulletSpeed","twoPixelBullet","global","DEBUGGING_drawGameRect","lineWith","beginPath","strokeStyle","lineWidth","stroke","closePath","middle","bulletState","b","shrapnells","gridDetail","lineTo","Constants","playerMortality","renderPhaser","arrowUp","arrowDown","arrowLeft","arrowRight","backspace","f1","f2","space","keyup","keydown","leftSpawnPosition","getPlayerFrame","topSpawnPosition","numbers","localState","phaserFrame","EnemyLevelRunner","draw","phaserLocations","pf","playerHitByParticle","playerIsImmortal","some","playerIsHit","handlePlayerDeath","handleEnemyDestruction","totalNumberOfEnemies","dispatchExplosion","selfDestruct","es","handleSelfDestruct","phraser","randomEnemy","getRandomArrayElement","playerNozzleLocation","randomEnemyCenter","handlePhaser","handleEnemies","enemyHitPlayerDetection","playerBulletHitbox","hitEnemy","overlaps","playerHitEnemyDetection","handleHitDetection","newEnemies","newShrapnell","startTick","explosionCenterDelay","clearGameFieldBackground","drawGameFieldBorder","additionalColor","gate","drawWhite","WarpLevelConstants","heightPixelCount","startFrameIndex","frameIndex","maxIndex","returnValue","getFrameByIndex","orbMainFrame","orbFrames","offsetCount","robotFrames","getBulletFrame","bulletColor","fireAngleProvider","shipsToFire","fireCheck","bulletFrame","enemiesWhoMayFire","ships","ship","fireAngle","newState","robotFireFrequence","orbFireFrequence","onKeyDown","event","code","stopPropagation","preventDefault","keyDown","onKeyUp","keyUp","addEventListener","removeEventListener","doublePixel","playerWidth","playerHeight","localKeyboardState","speedX","speedY","getAngle","nextX","nextY","currentLocation","getNextLocationForPlayer","hitBox","hitBoxes","symbolObservablePonyfill","observable","onload","queryKeyValuePairs","getURLQueryKVPs","location","search","showPlayGround","showCanvas","drawGrid","showhitboxes","immortal","registerListeners","drawStatusBar","DEBUGGING_drawGrid","DEBUGGING_renderHitboxes","r42","godMode","normalMode","setWarpGamteComplexity","randomString","toString","substring","ActionTypes","INIT","REPLACE","PROBE_UNKNOWN_ACTION","reducer","preloadedState","enhancer","_ref2","currentReducer","currentState","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","listener","isSubscribed","listeners","replaceReducer","nextReducer","_ref","outerSubscribe","observer","TypeError","observeState","unsubscribe","getUndefinedStateErrorMessage","actionType","String","reducers","reducerKeys","finalReducers","shapeAssertionError","finalReducerKeys","assertReducerShape","hasChanged","_i","_key","previousStateForKey","nextStateForKey","errorMessage","bindActionCreator","actionCreator","bindActionCreators","actionCreators","boundActionCreators","_defineProperty","enumerableOnly","sym","_objectSpread2","source","getOwnPropertyDescriptors","compose","_len","funcs","arg","a","applyMiddleware","middlewares","_dispatch","middlewareAPI","chain","middleware","g","Function","originalModule","webpackPolyfill","children","render","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","len","marker","runClearTimeout","Item","array","noop","nextTick","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","findIndex","warpLevelSteps","warpLevelComplexities","0","stepsX","stepsY","1","2","3","4","5","6","7","8","fire","playerExplosion","spawnLocation","playerFrame","initState","hex","numberFrames","lifeFrame","scoreStartPosition","scoreSpacing","scoreBackgroundWidth","phaserStartPosition","phaserSpacing","phaserBackgroundWidth","livesSpacing","livesStartPostion","liveFrameWidth","livesBackgroundWidth","levelStartPosition","numberFrameWidth","leftNumberLeft","rightNumberLeft","levelBackgroundWidth","scoreString","padLeft","cnt","actualSpacing","drawScore","drawPhasers","drawLives","paddedLevelString","rightNumber","leftNumber","rightFrame","leftFrame","drawLevel","padWidth","padLength","padding","levelNumber","currentLevel","currentScore","dispose","levelFactory","clearedEnemies","never","Level03","sourceLeft","sourceTop","targetLeft","targetTop","calculateAngle","distance","calculateDistance","nextLocation","playerHitboxes","hitMiddle","hitBottom","Level01","super","randomMovementAngle","enemyFactory","begin","greenCharacters","greenNumbers","roundCharacters","barwidth","roundWidth","charSpacing","barcolor","bartop","leftNumberFrame","rightNumberFrame","levelNumberStartPos","charLeft","stringLevel","rightNumberPosition","Characters","character","upperCaseCharacter","toUpperCase","charCodeAt","birdSpawnLocations","MoveDownAppearUpLocationProvider","gamePixelsFromBottom","bottomLimit","SideToSideUpAndDownLocationProvider","leftLimit","rightLimit","VanishRightAppearLeftLocationProvider","BackAndForthFrameProvider","CircleFrameProvider","centerColor","shrapnellColor","explosion01","BirdEnemy","colorTickHandler","onColorChange","setCurrentFrameColor","nextFrame","getNextFrame","OrbEnemy","getFrames","currentColorIndex","updateCurrentFrameAndColor","currentColor","RobotEnemy","Level02","lc","bulletProvider","robotSpawnLocationsAndColor","spacing","robots","lastEnemy","ceil","orbSpawnLocations","orbs","candidates","above","below","orb","center","angleToPlayer","calculateAngleDifference","sortFunction","sort","e1","e2","canFire","remainingEnemies","backgroundColor","warpGateInitialleft","gameLoopSubscriptions","warpGate","calculateWarpGate","badSpace","wg","drawWarpBackground","hitDetection","bs","sb","leftDanger","rightDanger","stepSizesX","stepSizesY","safeZone","direction","pixelsToGo","pixelsToDo","stepSizeY","stepSizeX","verticalMove","coinFlip","particleTravelDistance","nozzleDistance","playerFormationFrames","getPlayerFormationFrames","nozzleTopPart","nozzleBottomPart","leftWingPart","rightWingPart","formationSpeed","allMovingParts","formationInProgress","setupFormation","limit","nozzleTip","nozzleBottom","leftWing","rightWing","getFrameReturner","createParticles","setSpeed","traveling","movePlayerHandler","every","minimumDistance","getFrame","currentLeftLocation","currentTopLocation","targetLeftLocation","targetTopLocation","remainingExplosions","ec","handleExplosionCenters","handleBullets","handleShrapnell","newHitbox","getPlayerBullet","handlePlayerBulletMovement","handlePlayerBulletFiring","playerBulletFrame","mortality"],"mappings":"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K,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,MAEf,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,MAEzB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,MAEzB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 52);\n","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { GameDimensions } from \"../Models/GameDimensions\";\r\n\r\n/**\r\n * Module:          Dimension Provider\r\n * Responsibility:  Provide dimensions for game objects. Not a part of the State because the entire game uses it.\r\n */\r\n\r\nlet gameDimensions: GameDimensions;\r\n\r\n/**\r\n * dimensionProvider. Single function responsible for all dimensions important to the game.\r\n * @param {Node} node. Node\r\n * @returns {GameDimensions}. An object with dimensions.\r\n */\r\nexport default function dimensionProvider(): GameDimensions {\r\n    if (!gameDimensions) {\r\n\r\n        const body = document.getElementById(\"body\") as HTMLBodyElement;\r\n\r\n        let rect: DOMRect;\r\n        if (!body) {\r\n            // Not a nice solution, but the dimensionProvider is called from within unit tests and I do not want\r\n            // to add elements.\r\n            rect = { height: 1024 } as DOMRect;\r\n        } else {\r\n            rect = body.getBoundingClientRect();\r\n        }\r\n\r\n        // r42 uses a 4:3 resolution.\r\n        const pixelSize = Math.floor(rect.height / 100);\r\n\r\n        const fullGameHeight = pixelSize * 100;\r\n        const fullGameWidth = pixelSize * 160;\r\n\r\n        const statusBarBottom = pixelSize * 6;\r\n\r\n        gameDimensions = {\r\n            fullGameWidth,\r\n            fullGameHeight,\r\n            statusBarBottom,\r\n            pixelSize,\r\n            pixelSize2x: pixelSize * 2,\r\n            gameField: {\r\n                left: pixelSize,\r\n                top: statusBarBottom + pixelSize,\r\n                right: fullGameWidth - pixelSize,\r\n                bottom: fullGameHeight - pixelSize,\r\n            }\r\n        };\r\n    }\r\n\r\n    return gameDimensions;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { Action, combineReducers, createStore, Store } from \"redux\";\r\nimport ApplicationState from \"./ApplicationState\";\r\nimport debuggingReducer from \"./Debugging/DebuggingReducer\";\r\nimport enemyLevelReducer from \"./EnemyLevel/EnemyLevelReducer\";\r\nimport gameStateReducer from \"./Game/GameStateReducer\";\r\nimport keyboardStateReducer from \"./Keyboard/KeyboardStateReducer\";\r\nimport playerReducer from \"./Player/PlayerReducer\";\r\n\r\n/**\r\n * Module:          Store\r\n * Responsibility:  Handles the redux store\r\n */\r\n\r\nconst allReducers = combineReducers({\r\n    enemyLevelState: enemyLevelReducer,\r\n    playerState: playerReducer,\r\n    debuggingState: debuggingReducer,\r\n    gameState: gameStateReducer,\r\n    keyboardState: keyboardStateReducer\r\n});\r\n\r\nconst store = createReduxStore();\r\n\r\nexport function createReduxStore(): Store<ApplicationState> {\r\n    return createStore(\r\n        allReducers,\r\n        (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__());\r\n}\r\n\r\n/**\r\n * Returns the store\r\n * @returns {Store}. The redux store.\r\n */\r\nexport function appStore(): Store<ApplicationState> {\r\n    return store;\r\n}\r\n\r\n/**\r\n * Returns the ApplicationState\r\n * @returns {ApplicationState}. The application state.\r\n */\r\nexport function appState(): ApplicationState {\r\n    return appStore().getState();\r\n}\r\n\r\nexport function dispatch(action: Action): void {\r\n    store.dispatch(action);\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport Explosion from \"../Models/Explosion\";\r\nimport { GameLocation } from \"../Models/GameLocation\";\r\nimport { GameRectangle } from \"../Models/GameRectangle\";\r\nimport { GameSize } from \"../Models/GameSize\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport { Frame, Frames } from \"../Types\";\r\n\r\n/**\r\n * Module:          Frame\r\n * Responsibility:  Module for dealing with Frames.\r\n */\r\n\r\n/**\r\n * Returns the dimensions of a frame in PX.\r\n * @param {Frame} frame. A frame.\r\n * @returns {width, height}.\r\n */\r\nexport function getFrameDimensions(frame: Frame, pixelSize?: number): GameSize {\r\n\r\n    if (pixelSize === undefined) {\r\n        pixelSize = dimensionProvider().pixelSize;\r\n    }\r\n\r\n    return {\r\n        width: frame[0].length * pixelSize,\r\n        height: frame.length * pixelSize,\r\n    };\r\n}\r\n\r\nexport function getMaximumFrameDimensions(frames: Frames, pixelSize: number): GameSize {\r\n    const allFrameDimensions = frames.map((f) => getFrameDimensions(f, pixelSize));\r\n\r\n    const allWidths = allFrameDimensions.map((af) => af.width);\r\n    const allHeights = allFrameDimensions.map((af) => af.width);\r\n\r\n    return {\r\n        width: Math.max(...allWidths),\r\n        height: Math.max(...allHeights),\r\n    };\r\n}\r\n\r\n/**\r\n * Calculates a location object where the center of a frame resides.\r\n * @param {number} left. Left coordinate.\r\n * @param {number} top. Top coordinate.\r\n * @param {frame} frame.\r\n */\r\nexport function getFrameCenter(left: number, top: number, frame: Frame, pixelSize: number): GameLocation {\r\n    const dimensions = getFrameDimensions(frame, pixelSize);\r\n\r\n    return {\r\n        left: left + dimensions.width / 2,\r\n        top: top + dimensions.height / 2,\r\n    };\r\n}\r\n\r\n/**\r\n * Returns a random frame index.\r\n * @param {Frames} frames.\r\n * @returns {number}. Frame index.\r\n */\r\nexport function getRandomFrameKeyIndex(frames: Frames): number {\r\n    const objectKeys = Object.keys(frames).length - 1;\r\n\r\n    return Math.round(Math.random() * objectKeys);\r\n}\r\n\r\n/**\r\n * Returns a frame by index. Returns undefined if the frame is not defined.\r\n * @param {Frames} frames. Frames.\r\n * @param {number} index. Index of the frame.\r\n * @returns {Frame | undefined}. Returns the frame if one was found for the passed index, otherwise returns undefined.\r\n */\r\nexport function getFrameByIndex(frames: Frames, index: number): Frame {\r\n    const frame = frames[index];\r\n\r\n    if (!frame) {\r\n        throw new Error(\"No frame found\");\r\n    }\r\n\r\n    return frame;\r\n}\r\n\r\n/**\r\n * getFrameHitbox\r\n * @param {number} Left. Left coordinate.\r\n * @param {number} top. Top coordinate.\r\n * @param {Frame} frame. A frame\r\n * @param {number} pixelSize.\r\n * @param {number} topOffset.\r\n * @param {number} bottomOffset.\r\n * @returns {GameRectangle}. The frame's hitbox.\r\n */\r\nexport function getFrameHitbox(left: number, top: number, frame: Frame, topOffset: number = 0, bottomOffset: number = 0, pixelSize?: number): GameRectangle {\r\n    const { width, height } = getFrameDimensions(frame, pixelSize);\r\n\r\n    return {\r\n        top: top + topOffset,\r\n        left,\r\n        right: left + width,\r\n        bottom: top + height + bottomOffset,\r\n    };\r\n}\r\n\r\n/**\r\n * Uses spreads to create a new Frame.\r\n * @param {Frame} frame. The frame.\r\n * @returns {Frame}. A copy of the original frame.\r\n */\r\nexport function copyFrame(frame: Frame): Frame {\r\n    const newFrame: Frame = [];\r\n\r\n    for (const row of frame) {\r\n        const newRow = [...row];\r\n        newFrame.push(newRow);\r\n    }\r\n\r\n    return newFrame;\r\n}\r\n\r\n/**\r\n * Uses spreads to create new Frames.\r\n * @param {Frames} frames. Frames to copy.\r\n * @return {Frames}. Fresh copy of the Frames.\r\n */\r\nexport function copyFrames(frames: Frames): Frames {\r\n    const newFrames: Frames = [];\r\n\r\n    for (const frame of frames) {\r\n        const newFrame = copyFrame(frame);\r\n        newFrames.push(newFrame);\r\n    }\r\n\r\n    return newFrames;\r\n}\r\n\r\nexport function getFrameReturner(frame: Frame): () => Frame {\r\n    const frameCopy = copyFrame(frame);\r\n\r\n    return () => frameCopy;\r\n}\r\n\r\nexport function copyExplosion(explosion: Explosion): Explosion {\r\n    const newExplosion = { ...explosion };\r\n    newExplosion.particleFrames = copyFrames(explosion.particleFrames);\r\n    newExplosion.explosionCenterFrame = copyFrame(explosion.explosionCenterFrame);\r\n\r\n    return explosion;\r\n}\r\n\r\nexport function getExplosionReturner(explosion: Explosion): () => Explosion {\r\n    const newExplosion = copyExplosion(explosion);\r\n\r\n    return () => newExplosion;\r\n}","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          CGA Colors\r\n * Responsibility:  Contains color for the CGA 16 color pallet.\r\n */\r\n\r\nconst CGAColors = {             // Color hex code. Used to set the color of assets.\r\n    black: \"#000000\",           // 0\r\n    blue: \"#0000AA\",            // 1\r\n    green: \"#00AA00\",           // 2\r\n    cyan: \"#00AAAA\",            // 3\r\n    red: \"#AA0000\",             // 4\r\n    magenta: \"#AA00AA\",         // 5\r\n    brown: \"#AA5500\",           // 6\r\n    lightGray: \"#AAAAAA\",       // 7\r\n    darkGray: \"555555\",         // 8\r\n    lightBlue: \"#5555FF\",       // 9\r\n    lightGreen: \"#55FF55\",      // A\r\n    lightCyan: \"#55FFFF\",       // B\r\n    lightRed: \"#FF5555\",        // C\r\n    lightMagenta: \"#FF55FF\",    // D\r\n    yellow: \"#FFFF55\",          // E\r\n    white: \"#FFFFFF\",           // F\r\n    // Varies                   // V. Special color that flags a pixel as varies in color.\r\n};\r\n\r\nexport const validColors = Object.keys(CGAColors).map((key) => (CGAColors as any)[key]);\r\n\r\nexport default CGAColors;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { Frame as FrameType, Frames as FramesType } from \"../Types\";\r\nimport hexToCGAConverter from \"./HexToCGAConverter\";\r\n\r\n/**\r\n * Module:          Functions that mutate frames.\r\n * Responsibility:  Update frames with colors.\r\n */\r\n\r\nnamespace Mutators {\r\n\r\n    export namespace Frames {\r\n\r\n        /**\r\n         * Sets a cell's color to the passed color. Doesn't matter if they're variable (V).\r\n         * @param {Frames} frames. All frames.\r\n         */\r\n        export function setColor(frames: FramesType, ...colors: string[]): void {\r\n            for (const frame of frames) {\r\n                Frame.setColor(frame, ...colors);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Updates a frame to actual CGA colors.\r\n         * @param {Frames} frames. All frames.\r\n         */\r\n        export function convertHexToCGA(frames: FramesType): void {\r\n            for (const frame of frames) {\r\n                Frame.convertHexToCGA(frame);\r\n            }\r\n        }\r\n    }\r\n\r\n    export namespace Frame {\r\n        /**\r\n         * Set the predefined color for a single frame.\r\n         * @param {Frame} frame. A single frame.\r\n         */\r\n        export function convertHexToCGA(frame: FrameType) {\r\n            frame.forEach((row, rowIndex) => {\r\n                row.forEach((cellColor, cellIndex) => {\r\n                    if (cellColor !== \"0\") {\r\n                        frame[rowIndex][cellIndex] = hexToCGAConverter(cellColor);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Sets a frame colors when the color is not black (\"0\")\r\n         * @param {Frame} frame. A frame\r\n         * @param {string} color. A color\r\n         */\r\n        export function setColor(frame: FrameType, ...colors: string[]) {\r\n            if (colors.length === 0) {\r\n                throw new Error(\"No colors\");\r\n            }\r\n            frame.forEach((row, rowIndex) => {\r\n                row.forEach((cellColor, cellIndex) => {\r\n                    if (cellColor !== \"0\") {\r\n                        let useColor = \"\";\r\n                        if (cellColor.indexOf(\"V\") !== -1) {\r\n                            const colorIndex = cellColor.replace(\"V\", \"\");\r\n                            if (colorIndex === \"\") {\r\n                                // if the V cell has no index, just pick the first color.\r\n                                useColor = colors[0];\r\n                            } else {\r\n                                useColor = colors[parseInt(colorIndex, 10)];\r\n                            }\r\n                        } else {\r\n                            // Not a V, set the color.\r\n                            useColor = colors[0];\r\n                        }\r\n\r\n                        if (useColor === undefined || useColor === \"\") {\r\n                            throw Error(\"Color shoud not be undefined\");\r\n                        }\r\n\r\n                        frame[rowIndex][cellIndex] = useColor;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default Mutators;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { GameLocation } from \"../Models/GameLocation\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport speedProvider from \"../Providers/SpeedProvider\";\r\nimport { getNextX, getNextY } from \"./Geometry\";\r\n\r\n/**\r\n * Module:          Location utilities\r\n * Responsibility:  Offer utility functions for stuff that needs to know where it is.\r\n */\r\n\r\n/**\r\n * Calculate distance in pixels.\r\n * @param {number} left1. 1st left coordinate.\r\n * @param {number} top1. 1st top coordinate.\r\n * @param {number} left2. 2nd left coordinate.\r\n * @param {number} top2. 2nd right coordinate.\r\n * @returns {number}. Distance in actual pixels.\r\n */\r\nexport function calculateDistance(left1: number, top1: number, left2: number, top2: number): number {\r\n\r\n    const xd = left1 - left2;\r\n    const yd = top1 - top2;\r\n\r\n    return Math.sqrt(Math.pow(xd, 2) + Math.pow(yd, 2));\r\n}\r\n\r\n/**\r\n * Checks if a location falls within an area.\r\n * @param {number} left. Left coordinate\r\n * @param {number} top. Top coordinate.\r\n * @param {number} outerTop. Top of the area.\r\n * @param {number} outerBottom. Bottom of the area.\r\n * @param {number} outerLeft. Left of the area.\r\n * @param {number} outerRight. Right of the area.\r\n */\r\nexport function fallsWithin(left: number, right: number, top: number, bottom: number, outerLeft: number, outerRight: number, outerTop: number, outerBottom: number): boolean {\r\n\r\n    const yBounds = bottom >= outerTop && top <= outerBottom;\r\n    const xBounds = right >= outerLeft && left <= outerRight;\r\n\r\n    const res = xBounds && yBounds;\r\n\r\n    return res;\r\n}\r\n\r\nexport function fallsWithinGameField(left: number, right: number, top: number, bottom: number): boolean {\r\n    const {\r\n        gameField,\r\n        pixelSize\r\n    } = dimensionProvider();\r\n\r\n    const res = fallsWithin(left, right, top, bottom, gameField.left, gameField.right, gameField.top, gameField.bottom - pixelSize);\r\n\r\n    return res;\r\n}\r\n\r\n/**\r\n * Calculates a location.\r\n * @param {number} left. Left coordinate.\r\n * @param {number} top. Top coordinate.\r\n * @param {number | undefined} angle. The angle of the object.\r\n * @param {number} speed. The speed the of the object\r\n * @returns {{left: number, top: number}}. The location of the object. If angle is undefined the original location is returns as a new object.\r\n */\r\nexport function getLocation(left: number, top: number, angle: number | undefined, speed: number): GameLocation {\r\n\r\n    if (angle === undefined) {\r\n        return {\r\n            left,\r\n            top,\r\n        };\r\n    }\r\n\r\n    const relativeSpeed = speedProvider(speed);\r\n\r\n    const nextLeft = getNextX(angle, relativeSpeed, left);\r\n    const nextTop = getNextY(angle, relativeSpeed, top);\r\n\r\n    return {\r\n        left: nextLeft,\r\n        top: nextTop,\r\n    };\r\n}\r\n\r\n/**\r\n * Offsets a location using the given offsers and return a new location.\r\n * @param {number} left. Left coordinate.\r\n * @param {number} top. Top coordinate.\r\n * @param {number} leftOffset. Left offset in real pixels.\r\n * @param {number} topOffset. Top offset in real pixels.\r\n * @param {number} pixelSize. Pixel size used to calculate the actual location.\r\n * @returns {location}. A new location offset to animation overlap.\r\n */\r\nexport function getOffsetLocation(left: number, top: number, leftOffset: number, topOffset: number): GameLocation {\r\n    return {\r\n        left: left + leftOffset,\r\n        top: top + topOffset,\r\n    };\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { TickFunction } from \"./Types\";\r\n\r\n/**\r\n * Module:          GameLoop\r\n * Responsibility:  Handles all functions that should be called within the GameLoop.\r\n */\r\n\r\n/**\r\n * A handle for the main loop.\r\n */\r\nlet mainHandle: number | undefined;\r\n\r\n/**\r\n * Functions that subscripbe to the game tick.\r\n */\r\nlet updateStateFunctions: TickFunction[] = [];\r\n\r\n/**\r\n * Functions that perform background drawing.\r\n */\r\nlet backgroundDrawFunctions: Array<() => void> = [];\r\n\r\n/**\r\n * Functions that draw.\r\n */\r\nlet drawFunctions: Array<() => void> = [];\r\n\r\nexport namespace GameLoop {\r\n    /**\r\n     * Start game loop\r\n     */\r\n    export function Start(): void {\r\n        mainHandle = window.requestAnimationFrame(run);\r\n    }\r\n\r\n    /**\r\n     * Stop game loop and clear subscriptions.\r\n     */\r\n    export function Stop(): void {\r\n\r\n        if (mainHandle !== undefined) {\r\n            window.cancelAnimationFrame(mainHandle);\r\n        }\r\n\r\n        updateStateFunctions = [];\r\n        backgroundDrawFunctions = [];\r\n        drawFunctions = [];\r\n    }\r\n\r\n    /**\r\n     * Register a tick handling function\r\n     * @param {TickFunction} f. A function that handles a tick\r\n     * @returns {() => void}. A function that removes the tick handler funtion from the subscription array.\r\n     */\r\n    export function registerUpdateState(f: TickFunction): () => void {\r\n        updateStateFunctions.push(f);\r\n\r\n        return () => {\r\n            updateStateFunctions = updateStateFunctions.filter((s) => s !== f);\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Register a function that draws the background.\r\n     * @param {function} f. Background draw function\r\n     * @returns {function}. Function to remove the background draw from the queue.\r\n     */\r\n    export function registerBackgroundDrawing(f: () => void): () => void {\r\n        backgroundDrawFunctions.push(f);\r\n\r\n        return () => {\r\n            backgroundDrawFunctions = backgroundDrawFunctions.filter((d) => d !== f);\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Registers a function that is called once, but only if there is currently no render in progress.\r\n     * @param {function} f. A function.\r\n     */\r\n    export function registerDraw(f: () => void): void {\r\n        drawFunctions.push(f);\r\n    }\r\n\r\n    /**\r\n     * Runner function. Calls all functions that subscribed to the game loop.\r\n     * @param {number} tick. Current animation tick.\r\n     */\r\n    function run(tick: number): void {\r\n        mainHandle = window.requestAnimationFrame(run);\r\n        updateStateFunctions.forEach((f) => f(tick));\r\n        backgroundDrawFunctions.forEach((f) => f());\r\n        drawFunctions.forEach((f) => f());\r\n        drawFunctions = [];\r\n    }\r\n}\r\n\r\nexport default GameLoop;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Actions\r\n * Responsibility:  Action creator functions for the GameState\r\n */\r\n\r\nimport Constants from \"./GameConstants\";\r\nimport { AddLevel, AddLife, AddLifeAndPhaser, AddPhaser, IncreaseScore, NextLevel, RemoveLife, RemovePhaser, SetLevel, SetLives, SetPause, SetPhasers, SetWarpGateComplexity } from \"./GameTypes\";\r\nimport { WarpLevelComplexity } from \"./WarpLevelTypes\";\r\n\r\nexport function increaseScore(score: number): IncreaseScore {\r\n    return {\r\n        type: Constants.increaseScore,\r\n        payload: score\r\n    };\r\n}\r\n\r\nexport function setLives(lives: number): SetLives {\r\n    return {\r\n        type: Constants.setLives,\r\n        payload: lives,\r\n    };\r\n}\r\n\r\nexport function addLife(): AddLife {\r\n    return {\r\n        type: Constants.addLife,\r\n    };\r\n}\r\n\r\nexport function removeLife(): RemoveLife {\r\n    return {\r\n        type: Constants.removeLife,\r\n    };\r\n}\r\n\r\nexport function setPhasers(phasers: number): SetPhasers {\r\n    return { type: Constants.setPhasers, payload: phasers };\r\n}\r\n\r\nexport function addPhaser(): AddPhaser {\r\n    return { type: Constants.addPhaser };\r\n}\r\n\r\nexport function removePhaser(): RemovePhaser {\r\n    return { type: Constants.removePhaser };\r\n}\r\n\r\nexport function addLevel(): AddLevel {\r\n    return { type: Constants.addLevel };\r\n}\r\n\r\nexport function setLevel(level: number): SetLevel {\r\n    return { type: Constants.setLevel, payload: level };\r\n}\r\n\r\nexport function nextLevel(): NextLevel {\r\n    return { type: Constants.nextLevel };\r\n}\r\n\r\nexport function addLifeAndPhaser(): AddLifeAndPhaser {\r\n    return { type: Constants.addLifeAndPhaser };\r\n}\r\n\r\nexport function setPause(pause: boolean): SetPause {\r\n    return {\r\n        type: Constants.setPause,\r\n        payload: pause,\r\n    };\r\n}\r\n\r\nexport function setWarpGamteComplexity(complexity: WarpLevelComplexity): SetWarpGateComplexity {\r\n    return {\r\n        type: Constants.setWarpLevelComplexity,\r\n        complexity,\r\n    };\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { angles } from \"../Constants/Angles\";\r\nimport { GameLocation } from \"../Models/GameLocation\";\r\nimport { GameRectangle } from \"../Models/GameRectangle\";\r\nimport KeyboardState from \"../State/Keyboard/KeyboardState\";\r\n\r\n/**\r\n * Module:          Geometry\r\n * Responsibility:  Contains geometry functions.\r\n */\r\n\r\n/**\r\n * Gets the next X coordinats based on the angle, speed and the current X coordinate.\r\n * @param {number} angle. The angle.\r\n * @param {number} speed. The speed.\r\n * @param {number} current. The current X coordinate.\r\n * @returns {number}. The next X coordinate.\r\n */\r\nexport function getNextX(angle: number, speed: number, currentX: number): number {\r\n    return Math.cos(angle * Math.PI / 180) * speed + currentX;\r\n}\r\n\r\n/**\r\n * Gets the next Y coordinate based on the angle, speed and the current Y coordinate.\r\n * @param {number} angle. The angle.\r\n * @param {number} speed. The speed.\r\n * @param {number} current. The current X coordinate.\r\n * @returns {number}. The next Y coordinate.\r\n */\r\nexport function getNextY(angle: number, speed: number, currentY: number): number {\r\n    return Math.sin(angle * (Math.PI / 180)) * speed + currentY;\r\n}\r\n\r\n/**\r\n * getAngle.\r\n * @param {KeyboardState} state. Current keyboard dstate\r\n * @returns {number}. The angle. -1 indicates no movement.\r\n */\r\nexport function getAngle(state: KeyboardState): number {\r\n    let angle = -1;\r\n    if (state.up && state.left) {\r\n        angle = angles.leftup;\r\n    } else if (state.up && state.right) {\r\n        angle = angles.rightup;\r\n    } else if (state.down && state.left) {\r\n        angle = angles.leftdown;\r\n    } else if (state.down && state.right) {\r\n        angle = angles.rightdown;\r\n    } else if (state.left) {\r\n        angle = angles.left;\r\n    } else if (state.right) {\r\n        angle = angles.right;\r\n    } else if (state.up) {\r\n        angle = angles.up;\r\n    } else if (state.down) {\r\n        angle = angles.down;\r\n    }\r\n\r\n    return angle;\r\n}\r\n\r\n/**\r\n * Returns true if two hitboxes overlap.\r\n * @param {GameRectangle} hitbox1.\r\n * @param {GameRectangle} hitbox2.\r\n * @returns {boolean}. True if overlap.\r\n */\r\nexport function overlaps(hitbox1: GameRectangle | undefined, hitbox2: GameRectangle | undefined): boolean {\r\n\r\n    if (hitbox1 === undefined || hitbox2 === undefined) {\r\n        return false;\r\n    }\r\n\r\n    if (hitbox1.right < hitbox2.left || hitbox1.left > hitbox2.right) {\r\n        return false;\r\n    }\r\n\r\n    if (hitbox1.bottom < hitbox2.top || hitbox1.top > hitbox2.bottom) {\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/**\r\n * returns the reverse angle\r\n * @param {number} angle. An angle in degrees\r\n * @returns {number}. The angle in the opposite direction.\r\n */\r\nexport function reverseDegreeAngle(angle: number): number {\r\n    let newAngle = angle += 180;\r\n\r\n    if (newAngle > 360) {\r\n        newAngle -= 360;\r\n    }\r\n\r\n    return newAngle;\r\n}\r\n\r\n/**\r\n * Calculates the angle from the source location to the target location.\r\n * @param {number} startLeft. Left begin point.\r\n * @param {number} startTop. Top begin point.\r\n * @param {number} endLeft. Left end point.\r\n * @param {number} endTop. Top end pint.\r\n * @returns {number | undefined}. The angle to towards the target in degrees.\r\n */\r\nexport function calculateAngle(startLeft: number, startTop: number, endLeft: number, endTop: number): number | undefined {\r\n    const dx = endLeft - startLeft;\r\n    const dy = endTop - startTop;\r\n\r\n    // Singularity.\r\n    if (dx === 0 && dy === 0) {\r\n        return undefined;\r\n    }\r\n\r\n    return Math.atan2(dy, dx) * 180 / Math.PI;\r\n}\r\n\r\n/**\r\n * Calculates the difference between two angles.\r\n * @param {number} angle1. Angle 1 in degrees.\r\n * @param {number} angle2. Angle 2 in degrees.\r\n * @returns {number}. The difference, in degrees, between the angles\r\n * Source: https://stackoverflow.com/questions/1878907/the-smallest-difference-between-2-angles\r\n */\r\nexport function calculateAngleDifference(angle1: number, angle2: number): number {\r\n    const absoluteAngleDifference = Math.abs(angle1 - angle2);\r\n    const angleDifference = (absoluteAngleDifference + 180) % 360 - 180;\r\n    return Math.abs(angleDifference);\r\n}\r\n\r\n/**\r\n * Calculates the ideal location where a spaller rectangle should appear in a bigger one.\r\n * @param {GameRectangle} outerRect. Enveloping rectangle.\r\n * @param {GameRectangle} innerRect. Inner rectangle.\r\n */\r\nexport function calculateOptinalInnerRectablePlacement(outerRect: GameRectangle, innerRect: GameRectangle): GameLocation {\r\n    const outerRectWidth = outerRect.right - outerRect.left;\r\n    const outerRectHeight = outerRect.bottom - outerRect.top;\r\n\r\n    const innerRectWidth = innerRect.right - innerRect.left;\r\n    const innerRectHeight = innerRect.bottom - innerRect.top;\r\n\r\n    const widthDifference = outerRectWidth - innerRectWidth;\r\n    const heightDifference = outerRectHeight - innerRectHeight;\r\n\r\n    return {\r\n        left: outerRect.left + widthDifference / 2,\r\n        top: outerRect.top + heightDifference / 2,\r\n    };\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Actions\r\n * Responsibility:  Action production functions for the PlayerState.\r\n */\r\n\r\nimport { GameLocation } from \"../../Models/GameLocation\";\r\nimport { MoveLimits } from \"../../Types\";\r\nimport { ParticleState } from \"./ParticleState\";\r\nimport Constants from \"./PlayerConstants\";\r\nimport { PlayerHitboxes } from \"./PlayerState\";\r\nimport { SetPlayerBulletState, SetPlayerIsAlive, SetPlayerLocationData, SetPlayerMovementLimit } from \"./PlayerTypes\";\r\n\r\nexport function setPlayerIsAlive(playerAlive: boolean): SetPlayerIsAlive {\r\n    return {\r\n        type: Constants.setPlayerIsAlive,\r\n        playerIsAlive: playerAlive,\r\n    };\r\n}\r\n\r\nexport function setPlayerMovementLimit(moveLimit: MoveLimits): SetPlayerMovementLimit {\r\n    return {\r\n        type: Constants.setPlayerMovementLimit,\r\n        payload: moveLimit\r\n    };\r\n}\r\n\r\nexport function setPlayerLocationData(left: number, top: number, hitboxes?: PlayerHitboxes, nozzleLocation?: GameLocation): SetPlayerLocationData {\r\n    return {\r\n        type: Constants.setPlayerLocationData,\r\n        payload: {\r\n            left,\r\n            top,\r\n            hitboxes,\r\n            nozzleLocation\r\n        }\r\n    };\r\n}\r\n\r\nexport function setPlayerBulletState(particleState: ParticleState | undefined): SetPlayerBulletState  {\r\n    return {\r\n        type: Constants.setPlayerBulletState,\r\n        particleState,\r\n    };\r\n}","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          CtxProvider\r\n * Responsibility:  Provides the 2d Canvas context\r\n */\r\n\r\nlet cachedCtx: CanvasRenderingContext2D;\r\n\r\n/**\r\n * ctxProvider.\r\n * @returns {CanvasRenderingContext2D}. Returns a 2d canvar renderign context.\r\n */\r\nexport default function ctxProvider(): CanvasRenderingContext2D {\r\n    if (!cachedCtx) {\r\n        const canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\r\n        cachedCtx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n\r\n    }\r\n\r\n    return cachedCtx;\r\n}","export const NOTHING =\n\ttypeof Symbol !== \"undefined\"\n\t\t? Symbol(\"immer-nothing\")\n\t\t: {[\"immer-nothing\"]: true}\n\nexport const DRAFTABLE =\n\ttypeof Symbol !== \"undefined\" && Symbol.for\n\t\t? Symbol.for(\"immer-draftable\")\n\t\t: \"__$immer_draftable\"\n\nexport const DRAFT_STATE =\n\ttypeof Symbol !== \"undefined\" && Symbol.for\n\t\t? Symbol.for(\"immer-state\")\n\t\t: \"__$immer_state\"\n\nexport function isDraft(value) {\n\treturn !!value && !!value[DRAFT_STATE]\n}\n\nexport function isDraftable(value) {\n\tif (!value) return false\n\treturn (\n\t\tisPlainObject(value) ||\n\t\t!!value[DRAFTABLE] ||\n\t\t!!value.constructor[DRAFTABLE] ||\n\t\tisMap(value) ||\n\t\tisSet(value)\n\t)\n}\n\nexport function isPlainObject(value) {\n\tif (!value || typeof value !== \"object\") return false\n\tif (Array.isArray(value)) return true\n\tconst proto = Object.getPrototypeOf(value)\n\treturn !proto || proto === Object.prototype\n}\n\nexport function original(value) {\n\tif (value && value[DRAFT_STATE]) {\n\t\treturn value[DRAFT_STATE].base\n\t}\n\t// otherwise return undefined\n}\n\n// We use Maps as `drafts` for Sets, not Objects\n// See proxy.js\nexport function assignSet(target, override) {\n\toverride.forEach(value => {\n\t\t// When we add new drafts we have to remove their originals if present\n\t\tconst prev = original(value)\n\t\tif (prev) target.delete(prev)\n\t\ttarget.add(value)\n\t})\n\treturn target\n}\n\n// We use Maps as `drafts` for Maps, not Objects\n// See proxy.js\nexport function assignMap(target, override) {\n\toverride.forEach((value, key) => target.set(key, value))\n\treturn target\n}\n\nexport const assign =\n\tObject.assign ||\n\t((target, ...overrides) => {\n\t\toverrides.forEach(override =>\n\t\t\tObject.keys(override).forEach(key => (target[key] = override[key]))\n\t\t)\n\t\treturn target\n\t})\n\nexport const ownKeys =\n\ttypeof Reflect !== \"undefined\" && Reflect.ownKeys\n\t\t? Reflect.ownKeys\n\t\t: typeof Object.getOwnPropertySymbols !== \"undefined\"\n\t\t? obj =>\n\t\t\t\tObject.getOwnPropertyNames(obj).concat(\n\t\t\t\t\tObject.getOwnPropertySymbols(obj)\n\t\t\t\t)\n\t\t: Object.getOwnPropertyNames\n\nexport function shallowCopy(base, invokeGetters = false) {\n\tif (Array.isArray(base)) return base.slice()\n\tif (isMap(base)) return new Map(base)\n\tif (isSet(base)) return new Set(base)\n\tconst clone = Object.create(Object.getPrototypeOf(base))\n\townKeys(base).forEach(key => {\n\t\tif (key === DRAFT_STATE) {\n\t\t\treturn // Never copy over draft state.\n\t\t}\n\t\tconst desc = Object.getOwnPropertyDescriptor(base, key)\n\t\tlet {value} = desc\n\t\tif (desc.get) {\n\t\t\tif (!invokeGetters) {\n\t\t\t\tthrow new Error(\"Immer drafts cannot have computed properties\")\n\t\t\t}\n\t\t\tvalue = desc.get.call(base)\n\t\t}\n\t\tif (desc.enumerable) {\n\t\t\tclone[key] = value\n\t\t} else {\n\t\t\tObject.defineProperty(clone, key, {\n\t\t\t\tvalue,\n\t\t\t\twritable: true,\n\t\t\t\tconfigurable: true\n\t\t\t})\n\t\t}\n\t})\n\treturn clone\n}\n\nexport function each(obj, iter) {\n\tif (Array.isArray(obj) || isMap(obj) || isSet(obj)) {\n\t\tobj.forEach((entry, index) => iter(index, entry, obj))\n\t} else {\n\t\townKeys(obj).forEach(key => iter(key, obj[key], obj))\n\t}\n}\n\nexport function isEnumerable(base, prop) {\n\tconst desc = Object.getOwnPropertyDescriptor(base, prop)\n\treturn !!desc && desc.enumerable\n}\n\nexport function has(thing, prop) {\n\treturn isMap(thing)\n\t\t? thing.has(prop)\n\t\t: Object.prototype.hasOwnProperty.call(thing, prop)\n}\n\nexport function get(thing, prop) {\n\treturn isMap(thing) ? thing.get(prop) : thing[prop]\n}\n\nexport function is(x, y) {\n\t// From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n\tif (x === y) {\n\t\treturn x !== 0 || 1 / x === 1 / y\n\t} else {\n\t\treturn x !== x && y !== y\n\t}\n}\n\nexport const hasSymbol = typeof Symbol !== \"undefined\"\n\nexport const hasMap = typeof Map !== \"undefined\"\n\nexport function isMap(target) {\n\treturn hasMap && target instanceof Map\n}\n\nexport const hasSet = typeof Set !== \"undefined\"\n\nexport function isSet(target) {\n\treturn hasSet && target instanceof Set\n}\n\nexport function makeIterable(next) {\n\tlet self\n\treturn (self = {\n\t\t[Symbol.iterator]: () => self,\n\t\tnext\n\t})\n}\n\n/** Map.prototype.values _-or-_ Map.prototype.entries */\nexport function iterateMapValues(state, prop, receiver) {\n\tconst isEntries = prop !== \"values\"\n\treturn () => {\n\t\tconst iterator = latest(state)[Symbol.iterator]()\n\t\treturn makeIterable(() => {\n\t\t\tconst result = iterator.next()\n\t\t\tif (!result.done) {\n\t\t\t\tconst [key] = result.value\n\t\t\t\tconst value = receiver.get(key)\n\t\t\t\tresult.value = isEntries ? [key, value] : value\n\t\t\t}\n\t\t\treturn result\n\t\t})\n\t}\n}\n\nexport function makeIterateSetValues(createProxy) {\n\tfunction iterateSetValues(state, prop) {\n\t\tconst isEntries = prop === \"entries\"\n\t\treturn () => {\n\t\t\tconst iterator = latest(state)[Symbol.iterator]()\n\t\t\treturn makeIterable(() => {\n\t\t\t\tconst result = iterator.next()\n\t\t\t\tif (!result.done) {\n\t\t\t\t\tconst value = wrapSetValue(state, result.value)\n\t\t\t\t\tresult.value = isEntries ? [value, value] : value\n\t\t\t\t}\n\t\t\t\treturn result\n\t\t\t})\n\t\t}\n\t}\n\n\tfunction wrapSetValue(state, value) {\n\t\tconst key = original(value) || value\n\t\tlet draft = state.drafts.get(key)\n\t\tif (!draft) {\n\t\t\tif (state.finalized || !isDraftable(value) || state.finalizing) {\n\t\t\t\treturn value\n\t\t\t}\n\t\t\tdraft = createProxy(value, state)\n\t\t\tstate.drafts.set(key, draft)\n\t\t\tif (state.modified) {\n\t\t\t\tstate.copy.add(draft)\n\t\t\t}\n\t\t}\n\t\treturn draft\n\t}\n\n\treturn iterateSetValues\n}\n\nfunction latest(state) {\n\treturn state.copy || state.base\n}\n\nexport function clone(obj) {\n\tif (!isDraftable(obj)) return obj\n\tif (Array.isArray(obj)) return obj.map(clone)\n\tif (isMap(obj)) return new Map(obj)\n\tif (isSet(obj)) return new Set(obj)\n\tconst cloned = Object.create(Object.getPrototypeOf(obj))\n\tfor (const key in obj) cloned[key] = clone(obj[key])\n\treturn cloned\n}\n\nexport function freeze(obj, deep = false) {\n\tif (!isDraftable(obj) || isDraft(obj) || Object.isFrozen(obj)) return\n\tif (isSet(obj)) {\n\t\tobj.add = obj.clear = obj.delete = dontMutateFrozenCollections\n\t} else if (isMap(obj)) {\n\t\tobj.set = obj.clear = obj.delete = dontMutateFrozenCollections\n\t}\n\tObject.freeze(obj)\n\tif (deep) each(obj, (_, value) => freeze(value, true))\n}\n\nfunction dontMutateFrozenCollections() {\n\tthrow new Error(\"This object has been frozen and should not be mutated\")\n}\n","import {DRAFT_STATE} from \"./common\"\n\n/** Each scope represents a `produce` call. */\nexport class ImmerScope {\n\tconstructor(parent) {\n\t\tthis.drafts = []\n\t\tthis.parent = parent\n\n\t\t// Whenever the modified draft contains a draft from another scope, we\n\t\t// need to prevent auto-freezing so the unowned draft can be finalized.\n\t\tthis.canAutoFreeze = true\n\n\t\t// To avoid prototype lookups:\n\t\tthis.patches = null\n\t}\n\tusePatches(patchListener) {\n\t\tif (patchListener) {\n\t\t\tthis.patches = []\n\t\t\tthis.inversePatches = []\n\t\t\tthis.patchListener = patchListener\n\t\t}\n\t}\n\trevoke() {\n\t\tthis.leave()\n\t\tthis.drafts.forEach(revoke)\n\t\tthis.drafts = null // Make draft-related methods throw.\n\t}\n\tleave() {\n\t\tif (this === ImmerScope.current) {\n\t\t\tImmerScope.current = this.parent\n\t\t}\n\t}\n}\n\nImmerScope.current = null\nImmerScope.enter = function() {\n\treturn (this.current = new ImmerScope(this.current))\n}\n\nfunction revoke(draft) {\n\tdraft[DRAFT_STATE].revoke()\n}\n","\"use strict\"\nimport {\n\teach,\n\thas,\n\tis,\n\tisDraft,\n\tisDraftable,\n\tisEnumerable,\n\tisMap,\n\tisSet,\n\thasSymbol,\n\tshallowCopy,\n\tDRAFT_STATE,\n\titerateMapValues,\n\tmakeIterable,\n\tmakeIterateSetValues\n} from \"./common\"\nimport {ImmerScope} from \"./scope\"\n\nexport function willFinalize(scope, result, isReplaced) {\n\tscope.drafts.forEach(draft => {\n\t\tdraft[DRAFT_STATE].finalizing = true\n\t})\n\tif (!isReplaced) {\n\t\tif (scope.patches) {\n\t\t\tmarkChangesRecursively(scope.drafts[0])\n\t\t}\n\t\t// This is faster when we don't care about which attributes changed.\n\t\tmarkChangesSweep(scope.drafts)\n\t}\n\t// When a child draft is returned, look for changes.\n\telse if (isDraft(result) && result[DRAFT_STATE].scope === scope) {\n\t\tmarkChangesSweep(scope.drafts)\n\t}\n}\n\nexport function createProxy(base, parent) {\n\tconst isArray = Array.isArray(base)\n\tconst draft = clonePotentialDraft(base)\n\n\tif (isMap(base)) {\n\t\tproxyMap(draft)\n\t} else if (isSet(base)) {\n\t\tproxySet(draft)\n\t} else {\n\t\teach(draft, prop => {\n\t\t\tproxyProperty(draft, prop, isArray || isEnumerable(base, prop))\n\t\t})\n\t}\n\n\t// See \"proxy.js\" for property documentation.\n\tconst scope = parent ? parent.scope : ImmerScope.current\n\tconst state = {\n\t\tscope,\n\t\tmodified: false,\n\t\tfinalizing: false, // es5 only\n\t\tfinalized: false,\n\t\tassigned: isMap(base) ? new Map() : {},\n\t\tparent,\n\t\tbase,\n\t\tdraft,\n\t\tdrafts: isSet(base) ? new Map() : null,\n\t\tcopy: null,\n\t\trevoke,\n\t\trevoked: false // es5 only\n\t}\n\n\tcreateHiddenProperty(draft, DRAFT_STATE, state)\n\tscope.drafts.push(draft)\n\treturn draft\n}\n\nfunction revoke() {\n\tthis.revoked = true\n}\n\nfunction latest(state) {\n\treturn state.copy || state.base\n}\n\n// Access a property without creating an Immer draft.\nfunction peek(draft, prop) {\n\tconst state = draft[DRAFT_STATE]\n\tif (state && !state.finalizing) {\n\t\tstate.finalizing = true\n\t\tconst value = draft[prop]\n\t\tstate.finalizing = false\n\t\treturn value\n\t}\n\treturn draft[prop]\n}\n\nfunction get(state, prop) {\n\tassertUnrevoked(state)\n\tconst value = peek(latest(state), prop)\n\tif (state.finalizing) return value\n\t// Create a draft if the value is unmodified.\n\tif (value === peek(state.base, prop) && isDraftable(value)) {\n\t\tprepareCopy(state)\n\t\treturn (state.copy[prop] = createProxy(value, state))\n\t}\n\treturn value\n}\n\nfunction set(state, prop, value) {\n\tassertUnrevoked(state)\n\tstate.assigned[prop] = true\n\tif (!state.modified) {\n\t\tif (is(value, peek(latest(state), prop))) return\n\t\tmarkChanged(state)\n\t\tprepareCopy(state)\n\t}\n\tstate.copy[prop] = value\n}\n\nfunction markChanged(state) {\n\tif (!state.modified) {\n\t\tstate.modified = true\n\t\tif (state.parent) markChanged(state.parent)\n\t}\n}\n\nfunction prepareCopy(state) {\n\tif (!state.copy) state.copy = clonePotentialDraft(state.base)\n}\n\nfunction clonePotentialDraft(base) {\n\tconst state = base && base[DRAFT_STATE]\n\tif (state) {\n\t\tstate.finalizing = true\n\t\tconst draft = shallowCopy(state.draft, true)\n\t\tstate.finalizing = false\n\t\treturn draft\n\t}\n\treturn shallowCopy(base)\n}\n\n// property descriptors are recycled to make sure we don't create a get and set closure per property,\n// but share them all instead\nconst descriptors = {}\n\nfunction proxyProperty(draft, prop, enumerable) {\n\tlet desc = descriptors[prop]\n\tif (desc) {\n\t\tdesc.enumerable = enumerable\n\t} else {\n\t\tdescriptors[prop] = desc = {\n\t\t\tconfigurable: true,\n\t\t\tenumerable,\n\t\t\tget() {\n\t\t\t\treturn get(this[DRAFT_STATE], prop)\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tset(this[DRAFT_STATE], prop, value)\n\t\t\t}\n\t\t}\n\t}\n\tObject.defineProperty(draft, prop, desc)\n}\n\nfunction proxyMap(target) {\n\tObject.defineProperties(target, mapTraps)\n\n\tif (hasSymbol) {\n\t\tObject.defineProperty(\n\t\t\ttarget,\n\t\t\tSymbol.iterator,\n\t\t\tproxyMethod(iterateMapValues)\n\t\t)\n\t}\n}\n\nconst mapTraps = finalizeTraps({\n\tsize: state => latest(state).size,\n\thas: state => key => latest(state).has(key),\n\tset: state => (key, value) => {\n\t\tif (latest(state).get(key) !== value) {\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\tstate.assigned.set(key, true)\n\t\t\tstate.copy.set(key, value)\n\t\t}\n\t\treturn state.draft\n\t},\n\tdelete: state => key => {\n\t\tprepareCopy(state)\n\t\tmarkChanged(state)\n\t\tstate.assigned.set(key, false)\n\t\tstate.copy.delete(key)\n\t\treturn false\n\t},\n\tclear: state => () => {\n\t\tif (!state.copy) {\n\t\t\tprepareCopy(state)\n\t\t}\n\t\tmarkChanged(state)\n\t\tstate.assigned = new Map()\n\t\tfor (const key of latest(state).keys()) {\n\t\t\tstate.assigned.set(key, false)\n\t\t}\n\t\treturn state.copy.clear()\n\t},\n\tforEach: (state, key, reciever) => cb => {\n\t\tlatest(state).forEach((value, key, map) => {\n\t\t\tcb(reciever.get(key), key, map)\n\t\t})\n\t},\n\tget: state => key => {\n\t\tconst value = latest(state).get(key)\n\n\t\tif (state.finalizing || state.finalized || !isDraftable(value)) {\n\t\t\treturn value\n\t\t}\n\n\t\tif (value !== state.base.get(key)) {\n\t\t\treturn value\n\t\t}\n\t\tconst draft = createProxy(value, state)\n\t\tprepareCopy(state)\n\t\tstate.copy.set(key, draft)\n\t\treturn draft\n\t},\n\tkeys: state => () => latest(state).keys(),\n\tvalues: iterateMapValues,\n\tentries: iterateMapValues\n})\n\nfunction proxySet(target) {\n\tObject.defineProperties(target, setTraps)\n\n\tif (hasSymbol) {\n\t\tObject.defineProperty(\n\t\t\ttarget,\n\t\t\tSymbol.iterator,\n\t\t\tproxyMethod(iterateSetValues)\n\t\t)\n\t}\n}\n\nconst iterateSetValues = makeIterateSetValues(createProxy)\n\nconst setTraps = finalizeTraps({\n\tsize: state => {\n\t\treturn latest(state).size\n\t},\n\tadd: state => value => {\n\t\tif (!latest(state).has(value)) {\n\t\t\tmarkChanged(state)\n\t\t\tif (!state.copy) {\n\t\t\t\tprepareCopy(state)\n\t\t\t}\n\t\t\tstate.copy.add(value)\n\t\t}\n\t\treturn state.draft\n\t},\n\tdelete: state => value => {\n\t\tmarkChanged(state)\n\t\tif (!state.copy) {\n\t\t\tprepareCopy(state)\n\t\t}\n\t\treturn state.copy.delete(value)\n\t},\n\thas: state => key => {\n\t\treturn latest(state).has(key)\n\t},\n\tclear: state => () => {\n\t\tmarkChanged(state)\n\t\tif (!state.copy) {\n\t\t\tprepareCopy(state)\n\t\t}\n\t\treturn state.copy.clear()\n\t},\n\tkeys: iterateSetValues,\n\tentries: iterateSetValues,\n\tvalues: iterateSetValues,\n\tforEach: state => (cb, thisArg) => {\n\t\tconst iterator = iterateSetValues(state)()\n\t\tlet result = iterator.next()\n\t\twhile (!result.done) {\n\t\t\tcb.call(thisArg, result.value, result.value, state.draft)\n\t\t\tresult = iterator.next()\n\t\t}\n\t}\n})\n\nfunction finalizeTraps(traps) {\n\treturn Object.keys(traps).reduce(function(acc, key) {\n\t\tconst builder = key === \"size\" ? proxyAttr : proxyMethod\n\t\tacc[key] = builder(traps[key], key)\n\t\treturn acc\n\t}, {})\n}\n\nfunction proxyAttr(fn) {\n\treturn {\n\t\tget() {\n\t\t\tconst state = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\treturn fn(state)\n\t\t}\n\t}\n}\n\nfunction proxyMethod(trap, key) {\n\treturn {\n\t\tget() {\n\t\t\treturn function(...args) {\n\t\t\t\tconst state = this[DRAFT_STATE]\n\t\t\t\tassertUnrevoked(state)\n\t\t\t\treturn trap(state, key, state.draft)(...args)\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction assertUnrevoked(state) {\n\tif (state.revoked === true)\n\t\tthrow new Error(\n\t\t\t\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" +\n\t\t\t\tJSON.stringify(latest(state))\n\t\t)\n}\n\n// This looks expensive, but only proxies are visited, and only objects without known changes are scanned.\nfunction markChangesSweep(drafts) {\n\t// The natural order of drafts in the `scope` array is based on when they\n\t// were accessed. By processing drafts in reverse natural order, we have a\n\t// better chance of processing leaf nodes first. When a leaf node is known to\n\t// have changed, we can avoid any traversal of its ancestor nodes.\n\tfor (let i = drafts.length - 1; i >= 0; i--) {\n\t\tconst state = drafts[i][DRAFT_STATE]\n\t\tif (!state.modified) {\n\t\t\tif (Array.isArray(state.base)) {\n\t\t\t\tif (hasArrayChanges(state)) markChanged(state)\n\t\t\t} else if (isMap(state.base)) {\n\t\t\t\tif (hasMapChanges(state)) markChanged(state)\n\t\t\t} else if (isSet(state.base)) {\n\t\t\t\tif (hasSetChanges(state)) markChanged(state)\n\t\t\t} else if (hasObjectChanges(state)) {\n\t\t\t\tmarkChanged(state)\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction markChangesRecursively(object) {\n\tif (!object || typeof object !== \"object\") return\n\tconst state = object[DRAFT_STATE]\n\tif (!state) return\n\tconst {base, draft, assigned} = state\n\tif (!Array.isArray(object)) {\n\t\t// Look for added keys.\n\t\tObject.keys(draft).forEach(key => {\n\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\tif (base[key] === undefined && !has(base, key)) {\n\t\t\t\tassigned[key] = true\n\t\t\t\tmarkChanged(state)\n\t\t\t} else if (!assigned[key]) {\n\t\t\t\t// Only untouched properties trigger recursion.\n\t\t\t\tmarkChangesRecursively(draft[key])\n\t\t\t}\n\t\t})\n\t\t// Look for removed keys.\n\t\tObject.keys(base).forEach(key => {\n\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\tif (draft[key] === undefined && !has(draft, key)) {\n\t\t\t\tassigned[key] = false\n\t\t\t\tmarkChanged(state)\n\t\t\t}\n\t\t})\n\t} else if (hasArrayChanges(state)) {\n\t\tmarkChanged(state)\n\t\tassigned.length = true\n\t\tif (draft.length < base.length) {\n\t\t\tfor (let i = draft.length; i < base.length; i++) assigned[i] = false\n\t\t} else {\n\t\t\tfor (let i = base.length; i < draft.length; i++) assigned[i] = true\n\t\t}\n\t\tfor (let i = 0; i < draft.length; i++) {\n\t\t\t// Only untouched indices trigger recursion.\n\t\t\tif (assigned[i] === undefined) markChangesRecursively(draft[i])\n\t\t}\n\t}\n}\n\nfunction hasObjectChanges(state) {\n\tconst {base, draft} = state\n\n\t// Search for added keys and changed keys. Start at the back, because\n\t// non-numeric keys are ordered by time of definition on the object.\n\tconst keys = Object.keys(draft)\n\tfor (let i = keys.length - 1; i >= 0; i--) {\n\t\tconst key = keys[i]\n\t\tconst baseValue = base[key]\n\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\tif (baseValue === undefined && !has(base, key)) {\n\t\t\treturn true\n\t\t}\n\t\t// Once a base key is deleted, future changes go undetected, because its\n\t\t// descriptor is erased. This branch detects any missed changes.\n\t\telse {\n\t\t\tconst value = draft[key]\n\t\t\tconst state = value && value[DRAFT_STATE]\n\t\t\tif (state ? state.base !== baseValue : !is(value, baseValue)) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t}\n\t}\n\n\t// At this point, no keys were added or changed.\n\t// Compare key count to determine if keys were deleted.\n\treturn keys.length !== Object.keys(base).length\n}\n\nfunction hasArrayChanges(state) {\n\tconst {draft} = state\n\tif (draft.length !== state.base.length) return true\n\t// See #116\n\t// If we first shorten the length, our array interceptors will be removed.\n\t// If after that new items are added, result in the same original length,\n\t// those last items will have no intercepting property.\n\t// So if there is no own descriptor on the last position, we know that items were removed and added\n\t// N.B.: splice, unshift, etc only shift values around, but not prop descriptors, so we only have to check\n\t// the last one\n\tconst descriptor = Object.getOwnPropertyDescriptor(draft, draft.length - 1)\n\t// descriptor can be null, but only for newly created sparse arrays, eg. new Array(10)\n\tif (descriptor && !descriptor.get) return true\n\t// For all other cases, we don't have to compare, as they would have been picked up by the index setters\n\treturn false\n}\n\nfunction hasMapChanges(state) {\n\tconst {base, draft} = state\n\n\tif (base.size !== draft.size) return true\n\n\t// IE11 supports only forEach iteration\n\tlet hasChanges = false\n\tdraft.forEach(function(value, key) {\n\t\tif (!hasChanges) {\n\t\t\thasChanges = isDraftable(value) ? value.modified : value !== base.get(key)\n\t\t}\n\t})\n\treturn hasChanges\n}\n\nfunction hasSetChanges(state) {\n\tconst {base, draft} = state\n\n\tif (base.size !== draft.size) return true\n\n\t// IE11 supports only forEach iteration\n\tlet hasChanges = false\n\tdraft.forEach(function(value, key) {\n\t\tif (!hasChanges) {\n\t\t\thasChanges = isDraftable(value) ? value.modified : !base.has(key)\n\t\t}\n\t})\n\treturn hasChanges\n}\n\nfunction createHiddenProperty(target, prop, value) {\n\tObject.defineProperty(target, prop, {\n\t\tvalue: value,\n\t\tenumerable: false,\n\t\twritable: true\n\t})\n}\n","\"use strict\"\nimport {\n\tassign,\n\teach,\n\thas,\n\tis,\n\tisDraftable,\n\tisDraft,\n\tisMap,\n\tisSet,\n\thasSymbol,\n\tshallowCopy,\n\tmakeIterable,\n\tDRAFT_STATE,\n\tassignMap,\n\tassignSet,\n\toriginal,\n\titerateMapValues,\n\tmakeIterateSetValues\n} from \"./common\"\nimport {ImmerScope} from \"./scope\"\n\n// Do nothing before being finalized.\nexport function willFinalize() {}\n\n/**\n * Returns a new draft of the `base` object.\n *\n * The second argument is the parent draft-state (used internally).\n */\nexport function createProxy(base, parent) {\n\tconst scope = parent ? parent.scope : ImmerScope.current\n\tconst state = {\n\t\t// Track which produce call this is associated with.\n\t\tscope,\n\t\t// True for both shallow and deep changes.\n\t\tmodified: false,\n\t\t// Used during finalization.\n\t\tfinalized: false,\n\t\t// Track which properties have been assigned (true) or deleted (false).\n\t\tassigned: {},\n\t\t// The parent draft state.\n\t\tparent,\n\t\t// The base state.\n\t\tbase,\n\t\t// The base proxy.\n\t\tdraft: null,\n\t\t// Any property proxies.\n\t\tdrafts: {},\n\t\t// The base copy with any updated values.\n\t\tcopy: null,\n\t\t// Called by the `produce` function.\n\t\trevoke: null\n\t}\n\n\tlet target = state\n\tlet traps = objectTraps\n\tif (Array.isArray(base)) {\n\t\ttarget = [state]\n\t\ttraps = arrayTraps\n\t}\n\t// Map drafts must support object keys, so we use Map objects to track changes.\n\telse if (isMap(base)) {\n\t\ttraps = mapTraps\n\t\tstate.drafts = new Map()\n\t\tstate.assigned = new Map()\n\t}\n\t// Set drafts use a Map object to track which of its values are drafted.\n\t// And we don't need the \"assigned\" property, because Set objects have no keys.\n\telse if (isSet(base)) {\n\t\ttraps = setTraps\n\t\tstate.drafts = new Map()\n\t}\n\n\tconst {revoke, proxy} = Proxy.revocable(target, traps)\n\n\tstate.draft = proxy\n\tstate.revoke = revoke\n\n\tscope.drafts.push(proxy)\n\treturn proxy\n}\n\n/**\n * Object drafts\n */\n\nconst objectTraps = {\n\tget(state, prop) {\n\t\tif (prop === DRAFT_STATE) return state\n\t\tlet {drafts} = state\n\n\t\t// Check for existing draft in unmodified state.\n\t\tif (!state.modified && has(drafts, prop)) {\n\t\t\treturn drafts[prop]\n\t\t}\n\n\t\tconst value = latest(state)[prop]\n\t\tif (state.finalized || !isDraftable(value)) {\n\t\t\treturn value\n\t\t}\n\n\t\t// Check for existing draft in modified state.\n\t\tif (state.modified) {\n\t\t\t// Assigned values are never drafted. This catches any drafts we created, too.\n\t\t\tif (value !== peek(state.base, prop)) return value\n\t\t\t// Store drafts on the copy (when one exists).\n\t\t\tdrafts = state.copy\n\t\t}\n\n\t\treturn (drafts[prop] = createProxy(value, state))\n\t},\n\thas(state, prop) {\n\t\treturn prop in latest(state)\n\t},\n\townKeys(state) {\n\t\treturn Reflect.ownKeys(latest(state))\n\t},\n\tset(state, prop, value) {\n\t\tif (!state.modified) {\n\t\t\tconst baseValue = peek(state.base, prop)\n\t\t\t// Optimize based on value's truthiness. Truthy values are guaranteed to\n\t\t\t// never be undefined, so we can avoid the `in` operator. Lastly, truthy\n\t\t\t// values may be drafts, but falsy values are never drafts.\n\t\t\tconst isUnchanged = value\n\t\t\t\t? is(baseValue, value) || value === state.drafts[prop]\n\t\t\t\t: is(baseValue, value) && prop in state.base\n\t\t\tif (isUnchanged) return true\n\t\t\tmarkChanged(state)\n\t\t}\n\t\tstate.assigned[prop] = true\n\t\tstate.copy[prop] = value\n\t\treturn true\n\t},\n\tdeleteProperty(state, prop) {\n\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\tif (peek(state.base, prop) !== undefined || prop in state.base) {\n\t\t\tstate.assigned[prop] = false\n\t\t\tmarkChanged(state)\n\t\t} else if (state.assigned[prop]) {\n\t\t\t// if an originally not assigned property was deleted\n\t\t\tdelete state.assigned[prop]\n\t\t}\n\t\tif (state.copy) delete state.copy[prop]\n\t\treturn true\n\t},\n\t// Note: We never coerce `desc.value` into an Immer draft, because we can't make\n\t// the same guarantee in ES5 mode.\n\tgetOwnPropertyDescriptor(state, prop) {\n\t\tconst owner = latest(state)\n\t\tconst desc = Reflect.getOwnPropertyDescriptor(owner, prop)\n\t\tif (desc) {\n\t\t\tdesc.writable = true\n\t\t\tdesc.configurable = !Array.isArray(owner) || prop !== \"length\"\n\t\t}\n\t\treturn desc\n\t},\n\tdefineProperty() {\n\t\tthrow new Error(\"Object.defineProperty() cannot be used on an Immer draft\") // prettier-ignore\n\t},\n\tgetPrototypeOf(state) {\n\t\treturn Object.getPrototypeOf(state.base)\n\t},\n\tsetPrototypeOf() {\n\t\tthrow new Error(\"Object.setPrototypeOf() cannot be used on an Immer draft\") // prettier-ignore\n\t}\n}\n\n/**\n * Array drafts\n */\n\nconst arrayTraps = {}\neach(objectTraps, (key, fn) => {\n\tarrayTraps[key] = function() {\n\t\targuments[0] = arguments[0][0]\n\t\treturn fn.apply(this, arguments)\n\t}\n})\narrayTraps.deleteProperty = function(state, prop) {\n\tif (isNaN(parseInt(prop))) {\n\t\tthrow new Error(\"Immer only supports deleting array indices\") // prettier-ignore\n\t}\n\treturn objectTraps.deleteProperty.call(this, state[0], prop)\n}\narrayTraps.set = function(state, prop, value) {\n\tif (prop !== \"length\" && isNaN(parseInt(prop))) {\n\t\tthrow new Error(\"Immer only supports setting array indices and the 'length' property\") // prettier-ignore\n\t}\n\treturn objectTraps.set.call(this, state[0], prop, value)\n}\n\n// Used by Map and Set drafts\nconst reflectTraps = makeReflectTraps([\n\t\"ownKeys\",\n\t\"has\",\n\t\"set\",\n\t\"deleteProperty\",\n\t\"defineProperty\",\n\t\"getOwnPropertyDescriptor\",\n\t\"preventExtensions\",\n\t\"isExtensible\",\n\t\"getPrototypeOf\"\n])\n\n/**\n * Map drafts\n */\n\nconst mapTraps = makeTrapsForGetters({\n\t[DRAFT_STATE]: state => state,\n\tsize: state => latest(state).size,\n\thas: state => key => latest(state).has(key),\n\tset: state => (key, value) => {\n\t\tconst values = latest(state)\n\t\tif (!values.has(key) || values.get(key) !== value) {\n\t\t\tmarkChanged(state)\n\t\t\tstate.assigned.set(key, true)\n\t\t\tstate.copy.set(key, value)\n\t\t}\n\t\treturn state.draft\n\t},\n\tdelete: state => key => {\n\t\tif (latest(state).has(key)) {\n\t\t\tmarkChanged(state)\n\t\t\tstate.assigned.set(key, false)\n\t\t\treturn state.copy.delete(key)\n\t\t}\n\t\treturn false\n\t},\n\tclear: state => () => {\n\t\tmarkChanged(state)\n\t\tstate.assigned = new Map()\n\t\tfor (const key of latest(state).keys()) {\n\t\t\tstate.assigned.set(key, false)\n\t\t}\n\t\treturn state.copy.clear()\n\t},\n\tforEach: (state, _, receiver) => (cb, thisArg) =>\n\t\tlatest(state).forEach((_, key, map) => {\n\t\t\tconst value = receiver.get(key)\n\t\t\tcb.call(thisArg, value, key, map)\n\t\t}),\n\tget: state => key => {\n\t\tconst drafts = state[state.modified ? \"copy\" : \"drafts\"]\n\t\tif (drafts.has(key)) {\n\t\t\treturn drafts.get(key)\n\t\t}\n\n\t\tconst value = latest(state).get(key)\n\t\tif (state.finalized || !isDraftable(value)) {\n\t\t\treturn value\n\t\t}\n\n\t\tconst draft = createProxy(value, state)\n\t\tdrafts.set(key, draft)\n\t\treturn draft\n\t},\n\tkeys: state => () => latest(state).keys(),\n\tvalues: iterateMapValues,\n\tentries: iterateMapValues,\n\t[hasSymbol ? Symbol.iterator : \"@@iterator\"]: iterateMapValues\n})\n\nconst iterateSetValues = makeIterateSetValues(createProxy)\n/**\n * Set drafts\n */\n\nconst setTraps = makeTrapsForGetters({\n\t[DRAFT_STATE]: state => state,\n\tsize: state => latest(state).size,\n\thas: state => key => latest(state).has(key),\n\tadd: state => value => {\n\t\tif (!latest(state).has(value)) {\n\t\t\tmarkChanged(state)\n\t\t\tstate.copy.add(value)\n\t\t}\n\t\treturn state.draft\n\t},\n\tdelete: state => value => {\n\t\tmarkChanged(state)\n\t\treturn state.copy.delete(value)\n\t},\n\tclear: state => () => {\n\t\tmarkChanged(state)\n\t\treturn state.copy.clear()\n\t},\n\tforEach: state => (cb, thisArg) => {\n\t\tconst iterator = iterateSetValues(state)()\n\t\tlet result = iterator.next()\n\t\twhile (!result.done) {\n\t\t\tcb.call(thisArg, result.value, result.value, state.draft)\n\t\t\tresult = iterator.next()\n\t\t}\n\t},\n\tkeys: iterateSetValues,\n\tvalues: iterateSetValues,\n\tentries: iterateSetValues,\n\t[hasSymbol ? Symbol.iterator : \"@@iterator\"]: iterateSetValues\n})\n\n/**\n * Helpers\n */\n\n// Retrieve the latest values of the draft.\nfunction latest(state) {\n\treturn state.copy || state.base\n}\n\n// Access a property without creating an Immer draft.\nfunction peek(draft, prop) {\n\tconst state = draft[DRAFT_STATE]\n\tconst desc = Reflect.getOwnPropertyDescriptor(\n\t\tstate ? latest(state) : draft,\n\t\tprop\n\t)\n\treturn desc && desc.value\n}\n\nfunction markChanged(state) {\n\tif (!state.modified) {\n\t\tstate.modified = true\n\n\t\tconst {base, drafts, parent} = state\n\t\tconst copy = shallowCopy(base)\n\n\t\tif (isSet(base)) {\n\t\t\t// Note: The `drafts` property is preserved for Set objects, since\n\t\t\t// we need to keep track of which values are drafted.\n\t\t\tassignSet(copy, drafts)\n\t\t} else {\n\t\t\t// Merge nested drafts into the copy.\n\t\t\tif (isMap(base)) assignMap(copy, drafts)\n\t\t\telse assign(copy, drafts)\n\t\t\tstate.drafts = null\n\t\t}\n\n\t\tstate.copy = copy\n\t\tif (parent) {\n\t\t\tmarkChanged(parent)\n\t\t}\n\t}\n}\n\n/** Create traps that all use the `Reflect` API on the `latest(state)` */\nfunction makeReflectTraps(names) {\n\treturn names.reduce((traps, name) => {\n\t\ttraps[name] = (state, ...args) => Reflect[name](latest(state), ...args)\n\t\treturn traps\n\t}, {})\n}\n\nfunction makeTrapsForGetters(getters) {\n\treturn {\n\t\t...reflectTraps,\n\t\tget(state, prop, receiver) {\n\t\t\treturn getters.hasOwnProperty(prop)\n\t\t\t\t? getters[prop](state, prop, receiver)\n\t\t\t\t: Reflect.get(state, prop, receiver)\n\t\t},\n\t\tsetPrototypeOf(state) {\n\t\t\tthrow new Error(\"Object.setPrototypeOf() cannot be used on an Immer draft\") // prettier-ignore\n\t\t}\n\t}\n}\n","import {get, each, isMap, isSet, has, clone} from \"./common\"\n\nexport function generatePatches(state, basePath, patches, inversePatches) {\n\tconst generatePatchesFn = Array.isArray(state.base)\n\t\t? generateArrayPatches\n\t\t: isSet(state.base)\n\t\t? generateSetPatches\n\t\t: generatePatchesFromAssigned\n\n\tgeneratePatchesFn(state, basePath, patches, inversePatches)\n}\n\nfunction generateArrayPatches(state, basePath, patches, inversePatches) {\n\tlet {base, copy, assigned} = state\n\n\t// Reduce complexity by ensuring `base` is never longer.\n\tif (copy.length < base.length) {\n\t\t;[base, copy] = [copy, base]\n\t\t;[patches, inversePatches] = [inversePatches, patches]\n\t}\n\n\tconst delta = copy.length - base.length\n\n\t// Find the first replaced index.\n\tlet start = 0\n\twhile (base[start] === copy[start] && start < base.length) {\n\t\t++start\n\t}\n\n\t// Find the last replaced index. Search from the end to optimize splice patches.\n\tlet end = base.length\n\twhile (end > start && base[end - 1] === copy[end + delta - 1]) {\n\t\t--end\n\t}\n\n\t// Process replaced indices.\n\tfor (let i = start; i < end; ++i) {\n\t\tif (assigned[i] && copy[i] !== base[i]) {\n\t\t\tconst path = basePath.concat([i])\n\t\t\tpatches.push({\n\t\t\t\top: \"replace\",\n\t\t\t\tpath,\n\t\t\t\tvalue: copy[i]\n\t\t\t})\n\t\t\tinversePatches.push({\n\t\t\t\top: \"replace\",\n\t\t\t\tpath,\n\t\t\t\tvalue: base[i]\n\t\t\t})\n\t\t}\n\t}\n\n\tconst replaceCount = patches.length\n\n\t// Process added indices.\n\tfor (let i = end + delta - 1; i >= end; --i) {\n\t\tconst path = basePath.concat([i])\n\t\tpatches[replaceCount + i - end] = {\n\t\t\top: \"add\",\n\t\t\tpath,\n\t\t\tvalue: copy[i]\n\t\t}\n\t\tinversePatches.push({\n\t\t\top: \"remove\",\n\t\t\tpath\n\t\t})\n\t}\n}\n\n// This is used for both Map objects and normal objects.\nfunction generatePatchesFromAssigned(state, basePath, patches, inversePatches) {\n\tconst {base, copy} = state\n\teach(state.assigned, (key, assignedValue) => {\n\t\tconst origValue = get(base, key)\n\t\tconst value = get(copy, key)\n\t\tconst op = !assignedValue ? \"remove\" : has(base, key) ? \"replace\" : \"add\"\n\t\tif (origValue === value && op === \"replace\") return\n\t\tconst path = basePath.concat(key)\n\t\tpatches.push(op === \"remove\" ? {op, path} : {op, path, value})\n\t\tinversePatches.push(\n\t\t\top === \"add\"\n\t\t\t\t? {op: \"remove\", path}\n\t\t\t\t: op === \"remove\"\n\t\t\t\t? {op: \"add\", path, value: origValue}\n\t\t\t\t: {op: \"replace\", path, value: origValue}\n\t\t)\n\t})\n}\n\nfunction generateSetPatches(state, basePath, patches, inversePatches) {\n\tlet {base, copy} = state\n\n\tlet i = 0\n\tfor (const value of base) {\n\t\tif (!copy.has(value)) {\n\t\t\tconst path = basePath.concat([i])\n\t\t\tpatches.push({\n\t\t\t\top: \"remove\",\n\t\t\t\tpath,\n\t\t\t\tvalue\n\t\t\t})\n\t\t\tinversePatches.unshift({\n\t\t\t\top: \"add\",\n\t\t\t\tpath,\n\t\t\t\tvalue\n\t\t\t})\n\t\t}\n\t\ti++\n\t}\n\ti = 0\n\tfor (const value of copy) {\n\t\tif (!base.has(value)) {\n\t\t\tconst path = basePath.concat([i])\n\t\t\tpatches.push({\n\t\t\t\top: \"add\",\n\t\t\t\tpath,\n\t\t\t\tvalue\n\t\t\t})\n\t\t\tinversePatches.unshift({\n\t\t\t\top: \"remove\",\n\t\t\t\tpath,\n\t\t\t\tvalue\n\t\t\t})\n\t\t}\n\t\ti++\n\t}\n}\n\nexport const applyPatches = (draft, patches) => {\n\tfor (const patch of patches) {\n\t\tconst {path, op} = patch\n\n\t\tif (!path.length) throw new Error(\"Illegal state\")\n\n\t\tlet base = draft\n\t\tfor (let i = 0; i < path.length - 1; i++) {\n\t\t\tbase = get(base, path[i])\n\t\t\tif (!base || typeof base !== \"object\")\n\t\t\t\tthrow new Error(\"Cannot apply patch, path doesn't resolve: \" + path.join(\"/\")) // prettier-ignore\n\t\t}\n\n\t\tconst value = clone(patch.value) // used to clone patch to ensure original patch is not modified, see #411\n\n\t\tconst key = path[path.length - 1]\n\t\tswitch (op) {\n\t\t\tcase \"replace\":\n\t\t\t\tif (isMap(base)) {\n\t\t\t\t\tbase.set(key, value)\n\t\t\t\t} else if (isSet(base)) {\n\t\t\t\t\tthrow new Error('Sets cannot have \"replace\" patches.')\n\t\t\t\t} else {\n\t\t\t\t\t// if value is an object, then it's assigned by reference\n\t\t\t\t\t// in the following add or remove ops, the value field inside the patch will also be modifyed\n\t\t\t\t\t// so we use value from the cloned patch\n\t\t\t\t\tbase[key] = value\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\tcase \"add\":\n\t\t\t\tif (isSet(base)) {\n\t\t\t\t\tbase.delete(patch.value)\n\t\t\t\t}\n\n\t\t\t\tArray.isArray(base)\n\t\t\t\t\t? base.splice(key, 0, value)\n\t\t\t\t\t: isMap(base)\n\t\t\t\t\t? base.set(key, value)\n\t\t\t\t\t: isSet(base)\n\t\t\t\t\t? base.add(value)\n\t\t\t\t\t: (base[key] = value)\n\t\t\t\tbreak\n\t\t\tcase \"remove\":\n\t\t\t\tArray.isArray(base)\n\t\t\t\t\t? base.splice(key, 1)\n\t\t\t\t\t: isMap(base)\n\t\t\t\t\t? base.delete(key)\n\t\t\t\t\t: isSet(base)\n\t\t\t\t\t? base.delete(patch.value)\n\t\t\t\t\t: delete base[key]\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"Unsupported patch operation: \" + op)\n\t\t}\n\t}\n\n\treturn draft\n}\n","import * as legacyProxy from \"./es5\"\nimport * as modernProxy from \"./proxy\"\nimport {applyPatches, generatePatches} from \"./patches\"\nimport {\n\tassign,\n\teach,\n\thas,\n\tis,\n\tisDraft,\n\tisSet,\n\tget,\n\tisMap,\n\tisDraftable,\n\tisEnumerable,\n\tshallowCopy,\n\tDRAFT_STATE,\n\tNOTHING,\n\tfreeze\n} from \"./common\"\nimport {ImmerScope} from \"./scope\"\n\nfunction verifyMinified() {}\n\nconst configDefaults = {\n\tuseProxies:\n\t\ttypeof Proxy !== \"undefined\" &&\n\t\ttypeof Proxy.revocable !== \"undefined\" &&\n\t\ttypeof Reflect !== \"undefined\",\n\tautoFreeze:\n\t\ttypeof process !== \"undefined\"\n\t\t\t? process.env.NODE_ENV !== \"production\"\n\t\t\t: verifyMinified.name === \"verifyMinified\",\n\tonAssign: null,\n\tonDelete: null,\n\tonCopy: null\n}\n\nexport class Immer {\n\tconstructor(config) {\n\t\tassign(this, configDefaults, config)\n\t\tthis.setUseProxies(this.useProxies)\n\t\tthis.produce = this.produce.bind(this)\n\t\tthis.produceWithPatches = this.produceWithPatches.bind(this)\n\t}\n\tproduce(base, recipe, patchListener) {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\" && typeof recipe !== \"function\") {\n\t\t\tconst defaultBase = recipe\n\t\t\trecipe = base\n\n\t\t\tconst self = this\n\t\t\treturn function curriedProduce(base = defaultBase, ...args) {\n\t\t\t\treturn self.produce(base, draft => recipe.call(this, draft, ...args)) // prettier-ignore\n\t\t\t}\n\t\t}\n\n\t\t// prettier-ignore\n\t\t{\n\t\t\tif (typeof recipe !== \"function\") {\n\t\t\t\tthrow new Error(\"The first or second argument to `produce` must be a function\")\n\t\t\t}\n\t\t\tif (patchListener !== undefined && typeof patchListener !== \"function\") {\n\t\t\t\tthrow new Error(\"The third argument to `produce` must be a function or undefined\")\n\t\t\t}\n\t\t}\n\n\t\tlet result\n\n\t\t// Only plain objects, arrays, and \"immerable classes\" are drafted.\n\t\tif (isDraftable(base)) {\n\t\t\tconst scope = ImmerScope.enter()\n\t\t\tconst proxy = this.createProxy(base)\n\t\t\tlet hasError = true\n\t\t\ttry {\n\t\t\t\tresult = recipe(proxy)\n\t\t\t\thasError = false\n\t\t\t} finally {\n\t\t\t\t// finally instead of catch + rethrow better preserves original stack\n\t\t\t\tif (hasError) scope.revoke()\n\t\t\t\telse scope.leave()\n\t\t\t}\n\t\t\tif (typeof Promise !== \"undefined\" && result instanceof Promise) {\n\t\t\t\treturn result.then(\n\t\t\t\t\tresult => {\n\t\t\t\t\t\tscope.usePatches(patchListener)\n\t\t\t\t\t\treturn this.processResult(result, scope)\n\t\t\t\t\t},\n\t\t\t\t\terror => {\n\t\t\t\t\t\tscope.revoke()\n\t\t\t\t\t\tthrow error\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\tscope.usePatches(patchListener)\n\t\t\treturn this.processResult(result, scope)\n\t\t} else {\n\t\t\tresult = recipe(base)\n\t\t\tif (result === NOTHING) return undefined\n\t\t\tif (result === undefined) result = base\n\t\t\tthis.maybeFreeze(result, true)\n\t\t\treturn result\n\t\t}\n\t}\n\tproduceWithPatches(arg1, arg2, arg3) {\n\t\tif (typeof arg1 === \"function\") {\n\t\t\tconst self = this\n\t\t\treturn (state, ...args) =>\n\t\t\t\tthis.produceWithPatches(state, draft => arg1(draft, ...args))\n\t\t}\n\t\t// non-curried form\n\t\tif (arg3)\n\t\t\tthrow new Error(\"A patch listener cannot be passed to produceWithPatches\")\n\t\tlet patches, inversePatches\n\t\tconst nextState = this.produce(arg1, arg2, (p, ip) => {\n\t\t\tpatches = p\n\t\t\tinversePatches = ip\n\t\t})\n\t\treturn [nextState, patches, inversePatches]\n\t}\n\tcreateDraft(base) {\n\t\tif (!isDraftable(base)) {\n\t\t\tthrow new Error(\"First argument to `createDraft` must be a plain object, an array, or an immerable object\") // prettier-ignore\n\t\t}\n\t\tconst scope = ImmerScope.enter()\n\t\tconst proxy = this.createProxy(base)\n\t\tproxy[DRAFT_STATE].isManual = true\n\t\tscope.leave()\n\t\treturn proxy\n\t}\n\tfinishDraft(draft, patchListener) {\n\t\tconst state = draft && draft[DRAFT_STATE]\n\t\tif (!state || !state.isManual) {\n\t\t\tthrow new Error(\"First argument to `finishDraft` must be a draft returned by `createDraft`\") // prettier-ignore\n\t\t}\n\t\tif (state.finalized) {\n\t\t\tthrow new Error(\"The given draft is already finalized\") // prettier-ignore\n\t\t}\n\t\tconst {scope} = state\n\t\tscope.usePatches(patchListener)\n\t\treturn this.processResult(undefined, scope)\n\t}\n\tsetAutoFreeze(value) {\n\t\tthis.autoFreeze = value\n\t}\n\tsetUseProxies(value) {\n\t\tthis.useProxies = value\n\t\tassign(this, value ? modernProxy : legacyProxy)\n\t}\n\tapplyPatches(base, patches) {\n\t\t// If a patch replaces the entire state, take that replacement as base\n\t\t// before applying patches\n\t\tlet i\n\t\tfor (i = patches.length - 1; i >= 0; i--) {\n\t\t\tconst patch = patches[i]\n\t\t\tif (patch.path.length === 0 && patch.op === \"replace\") {\n\t\t\t\tbase = patch.value\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\tif (isDraft(base)) {\n\t\t\t// N.B: never hits if some patch a replacement, patches are never drafts\n\t\t\treturn applyPatches(base, patches)\n\t\t}\n\t\t// Otherwise, produce a copy of the base state.\n\t\treturn this.produce(base, draft =>\n\t\t\tapplyPatches(draft, patches.slice(i + 1))\n\t\t)\n\t}\n\t/** @internal */\n\tprocessResult(result, scope) {\n\t\tconst baseDraft = scope.drafts[0]\n\t\tconst isReplaced = result !== undefined && result !== baseDraft\n\t\tthis.willFinalize(scope, result, isReplaced)\n\t\tif (isReplaced) {\n\t\t\tif (baseDraft[DRAFT_STATE].modified) {\n\t\t\t\tscope.revoke()\n\t\t\t\tthrow new Error(\"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\") // prettier-ignore\n\t\t\t}\n\t\t\tif (isDraftable(result)) {\n\t\t\t\t// Finalize the result in case it contains (or is) a subset of the draft.\n\t\t\t\tresult = this.finalize(result, null, scope)\n\t\t\t\tthis.maybeFreeze(result)\n\t\t\t}\n\t\t\tif (scope.patches) {\n\t\t\t\tscope.patches.push({\n\t\t\t\t\top: \"replace\",\n\t\t\t\t\tpath: [],\n\t\t\t\t\tvalue: result\n\t\t\t\t})\n\t\t\t\tscope.inversePatches.push({\n\t\t\t\t\top: \"replace\",\n\t\t\t\t\tpath: [],\n\t\t\t\t\tvalue: baseDraft[DRAFT_STATE].base\n\t\t\t\t})\n\t\t\t}\n\t\t} else {\n\t\t\t// Finalize the base draft.\n\t\t\tresult = this.finalize(baseDraft, [], scope)\n\t\t}\n\t\tscope.revoke()\n\t\tif (scope.patches) {\n\t\t\tscope.patchListener(scope.patches, scope.inversePatches)\n\t\t}\n\t\treturn result !== NOTHING ? result : undefined\n\t}\n\t/**\n\t * @internal\n\t * Finalize a draft, returning either the unmodified base state or a modified\n\t * copy of the base state.\n\t */\n\tfinalize(draft, path, scope) {\n\t\tconst state = draft[DRAFT_STATE]\n\t\tif (!state) {\n\t\t\tif (Object.isFrozen(draft)) return draft\n\t\t\treturn this.finalizeTree(draft, null, scope)\n\t\t}\n\t\t// Never finalize drafts owned by another scope.\n\t\tif (state.scope !== scope) {\n\t\t\treturn draft\n\t\t}\n\t\tif (!state.modified) {\n\t\t\tthis.maybeFreeze(state.base, true)\n\t\t\treturn state.base\n\t\t}\n\t\tif (!state.finalized) {\n\t\t\tstate.finalized = true\n\t\t\tthis.finalizeTree(state.draft, path, scope)\n\n\t\t\t// We cannot really delete anything inside of a Set. We can only replace the whole Set.\n\t\t\tif (this.onDelete && !isSet(state.base)) {\n\t\t\t\t// The `assigned` object is unreliable with ES5 drafts.\n\t\t\t\tif (this.useProxies) {\n\t\t\t\t\tconst {assigned} = state\n\t\t\t\t\teach(assigned, (prop, exists) => {\n\t\t\t\t\t\tif (!exists) this.onDelete(state, prop)\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\t// TODO: Figure it out for Maps and Sets if we need to support ES5\n\t\t\t\t\tconst {base, copy} = state\n\t\t\t\t\teach(base, prop => {\n\t\t\t\t\t\tif (!has(copy, prop)) this.onDelete(state, prop)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.onCopy) {\n\t\t\t\tthis.onCopy(state)\n\t\t\t}\n\n\t\t\t// At this point, all descendants of `state.copy` have been finalized,\n\t\t\t// so we can be sure that `scope.canAutoFreeze` is accurate.\n\t\t\tif (this.autoFreeze && scope.canAutoFreeze) {\n\t\t\t\tfreeze(state.copy, false)\n\t\t\t}\n\n\t\t\tif (path && scope.patches) {\n\t\t\t\tgeneratePatches(state, path, scope.patches, scope.inversePatches)\n\t\t\t}\n\t\t}\n\t\treturn state.copy\n\t}\n\t/**\n\t * @internal\n\t * Finalize all drafts in the given state tree.\n\t */\n\tfinalizeTree(root, rootPath, scope) {\n\t\tconst state = root[DRAFT_STATE]\n\t\tif (state) {\n\t\t\tif (!this.useProxies) {\n\t\t\t\t// Create the final copy, with added keys and without deleted keys.\n\t\t\t\tstate.copy = shallowCopy(state.draft, true)\n\t\t\t}\n\t\t\troot = state.copy\n\t\t}\n\n\t\tconst needPatches = !!rootPath && !!scope.patches\n\t\tconst finalizeProperty = (prop, value, parent) => {\n\t\t\tif (value === parent) {\n\t\t\t\tthrow Error(\"Immer forbids circular references\")\n\t\t\t}\n\n\t\t\t// In the `finalizeTree` method, only the `root` object may be a draft.\n\t\t\tconst isDraftProp = !!state && parent === root\n\t\t\tconst isSetMember = isSet(parent)\n\n\t\t\tif (isDraft(value)) {\n\t\t\t\tconst path =\n\t\t\t\t\tisDraftProp &&\n\t\t\t\t\tneedPatches &&\n\t\t\t\t\t!isSetMember && // Set objects are atomic since they have no keys.\n\t\t\t\t\t!has(state.assigned, prop) // Skip deep patches for assigned keys.\n\t\t\t\t\t\t? rootPath.concat(prop)\n\t\t\t\t\t\t: null\n\n\t\t\t\t// Drafts owned by `scope` are finalized here.\n\t\t\t\tvalue = this.finalize(value, path, scope)\n\t\t\t\treplace(parent, prop, value)\n\n\t\t\t\t// Drafts from another scope must prevent auto-freezing.\n\t\t\t\tif (isDraft(value)) {\n\t\t\t\t\tscope.canAutoFreeze = false\n\t\t\t\t}\n\n\t\t\t\t// Unchanged drafts are never passed to the `onAssign` hook.\n\t\t\t\tif (isDraftProp && value === get(state.base, prop)) return\n\t\t\t}\n\t\t\t// Unchanged draft properties are ignored.\n\t\t\telse if (isDraftProp && is(value, get(state.base, prop))) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\t// Search new objects for unfinalized drafts. Frozen objects should never contain drafts.\n\t\t\telse if (isDraftable(value) && !Object.isFrozen(value)) {\n\t\t\t\teach(value, finalizeProperty)\n\t\t\t\tthis.maybeFreeze(value)\n\t\t\t}\n\n\t\t\tif (isDraftProp && this.onAssign && !isSetMember) {\n\t\t\t\tthis.onAssign(state, prop, value)\n\t\t\t}\n\t\t}\n\n\t\teach(root, finalizeProperty)\n\t\treturn root\n\t}\n\tmaybeFreeze(value, deep = false) {\n\t\tif (this.autoFreeze && !isDraft(value)) {\n\t\t\tfreeze(value, deep)\n\t\t}\n\t}\n}\n\nfunction replace(parent, prop, value) {\n\tif (isMap(parent)) {\n\t\tparent.set(prop, value)\n\t} else if (isSet(parent)) {\n\t\t// In this case, the `prop` is actually a draft.\n\t\tparent.delete(prop)\n\t\tparent.add(value)\n\t} else if (Array.isArray(parent) || isEnumerable(parent, prop)) {\n\t\t// Preserve non-enumerable properties.\n\t\tparent[prop] = value\n\t} else {\n\t\tObject.defineProperty(parent, prop, {\n\t\t\tvalue,\n\t\t\twritable: true,\n\t\t\tconfigurable: true\n\t\t})\n\t}\n}\n","import {Immer} from \"./immer\"\n\nconst immer = new Immer()\n\n/**\n * The `produce` function takes a value and a \"recipe function\" (whose\n * return value often depends on the base state). The recipe function is\n * free to mutate its first argument however it wants. All mutations are\n * only ever applied to a __copy__ of the base state.\n *\n * Pass only a function to create a \"curried producer\" which relieves you\n * from passing the recipe function every time.\n *\n * Only plain objects and arrays are made mutable. All other objects are\n * considered uncopyable.\n *\n * Note: This function is __bound__ to its `Immer` instance.\n *\n * @param {any} base - the initial state\n * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n * @param {Function} patchListener - optional function that will be called with all the patches produced here\n * @returns {any} a new state, or the initial state if nothing was modified\n */\nexport const produce = immer.produce\nexport default produce\n\n/**\n * Like `produce`, but `produceWithPatches` always returns a tuple\n * [nextState, patches, inversePatches] (instead of just the next state)\n */\nexport const produceWithPatches = immer.produceWithPatches.bind(immer)\n\n/**\n * Pass true to automatically freeze all copies created by Immer.\n *\n * By default, auto-freezing is disabled in production.\n */\nexport const setAutoFreeze = immer.setAutoFreeze.bind(immer)\n\n/**\n * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n * always faster than using ES5 proxies.\n *\n * By default, feature detection is used, so calling this is rarely necessary.\n */\nexport const setUseProxies = immer.setUseProxies.bind(immer)\n\n/**\n * Apply an array of Immer patches to the first argument.\n *\n * This function is a producer, which means copy-on-write is in effect.\n */\nexport const applyPatches = immer.applyPatches.bind(immer)\n\n/**\n * Create an Immer draft from the given base state, which may be a draft itself.\n * The draft can be modified until you finalize it with the `finishDraft` function.\n */\nexport const createDraft = immer.createDraft.bind(immer)\n\n/**\n * Finalize an Immer draft from a `createDraft` call, returning the base state\n * (if no changes were made) or a modified copy. The draft must *not* be\n * mutated afterwards.\n *\n * Pass a function as the 2nd argument to generate Immer patches based on the\n * changes that were made.\n */\nexport const finishDraft = immer.finishDraft.bind(immer)\n\nexport {\n\toriginal,\n\tisDraft,\n\tisDraftable,\n\tNOTHING as nothing,\n\tDRAFTABLE as immerable\n} from \"./common\"\n\nexport {Immer}\n","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { validColors } from \"../Constants/CGAColors\";\r\nimport ctxProvider from \"../Providers/CtxProvider\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport { Frame } from \"../Types\";\r\n\r\n/**\r\n * Module:          RenderFrame\r\n * Responsibility:  Renders a single frame to the canvas\r\n */\r\nconst {\r\n    pixelSize,\r\n} = dimensionProvider();\r\n\r\n/**\r\n * Renders a single frame to the canvas.\r\n * @param {left} left. Left coordinate.\r\n * @param {top} top. Top coordinate.\r\n * @param {Frame} frame. A 2d string array.\r\n */\r\nexport default function renderFrame(left: number, top: number, frame: Frame): void {\r\n    const ctx = ctxProvider();\r\n\r\n    for (let rowIndex = 0; rowIndex < frame.length; rowIndex++) {\r\n\r\n        const columns = frame[rowIndex];\r\n\r\n        for (let columnIndex = 0; columnIndex < columns.length; columnIndex++) {\r\n            const color = columns[columnIndex];\r\n\r\n            const x = Math.round(left + columnIndex * pixelSize);\r\n            const y = Math.round(top + rowIndex * pixelSize);\r\n\r\n            if (color !== \"0\") {\r\n\r\n                // DEBUGGING.\r\n                if (validColors.indexOf(color) === -1) {\r\n                    // tslint:disable-next-line: no-console\r\n                    throw new Error(\"Provided color is not a valid CGA color\");\r\n                }\r\n\r\n                ctx.fillStyle = color;\r\n                // But we use the max pixel size to draw a pixel. This ensures the pixels overlap slightly.\r\n                // Otherwise, you'll see bits and pieces of the back ground.\r\n                ctx.fillRect(x, y, pixelSize, pixelSize);\r\n            }\r\n        }\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Actions\r\n * Responsibility:  Action creators for the EnemyLevelState\r\n */\r\n\r\nimport { GameLocation } from \"../../Models/GameLocation\";\r\nimport { ParticleState } from \"../Player/ParticleState\";\r\nimport Constants from \"./EnemyLevelConstants\";\r\nimport { AddBullet, AddExplosionCenter, AddOrUpdateEnemy, AddParticle, AddParticles, ClearPhaserLocations, RemoveEnemy, ResetLevelState, SetBulletState, SetFireInterval, SetPhaserLocations, SetShrapnellState, SetTotalEnemies } from \"./EnemyLevelTypes\";\r\nimport { EnemyState } from \"./EnemyState\";\r\nimport { ExplosionCenterState } from \"./ExplosionCenterState\";\r\n\r\nexport function resetLevelState(): ResetLevelState {\r\n    return {\r\n        type: Constants.resetLevelState,\r\n    };\r\n}\r\n\r\nexport function addParticle(particle: ParticleState): AddParticle {\r\n    return {\r\n        type: Constants.addParticle,\r\n        particle,\r\n    };\r\n}\r\n\r\nexport function addParticles(particles: ParticleState[]): AddParticles {\r\n    return {\r\n        type: Constants.addParticles,\r\n        particles,\r\n    };\r\n}\r\n\r\nexport function addExplosionCenter(explosionCenter: ExplosionCenterState, shrapnell: ParticleState[]): AddExplosionCenter {\r\n    return {\r\n        type: Constants.addExplosionCenter,\r\n        explosionCenter,\r\n        shrapnell,\r\n    };\r\n}\r\n\r\nexport function setShrapnellState(shrapnell: ParticleState[]): SetShrapnellState {\r\n    return {\r\n        type: Constants.setShrapnellState,\r\n        shrapnell,\r\n    };\r\n}\r\n\r\nexport function setPhaserLocations(locations: GameLocation[]): SetPhaserLocations {\r\n    return {\r\n        type: Constants.setPhaserLocations,\r\n        payload: locations,\r\n    };\r\n}\r\n\r\nexport function clearPhaserLocations(): ClearPhaserLocations {\r\n    return {\r\n        type: Constants.clearPhaserLocations,\r\n    };\r\n}\r\n\r\nexport function setFireInterval(interval: number): SetFireInterval {\r\n    return {\r\n        type: Constants.setFireInterval,\r\n        payload: interval,\r\n    };\r\n}\r\n\r\nexport function setExplosionCenters(explosionCenters: ExplosionCenterState[]) {\r\n    return {\r\n        type: Constants.setExplosionCenters,\r\n        explosionCenters\r\n    };\r\n}\r\n\r\nexport function addBullet(bullet: ParticleState): AddBullet {\r\n    return {\r\n        type: Constants.addBullet,\r\n        bullet,\r\n    };\r\n}\r\n\r\nexport function setBulletState(bullets: ParticleState[]): SetBulletState {\r\n    return {\r\n        type: Constants.setBulletState,\r\n        bullets,\r\n    };\r\n}\r\n\r\nexport function setTotalEnemies(totalEnemies: number): SetTotalEnemies {\r\n    return {\r\n        type: Constants.setTotalEnemies,\r\n        totalEnemies,\r\n    };\r\n}\r\n\r\nexport function addOrUpdateEnemy(enemyState: EnemyState): AddOrUpdateEnemy {\r\n    return {\r\n        type: Constants.addOrUpdateEnemy,\r\n        enemyState,\r\n    };\r\n}\r\n\r\nexport function removeEnemy(enemyId: number): RemoveEnemy {\r\n    return {\r\n        type: Constants.removeEnemy,\r\n        enemyId,\r\n    };\r\n}","/**\r\n * @preserve Copyright 2010-2019 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { Frame, Frames } from \"../Types\";\r\n\r\n/**\r\n * Module:          PlayerFrames\r\n * Responsibility:  Contains player related frames\r\n */\r\n\r\nexport function getPlayerFrame(): Frame {\r\n\r\n    const playerFrame: Frame = [\r\n        [\"0\", \"0\", \"B\", \"B\", \"0\", \"0\"],\r\n        [\"A\", \"B\", \"F\", \"F\", \"B\", \"A\"],\r\n        [\"B\", \"F\", \"0\", \"0\", \"F\", \"B\"],\r\n    ];\r\n\r\n    return playerFrame;\r\n}\r\n\r\nexport function getPlayerFormationFrames(): Frames {\r\n    const playerFormationFrames: Frames = [\r\n        [[\"B\", \"B\"]],  // nozzle tip\r\n        [[\"F\", \"F\"]],  // nozle bottom\r\n        [              // left wing\r\n            [\"A\", \"B\"],\r\n            [\"B\", \"F\"],\r\n        ],\r\n        [              // right wing\r\n            [\"B\", \"A\"],\r\n            [\"F\", \"B\"]\r\n        ],\r\n    ];\r\n\r\n    return playerFormationFrames;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Array\r\n * Responsibility:  Array utilities\r\n */\r\n\r\n/**\r\n * Returns a random element from an array\r\n * @param {T[]} arr. An array of type T.\r\n * @returns {T}. Value found in a random position.\r\n */\r\nexport function getRandomArrayElement<T>(arr: T[]): T {\r\n    if (arr.length === 1) {\r\n        return arr[0];\r\n    } else {\r\n        const randomIndex = Math.floor(Math.random() * arr.length);\r\n        return arr[randomIndex];\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Angles\r\n * Responsibility:  Define the simple angles\r\n */\r\n\r\nexport const angles = {\r\n    left: 180,\r\n    right: 0,\r\n    up: 270,\r\n    down: 90,\r\n    leftup: 235,\r\n    rightup: 325,\r\n    leftdown: 135,\r\n    rightdown: 45,\r\n};","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          StateProviders\r\n * Responsibility:  Functions that provide a state object.\r\n */\r\n\r\nimport { produce } from \"immer\";\r\nimport BaseEnemy from \"../Base/BaseEnemy\";\r\nimport Explosion from \"../Models/Explosion\";\r\nimport { Frame } from \"../Types\";\r\nimport { getFrameHitbox } from \"../Utility/Frame\";\r\nimport { fallsWithinGameField, getLocation } from \"../Utility/Location\";\r\nimport { EnemyState } from \"./EnemyLevel/EnemyState\";\r\nimport { ParticleState } from \"./Player/ParticleState\";\r\nimport { appState } from \"./Store\";\r\n\r\nexport namespace StateProviders {\r\n    /**\r\n     * Gets a particle state object.\r\n     * @export\r\n     * @param {number} left. Left coordinate.\r\n     * @param {number} top. Top coordinate\r\n     * @param {number} speed. Speed of the particle in px/tick\r\n     * @param {number} angle. Direction angle\r\n     * @param {Frame} frame. Frame to render.\r\n     * @param {number} [acceletation=1]. Below 1 slows down, above 1 speeds up. 1 by default\r\n     * @param {number} [hitboxTopOffset=0]. Offset, in game pixels, that increases the top of the hitbox.\r\n     * @param {number} [hitboxBottomOffset=0]. Offset, in game pixels, that increases the bottom of the hitbox.\r\n     * @returns {ParticleState}\r\n     */\r\n    export function getParticleState(\r\n        left: number,\r\n        top: number,\r\n        speed: number,\r\n        angle: number,\r\n        frame: Frame,\r\n        acceletation: number = 1,\r\n        hitboxTopOffset: number = 0,\r\n        hitboxBottomOffset: number = 0): ParticleState {\r\n\r\n        const bulletHitbox = getFrameHitbox(left, top, frame, hitboxTopOffset, hitboxBottomOffset);\r\n\r\n        const bullet: ParticleState = {\r\n            acceletation,\r\n            angle,\r\n            coloredFrame: frame,\r\n            hitbox: bulletHitbox,\r\n            speed,\r\n            left,\r\n            top,\r\n        };\r\n\r\n        return bullet;\r\n    }\r\n\r\n    /**\r\n     * Gets a particle state object.\r\n     * @export\r\n     * @param {number} left. Left coordinate.\r\n     * @param {number} top. Top coordinate\r\n     * @param {number} speed. Speed of the particle in px/tick\r\n     * @param {number} angle. Direction angle\r\n     * @param {Frame} frame. Frame to render.\r\n     * @param {number} order. The id of the owner. aka. The ship that fired the bullet.\r\n     * @param {number} [hitboxTopOffset=0]. Offset, in game pixels, that increases the top of the hitbox.\r\n     * @param {number} [hitboxBottomOffset=0]. Offset, in game pixels, that increases the bottom of the hitbox.\r\n     * @returns {ParticleState}\r\n     */\r\n    export function getBulletParticleState(\r\n        left: number,\r\n        top: number,\r\n        speed: number,\r\n        angle: number,\r\n        frame: Frame,\r\n        ownerId: number,\r\n        hitboxTopOffset: number = 0,\r\n        hitboxBottomOffset: number = 0): ParticleState {\r\n\r\n        const particle = getParticleState(left, top, speed, angle, frame, 1, hitboxTopOffset, hitboxBottomOffset);\r\n        particle.owner = ownerId;\r\n\r\n        return particle;\r\n    }\r\n\r\n    /**\r\n     * particleProvider. Provides particle objects based on an Explosion asset.\r\n     * @param {number} left. Left coordinate.\r\n     * @param {number} top. Top coordinate.\r\n     * @param {ExplosionProviderFunction} getExplosion. Explosion asset used to generate particle objects.\r\n     * @returns {Particle[]}. Resulting particles.\r\n     */\r\n    export function explosionShrapnellProvider(left: number, top: number, explosion: Explosion): ParticleState[] {\r\n\r\n        const particles: ParticleState[] = [];\r\n        for (let i = 0; i < explosion.particleFrameIndexes.length; i++) {\r\n            // Create an array with every particle frame.\r\n            const particleFrameIndex = explosion.particleFrameIndexes[i];\r\n            const particleFrame = explosion.particleFrames[particleFrameIndex];\r\n\r\n            const angle = explosion.angles[i];\r\n            const speed = explosion.useSpeed ? explosion.speed : explosion.speeds[i];\r\n\r\n            const p = StateProviders.getParticleState(left, top, speed, angle, particleFrame, explosion.acceleration, 0, 0);\r\n            particles.push(p);\r\n        }\r\n\r\n        return particles;\r\n    }\r\n\r\n    /**\r\n     * Retrns a new particle state with updated speeds and locations.\r\n     * @param {ParticleState[]} particles. Array of ParticleState\r\n     * @returns {ParticleState[]}. Remaining particles with updated speeds and locations.\r\n     */\r\n    export function getUpdatedParticleState(particles: ParticleState[]): ParticleState[] {\r\n\r\n        const nextState: ParticleState[] = [];\r\n        for (const particle of particles) {\r\n\r\n            const updatedParticle = produce(particle, (draft) => {\r\n                const newLocation = getLocation(particle.left, particle.top, particle.angle, particle.speed);\r\n                const hitbox = getFrameHitbox(newLocation.left, newLocation.top, particle.coloredFrame);\r\n\r\n                if (fallsWithinGameField(hitbox.left, hitbox.right, newLocation.top, hitbox.bottom)) {\r\n                    draft.left = newLocation.left;\r\n                    draft.top = newLocation.top;\r\n                    draft.speed = particle.speed * particle.acceletation;\r\n                    draft.hitbox = getFrameHitbox(newLocation.left, newLocation.top, particle.coloredFrame);\r\n                }\r\n            });\r\n\r\n            if (particle !== updatedParticle) {\r\n                nextState.push(updatedParticle);\r\n            }\r\n        }\r\n\r\n        return nextState;\r\n    }\r\n\r\n    /**\r\n     * Gets the enemy's ship's state. Throws an exception if the enemy could not be found.\r\n     * @export\r\n     * @param {BaseEnemy} enemy\r\n     * @returns {EnemyState}\r\n     */\r\n    export function getEnemyState(enemy: BaseEnemy): EnemyState {\r\n        const state = appState().enemyLevelState.enemies.find((e) => e.enemyId === enemy.getId());\r\n\r\n        if (state === undefined) {\r\n            throw new Error(\"Could not retrie state for enemy \" + enemy.getId());\r\n        }\r\n\r\n        return state;\r\n    }\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          EnemyMovementSpeeds\r\n * Responsibility:  Define constants at which speed an enemy moves.\r\n */\r\n\r\nexport const birdMovementSpeed = 1.5;\r\n\r\nexport const robotMovementSpeed = 1.5;\r\n\r\nexport const orbMovementSpeed = 0.1;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseEnemy from \"./Base/BaseEnemy\";\r\nimport PlayerState, { AlivePlayer } from \"./State/Player/PlayerState\";\r\nimport { allGameKeys, GameKeys } from \"./Utility/KeyboardEvents\";\r\n\r\n/**\r\n * Module:          Guard\r\n * Responsibility:  TypeGuards\r\n */\r\n\r\nnamespace Guard {\r\n    export function isValidGameKey(value: string): value is GameKeys {\r\n        return allGameKeys.indexOf(value as GameKeys) !== -1;\r\n    }\r\n\r\n    /**\r\n     * TypeGuard for enemies\r\n     */\r\n    export function isEnemy(value: any): value is BaseEnemy {\r\n        return value && value.getObjectType() === \"enemy\";\r\n    }\r\n\r\n    /**\r\n     * Checks if the player is alive (and if the hitboxes and nozzleLocation are defined)\r\n     * @param {PlayerState} value.\r\n     * @returns {AlivePlayer}. An interface that extends PlayerState but changes 'type' | undefined o just the type.\r\n     */\r\n    export function isPlayerAlive(value: PlayerState): value is AlivePlayer {\r\n        return value.alive && value.hitboxes !== undefined && value.nozzleLocation !== undefined;\r\n    }\r\n}\r\n\r\nexport default Guard;\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BulletRunner from \"../BulletProviders/BulletRunner\";\r\nimport GameLoop from \"../GameLoop\";\r\nimport { drawLevelBanner } from \"../GameScreen/LevelBanner\";\r\nimport { drawBackground } from \"../GameScreen/StaticRenders\";\r\nimport ILevel from \"../Interfaces/ILevel\";\r\nimport EnemyLevelRunner from \"../Runners/EnemyLevelRunner\";\r\nimport { resetLevelState, setFireInterval } from \"../State/EnemyLevel/EnemyLevelActions\";\r\nimport { addPhaser, nextLevel } from \"../State/Game/GameActions\";\r\nimport { setPlayerMovementLimit } from \"../State/Player/PlayerActions\";\r\nimport { appState, appStore, dispatch } from \"../State/Store\";\r\nimport { TickFunction } from \"../Types\";\r\nimport BaseEnemy from \"./BaseEnemy\";\r\n\r\nexport default abstract class BaseEnemyLevel implements ILevel {\r\n\r\n    /**\r\n     * Array of subscriptions registered in the GameLoop. Disposed when the level is disposed.\r\n     */\r\n    private subscriptions: Array<() => void> = [];\r\n\r\n    /**\r\n     * Subscription that removes the level banner from the game loop when called. Defined in the 'start' method.\r\n     */\r\n    protected levelBannerSub!: () => void;\r\n\r\n    /**\r\n     * A function that will handle this level's state.\r\n     */\r\n    protected stateManager: TickFunction;\r\n\r\n    /**\r\n     * Function passed from the outside that checks if a level is won.\r\n     */\r\n    private monitorLevelWon: () => boolean;\r\n\r\n    /**\r\n     * Subscribe to the store and dispatch the level appropriate movement restriction to the player\r\n     * When the player is alive and their movement limit is not set to None.\r\n     */\r\n    private storeSub = appStore().subscribe(() => {\r\n        const { playerState } = appState();\r\n\r\n        if (playerState.alive && playerState.moveLimit !== \"none\") {\r\n            dispatch(setPlayerMovementLimit(\"none\"));\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Constructs the base level\r\n     * @param {TickFunction} stateManager. A function that will handle the state for the level.\r\n     * @param {() => boolean} monitorLevelWon. A function that checks fort he win condition of a level.\r\n     */\r\n    constructor(stateManager: TickFunction, monitorLevelWon: () => boolean) {\r\n        this.stateManager = stateManager;\r\n        this.monitorLevelWon = monitorLevelWon;\r\n    }\r\n\r\n    /**\r\n     * Start the level\r\n     */\r\n    public start(): void {\r\n        const { gameState } = appState();\r\n\r\n        dispatch(setPlayerMovementLimit(\"immobile\"));\r\n\r\n        // Register the background draw function so it runs in the game loop.\r\n        this.registerSubscription(GameLoop.registerBackgroundDrawing(drawBackground));\r\n\r\n        // Draw the level banner to show which round we're at.\r\n        let level = 0;\r\n        if (gameState.level !== undefined) {\r\n            level = gameState.level;\r\n        }\r\n\r\n        this.levelBannerSub = GameLoop.registerBackgroundDrawing(() => drawLevelBanner(level));\r\n    }\r\n\r\n    /**\r\n     * Register subscriptions.\r\n     * @param {function} f.\r\n     */\r\n    protected registerSubscription(f: () => void) {\r\n        this.subscriptions.push(f);\r\n    }\r\n\r\n    /**\r\n     * Begin this level. Call from start.\r\n     */\r\n    protected begin(enemies: BaseEnemy[], fireInterval?: number, bulletRunner?: BulletRunner): void {\r\n        // Register the stateManager so it can act on state changes in the level.\r\n        this.registerSubscription(GameLoop.registerUpdateState(this.stateManager));\r\n\r\n        if (bulletRunner !== undefined) {\r\n            this.registerSubscription(GameLoop.registerUpdateState((tick) => bulletRunner.updateState(tick)));\r\n        }\r\n\r\n        window.setTimeout(() => {\r\n\r\n            // Remove the level banner after one second.\r\n            this.levelBannerSub();\r\n\r\n            // Set the fire interval of enemies in the current state\r\n            if (fireInterval !== undefined) {\r\n                dispatch(setFireInterval(fireInterval));\r\n            }\r\n\r\n            // Add the enemies to the enemy level runner. The registered stateManager will take it from here.\r\n            EnemyLevelRunner.setEnemies(enemies);\r\n\r\n            // Add a function to the GameLoop that will check if a level has been won.\r\n            this.registerSubscription(GameLoop.registerUpdateState(() => this.monitorLevelWonRun()));\r\n\r\n            dispatch(setPlayerMovementLimit(\"none\"));\r\n        }, 1000);\r\n    }\r\n\r\n    /**\r\n     * Disposes subscriptions\r\n     */\r\n    public dispose(): void {\r\n        dispatch(resetLevelState());\r\n        // The subscription array contains functions that remove themselves\r\n        // from the GameLoop. Call all of them to remove them from the GameLoop.\r\n        this.subscriptions.forEach((s) => s());\r\n        this.storeSub();\r\n    }\r\n\r\n    /**\r\n     * This method uses the passed in monotorLeveLWon function to check if we can procede to the next level.\r\n     */\r\n    private monitorLevelWonRun(): void {\r\n\r\n        // Use the provided function to check if the level has been completed.\r\n        if (this.monitorLevelWon()) {\r\n            // Add a phaser because that's a level won reward.\r\n            dispatch(addPhaser());\r\n\r\n            // Move to the next level.\r\n            dispatch(nextLevel());\r\n        }\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          RandomAngles\r\n * Responsibility:  Define constants for random angles used by enemies.\r\n */\r\n\r\nexport const birdRandomAngles = [2, 358, 178, 182];\r\n\r\nexport const robotAngle = 5;\r\n\r\nexport const orbAngle = 90;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseEnemy from \"../Base/BaseEnemy\";\r\nimport { birdFrameTime, orbFrameTime, robotFrameTime } from \"../Constants/EnemyFrameTime\";\r\nimport { orbMovementSpeed, robotMovementSpeed } from \"../Constants/EnemyMovementSpeeds\";\r\nimport MoveDownAppearUp from \"../LocationProviders/MoveDownAppearUpLocaionProvider\";\r\nimport SideToSideUpAndDown from \"../LocationProviders/SideToSideUpAndDownLocationProvider\";\r\nimport VanishRightAppearLeftLocationProvider from \"../LocationProviders/VanishRightAppearLeftLocationProvider\";\r\nimport BackAndForthFrameProvider from \"../Providers/BackAndForthFrameProvider\";\r\nimport CircleFrameProvider from \"../Providers/CircleFrameProvider\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport getExplosion01 from \"../SharedFrames/Explosion01\";\r\nimport { getExplosion02 } from \"../SharedFrames/Explosion02\";\r\nimport { Enemies } from \"../Types\";\r\nimport { getMaximumFrameDimensions, getRandomFrameKeyIndex } from \"../Utility/Frame\";\r\nimport BirdEnemy from \"./Bird/BirdEnemy\";\r\nimport getBirdFrames from \"./Bird/BirdFrames\";\r\nimport OrbEnemy from \"./Orb/OrbEnemy\";\r\nimport getOrbFrames from \"./Orb/OrbFrames\";\r\nimport RobotEnemy from \"./Robot/RobotEnemy\";\r\nimport getRobotFrames from \"./Robot/RobotFrames\";\r\n\r\n/**\r\n * Module:          EnemyFactory\r\n * Responsibility:  Create enemy objects\r\n */\r\n\r\nconst {\r\n    pixelSize,\r\n} = dimensionProvider();\r\n\r\nexport function enemyFactory(enemy: Enemies, left: number, top: number, speed: number, angle: number, color?: string): BaseEnemy {\r\n    switch (enemy) {\r\n        case \"bird\": {\r\n            const frameProvider = new BackAndForthFrameProvider(getRandomFrameKeyIndex(getBirdFrames().frames));\r\n            const { width, height } = getMaximumFrameDimensions(getBirdFrames().frames, pixelSize);\r\n            const locationProvider = new SideToSideUpAndDown(left, top, speed, angle, width, height);\r\n            return new BirdEnemy(birdFrameTime, locationProvider, frameProvider, getExplosion01, getBirdFrames);\r\n        }\r\n        case \"robot\": {\r\n            const frameProvider = new BackAndForthFrameProvider(0);\r\n            const { width, height } = getMaximumFrameDimensions(getRobotFrames().frames, pixelSize);\r\n            const locationProvider = new VanishRightAppearLeftLocationProvider(left, top, robotMovementSpeed, angle, width, height);\r\n\r\n            if (color === undefined) {\r\n                throw new Error(\"Robot enemy requires a color\");\r\n            }\r\n\r\n            return new RobotEnemy(color, robotFrameTime, locationProvider, frameProvider, getExplosion02, getRobotFrames);\r\n        }\r\n        case \"orb\": {\r\n            const frameProvider = new CircleFrameProvider(0);\r\n            const { width, height } = getMaximumFrameDimensions(getOrbFrames().frames, pixelSize);\r\n            const locationProvider = new MoveDownAppearUp(80, left, top, orbMovementSpeed, angle, width, height);\r\n            return  new OrbEnemy(orbFrameTime, locationProvider, frameProvider, getExplosion02, getOrbFrames);\r\n        }\r\n\r\n        default:\r\n            throw new Error(`Unknown enemy ${enemy}`);\r\n    }\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport ILocationProvider from \"../Interfaces/ILocationProvider\";\r\nimport { GameLocation } from \"../Models/GameLocation\";\r\nimport { getLocation } from \"../Utility/Location\";\r\n\r\nexport default abstract class BaseLocationProvider implements ILocationProvider {\r\n\r\n    /**\r\n     * Angle. Can change and be used to bounce enemies of the sides and bottom.\r\n     */\r\n    protected angle: number;\r\n\r\n    /**\r\n     * Speed the enemy travels at.\r\n     */\r\n    protected speed: number;\r\n\r\n    /**\r\n     * Initial speed for the enemy.\r\n     */\r\n    protected baseSpeed: number;\r\n    protected width: number;\r\n    protected height: number;\r\n    protected left: number;\r\n    protected top: number;\r\n\r\n    /**\r\n     * Construct the class\r\n     * @param {number} speed. Speed to start with.\r\n     * @param {number} angle. Initial angle.\r\n     */\r\n    constructor(left: number, top: number, speed: number, angle: number, width: number, height: number) {\r\n        this.left = left;\r\n        this.top = top;\r\n        this.angle = angle;\r\n        this.speed = speed;\r\n        this.baseSpeed = speed;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n\r\n    /**\r\n     * Returns a location. Implement specific movement behaviours in a diriving class.\r\n     * @param {number} left. Left coordinate.\r\n     * @param {number} top. Top coordinate.\r\n     * @param {number} width. Width of the object.\r\n     * @param {number} height. Height of the object.\r\n     */\r\n    public getCurrentLocation(): GameLocation {\r\n        return {left: this.left, top: this.top };\r\n    }\r\n\r\n    public updateState(tick: number): void {\r\n        const { left, top } = getLocation(this.left, this.top, this.angle, this.speed);\r\n        this.left = left;\r\n        this.top = top;\r\n    }\r\n\r\n    /**\r\n     * increases the speed by the provided factor.\r\n     * @param {number} factor.\r\n     */\r\n    public increaseSpeed(factor: number): void {\r\n        this.speed = this.baseSpeed * factor;\r\n    }\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport TickHandler from \"../Handlers/TickHandler\";\r\nimport ILocationProvider from \"../Interfaces/ILocationProvider\";\r\nimport Explosion from \"../Models/Explosion\";\r\nimport { GameLocation } from \"../Models/GameLocation\";\r\nimport { GameRectangle } from \"../Models/GameRectangle\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport { addOrUpdateEnemy } from \"../State/EnemyLevel/EnemyLevelActions\";\r\nimport { dispatch } from \"../State/Store\";\r\nimport { ExplosionProviderFunction, Frame, OffsetFramesProviderFunction } from \"../Types\";\r\nimport { getFrameCenter, getFrameHitbox } from \"../Utility/Frame\";\r\nimport { getOffsetLocation } from \"../Utility/Location\";\r\nimport BaseFrameProvider from \"./BaseFrameProvider\";\r\n\r\n/**\r\n * Module:          BaseEnemy\r\n * Responsibility:  Base class for all enemies.\r\n *                  This class provides contacts and default methods that will work\r\n *                  for most enemies in the game leaving specifics to derived classes.\r\n */\r\n\r\nconst {\r\n    pixelSize,\r\n} = dimensionProvider();\r\n\r\nconst negativepixelSize = pixelSize * -1;\r\n\r\nexport default abstract class BaseEnemy {\r\n\r\n    /**\r\n     * Static to ensure every enemy gets a new id.\r\n     */\r\n    private static idCounter = 0;\r\n\r\n    /**\r\n     * Id of the enemy. Used to check if a bullet belongs to an enemy.\r\n     */\r\n    private enemyId = 0;\r\n\r\n    /**\r\n     * The frame provider. Must be set in an inheriting class.\r\n     */\r\n    protected frameProvider: BaseFrameProvider;\r\n\r\n    /**\r\n     * Frame tick handler. Handles changes in the frames.\r\n     */\r\n    private frameTickHandler: TickHandler;\r\n\r\n    /**\r\n     * Offets for each frame.\r\n     */\r\n    private offSets: GameLocation[];\r\n\r\n    /**\r\n     * Explosion for the enemy.\r\n     */\r\n    protected explosion: Explosion;\r\n\r\n    /**\r\n     * Left position offset for animation.\r\n     */\r\n    private offsetLeft: number;\r\n\r\n    /**\r\n     * Top position offset for animation.\r\n     */\r\n    private offsetTop: number;\r\n\r\n    /**\r\n     * Current frame of the object\r\n     */\r\n    protected currentFrame?: Frame;\r\n\r\n    /**\r\n     * Provides location. Can be used to alter the movement behaviour of enemies.\r\n     */\r\n    protected locationProvider: ILocationProvider;\r\n\r\n    /**\r\n     * Creates an instance of BaseEnemy.\r\n     * @param {number} frameChangeTime. Time between frames.\r\n     * @param {OffsetFramesProviderFunction} getOffsetFrames. Returns an OffsetFrames object.\r\n     * @param {ExplosionProviderFunction} getExplosion. Returns an explosion object.\r\n     * @param {ILocationProvider} locationProvider. Provides the location of the enemy.\r\n     * @param {BaseFrameProvider} frameProvider. Provides the frame of the enemy.\r\n     * @param {FireAngleProviderFunction} [fireAngleProvider]. Provides a fire hangle for the enemy.\r\n     * @memberof BaseEnemy\r\n     */\r\n    constructor(\r\n        frameChangeTime: number,\r\n        getOffsetFrames: OffsetFramesProviderFunction,\r\n        getExplosion: ExplosionProviderFunction,\r\n        locationProvider: ILocationProvider,\r\n        frameProvider: BaseFrameProvider) {\r\n\r\n        this.locationProvider = locationProvider;\r\n\r\n        this.explosion = getExplosion();\r\n        this.frameTickHandler = new TickHandler(frameChangeTime, () => this.onFrameChange());\r\n\r\n        const offSetFrames = getOffsetFrames();\r\n        this.offSets = offSetFrames.offSets.map((o) => {\r\n            return {\r\n                left: o.left * pixelSize,\r\n                top: o.top * pixelSize,\r\n            };\r\n        });\r\n\r\n        this.frameProvider = frameProvider;\r\n        this.frameProvider.setFrames(offSetFrames.frames);\r\n\r\n        this.currentFrame = this.frameProvider.getCurrentFrame();\r\n\r\n        const { left, top } = this.getOffsetLocation();\r\n        this.offsetLeft = left;\r\n        this.offsetTop = top;\r\n\r\n        this.enemyId = BaseEnemy.idCounter;\r\n        BaseEnemy.idCounter += 1;\r\n    }\r\n\r\n    /**\r\n     * Returns the explosion asset.\r\n     * @returns {Explosion}. An explosion asset.\r\n     */\r\n    public getExplosion(): Explosion {\r\n        return this.explosion;\r\n    }\r\n\r\n    /**\r\n     * getId\r\n     * @returns {number}\r\n     * @memberof BaseEnemy\r\n     */\r\n    public getId(): number {\r\n        return this.enemyId;\r\n    }\r\n\r\n    /**\r\n     * Returns the point worth.\r\n     * @returns {number}. Point worth of the enemy.\r\n     */\r\n    public abstract getPoints(): number;\r\n\r\n    /**\r\n     * Called by a TickHandler when the next frame is up.\r\n     */\r\n    protected abstract onFrameChange(): void;\r\n\r\n    /**\r\n     * Base implementation of a state update.\r\n     * @param {number} tick\r\n     */\r\n    public updateState(tick: number) {\r\n        this.frameTickHandler.tick(tick);\r\n\r\n        const offsetLocation = this.getOffsetLocation();\r\n        this.offsetLeft = offsetLocation.left;\r\n        this.offsetTop = offsetLocation.top;\r\n\r\n        this.locationProvider.updateState(tick);\r\n\r\n        dispatch(addOrUpdateEnemy({\r\n            enemyId: this.getId(),\r\n            coloredExplosion: this.explosion,\r\n            offsetLeft: this.offsetLeft,\r\n            offsetTop: this.offsetTop,\r\n            currentFrame: this.currentFrame,\r\n            hitpoints: this.getHitpoints(),\r\n            hitbox: this.getHitbox(),\r\n            centerLocation: this.getCenterLocation(),\r\n            lastFireTick: 0,\r\n            points: this.getPoints(),\r\n        }));\r\n    }\r\n\r\n    /**\r\n     * Calculates the offsetLocation\r\n     * @returns {GameLocation}. Location offset to let the frames render over one another.\r\n     */\r\n    protected getOffsetLocation(): GameLocation {\r\n        const frameOffsets = this.offSets[this.frameProvider.getCurrentIndex()];\r\n        const { left, top } = this.locationProvider.getCurrentLocation();\r\n        return getOffsetLocation(left, top, frameOffsets.left, frameOffsets.top);\r\n    }\r\n\r\n    /**\r\n     * Increases the speed of an enemy.\r\n     * @param {number} value. Values below 1 decrease speed, values above 1 increase speed.\r\n     */\r\n    public increaseSpeed(value: number): void {\r\n        this.locationProvider.increaseSpeed(value);\r\n        this.frameTickHandler.increaseSpeed(value);\r\n    }\r\n\r\n    /**\r\n     * Returns the hitpoint of the enemy.\r\n     * @returns {number}\r\n     * @memberof BaseEnemy\r\n     */\r\n    private getHitpoints(): number {\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Returns the center location of the object.\r\n     * @returns {GameLocation}. Location located at the center of the object.\r\n     */\r\n    private getCenterLocation(): GameLocation {\r\n        if (this.currentFrame !== undefined) {\r\n            const { left, top } = this.locationProvider.getCurrentLocation();\r\n            return getFrameCenter(left, top, this.currentFrame, pixelSize);\r\n        } else {\r\n            // Return a non existing location. This simply means the enemy is not on the screen\r\n            // and it saves a billion undefined checks.\r\n            return {\r\n                top: -100,\r\n                left: -100,\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the enemies hitbox.\r\n     * @returns {GameRectangle}\r\n     * @memberof BaseEnemy\r\n     */\r\n    private getHitbox(): GameRectangle {\r\n        if (this.currentFrame) {\r\n            return getFrameHitbox(this.offsetLeft, this.offsetTop, this.currentFrame, negativepixelSize);\r\n        } else {\r\n            return {\r\n                left: 0,\r\n                top: 0,\r\n                right: 0,\r\n                bottom: 0,\r\n            };\r\n        }\r\n    }\r\n}","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { calculateTimeSpeedIncrease } from \"../Utility/Lib\";\r\n\r\n/**\r\n * Module:          TickHandler\r\n * Responsibility:  Handles a game tick.\r\n */\r\n\r\nexport default class TickHandler {\r\n\r\n    /**\r\n     * Keeps track of the last time the tick handler ticked.\r\n     */\r\n    private lastTick = 0;\r\n\r\n    /**\r\n     * Time between ticks when we have to do something.\r\n     */\r\n    private time: number;\r\n\r\n    /**\r\n     * The function called when the time between ticks has passed.\r\n     */\r\n    private onTimePassed: (tick: number) => void;\r\n\r\n    /**\r\n     * Base time between actions without modification\r\n     */\r\n    private baseTime: number;\r\n\r\n    /**\r\n     * Creates the TickHandler class.\r\n     * @param {number} time. The time that should pass between ticks.\r\n     * @param {() => void} onTickPassed. The function to call when the specified time has passed between ticks.\r\n     */\r\n    constructor(time: number, onTimePassed: (tick: number) => void) {\r\n        this.time = time;\r\n        this.baseTime = time;\r\n        this.onTimePassed = onTimePassed;\r\n    }\r\n\r\n    /**\r\n     * Tick\r\n     * @param {number} tick. The current tick.\r\n     */\r\n    public tick(tick: number): void {\r\n        if (tick - this.lastTick >= this.time) {\r\n            this.onTimePassed(tick);\r\n\r\n            this.lastTick = tick;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Increase speed means lowering time between actions.\r\n     * @param {number} factor. 1 = no change. > 1 means faster.\r\n     */\r\n    public increaseSpeed(factor: number): void {\r\n        this.time = calculateTimeSpeedIncrease(this.baseTime, factor);\r\n    }\r\n}","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport KeyValuePair from \"../Models/KeyValuePair\";\r\n\r\n/**\r\n * Module:          Lib\r\n * Responsibility:  A library containing various helper functions\r\n */\r\n\r\n/**\r\n * Picks a random number within a range.\r\n * @param {number} max. Maximum value.\r\n * @param {number} min. Minimum value.\r\n */\r\nexport function randomNumberInRange(max: number, min: number): number {\r\n    return Math.floor(Math.random() * (max - min) + min);\r\n}\r\n\r\n/**\r\n * Calculates the new time to be used between ticks based on the passed factor.\r\n * @param {number} time. The time to use as a base.\r\n * @param {number} factor. A factor > 1 is an increase, < 1 a decrease.\r\n */\r\nexport function calculateTimeSpeedIncrease(time: number, factor: number): number {\r\n    return time * 1 / factor;\r\n}\r\n\r\nexport function getURLQueryKVPs(query: string): KeyValuePair[] {\r\n    const kvps = query.split(\"?\");\r\n    return kvps.map((item) => {\r\n        const kvp = item.split(\"=\");\r\n        return {\r\n            key: kvp[0],\r\n            value: kvp[1],\r\n        };\r\n    });\r\n}\r\n\r\n/**\r\n * 50/50 change to return true of false\r\n * @returns {boolean}. True or false.\r\n */\r\nexport function coinFlip(): boolean {\r\n    return Math.floor(Math.random() * 2) === 1;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Bullet speeds\r\n * Responsibility:  Constants for  bullet speeds.\r\n */\r\n\r\nexport const playerBulletSpeed = 42;\r\nexport const robotBulletSpeed = 7;\r\nexport const orbBulletSpeed = 13;\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          2pxBullet\r\n * Responsibility:  Define a bullet 2 pixels wide. Variant color allows it to be any color.\r\n */\r\n\r\nimport { Frame } from \"../Types\";\r\nimport Mutators from \"../Utility/FrameMutators\";\r\n\r\nexport default function getTwoPixelBullet(color?: string): Frame {\r\n    const twoPixelBullet: Frame = [\r\n        [\"V\", \"V\"],\r\n    ];\r\n\r\n    if (color !== undefined) {\r\n        Mutators.Frame.setColor(twoPixelBullet, color);\r\n    }\r\n\r\n    return twoPixelBullet;\r\n}","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","import { GameRectangle } from \"../Models/GameRectangle\";\r\nimport ctxProvider from \"../Providers/CtxProvider\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport { appState } from \"../State/Store\";\r\n\r\nconst {\r\n    pixelSize,\r\n    fullGameWidth,\r\n    fullGameHeight\r\n} = dimensionProvider();\r\n\r\nexport function DEBUGGING_renderHitboxes() {\r\n    const { playerState, enemyLevelState } = appState();\r\n    const hitboxes = enemyLevelState.enemies.map((e) => e.hitbox);\r\n\r\n    // Add player if defined.\r\n    if (playerState.hitboxes) {\r\n        hitboxes.push(playerState.hitboxes.bottom);\r\n        hitboxes.push(playerState.hitboxes.middle);\r\n    }\r\n\r\n    // Add bullet if defined.\r\n    if (playerState.bulletState?.hitbox) {\r\n        hitboxes.push(playerState.bulletState.hitbox);\r\n    }\r\n\r\n    enemyLevelState.bullets.forEach((b) => hitboxes.push(b.hitbox));\r\n    enemyLevelState.shrapnells.forEach((b) => hitboxes.push(b.hitbox));\r\n\r\n    // Draw a circle around each object using the\r\n    // coordiates and radius of the hitbox.\r\n    for (const hitbox of hitboxes) {\r\n\r\n        if (hitbox !== undefined) {\r\n            DEBUGGING_drawGameRect(hitbox, \"white\");\r\n        }\r\n    }\r\n}\r\n\r\nexport function DEBUGGING_drawGameRect(hitbox: GameRectangle, color: string, lineWith: number = 2) {\r\n    const ctx = ctxProvider();\r\n    ctx.beginPath();\r\n    ctx.strokeStyle = color;\r\n    ctx.rect(hitbox.left, hitbox.top, hitbox.right - hitbox.left, hitbox.bottom - hitbox.top);\r\n    ctx.lineWidth = lineWith;\r\n    ctx.stroke();\r\n    ctx.closePath();\r\n}\r\n\r\n/**\r\n * Debugggin function. Draws a grid in the screen for animation alignment.\r\n */\r\nexport function DEBUGGING_drawGrid(gridDetail: number): void {\r\n\r\n    const ctx = ctxProvider();\r\n    for (let r = 0; r < 120; r += 1) {\r\n        ctx.beginPath();\r\n        const y = r * pixelSize * gridDetail;\r\n        ctx.lineTo(0, y);\r\n        ctx.lineTo(fullGameWidth, y);\r\n        ctx.lineWidth = 1;\r\n        ctx.strokeStyle = \"white\";\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n    }\r\n\r\n    for (let r = 0; r < 160; r += 1) {\r\n        ctx.beginPath();\r\n        const x = r * pixelSize * gridDetail;\r\n        ctx.lineTo(x, 0);\r\n        ctx.lineTo(x, fullGameHeight);\r\n        ctx.lineWidth = 1;\r\n        ctx.strokeStyle = \"white\";\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Constants\r\n * Responsibility:  Constants for the debugging state\r\n */\r\n\r\nnamespace Constants {\r\n    export const playerMortality = \"playerMortality\";\r\n    export const renderPhaser = \"renderPhaser\";\r\n}\r\n\r\nexport default Constants;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Constants for enemy level actions and reducer.\r\n */\r\n\r\nnamespace Constants {\r\n    export const resetLevelState = \"resetLevelState\";\r\n    export const addParticle = \"addParticle\";\r\n    export const addParticles = \"addParticles\";\r\n    export const setShrapnellState = \"setShrapnellState\";\r\n    export const addExplosionCenter = \"addExplosionCenter\";\r\n    export const setPhaserLocations = \"setPhaserLocations\";\r\n    export const clearPhaserLocations = \"clearPhaserLocations\";\r\n    export const setFireInterval = \"setFireInterval\";\r\n    export const setExplosionCenters = \"setExplosionCenters\";\r\n    export const addBullet = \"addBullet\";\r\n    export const setBulletState = \"setBulletState\";\r\n    export const setTotalEnemies = \"setTotalEnemies\";\r\n    export const addOrUpdateEnemy = \"addOrUpdateEnemy\";\r\n    export const removeEnemy = \"removeEnemy\";\r\n}\r\n\r\nexport default Constants;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Constants\r\n * Responsibility:  Constants used by the GameState reducer and by the Action creator functions\r\n */\r\n\r\nnamespace Constants {\r\n    export const setLives = \"setLives\";\r\n    export const addLife = \"addLife\";\r\n    export const removeLife = \"removeLife\";\r\n    export const increaseScore = \"increaseScore\";\r\n    export const addLevel = \"addLevel\";\r\n    export const setLevel = \"setLevel\";\r\n    export const nextLevel = \"nextLevel\";\r\n    export const addLifeAndPhaser = \"addLifeAndPhaser\";\r\n    export const setPhasers = \"setPhasers\";\r\n    export const addPhaser = \"addPhaser\";\r\n    export const removePhaser = \"removePhaser\";\r\n    export const setPause = \"setPause\";\r\n    export const setWarpLevelComplexity = \"setWarpLevelComplexity\";\r\n}\r\n\r\nexport default Constants;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { GameKeys } from \"../../Utility/KeyboardEvents\";\r\n\r\n/**\r\n * Module:          Constants\r\n * Responsibility:  Constants for valid keys used by the GameState\r\n */\r\n\r\nnamespace Constants {\r\n    export const arrowUp: GameKeys = \"ArrowUp\";\r\n    export const arrowDown: GameKeys = \"ArrowDown\";\r\n    export const arrowLeft: GameKeys = \"ArrowLeft\";\r\n    export const arrowRight: GameKeys = \"ArrowRight\";\r\n    export const backspace: GameKeys = \"Backspace\";\r\n    export const f1: GameKeys = \"F1\";\r\n    export const f2: GameKeys = \"F2\";\r\n    export const space: GameKeys = \"Space\";\r\n    export const keyup = \"KeyUp\";\r\n    export const keydown = \"KeyDown\";\r\n}\r\n\r\nexport default Constants;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { GameLocation } from \"../Models/GameLocation\";\r\nimport { getPlayerFrame } from \"../Player/PlayerFrames\";\r\nimport { getFrameDimensions } from \"../Utility/Frame\";\r\nimport dimensionProvider from \"./DimensionProvider\";\r\n\r\n/**\r\n * Module:          PlayerSpawnLocationProvider\r\n * Responsibility:  Providers the location where the ship should spawn in a level with enemeies\r\n */\r\n\r\nconst {\r\n    pixelSize,\r\n    fullGameWidth,\r\n    fullGameHeight\r\n} = dimensionProvider();\r\n\r\nconst shipDimensions = getFrameDimensions(getPlayerFrame(), pixelSize);\r\n\r\nconst leftSpawnPosition = (fullGameWidth / 2) - shipDimensions.width / 2;\r\nconst topSpawnPosition = fullGameHeight - pixelSize * 8;\r\n\r\n/**\r\n * Gets the ship's spawn location, center screen.\r\n */\r\nexport default function getShipSpawnLocation(): GameLocation {\r\n    return {\r\n        left: leftSpawnPosition,\r\n        top: topSpawnPosition,\r\n    };\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Constants\r\n * Responsibility:  Constants used to determine the action type for the PlayerState.\r\n */\r\n\r\n/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Constants\r\n * Responsibility:  Provide constants for the player reducer and actions.\r\n */\r\n\r\nnamespace Constants {\r\n    export const setPlayerIsAlive = \"setPlayerIsAlive\";\r\n    export const setPlayerMovementLimit = \"setPlayerMovementLimit\";\r\n    export const setPlayerLocationData = \"setPlayerLocationData\";\r\n    export const setPlayerBulletState = \"setPlayerBulletState\";\r\n}\r\n\r\nexport default Constants;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { Frames } from \"../Types\";\r\nimport Mutators from \"../Utility/FrameMutators\";\r\n\r\n/**\r\n * Module:          Numbers\r\n * Responsibility:  Numbers 0 to 9. All colors are variant and can be set with single function call.\r\n */\r\n\r\nexport default function getNumbers(color: string): Frames {\r\n    const numbers: Frames = [\r\n        [\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"0\", \"0\", \"V\", \"0\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"0\", \"0\", \"V\", \"0\"],\r\n            [\"0\", \"0\", \"V\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n        ],\r\n        [\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"0\", \"V\", \"0\"],\r\n            [\"0\", \"V\", \"0\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n\r\n        ],\r\n        [\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"0\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"0\", \"V\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"0\", \"0\", \"V\", \"0\"],\r\n            [\"0\", \"0\", \"V\", \"0\"],\r\n\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n            [\"0\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"0\", \"V\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"0\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"0\", \"V\", \"0\"],\r\n            [\"0\", \"V\", \"0\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n        ],\r\n        [\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"V\"],\r\n            [\"0\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n        ],\r\n    ];\r\n\r\n    Mutators.Frames.setColor(numbers, color);\r\n    return numbers;\r\n}","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseEnemy from \"../Base/BaseEnemy\";\r\nimport CGAColors from \"../Constants/CGAColors\";\r\nimport GameLoop from \"../GameLoop\";\r\nimport getPhaserLocations from \"../Player/GetPhaserLocations\";\r\nimport { playerIsHit } from \"../Player/PlayerHelper\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport renderFrame from \"../Render/RenderFrame\";\r\nimport { clearPhaserLocations, removeEnemy, setPhaserLocations, setTotalEnemies } from \"../State/EnemyLevel/EnemyLevelActions\";\r\nimport { EnemyState } from \"../State/EnemyLevel/EnemyState\";\r\nimport { increaseScore, removePhaser, setPause } from \"../State/Game/GameActions\";\r\nimport { ParticleState } from \"../State/Player/ParticleState\";\r\nimport { setPlayerBulletState } from \"../State/Player/PlayerActions\";\r\nimport { appState, dispatch } from \"../State/Store\";\r\nimport { dispatchExplosion } from \"../StateHandlers/DispatchExplosion\";\r\nimport { handlePlayerDeath } from \"../StateHandlers/HandlePlayerDeath\";\r\nimport { Frame } from \"../Types\";\r\nimport { getRandomArrayElement } from \"../Utility/Array\";\r\nimport { overlaps } from \"../Utility/Geometry\";\r\n\r\n/**\r\n * Module:          EnemyLevelRunner\r\n * Responsibility:  Handles all state reactions and action for levels that contain enemies.\r\n */\r\n\r\n/**\r\n * Array of current game objects on screen.\r\n */\r\n\r\nconst localState: { enemies: BaseEnemy[] } = {\r\n    enemies: [],\r\n};\r\n\r\nconst phaserFrame: Frame = [\r\n    [CGAColors.yellow, CGAColors.yellow]\r\n];\r\n\r\nconst {\r\n    pixelSize\r\n} = dimensionProvider();\r\n\r\nexport namespace EnemyLevelRunner {\r\n    /**\r\n     * Runner function that can be registered in the GameLoop.\r\n     * @param {number} tick. The current tick.\r\n     */\r\n    export function run(tick: number): void {\r\n        updateState(tick);\r\n        GameLoop.registerDraw(draw);\r\n    }\r\n\r\n    export function setEnemies(newEnemies: BaseEnemy[]): void {\r\n        localState.enemies = newEnemies;\r\n        dispatch(setTotalEnemies(newEnemies.length));\r\n    }\r\n}\r\n\r\nexport default EnemyLevelRunner;\r\n\r\n/**\r\n * Handles all level state changes.\r\n * @param {number} tick. Current tick.\r\n */\r\nfunction updateState(tick: number) {\r\n    const { gameState } = appState();\r\n\r\n    if (gameState.pause) {\r\n        return;\r\n    }\r\n\r\n    handleSelfDestruct(tick);\r\n    handlePhaser(tick);\r\n    handleEnemies(tick);\r\n    handleHitDetection(tick);\r\n}\r\n\r\n/**\r\n * Draws all objects part of the level but not the player.\r\n * @param {number} tick. Tick.\r\n */\r\nfunction draw(): void {\r\n    const { enemies, bullets, phaserLocations } = appState().enemyLevelState;\r\n\r\n    // Draw all the game objects\r\n    for (const enemyState of enemies) {\r\n        if (enemyState.currentFrame !== undefined) {\r\n            renderFrame(enemyState.offsetLeft, enemyState.offsetTop, enemyState.currentFrame);\r\n        }\r\n    }\r\n\r\n    for (const bullet of bullets) {\r\n        renderFrame(bullet.left, bullet.top, bullet.coloredFrame);\r\n    }\r\n\r\n    phaserLocations.forEach((pf) => renderFrame(pf.left, pf.top, phaserFrame));\r\n}\r\n\r\n/**\r\n * Handles all hit detection.\r\n */\r\nfunction handleHitDetection(tick: number) {\r\n\r\n    // Check if the player was hit.\r\n    enemyHitPlayerDetection(tick);\r\n\r\n    // Check if the player hit anything\r\n    playerHitEnemyDetection(tick);\r\n\r\n    // Check if the player was hit by shrapnell.\r\n    playerHitByParticle(tick, appState().enemyLevelState.shrapnells);\r\n\r\n    // Check if the player was hit by a bullet.\r\n    playerHitByParticle(tick, appState().enemyLevelState.bullets);\r\n}\r\n\r\n/**\r\n * Check if the player hit an enemy.\r\n * @param {number} tick. Current tick.\r\n */\r\nfunction playerHitEnemyDetection(tick: number) {\r\n    const { playerState, enemyLevelState } = appState();\r\n    if (playerState.bulletState !== undefined && playerState.bulletState.hitbox !== undefined) {\r\n\r\n        const playerBulletHitbox = playerState.bulletState.hitbox;\r\n        const hitEnemy = enemyLevelState.enemies.find((e) => {\r\n            if (overlaps(playerBulletHitbox, e.hitbox)) {\r\n                return true;\r\n            }\r\n        });\r\n\r\n        if (hitEnemy !== undefined) {\r\n            handleEnemyDestruction(hitEnemy, tick);\r\n            dispatch(setPlayerBulletState(undefined));\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Check if an enemy physically hit the player.\r\n * @param {number} tick. Current tick.\r\n */\r\nfunction enemyHitPlayerDetection(tick: number) {\r\n    const { enemyLevelState, debuggingState, playerState } = appState();\r\n    if (playerState.alive && debuggingState.playerIsImmortal === false) {\r\n        const hit = enemyLevelState.enemies.some((e) => playerIsHit(playerState.hitboxes, e.hitbox));\r\n\r\n        if (hit) {\r\n            handlePlayerDeath(tick);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Check if the player was hit by a particle. This can be an enemy bullet or a piece of shrapnell.\r\n * @param {number} tick. Current tuck\r\n * @param {ParticleState[]} particles. Particles.\r\n */\r\nfunction playerHitByParticle(tick: number, particles: ParticleState[]): void {\r\n\r\n    const { playerState, debuggingState } = appState();\r\n    if (playerState.alive && debuggingState.playerIsImmortal === false) {\r\n        const hit = particles.some((e) => playerIsHit(playerState.hitboxes, e.hitbox));\r\n\r\n        if (hit) {\r\n            handlePlayerDeath(tick);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Handles enemy state updates.\r\n * @param {number} tick. Current tick\r\n */\r\nfunction handleEnemies(tick: number): void {\r\n    localState.enemies.forEach((e) => {\r\n        e.updateState(tick);\r\n    });\r\n}\r\n\r\n/**\r\n * Handle self destruct.\r\n */\r\nfunction handleSelfDestruct(tick: number): void {\r\n    const { playerState, enemyLevelState } = appState();\r\n\r\n    if (playerState.alive && appState().keyboardState.selfDestruct) {\r\n        enemyLevelState.enemies.forEach((es) => dispatchExplosion(es.offsetLeft, es.offsetTop, es.coloredExplosion, tick));\r\n        dispatchExplosion(playerState.left, playerState.top, playerState.coloredExplosion, tick);\r\n        handlePlayerDeath(tick);\r\n        localState.enemies = [];\r\n    }\r\n}\r\n\r\n/**\r\n * handles the destruction of an enemy.\r\n * @param {BaseEnemy} enemy.\r\n */\r\nfunction handleEnemyDestruction(enemy: EnemyState, tick: number): void {\r\n    const { enemyLevelState } = appState();\r\n\r\n    localState.enemies = localState.enemies.filter((e) => {\r\n        if (e.getId() !== enemy.enemyId) {\r\n            e.increaseSpeed(enemyLevelState.totalNumberOfEnemies / (localState.enemies.length - 1));\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    });\r\n\r\n    dispatchExplosion(enemy.offsetLeft, enemy.offsetTop, enemy.coloredExplosion, tick);\r\n    dispatch(removeEnemy(enemy.enemyId));\r\n    dispatch(increaseScore(enemy.points));\r\n}\r\n\r\n/**\r\n * Handles the firing of a phaser charge.\r\n */\r\nfunction handlePhaser(tick: number): void {\r\n    const { enemyLevelState, playerState, gameState, keyboardState } = appState();\r\n\r\n    if (playerState.nozzleLocation &&\r\n        keyboardState.phraser &&\r\n        enemyLevelState.enemies.length > 0 &&\r\n        gameState.phasers > 0 &&\r\n        enemyLevelState.phaserLocations.length === 0) {\r\n\r\n        const randomEnemy = getRandomArrayElement(enemyLevelState.enemies);\r\n        const playerNozzleLocation = playerState.nozzleLocation;\r\n        const randomEnemyCenter = randomEnemy.centerLocation;\r\n        if (randomEnemyCenter !== undefined) {\r\n            // Remove one phaser.\r\n            dispatch(removePhaser());\r\n            const phaserLocations = getPhaserLocations(playerNozzleLocation.left, playerNozzleLocation.top, randomEnemyCenter.left, randomEnemyCenter.top, pixelSize);\r\n            dispatch(setPhaserLocations(phaserLocations));\r\n\r\n            // Pause the game for a very brief period. This is what the original game did\r\n            // when you fired a phasor shot.\r\n            dispatch(setPause(true));\r\n            window.setTimeout(() => {\r\n                // Unpause the game to let rendering continue.\r\n                dispatch(setPause(false));\r\n\r\n                // Deal the with the enemy that got hit.\r\n\r\n                handleEnemyDestruction(randomEnemy, tick);\r\n                dispatch(clearPhaserLocations());\r\n            }, 100);\r\n        }\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport dimensionProvider from \"./DimensionProvider\";\r\n\r\n/**\r\n * Module:          speedProvider\r\n * Responsibility:  Calculate the relative speed based on the screensize.\r\n */\r\n\r\nconst {\r\n    gameField\r\n} = dimensionProvider();\r\n\r\nexport default function speedProvider(speed: number): number {\r\n    // 1600 is the size of the canvas when I was developing the game. All game speeds are based on this.\r\n    return speed * (gameField.right / 1600);\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          QueueExplosionRender\r\n * Responsibility:  Helper function to add a full explosion to the state.\r\n */\r\n\r\nimport Explosion from \"../Models/Explosion\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport { addExplosionCenter } from \"../State/EnemyLevel/EnemyLevelActions\";\r\nimport { ExplosionCenterState } from \"../State/EnemyLevel/ExplosionCenterState\";\r\nimport { StateProviders } from \"../State/StateProviders\";\r\nimport { dispatch } from \"../State/Store\";\r\nimport { getFrameHitbox } from \"../Utility/Frame\";\r\n\r\nconst {\r\n    pixelSize\r\n} = dimensionProvider();\r\n\r\n/**\r\n * Handles the dispatches to add an explosion with shrapnell to the state.\r\n * @param {number} left. Left coordinate.\r\n * @param {number} top. Top coordinate.\r\n * @param {Explosion} explosion. An explosion asset.\r\n * @param {Particle[]} targetParticleArray. The array where the particles will be pushed into. Helps keep track of particles belonging to the player or an enemy.\r\n */\r\nexport function dispatchExplosion(left: number, top: number, coloredExplosion: Explosion, tick: number): void {\r\n\r\n    const newShrapnell = StateProviders.explosionShrapnellProvider(left, top, coloredExplosion);\r\n    const explosionHitbox = getFrameHitbox(left, top, coloredExplosion.explosionCenterFrame, pixelSize);\r\n\r\n    const newExplosion: ExplosionCenterState = {\r\n        left,\r\n        top,\r\n        startTick: tick,\r\n        hitbox: explosionHitbox,\r\n        coloredFrame: coloredExplosion.explosionCenterFrame,\r\n        explosionCenterDelay: coloredExplosion.explosionCenterDelay,\r\n    };\r\n\r\n    dispatch(addExplosionCenter(newExplosion, newShrapnell));\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          handlePlayerDeath\r\n * Responsibility:  Performs the required dispatches when the player dies.\r\n */\r\n\r\nimport { removeLife } from \"../State/Game/GameActions\";\r\nimport { setPlayerIsAlive } from \"../State/Player/PlayerActions\";\r\nimport { appState, dispatch } from \"../State/Store\";\r\nimport { dispatchExplosion } from \"./DispatchExplosion\";\r\n\r\n/**\r\n * Handles a the player's death.\r\n * @param {number} tick\r\n */\r\nexport function handlePlayerDeath(tick: number): void {\r\n    const { playerState: { left, top, coloredExplosion} } = appState();\r\n\r\n    dispatchExplosion(left, top, coloredExplosion, tick);\r\n\r\n    dispatch(removeLife());\r\n    dispatch(setPlayerIsAlive(false));\r\n}","\r\n/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport CGAColors from \"../Constants/CGAColors\";\r\nimport WarpLevelConstants from \"../Constants/WarpLevelConstants\";\r\nimport { GameRectangle } from \"../Models/GameRectangle\";\r\nimport ctxProvider from \"../Providers/CtxProvider\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\n\r\n/**\r\n * Module:          StaticRenders\r\n * Responsibility:  Starts the game\r\n */\r\n\r\nconst {\r\n    pixelSize,\r\n    gameField,\r\n    statusBarBottom,\r\n    fullGameWidth\r\n} = dimensionProvider();\r\n\r\nexport function drawBackground(): void {\r\n    clearGameFieldBackground();\r\n    drawGameFieldBorder();\r\n}\r\n\r\n/**\r\n * Renders the entire canvas black\r\n */\r\nfunction clearGameFieldBackground(): void {\r\n    const ctx = ctxProvider();\r\n    ctx.fillStyle = CGAColors.black;\r\n    ctx.fillRect(gameField.left, gameField.top, gameField.right, gameField.bottom);\r\n}\r\n\r\n/**\r\n * Draws a solid red recangle where the game's score is displayed.\r\n */\r\nfunction drawGameFieldBorder(): void {\r\n    const ctx = ctxProvider();\r\n    ctx.fillStyle = CGAColors.blue;\r\n\r\n    // Draw the top field border.\r\n    ctx.fillRect(0, statusBarBottom, fullGameWidth, pixelSize);\r\n\r\n    // Draw the right field border.\r\n    ctx.fillRect(gameField.right, statusBarBottom, pixelSize, gameField.bottom);\r\n\r\n    // // Draw the bottom field border.\r\n    ctx.fillRect(0, gameField.bottom, fullGameWidth, pixelSize);\r\n\r\n    // // Draw the left field border.\r\n    ctx.fillRect(0, statusBarBottom, pixelSize, gameField.bottom);\r\n}\r\n\r\n/**\r\n * Draws the background of the warp level.\r\n * @param {string} additionalColor. The additional color.\r\n */\r\nexport function drawWarpBackground(additionalColor: string, gate: GameRectangle[]): void {\r\n    const ctx = ctxProvider();\r\n\r\n    // The first line in a warp level is always white.\r\n    // we'll use this flag to altername between white and a randonly picked color.\r\n    let drawWhite = true;\r\n    let left = WarpLevelConstants.left;\r\n\r\n    while (WarpLevelConstants.right >= left) {\r\n        if (drawWhite) {\r\n            ctx.fillStyle = CGAColors.white;\r\n            drawWhite = false;\r\n        } else {\r\n            ctx.fillStyle = additionalColor;\r\n            drawWhite = true;\r\n        }\r\n\r\n        ctx.fillRect(left, WarpLevelConstants.top, pixelSize, WarpLevelConstants.height);\r\n        left += pixelSize;\r\n    }\r\n\r\n    ctx.fillStyle = \"blue\";\r\n\r\n    gate.forEach((r) => ctx.fillRect(r.left, r.top, r.right - r.left, r.bottom - r.top));\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\n\r\n/**\r\n * Module:          WarpLevels\r\n * Responsibility:  Constants for the warp level.\r\n */\r\n\r\nconst {\r\n    pixelSize,\r\n    gameField\r\n} = dimensionProvider();\r\n\r\nexport namespace WarpLevelConstants {\r\n    export const heightPixelCount = 72;\r\n    export const top = pixelSize * 8;\r\n    export const height = heightPixelCount * pixelSize;\r\n    export const left = gameField.left + pixelSize;\r\n    export const right = gameField.right - pixelSize * 2;\r\n    export const bottom = top + height;\r\n    export const width = pixelSize * 16;\r\n}\r\n\r\nexport default WarpLevelConstants;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { Frame, Frames } from \"../Types\";\r\nimport { copyFrame as copyFrame, copyFrames, getFrameByIndex } from \"../Utility/Frame\";\r\n\r\n/**\r\n * Module:          IFrameProvider\r\n * Responsibility:  Contract for a FrameProvider\r\n */\r\n\r\nexport default abstract class BaseFrameProvider {\r\n    /**\r\n     * Animation frames.\r\n     */\r\n    private frames?: Frames;\r\n\r\n    /**\r\n     * The current frame for an animated enemy.\r\n     */\r\n    protected frameIndex: number = 0;\r\n\r\n    /**\r\n     * Added to the current frame index.\r\n     */\r\n    protected add = 1;\r\n\r\n    /**\r\n     * Maximum index for the provided frames.\r\n     */\r\n    protected maxIndex: number;\r\n\r\n    /**\r\n     * Initializes the EnemyBase class\r\n     * @param {Frames} frames. Frames.\r\n     * @param {number} startFrameIndex. The first frame to return.\r\n     */\r\n    constructor(startFrameIndex: number) {\r\n        this.frameIndex = startFrameIndex;\r\n        this.maxIndex = -1;\r\n    }\r\n\r\n    public setFrames(frames: Frames): void {\r\n        this.frames = copyFrames(frames);\r\n        this.maxIndex = frames.length - 1;\r\n    }\r\n\r\n    /**\r\n     * Gets the current frame.\r\n     * @returns {Frame}. A frame\r\n     */\r\n    public getCurrentFrame(): Frame {\r\n\r\n        if (this.frames === undefined) {\r\n            throw new Error(\"Set the frames.\");\r\n        }\r\n\r\n        const returnValue = getFrameByIndex(this.frames, this.frameIndex);\r\n        return copyFrame(returnValue);\r\n    }\r\n\r\n    public abstract getNextFrame(): Frame;\r\n\r\n    /**\r\n     * Returns the current frame index.\r\n     * @returns {number}. The current frame index.\r\n     */\r\n    public getCurrentIndex(): number {\r\n        return this.frameIndex;\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { OffsetFrames } from \"../../Models/OffsetFrames\";\r\n\r\n/**\r\n * Module:          OrbFrames\r\n * Responsibility:  Define the frames for the orb enemy\r\n */\r\n\r\nexport default function getOrbFrames(): OffsetFrames {\r\n\r\n    const orbMainFrame = [\r\n        [\"0\", \"V0\", \"V0\", \"0\"],\r\n        [\"V0\", \"V1\", \"V1\", \"V0\"],\r\n        [\"V0\", \"V1\", \"V1\", \"V0\"],\r\n        [\"0\", \"V0\", \"V0\", \"0\"],\r\n    ];\r\n\r\n    const orbFrames: OffsetFrames = {\r\n        frames: [],\r\n        offSets: [\r\n            // Move up\r\n            {\r\n                left: 0,\r\n                top: 0,\r\n            },\r\n            {\r\n                left: 0,\r\n                top: -2,\r\n            },\r\n            {\r\n                left: 0,\r\n                top: -4,\r\n            },\r\n            {\r\n                left: 0,\r\n                top: -6,\r\n            },\r\n            // Move right\r\n            {\r\n                left: 2,\r\n                top: -6,\r\n            },\r\n            {\r\n                left: 4,\r\n                top: -6,\r\n            },\r\n            {\r\n                left: 6,\r\n                top: -6,\r\n            },\r\n            // Move down\r\n            {\r\n                left: 6,\r\n                top: -4,\r\n            },\r\n            {\r\n                left: 6,\r\n                top: -2,\r\n            },\r\n            {\r\n                left: 6,\r\n                top: 0,\r\n            },\r\n            // Move left\r\n            {\r\n                left: 4,\r\n                top: 0,\r\n            },\r\n            {\r\n                left: 2,\r\n                top: 0,\r\n            }\r\n        ],\r\n    };\r\n\r\n    orbFrames.offSets.forEach(() => {\r\n        orbFrames.frames.push(orbMainFrame);\r\n    });\r\n\r\n    return orbFrames;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { OffsetFrames } from \"../../Models/OffsetFrames\";\r\n\r\n/**\r\n * Module:          RobotFrames\r\n * Responsibility:  Define the frames of the RobotEnemy\r\n */\r\n\r\nexport default function getRobotFrames(): OffsetFrames {\r\n\r\n    let offsetCount = 0;\r\n    const robotFrames: OffsetFrames = {\r\n        frames: [\r\n            [\r\n                [\"0\", \"V\", \"V\", \"V\", \"0\"],\r\n                [\"V\", \"V\", \"V\", \"V\", \"V\"],\r\n                [\"V\", \"0\", \"V\", \"0\", \"V\"],\r\n                [\"V\", \"V\", \"V\", \"V\", \"V\"],\r\n                [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n                [\"V\", \"V\", \"V\", \"V\", \"V\"],\r\n                [\"0\", \"V\", \"0\", \"V\", \"0\"],\r\n                [\"0\", \"V\", \"0\", \"V\", \"0\"],\r\n                [\"V\", \"V\", \"0\", \"V\", \"V\"],\r\n            ],\r\n            [\r\n                [\"0\", \"V\", \"V\", \"V\", \"0\"],\r\n                [\"V\", \"V\", \"V\", \"V\", \"V\"],\r\n                [\"V\", \"0\", \"V\", \"0\", \"V\"],\r\n                [\"V\", \"V\", \"V\", \"V\", \"V\"],\r\n                [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n                [\"V\", \"V\", \"V\", \"V\", \"V\"],\r\n                [\"0\", \"V\", \"0\", \"V\", \"0\"],\r\n                [\"V\", \"V\", \"0\", \"V\", \"V\"],\r\n            ],\r\n            [\r\n                [\"0\", \"V\", \"V\", \"V\", \"0\"],\r\n                [\"V\", \"V\", \"V\", \"V\", \"V\"],\r\n                [\"V\", \"0\", \"V\", \"0\", \"V\"],\r\n                [\"V\", \"V\", \"V\", \"V\", \"V\"],\r\n                [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n                [\"V\", \"V\", \"V\", \"V\", \"V\"],\r\n                [\"V\", \"V\", \"0\", \"V\", \"V\"],\r\n            ],\r\n        ],\r\n        offSets: [\r\n            {\r\n                top: offsetCount,\r\n                left: 0,\r\n            },\r\n            {\r\n                top: offsetCount,\r\n                left: 0,\r\n            },\r\n            {\r\n                top: offsetCount,\r\n                left: 0,\r\n            },\r\n            {\r\n                top: ++offsetCount,\r\n                left: 0,\r\n            },\r\n            {\r\n                top: ++offsetCount,\r\n                left: 0,\r\n            },\r\n            {\r\n                top: offsetCount += 1,\r\n                left: 0,\r\n            },\r\n            {\r\n                top: offsetCount += 1,\r\n                left: 0,\r\n            },\r\n            {\r\n                top: offsetCount += 2,\r\n                left: 0\r\n            },\r\n            {\r\n                top: offsetCount += 1,\r\n                left: 0\r\n            }\r\n        ]\r\n    };\r\n\r\n    // Add frame 0 an additional 7 times to make the animation look good.\r\n    robotFrames.frames = [\r\n        robotFrames.frames[0],\r\n        robotFrames.frames[0],\r\n        robotFrames.frames[0],\r\n        robotFrames.frames[0],\r\n        robotFrames.frames[0],\r\n        robotFrames.frames[0],\r\n        ...robotFrames.frames,\r\n    ];\r\n\r\n    return robotFrames;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport { addBullet, addOrUpdateEnemy } from \"../State/EnemyLevel/EnemyLevelActions\";\r\nimport { EnemyState } from \"../State/EnemyLevel/EnemyState\";\r\nimport { StateProviders } from \"../State/StateProviders\";\r\nimport { appState, dispatch } from \"../State/Store\";\r\nimport { FireAngleProviderFunction, FireCheckFunction, Frame, FrameProviderFunction, ShipsToFireFunction } from \"../Types\";\r\nimport Mutators from \"../Utility/FrameMutators\";\r\n\r\n/**\r\n * Module:          StraightDownBulletProvider\r\n * Responsibility:  Shoots a bullet straight down\r\n */\r\n\r\nconst {\r\n    pixelSize\r\n} = dimensionProvider();\r\n\r\n/**\r\n * Class the handles al bullet business.\r\n * @export\r\n * @class BulletRunner\r\n */\r\nexport default class BulletRunner {\r\n    /**\r\n     * The bullet frame that will be fired.\r\n     */\r\n    private bulletFrame: Frame;\r\n\r\n    /**\r\n     * The fire check function. This function has the final say in whether an enemy will fire or not.\r\n     */\r\n    private fireCheck: FireCheckFunction;\r\n\r\n    /**\r\n     * Speed of the bullets shot by the enemy.\r\n     */\r\n    private speed: number;\r\n\r\n    /**\r\n     * The color of the bullet fired.\r\n     */\r\n    private bulletColor: string;\r\n\r\n    /**\r\n     * Ships to fire function.\r\n     * @private\r\n     * @type {ShipsToFireFunction}\r\n     * @memberof BulletRunner\r\n     */\r\n    private shipsToFire: ShipsToFireFunction;\r\n\r\n    /**\r\n     * Provides a fire angle for a ship.\r\n     * @private\r\n     * @type {FireAngleProviderFunction}\r\n     * @memberof BulletRunner\r\n     */\r\n    private fireAngleProvider: FireAngleProviderFunction;\r\n\r\n    /**\r\n     * Creates an instance of BulletRunner.\r\n     * @param {FrameProviderFunction} getBulletFrame. A function that returns a bullet frame.\r\n     * @param {string} bulletColor. The color of the bullet.\r\n     * @param {number} speed. The speed of the bullet.\r\n     * @param {ShipsToFireFunction} shipsToFire. A function that returns shits that can fire.\r\n     * @param {FireCheckFunction} fireCheck. A function that checks individual ships if they can fire.\r\n     * @memberof BulletRunner\r\n     */\r\n    constructor(\r\n        getBulletFrame: FrameProviderFunction,\r\n        bulletColor: string,\r\n        speed: number,\r\n        fireAngleProvider: FireAngleProviderFunction,\r\n        shipsToFire: ShipsToFireFunction,\r\n        fireCheck: FireCheckFunction) {\r\n\r\n        this.speed = speed;\r\n        this.bulletColor = bulletColor;\r\n        this.bulletFrame = getBulletFrame();\r\n        this.fireCheck = fireCheck;\r\n        this.shipsToFire = shipsToFire;\r\n        this.fireAngleProvider = fireAngleProvider;\r\n\r\n        Mutators.Frame.setColor(this.bulletFrame, this.bulletColor);\r\n    }\r\n\r\n    /**\r\n     * Determines which enemies can fire and how. Then dispatches bullets to the state.\r\n     * @param {number} tick. Current tick.\r\n     */\r\n    public updateState(tick: number): void {\r\n        const {\r\n            playerState,\r\n            enemyLevelState\r\n        } = appState();\r\n\r\n        // Enemies never fire bullets when the player is dead.\r\n        if (!playerState.alive) {\r\n            return;\r\n        }\r\n\r\n        const enemiesWhoMayFire: EnemyState[] = [];\r\n        for (const enemy of enemyLevelState.enemies) {\r\n            const lastShotTick = enemy.lastFireTick;\r\n\r\n            // Check if this enemy's shot timeout has passed.\r\n            if (tick - lastShotTick > enemyLevelState.fireInterval) {\r\n                enemiesWhoMayFire.push(enemy);\r\n            }\r\n        }\r\n\r\n        const ships = this.shipsToFire(enemiesWhoMayFire, this.fireAngleProvider);\r\n\r\n        // The candiates are sorted so the enemeies with the best odds of hitting the player\r\n        // are at the top. Now we'll use the firecheck function to get an array of enemies that\r\n        // can actually fire.\r\n        for (const ship of ships) {\r\n            const fireAngle = this.fireAngleProvider(ship, ship.offsetLeft, ship.offsetTop);\r\n\r\n            // Always call a fire check function with the last version of the enemyLevelState\r\n            // this state is constantly updated by the dispatches done below.\r\n            // Fire check functions check the state and make the final call if the ship\r\n            // can fire or not.\r\n            if (this.fireCheck(ship, fireAngle)) {\r\n                const { hitbox } = ship;\r\n                if (fireAngle !== undefined) {\r\n\r\n                    const left = hitbox.left + ((hitbox.right - hitbox.left) / 2) - pixelSize;\r\n                    const top = hitbox.bottom + pixelSize;\r\n\r\n                    const bullet = StateProviders.getBulletParticleState(\r\n                        left,\r\n                        top,\r\n                        this.speed,\r\n                        fireAngle,\r\n                        this.bulletFrame,\r\n                        ship.enemyId,\r\n                    );\r\n\r\n                    const newState = { ...ship, lastFireTick: tick };\r\n\r\n                    dispatch(addBullet(bullet));\r\n                    dispatch(addOrUpdateEnemy(newState));\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          FireFrequences\r\n * Responsibility:  Constants for fire frequences\r\n */\r\n\r\nexport const robotFireFrequence = 200;\r\n\r\nexport const orbFireFrequence = 200;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport Guard from \"../Guard\";\r\nimport { setPause } from \"../State/Game/GameActions\";\r\nimport { keyDown, keyUp } from \"../State/Keyboard/KeyboardActions\";\r\nimport { appState, dispatch } from \"../State/Store\";\r\n\r\n/**\r\n * Module:          KeyboardEVents\r\n * Responsibility:  handle keyboard events.\r\n */\r\n\r\n/**\r\n * Valid game keys.\r\n */\r\nexport type GameKeys =\r\n    \"ArrowUp\" |\r\n    \"ArrowDown\" |\r\n    \"ArrowLeft\" |\r\n    \"ArrowRight\" |\r\n    \"Backspace\" |\r\n    \"F1\" |\r\n    \"F2\" |\r\n    \"Space\";\r\n\r\n/**\r\n * Array of valid game keys.\r\n */\r\nexport const allGameKeys: GameKeys[] = [\r\n    \"ArrowDown\",\r\n    \"ArrowLeft\",\r\n    \"ArrowRight\",\r\n    \"ArrowUp\",\r\n    \"Backspace\",\r\n    \"F1\",\r\n    \"F2\",\r\n    \"Space\",\r\n];\r\n\r\n/**\r\n * onKeyDown. Fired when a game control key is pushed down..\r\n * @param {KeyboardEvent} event. A keyboard event.\r\n */\r\nfunction onKeyDown(event: KeyboardEvent): void {\r\n\r\n    const {\r\n        playerState,\r\n        gameState\r\n    } = appState();\r\n\r\n    if (Guard.isValidGameKey(event.code)) {\r\n        // Only dispatch if the key is a game control key.\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n\r\n        // If the space bar is hit and the player is alive the player pauses the game\r\n        // otherwise, the space bar is used to pause formation.\r\n        if (event.code === \"Space\" && playerState.alive) {\r\n            if (gameState.pause) {\r\n                dispatch(setPause(false));\r\n            } else {\r\n                dispatch(setPause(true));\r\n            }\r\n        } else {\r\n            dispatch(keyDown(event.code));\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * onKeyUp. Fired when a game control key is let go.\r\n * @param {KeyboardEvent} event. A keyboard event.\r\n */\r\nfunction onKeyUp(event: KeyboardEvent): void {\r\n    if (Guard.isValidGameKey(event.code)) {\r\n        // Only dispatch if the key is a game control key.\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n\r\n        dispatch(keyUp(event.code));\r\n    }\r\n}\r\n\r\n/**\r\n * Adds event listeners for keyup and keydown.\r\n */\r\nexport function registerListeners(): void {\r\n    window.addEventListener(\"keyup\", onKeyUp);\r\n    window.addEventListener(\"keydown\", onKeyDown);\r\n}\r\n\r\n/**\r\n * Removes the event listeners\r\n */\r\nexport function unregisterListeners(): void {\r\n    window.removeEventListener(\"keyup\", onKeyUp);\r\n    window.removeEventListener(\"keydown\", onKeyDown);\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { GameLocation } from \"../Models/GameLocation\";\r\nimport { getPlayerFrame } from \"../Player/PlayerFrames\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport { setPlayerLocationData } from \"../State/Player/PlayerActions\";\r\nimport { appState, dispatch } from \"../State/Store\";\r\nimport { getFrameDimensions, getFrameHitbox } from \"../Utility/Frame\";\r\nimport { getAngle, getNextX, getNextY } from \"../Utility/Geometry\";\r\n\r\n/**\r\n * Module:          MovePlayer\r\n * Responsibility:  Handles changes to the player location due to movement. Also provides a single source of truth for any class or module\r\n *                  That uses the player location or needs to change it.\r\n */\r\n\r\nconst {\r\n    pixelSize,\r\n    gameField\r\n} = dimensionProvider();\r\n\r\n// Used in player hitbox calculation, never changes so it can be a constant.\r\nconst doublePixel = pixelSize * 2;\r\n\r\nconst {\r\n    width: playerWidth,\r\n    height: playerHeight\r\n} = getFrameDimensions(getPlayerFrame());\r\n\r\n/**\r\n * Handles player movement.\r\n * @param {number} speed. Speed the ship can travel. Can vary depending on the level or if the player ship is forming.\r\n */\r\nexport function movePlayerHandler(speed: number): void {\r\n    const { keyboardState, playerState } = appState();\r\n\r\n    const localKeyboardState = { ...keyboardState };\r\n\r\n    // By default the speed for x and y is the speed passed to the movement\r\n    const speedX = speed;\r\n    let speedY = speed;\r\n\r\n    // Certain levels limit the movement of the player.\r\n    // We'll use a fresh keyboardState object and make some adjustments.\r\n    switch (playerState.moveLimit) {\r\n        case \"immobile\":\r\n            // Player cannot move\r\n            return;\r\n        case \"sideways\":\r\n            // Used when the player forms. Override the keyboard state.\r\n            localKeyboardState.down = localKeyboardState.up = false;\r\n            break;\r\n        case \"forceup\":\r\n            // Used when the player travels through a warp gate.\r\n            localKeyboardState.up = true;\r\n            localKeyboardState.down = false;\r\n            speedY = 4;\r\n            break;\r\n        case \"none\":\r\n        // Make not changes and allow 360 degrees of freedown\r\n        default:\r\n        // No default;\r\n    }\r\n\r\n    const angle = getAngle(localKeyboardState);\r\n    const { left: nextX, top: nextY } = getNextLocationForPlayer(angle, speedX, speedY, playerState.left, playerState.top);\r\n\r\n    const hitBox = getFrameHitbox(nextX, nextY, playerState.coloredFrame, 0);\r\n\r\n    const middleHitbox = { ...hitBox, left: hitBox.left + doublePixel, right: hitBox.right - doublePixel };\r\n    const bottomHitbox = { ...hitBox, top: hitBox.top + pixelSize };\r\n\r\n    const hitBoxes = { middle: middleHitbox, bottom: bottomHitbox };\r\n\r\n    const nozzleLocation = {\r\n        left: nextX + pixelSize * 2,\r\n        top: nextY - pixelSize * 1,\r\n    };\r\n\r\n    dispatch(setPlayerLocationData(nextX, nextY, hitBoxes, nozzleLocation));\r\n}\r\n\r\n/**\r\n * Returns the next locatoin for the player taking into account, no movement and moving outside the game field.\r\n * @export\r\n * @param {number} angle\r\n * @param {number} speedX\r\n * @param {number} currentX\r\n * @param {number} currentY\r\n * @returns {GameLocation}\r\n */\r\nfunction getNextLocationForPlayer(angle: number, speedX: number, speedY: number, currentX: number, currentY: number): GameLocation {\r\n    const currentLocation = { left: currentX, top: currentY };\r\n    if (angle === -1) {\r\n        return currentLocation;\r\n    }\r\n\r\n    const nextX = getNextX(angle, speedX, currentX);\r\n    const nextY = getNextY(angle, speedY, currentY);\r\n\r\n    if (nextX < gameField.left || nextX + playerWidth > gameField.right) {\r\n        return currentLocation;\r\n    }\r\n\r\n    if (nextY + playerHeight > gameField.bottom || nextY < gameField.top) {\r\n        return currentLocation;\r\n    }\r\n\r\n    return {\r\n        left: nextX,\r\n        top: nextY,\r\n    };\r\n}","export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { DEBUGGING_drawGrid, DEBUGGING_renderHitboxes } from \"./Debugging/Debugging\";\r\nimport GameLoop from \"./GameLoop\";\r\nimport { drawStatusBar } from \"./GameScreen/StatusBar\";\r\nimport subscribeToStoreChanges from \"./Levels/SubscribeToStore\";\r\nimport playerSpawnManager from \"./Player/PlayerSpawnManager\";\r\nimport ctxProvider from \"./Providers/CtxProvider\";\r\nimport dimensionProvider from \"./Providers/DimensionProvider\";\r\nimport genericRunner from \"./Runners/GenericRunner\";\r\nimport playerRunner from \"./Runners/PlayerRunner\";\r\nimport { playerMortality } from \"./State/Debugging/DebuggingActions\";\r\nimport { addPhaser, increaseScore, nextLevel, setLevel, setLives, setPhasers, setWarpGamteComplexity } from \"./State/Game/GameActions\";\r\nimport { WarpLevelComplexity } from \"./State/Game/WarpLevelTypes\";\r\nimport { dispatch } from \"./State/Store\";\r\nimport { registerListeners } from \"./Utility/KeyboardEvents\";\r\nimport { getURLQueryKVPs } from \"./Utility/Lib\";\r\n\r\n/**\r\n * Module:          Index\r\n * Responsibility:  Entry point for the game\r\n */\r\n\r\nwindow.onload = () => {\r\n\r\n    const canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\r\n    if (canvas) {\r\n        // Initialize the dimentions of the canvas.\r\n        canvas.width = dimensionProvider().fullGameWidth;\r\n        canvas.height = dimensionProvider().fullGameHeight;\r\n\r\n        const queryKeyValuePairs = getURLQueryKVPs(window.location.search);\r\n\r\n        const showPlayGround = queryKeyValuePairs.some((kvp) => kvp.key === \"playground\");\r\n        const showCanvas = queryKeyValuePairs.some((kvp) => kvp.key === \"canvas\");\r\n        let level = queryKeyValuePairs.find((kvp) => kvp.key === \"level\")?.value;\r\n        const drawGrid = queryKeyValuePairs.find((kvp) => kvp.key === \"grid\");\r\n        const showhitboxes = queryKeyValuePairs.find((kvp) => kvp.key === \"hitboxes\");\r\n        const immortal = queryKeyValuePairs.find((kvp) => kvp.key === \"god\");\r\n\r\n        if (showPlayGround) {\r\n\r\n            if (!level) {\r\n                level = \"0\";\r\n            }\r\n\r\n            subscribeToStoreChanges();\r\n            registerListeners();\r\n\r\n            GameLoop.registerBackgroundDrawing(drawStatusBar);\r\n            GameLoop.registerUpdateState(playerRunner);\r\n            GameLoop.registerUpdateState(playerSpawnManager);\r\n            GameLoop.registerUpdateState(genericRunner);\r\n\r\n            if (immortal) {\r\n                dispatch(playerMortality(\"immortal\"));\r\n            } else {\r\n                dispatch(playerMortality(\"mortal\"));\r\n            }\r\n\r\n            dispatch(setLives(20));\r\n            dispatch(setPhasers(100));\r\n\r\n            if (level) {\r\n                dispatch(setLevel(parseInt(level, 10)));\r\n            }\r\n\r\n            if (drawGrid) {\r\n                let gridDetail = 1;\r\n                if (drawGrid.value) {\r\n                    gridDetail = parseInt(drawGrid.value, 10);\r\n                }\r\n\r\n                GameLoop.registerBackgroundDrawing(() => DEBUGGING_drawGrid(gridDetail));\r\n            }\r\n\r\n            if (showhitboxes) {\r\n                GameLoop.registerBackgroundDrawing(() => DEBUGGING_renderHitboxes());\r\n            }\r\n\r\n            GameLoop.Start();\r\n\r\n            (window as any).r42 = {\r\n                setLevel: (n: number) => dispatch(setLevel(n)),\r\n                nextLevel: () => dispatch(nextLevel()),\r\n                godMode: () => dispatch(playerMortality(\"immortal\")),\r\n                normalMode: () => dispatch(playerMortality(\"mortal\")),\r\n                setPhasers: (n: number) => dispatch(setPhasers(n)),\r\n                setLives: (n: number) => dispatch(setLives(n)),\r\n                increaseScore: (n: number) => dispatch(increaseScore(n)),\r\n                addPhaser: () => dispatch(addPhaser()),\r\n                setWarpLevelComplexity: (n: WarpLevelComplexity) => dispatch(setWarpGamteComplexity(n)),\r\n            };\r\n\r\n        } else if (showCanvas) {\r\n            // canvas testing\r\n            const ctx = ctxProvider();\r\n\r\n            // Green.\r\n            ctx.fillStyle = \"#00AA00\";\r\n\r\n            (window as any).r42 = ctx;\r\n        } else {\r\n            startGame();\r\n        }\r\n    }\r\n};\r\n\r\nfunction startGame(): void {\r\n    // subscribeToStoreChanges();\r\n    // registerListeners();\r\n\r\n    // dispatch(setPhasers(1));\r\n    // dispatch(setLives(2));\r\n\r\n    // GameLoop.registerBackgroundDrawing(drawStatusBar);\r\n    // GameLoop.registerUpdateState(playerRunner);\r\n    // GameLoop.registerUpdateState(playerSpawnManager);\r\n    // dispatch(playerMortality(\"mortal\"));\r\n\r\n    // dispatch(setLevel(1));\r\n    // GameLoop.Start();\r\n}","import $$observable from 'symbol-observable';\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error('It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error('You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected the listener to be a function.');\n    }\n\n    if (isDispatching) {\n      throw new Error('You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api-reference/store#subscribelistener for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error('You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api-reference/store#subscribelistener for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionDescription = actionType && \"action \\\"\" + String(actionType) + \"\\\"\" || 'an action';\n  return \"Given \" + actionDescription + \", reducer \\\"\" + key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\";\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle \" + ActionTypes.INIT + \" or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n        throw new Error(errorMessage);\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(\"bindActionCreators expected an object or a function, instead received \" + (actionCreators === null ? 'null' : typeof actionCreators) + \". \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    keys.push.apply(keys, Object.getOwnPropertySymbols(object));\n  }\n\n  if (enumerableOnly) keys = keys.filter(function (sym) {\n    return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n  });\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error('Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread2({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\n\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \"production\". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { ActionTypes as __DO_NOT_USE__ActionTypes, applyMiddleware, bindActionCreators, combineReducers, compose, createStore };\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport produce from \"immer\";\r\nimport Constants from \"./DebuggingConstants\";\r\nimport DebuggingState from \"./DebuggingState\";\r\nimport { DebuggingTypes } from \"./DebuggingTypes\";\r\n\r\n/**\r\n * Module:          debuggingReducer\r\n * Responsibility:  Handles the debugging state.\r\n */\r\n\r\n/**\r\n * debuggingReducer\r\n * @param {DebuggingState} state. The current state.\r\n * @param {ActionPayload<any>} action. The desired action with optional paylood.\r\n * @returns {DebuggingState}. New state.\r\n */\r\nexport default function debuggingReducer(state: DebuggingState = initState(), action: DebuggingTypes): DebuggingState {\r\n    return produce(state, (draft) => {\r\n        switch (action.type) {\r\n            case Constants.playerMortality:\r\n                draft.playerIsImmortal = action.payload === \"immortal\";\r\n                break;\r\n            case Constants.renderPhaser:\r\n                draft.renderPhaser = action.render;\r\n                break;\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Initialize the debugging state.\r\n * @returns {DebuggingState}. Default state.\r\n */\r\nfunction initState(): DebuggingState {\r\n    return {\r\n        playerIsImmortal: false,\r\n        renderPhaser: false,\r\n    };\r\n}","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          LevelReducuer\r\n * Responsibility:  LevelReducer.\r\n */\r\n\r\nimport produce from \"immer\";\r\nimport Constants from \"./EnemyLevelConstants\";\r\nimport EnemyLevelState from \"./EnemyLevelState\";\r\nimport { EnemyLevelTypes } from \"./EnemyLevelTypes\";\r\n\r\n/**\r\n * enemyLevelReducer\r\n * @param {EnemyLevelState} state. The current state.\r\n * @param {ActionPayload<any>} action. The desired action with optional paylood.\r\n * @returns {EnemyLevelState}. New state.\r\n */\r\nexport default function enemyLevelReducer(state: EnemyLevelState = initState(), action: EnemyLevelTypes): EnemyLevelState {\r\n\r\n    const newState = produce(state, (draft) => {\r\n        switch (action.type) {\r\n            case Constants.addExplosionCenter:\r\n                draft.explosionCenters.push(action.explosionCenter);\r\n                draft.shrapnells.push(...action.shrapnell);\r\n                break;\r\n            case Constants.setShrapnellState:\r\n                draft.shrapnells = action.shrapnell;\r\n                break;\r\n            case Constants.addParticle:\r\n                draft.shrapnells.push(action.particle);\r\n                break;\r\n            case Constants.addParticles:\r\n                draft.shrapnells.push(...action.particles);\r\n                break;\r\n            case Constants.resetLevelState:\r\n                draft = initState();\r\n                break;\r\n            case Constants.setPhaserLocations:\r\n                draft.phaserLocations = action.payload;\r\n                break;\r\n            case Constants.clearPhaserLocations:\r\n                draft.phaserLocations = [];\r\n                break;\r\n            case Constants.setFireInterval:\r\n                draft.fireInterval = action.payload;\r\n                break;\r\n            case Constants.setExplosionCenters:\r\n                draft.explosionCenters = action.explosionCenters;\r\n                break;\r\n            case Constants.addBullet:\r\n                draft.bullets.push(action.bullet);\r\n                break;\r\n            case Constants.setBulletState:\r\n                draft.bullets = action.bullets;\r\n                break;\r\n            case Constants.setTotalEnemies:\r\n                draft.totalNumberOfEnemies = action.totalEnemies;\r\n                break;\r\n            case Constants.addOrUpdateEnemy:\r\n                const index = state.enemies.findIndex((es) => es.enemyId === action.enemyState.enemyId);\r\n                if (index > -1) {\r\n                    draft.enemies[index] = action.enemyState;\r\n                } else {\r\n                    draft.enemies.push(action.enemyState);\r\n                }\r\n                break;\r\n            case Constants.removeEnemy:\r\n                draft.enemies = draft.enemies.filter((es) => es.enemyId !== action.enemyId);\r\n                break;\r\n        }\r\n    });\r\n\r\n    return newState;\r\n}\r\n\r\nfunction initState(): EnemyLevelState {\r\n    return {\r\n        shrapnells: [],\r\n        phaserLocations: [],\r\n        fireInterval: 0,\r\n        explosionCenters: [],\r\n        bullets: [],\r\n        totalNumberOfEnemies: 0,\r\n        enemies: [],\r\n    };\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport produce from \"immer\";\r\nimport Constants from \"./GameConstants\";\r\nimport GameState from \"./GameState\";\r\nimport { GameStateTypes } from \"./GameTypes\";\r\nimport getWarpGateComplexity from \"./WarpGameComplexities\";\r\n\r\n/**\r\n * Module:          GameStateReducer\r\n * Responsibility:  Reducer for the game state\r\n */\r\n\r\n/**\r\n * gameStateReducer\r\n * @param {DebuggingState} state. The current state.\r\n * @param {ActionPayload<any>} action. The desired action with optional paylood.\r\n * @returns {GameState}. New state.\r\n */\r\nexport default function gameStateReducer(state: GameState = initState(), action: GameStateTypes): GameState {\r\n    return produce(state, (draft) => {\r\n        switch (action.type) {\r\n            case Constants.increaseScore:\r\n                draft.score += action.payload;\r\n                break;\r\n            case Constants.setLives:\r\n                draft.lives = action.payload;\r\n                break;\r\n            case Constants.addLife:\r\n                draft.lives += 1;\r\n                break;\r\n            case Constants.removeLife:\r\n                draft.lives -= 1;\r\n                break;\r\n            case Constants.setPhasers:\r\n                draft.phasers = action.payload;\r\n                break;\r\n            case Constants.addPhaser:\r\n                draft.phasers += 1;\r\n                break;\r\n            case Constants.removePhaser:\r\n                draft.phasers--;\r\n                break;\r\n            case Constants.addLevel:\r\n                if (draft.level) {\r\n                    draft.level++;\r\n                }\r\n                break;\r\n            case Constants.setLevel:\r\n                draft.level = action.payload;\r\n                break;\r\n            case Constants.nextLevel:\r\n                if (draft.level === 42) {\r\n                    draft.level = 1;\r\n                } else if (draft.level !== undefined) {\r\n                    draft.level++;\r\n                }\r\n\r\n                break;\r\n            case Constants.addLifeAndPhaser:\r\n                draft.lives++;\r\n                draft.phasers++;\r\n                break;\r\n            case Constants.setPause:\r\n                draft.pause = action.payload;\r\n                break;\r\n            case Constants.setWarpLevelComplexity:\r\n                draft.warpLevelSteps = getWarpGateComplexity(action.complexity);\r\n                break;\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Initialize the state\r\n * @returns {GameState}. Fresh GameState.\r\n */\r\nfunction initState(): GameState {\r\n    return {\r\n        level: undefined,\r\n        lives: 0,\r\n        score: 0,\r\n        phasers: 0,\r\n        pause: false,\r\n        warpLevelSteps: getWarpGateComplexity(0),\r\n    };\r\n}\r\n","import { WarpLevelComplexity, WarpLevelComplexitySteps, WarpLevelSteps } from \"./WarpLevelTypes\";\r\n\r\n/**\r\n * Typed constants that defined the warp gate complexities.\r\n */\r\nconst warpLevelComplexities: WarpLevelComplexitySteps = {\r\n    0: {\r\n        stepsX: [0, 2, 2, 4],\r\n        stepsY: [4, 4, 6, 8]\r\n    },\r\n    1: {\r\n        stepsX: [0, 2, 2, 4],\r\n        stepsY: [4, 4, 6, 6],\r\n    },\r\n    2: {\r\n        stepsX: [0, 2, 2, 4],\r\n        stepsY: [4, 4, 4, 6],\r\n    },\r\n    3: {\r\n        stepsX: [2, 2, 4, 4],\r\n        stepsY: [2, 4, 4, 6],\r\n    },\r\n    4: {\r\n        stepsX: [2, 2, 2, 4],\r\n        stepsY: [2, 2, 4],\r\n    },\r\n    5: {\r\n        stepsX: [2, 2, 2, 4],\r\n        stepsY: [2, 2, 4],\r\n    },\r\n    6: {\r\n        stepsX: [2, 2, 4, 4],\r\n        stepsY: [2, 4],\r\n    },\r\n    7: {\r\n        stepsX: [2, 2, 4, 4],\r\n        stepsY: [2],\r\n    },\r\n    8: {\r\n        stepsX: [2, 2, 4, 4],\r\n        stepsY: [2],\r\n    }\r\n};\r\n\r\nexport default function getWarpGateComplexity(complexity: WarpLevelComplexity): WarpLevelSteps {\r\n    return warpLevelComplexities[complexity];\r\n}","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          KeyboardReducer\r\n * Responsibility:  Handles keyup and keydown events and stores the currently held down heys.\r\n */\r\n\r\nimport produce from \"immer\";\r\nimport Constants from \"./KeyboardConstants\";\r\nimport KeyboardState from \"./KeyboardState\";\r\nimport { KeyboardTypes } from \"./KeyboardTypes\";\r\n\r\n/**\r\n * keyboardStateReducer\r\n * @param {DebuggingState} state. The current state.\r\n * @param {ActionPayload<any>} action. The desired action with optional paylood.\r\n * @returns {KeyboardState}. New state.\r\n */\r\nexport default function keyboardStateReducer(state: KeyboardState = initState(), action: KeyboardTypes): KeyboardState {\r\n\r\n    return produce(state, (draft) => {\r\n\r\n        let keyDown = false;\r\n        if (action.type === Constants.keydown) {\r\n            keyDown = true;\r\n        } else if (action.type === Constants.keyup) {\r\n            keyDown = false;\r\n        }\r\n\r\n        switch (action.payload) {\r\n            case undefined:\r\n                break;\r\n            case Constants.arrowUp:\r\n                draft.up = keyDown;\r\n                break;\r\n            case Constants.arrowDown:\r\n                draft.down = keyDown;\r\n                break;\r\n            case Constants.arrowLeft:\r\n                draft.left = keyDown;\r\n                break;\r\n            case Constants.arrowRight:\r\n                draft.right = keyDown;\r\n                break;\r\n            case Constants.backspace:\r\n                draft.selfDestruct = keyDown;\r\n                break;\r\n            case Constants.f1:\r\n                draft.fire = keyDown;\r\n                break;\r\n            case Constants.f2:\r\n                draft.phraser = keyDown;\r\n                break;\r\n            case Constants.space:\r\n                draft.space = keyDown;\r\n                break;\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Initialize KeyboardState\r\n * @returns {KeyboardState}. Initial keyboard state.\r\n */\r\nfunction initState(): KeyboardState {\r\n    return {\r\n        up: false,\r\n        down: false,\r\n        left: false,\r\n        right: false,\r\n        fire: false,\r\n        phraser: false,\r\n        selfDestruct: false,\r\n        space: false,\r\n    };\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport produce from \"immer\";\r\nimport getPlayerExplosion from \"../../Player/PlayerExplosion\";\r\nimport { getPlayerFrame } from \"../../Player/PlayerFrames\";\r\nimport getShipSpawnLocation from \"../../Providers/PlayerSpawnLocationProvider\";\r\nimport Mutators from \"../../Utility/FrameMutators\";\r\nimport Constants from \"./PlayerConstants\";\r\nimport PlayerState from \"./PlayerState\";\r\nimport { PlayerStateTypes } from \"./PlayerTypes\";\r\n\r\n/**\r\n * Module:          playerReducer\r\n * Responsibility:  Handles the player's state.\r\n */\r\n\r\n/**\r\n * playerReducer\r\n * @param {PlayerState} state. The current state.\r\n * @param {ActionPayload<any>} action. The desired action with optional paylood.\r\n * @returns {PlayerState}. New state.\r\n */\r\nexport default function playerReducer(state: PlayerState = initState(), action: PlayerStateTypes): PlayerState {\r\n    return produce(state, (draft) => {\r\n        switch (action.type) {\r\n            case Constants.setPlayerIsAlive:\r\n                draft.alive = action.playerIsAlive;\r\n                break;\r\n            case Constants.setPlayerMovementLimit:\r\n                draft.moveLimit = action.payload;\r\n                break;\r\n            case Constants.setPlayerLocationData:\r\n                draft.left = action.payload.left;\r\n                draft.top = action.payload.top;\r\n                draft.hitboxes = action.payload.hitboxes;\r\n                draft.nozzleLocation = action.payload.nozzleLocation;\r\n                break;\r\n            case Constants.setPlayerBulletState:\r\n                draft.bulletState = action.particleState;\r\n                break;\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Initialize the base player state.\r\n * @returns {PlayerState}\r\n */\r\nfunction initState(): PlayerState {\r\n    const playerExplosion = getPlayerExplosion();\r\n    Mutators.Frame.convertHexToCGA(playerExplosion.explosionCenterFrame);\r\n\r\n    playerExplosion.particleFrames.forEach((p) => Mutators.Frame.convertHexToCGA(p));\r\n\r\n    const spawnLocation = getShipSpawnLocation();\r\n\r\n    const playerFrame = getPlayerFrame();\r\n    Mutators.Frame.convertHexToCGA(playerFrame);\r\n\r\n    return {\r\n        alive: false,\r\n        moveLimit: \"none\",\r\n        left: spawnLocation.left,\r\n        top: spawnLocation.top,\r\n        hitboxes: undefined,\r\n        nozzleLocation: { left: 0, top: 0 },\r\n        coloredExplosion: playerExplosion,\r\n        coloredFrame: playerFrame,\r\n        bulletState: undefined,\r\n    };\r\n}","\r\n/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport Explosion from \"../Models/Explosion\";\r\n\r\n/**\r\n * Module:          PlayerExplosion\r\n * Responsibility:  Explosion effect only for the player\r\n */\r\n\r\nexport default function getPlayerExplosion(): Explosion {\r\n\r\n    const playerExplosion: Explosion = {\r\n        explosionCenterFrame: [\r\n            [\"0\", \"0\", \"2\", \"2\", \"0\", \"0\"],\r\n            [\"4\", \"E\", \"0\", \"0\", \"E\", \"4\"],\r\n        ],\r\n        particleFrames: [\r\n            [\r\n                [\"C\", \"C\"], // red block\r\n            ],\r\n            [\r\n                [\"E\", \"C\"], // yellow red block\r\n            ],\r\n            [\r\n                [\"C\", \"E\"], // red yellow block\r\n            ],\r\n            [\r\n                [\"F\", \"C\"], // white red block\r\n            ],\r\n            [\r\n                [\"C\", \"F\"], // red white block\r\n            ],\r\n        ],\r\n        particleFrameIndexes: [\r\n            0, 0, 0, 0, 0,\r\n            1, 1, 1, 1,\r\n            2, 2, 2, 2,\r\n            2, 3, 3, 3,\r\n            4, 4, 4, 4,\r\n            0, 0,\r\n            0, 0,\r\n        ],\r\n        angles: [\r\n            270, 270, 270, 270, 270, // five red block flying up.\r\n            210, 210, 210, 210, // four yellow red blocks.\r\n            330, 330, 330, 300, // four red yellow blocks.\r\n            195, 195, 195, 195, // four white red blocks.\r\n            345, 345, 345, 345, // four red yellow blocks.\r\n            180, 180, // two red blocks\r\n            0, 0 // two red blocks\r\n        ],\r\n        speeds: [\r\n            3, 4.5, 7, 8, 10, // Speeds for the first angles.\r\n            3, 4.5, 7, 8, // Speeds for the second row of angles.\r\n            3, 4.5, 7, 8, // Speeds for the third row of angles.\r\n            3, 4.5, 7, 8, // Speeds for the fourh row of angles.\r\n            3, 4.5, 7, 8, // Speeds for the fith fow of angles\r\n            4.5, 8, // Speeds for the fith fow of angles\r\n            4.5, 8, // Speeds for the fith fow of angles\r\n        ],\r\n        acceleration: 1,\r\n        explosionCenterDelay: 50000,\r\n        useSpeed: true,\r\n        speed: 0, // not used.\r\n    };\r\n\r\n    return playerExplosion;\r\n}","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          HexToCGAConverter.\r\n * Responsibility:  Convert hex color to a CGA color\r\n */\r\n\r\nimport CGAColors from \"../Constants/CGAColors\";\r\n\r\nexport default function hexToCGAConverter(hex: string): string {\r\n    switch (hex) {\r\n        case \"0\":\r\n            return CGAColors.black;\r\n        case \"1\":\r\n            return CGAColors.blue;\r\n        case \"2\":\r\n            return CGAColors.green;\r\n        case \"3\":\r\n            return CGAColors.cyan;\r\n        case \"4\":\r\n            return CGAColors.red;\r\n        case \"5\":\r\n            return CGAColors.magenta;\r\n        case \"6\":\r\n            return CGAColors.brown;\r\n        case \"7\":\r\n            return CGAColors.lightGray;\r\n        case \"8\":\r\n            return CGAColors.darkGray;\r\n        case \"9\":\r\n            return CGAColors.lightBlue;\r\n        case \"A\":\r\n            return CGAColors.lightGreen;\r\n        case \"B\":\r\n            return CGAColors.lightCyan;\r\n        case \"C\":\r\n            return CGAColors.lightRed;\r\n        case \"D\":\r\n            return CGAColors.lightMagenta;\r\n        case \"E\":\r\n            return CGAColors.yellow;\r\n        case \"F\":\r\n            return CGAColors.white;\r\n        default:\r\n            return \"\";\r\n    }\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport CGAColors from \"../Constants/CGAColors\";\r\nimport { getPlayerFrame } from \"../Player/PlayerFrames\";\r\nimport ctxProvider from \"../Providers/CtxProvider\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport renderFrame from \"../Render/RenderFrame\";\r\nimport getNumbers from \"../SharedFrames/Numbers\";\r\nimport { appState } from \"../State/Store\";\r\nimport { Frame } from \"../Types\";\r\nimport { getFrameByIndex, getFrameDimensions } from \"../Utility/Frame\";\r\nimport Mutators from \"../Utility/FrameMutators\";\r\nimport { padLeft } from \"../Utility/String\";\r\n\r\n/**\r\n * Module:          StatusBar\r\n * Responsibility:  Drawn at the top of the screen for score, phasers, lives and level.\r\n */\r\n\r\nconst ctx = ctxProvider();\r\n\r\nconst {\r\n    statusBarBottom,\r\n    pixelSize,\r\n    fullGameWidth\r\n} = dimensionProvider();\r\n\r\nconst numberFrames = getNumbers(CGAColors.yellow);\r\n\r\nconst lifeFrame = getPlayerFrame();\r\nMutators.Frame.setColor(lifeFrame, CGAColors.yellow);\r\n\r\n// Score constants\r\nconst scoreStartPosition = 4 * pixelSize;\r\nconst scoreSpacing = 2 * pixelSize;\r\nconst scoreBackgroundWidth = 40 * pixelSize;\r\n\r\n// Phaser constants.\r\nconst phaserStartPosition = scoreBackgroundWidth;\r\nconst phaserSpacing = pixelSize * 2;\r\nconst phaserBackgroundWidth = pixelSize * 54;\r\n\r\n// The phaser frame is only used in the status bar.\r\n// no point in moving it to anther file.\r\nconst phaserFrame: Frame = [\r\n    [\"E\", \"0\"],\r\n    [\"E\", \"0\"],\r\n    [\"E\", \"E\"],\r\n    [\"0\", \"E\"],\r\n    [\"0\", \"E\"],\r\n];\r\n\r\nMutators.Frame.convertHexToCGA(phaserFrame);\r\n\r\n// Lives constants.\r\nconst livesSpacing = 2 * pixelSize;\r\nconst livesStartPostion = scoreBackgroundWidth + phaserBackgroundWidth;\r\nconst liveFrameWidth = getFrameDimensions(lifeFrame, pixelSize).width;\r\nconst livesBackgroundWidth = pixelSize * 54;\r\n\r\n// Level number constants.\r\nconst levelStartPosition = scoreBackgroundWidth + phaserBackgroundWidth + livesBackgroundWidth;\r\nconst numberFrameWidth = getFrameDimensions(numberFrames[0], pixelSize).width;\r\nconst leftNumberLeft = fullGameWidth - (numberFrameWidth * 2.5);\r\nconst rightNumberLeft = leftNumberLeft + numberFrameWidth + pixelSize;\r\nconst levelBackgroundWidth = fullGameWidth - levelStartPosition;\r\n\r\n/**\r\n * Main funtion that draw the entire status bar.\r\n */\r\nexport function drawStatusBar(): void {\r\n    drawScore();\r\n    drawPhasers();\r\n    drawLives();\r\n    drawLevel();\r\n}\r\n\r\n/**\r\n * Draw the level indicator.\r\n */\r\nfunction drawScore(): void {\r\n    const { gameState } = appState();\r\n\r\n    ctx.fillStyle = CGAColors.red;\r\n    ctx.fillRect(0, 0, scoreBackgroundWidth, statusBarBottom);\r\n\r\n    const scoreString = padLeft(gameState.score.toString(), 6, \"0\");\r\n\r\n    let cnt = 0;\r\n    for (const n of scoreString) {\r\n        const frame = getFrameByIndex(numberFrames, parseInt(n, 10));\r\n\r\n        const actualSpacing = cnt === 0 ? 0 : scoreSpacing;\r\n        let left = cnt * (getFrameDimensions(frame, pixelSize).width + actualSpacing);\r\n        left = scoreStartPosition + left;\r\n        renderFrame(left, 0, frame);\r\n        cnt++;\r\n    }\r\n\r\n}\r\n\r\nfunction drawPhasers(): void {\r\n    const { gameState } = appState();\r\n\r\n    ctx.fillStyle = CGAColors.red;\r\n    ctx.fillRect(phaserStartPosition, 0, phaserBackgroundWidth, statusBarBottom);\r\n\r\n    for (let i = 0; i < gameState.phasers; i++) {\r\n        const actualSpacing = i === 0 ? 0 : phaserSpacing;\r\n        const left = phaserStartPosition + i * pixelSize + i * actualSpacing;\r\n\r\n        if (left <= phaserStartPosition + phaserBackgroundWidth) {\r\n            renderFrame(left, 0, phaserFrame);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Draws the player lives. These are drawn from right.\r\n */\r\nfunction drawLives(): void {\r\n    const { gameState } = appState();\r\n\r\n    ctx.fillStyle = CGAColors.red;\r\n    ctx.fillRect(livesStartPostion, 0, livesBackgroundWidth, statusBarBottom);\r\n\r\n    let left = livesStartPostion + livesBackgroundWidth - liveFrameWidth;\r\n\r\n    for (let lives = 1; lives <= gameState.lives; lives++) {\r\n        if (left >= livesStartPostion) {\r\n            renderFrame(left, pixelSize, lifeFrame);\r\n            left -= livesSpacing + liveFrameWidth;\r\n        }\r\n    }\r\n}\r\n\r\nfunction drawLevel(): void {\r\n    const { gameState } = appState();\r\n\r\n    ctx.fillStyle = CGAColors.red;\r\n    ctx.fillRect(levelStartPosition, 0, levelBackgroundWidth, statusBarBottom);\r\n\r\n    let paddedLevelString = \"0\";\r\n    if (gameState.level !== undefined) {\r\n        paddedLevelString = padLeft(gameState.level.toString(), 2, \"0\");\r\n    }\r\n\r\n    const rightNumber = parseInt(paddedLevelString[1], 10);\r\n    const leftNumber = parseInt(paddedLevelString[0], 10);\r\n\r\n    const rightFrame = getFrameByIndex(numberFrames, rightNumber);\r\n    const leftFrame = getFrameByIndex(numberFrames, leftNumber);\r\n\r\n    renderFrame(leftNumberLeft, 0, leftFrame);\r\n    renderFrame(rightNumberLeft, 0, rightFrame);\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          String\r\n * Responsibility:  String utility functions\r\n */\r\n\r\n/**\r\n * pads a string on its left size until it is a given length\r\n * @param {string} value. Value to pad left.\r\n * @param {number} length. Length of the desired output.\r\n * @param {string} paddWidth. Character to pad width.\r\n */\r\nexport function padLeft(value: string, length: number, padWidth: string): string {\r\n\r\n    if (value.length >= length) {\r\n        return value;\r\n    } else {\r\n\r\n        const padLength = length - value.length;\r\n        let padding = \"\";\r\n\r\n        for (let i = 0; i < padLength; i++) {\r\n            padding += padWidth;\r\n        }\r\n\r\n        return padding + value;\r\n    }\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          SubscribeToStore\r\n * Responsibility:  Creates a Redux Store subscription that monitors state changes\r\n *                  that trigger a state action.\r\n */\r\n\r\nimport ILevel from \"../Interfaces/ILevel\";\r\nimport { addLifeAndPhaser } from \"../State/Game/GameActions\";\r\nimport { appState, appStore, dispatch } from \"../State/Store\";\r\nimport { levelFactory } from \"./LevelFactory\";\r\n\r\n// Used to track changes in level\r\nlet levelNumber: number;\r\n\r\n// Current level object.\r\nlet currentLevel: ILevel;\r\n\r\n// Used to track changes in score to award ships and phasers.\r\nlet currentScore = 0;\r\n\r\n/**\r\n * Lazy load a subscription to the redux store.\r\n */\r\nexport default function subscribeToStoreChanges(): void {\r\n\r\n    // We'll monitor changes in the state on which we ant to act.\r\n    appStore().subscribe(() => {\r\n        const { gameState } = appState();\r\n\r\n        // Handle level change acting on a change in level.\r\n        if (gameState.level !== undefined && levelNumber !== gameState.level) {\r\n            levelNumber = gameState.level;\r\n\r\n            if (currentLevel) {\r\n                currentLevel.dispose();\r\n            }\r\n\r\n            // Get new level\r\n            currentLevel = levelFactory(levelNumber);\r\n\r\n            if (currentLevel !== undefined) {\r\n                currentLevel.start();\r\n            }\r\n        }\r\n\r\n        if (gameState.score - currentScore >= 7500) {\r\n            // Each 7500 points the player is given an extra life and phaser. This\r\n            // can be done in a single dispatch.\r\n            currentScore = gameState.score;\r\n            dispatch(addLifeAndPhaser());\r\n        }\r\n    });\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          LevelFactory\r\n * Responsibility:  Provide Level objects\r\n */\r\n\r\nimport ILevel from \"../Interfaces/ILevel\";\r\nimport EnemyLevelRunner from \"../Runners/EnemyLevelRunner\";\r\nimport { appState } from \"../State/Store\";\r\nimport Level01 from \"./Level01\";\r\nimport Level02 from \"./Level02\";\r\nimport { Level03 } from \"./Level03\";\r\nimport WarpLevel from \"./WarpLevel\";\r\n\r\n/**\r\n * LevelFactory. Provides level objects\r\n * @param {number} level. The desired level.\r\n * @returns {BaseEnemyLevel}. A level.\r\n */\r\nexport function levelFactory(level: number): ILevel {\r\n    switch (level) {\r\n        case 0:\r\n            // Test level\r\n            return new WarpLevel();\r\n            // return new Level00(enemyLevelRunner, never);\r\n        case 1:\r\n            return new Level01(EnemyLevelRunner.run, clearedEnemies);\r\n        case 2:\r\n            return new Level02(EnemyLevelRunner.run, clearedEnemies);\r\n        case 3:\r\n            return new Level03(EnemyLevelRunner.run, clearedEnemies);\r\n        case 4:\r\n            return new WarpLevel();\r\n        default:\r\n            return new Level01(EnemyLevelRunner.run, never);\r\n    }\r\n}\r\n\r\n/**\r\n * clearedEnemies.\r\n * @returns {boolean}. Returns true if all enemies (and particles) have been removed from the ApplicationState.\r\n */\r\nfunction clearedEnemies(): boolean {\r\n    const { enemyLevelState: { enemies, shrapnells } } = appState();\r\n    if (enemies.length === 0 && shrapnells.length === 0) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n/**\r\n * Used for debugging in level 00.\r\n * @returns {boolean}. Always false.\r\n */\r\nfunction never(): boolean {\r\n    return false;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { calculateAngle as calculateAngle } from \"../Utility/Geometry\";\r\nimport { calculateDistance, getLocation } from \"../Utility/Location\";\r\n\r\n/**\r\n * Module:          GetPhaserFrames\r\n * Responsibility:  Calculate the game locations to draw a phaser beam.\r\n */\r\n\r\nexport default function getPhaserLocations(sourceLeft: number, sourceTop: number, targetLeft: number, targetTop: number, pixelSize: number): Array<{left: number, top: number}> {\r\n\r\n    // offset left by one game pixel to ensure the phaser appears at the nozzle of the ship.\r\n    const angle = calculateAngle(sourceLeft, sourceTop, targetLeft, targetTop);\r\n    let distance = calculateDistance(sourceLeft, sourceTop, targetLeft, targetTop);\r\n\r\n    let left = sourceLeft;\r\n    let top = sourceTop;\r\n\r\n    const returnValue: Array<{left: number, top: number}> = [];\r\n\r\n    while (distance >= 0) {\r\n        returnValue.push(getLocation(left, top, angle, pixelSize));\r\n        distance -= pixelSize;\r\n        const nextLocation = getLocation(left, top, angle, pixelSize);\r\n        left = nextLocation.left;\r\n        top = nextLocation.top;\r\n    }\r\n\r\n    return returnValue;\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { GameRectangle } from \"../Models/GameRectangle\";\r\nimport { PlayerHitboxes } from \"../State/Player/PlayerState\";\r\nimport { overlaps } from \"../Utility/Geometry\";\r\n\r\n/**\r\n * Module:          PlayerHelper\r\n * Responsibility:  Helper functions to aid with player related logic.\r\n */\r\n\r\n/**\r\n * Determines if one of the player's hitboxes overlaps with the provided hitbox.\r\n * @export\r\n * @param {PlayerHitboxes} playerHitboxes. The player's hitboxes.\r\n * @param {GameRectangle} hitbox. Another hitbox.\r\n * @returns {boolean}. True if there's overlap. False other or if any of the hitboxes is undefined.\r\n */\r\nexport function playerIsHit(playerHitboxes: PlayerHitboxes | undefined, hitbox: GameRectangle | undefined): boolean {\r\n    if (playerHitboxes === undefined) {\r\n        return false;\r\n    }\r\n\r\n    if (hitbox === undefined) {\r\n        return false;\r\n    }\r\n\r\n    const hitMiddle = overlaps(playerHitboxes.middle, hitbox);\r\n    const hitBottom = overlaps(playerHitboxes.bottom, hitbox);\r\n\r\n    return hitMiddle || hitBottom;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseEnemyLevel from \"../Base/BaseEnemyLevel\";\r\nimport { birdMovementSpeed as birdMovementSpeed } from \"../Constants/EnemyMovementSpeeds\";\r\nimport { birdRandomAngles as birdRandomAngles } from \"../Constants/MovementAngles\";\r\nimport birdSpawnLocations from \"../Enemies/Bird/BirdSpawnLoctions\";\r\nimport { enemyFactory } from \"../Enemies/EnemyFactory\";\r\nimport { getRandomArrayElement } from \"../Utility/Array\";\r\n\r\n/**\r\n * Module:          Level 01\r\n * Responsibility:  Define the first level.\r\n */\r\n\r\n/**\r\n * Sets up level 01.\r\n */\r\nexport default class Level01 extends BaseEnemyLevel {\r\n\r\n    /**\r\n     * Start Level 01.\r\n     */\r\n    public start(): void {\r\n        super.start();\r\n\r\n        const enemies = birdSpawnLocations.map((location) => {\r\n\r\n            // This may deviate from te original game but I do not care. Each birds will\r\n            // begin to move in a random direction determined by the function below\r\n            const randomMovementAngle = getRandomArrayElement(birdRandomAngles);\r\n            return enemyFactory(\"bird\", location.left, location.top, birdMovementSpeed, randomMovementAngle);\r\n        });\r\n\r\n        this.begin(enemies);\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport CGAColors from \"../Constants/CGAColors\";\r\nimport ctxProvider from \"../Providers/CtxProvider\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport renderFrame from \"../Render/RenderFrame\";\r\nimport getCharacters from \"../SharedFrames/Characters\";\r\nimport getNumbers from \"../SharedFrames/Numbers\";\r\nimport { Frame } from \"../Types\";\r\nimport { getFrameByIndex, getFrameDimensions } from \"../Utility/Frame\";\r\nimport getCharacter from \"../Utility/getCharacter\";\r\n\r\n/**\r\n * Module:          LevelBanner\r\n * Responsibility:  Shows the ROUND XX message before the level begins.\r\n */\r\n\r\nconst {\r\n    pixelSize,\r\n    gameField\r\n} = dimensionProvider();\r\n\r\nconst ctx = ctxProvider();\r\n\r\nconst greenCharacters = getCharacters(CGAColors.lightGreen);\r\nconst greenNumbers = getNumbers(CGAColors.lightGreen);\r\n\r\nconst roundCharacters = [\r\n    getCharacter(greenCharacters, \"R\"),\r\n    getCharacter(greenCharacters, \"O\"),\r\n    getCharacter(greenCharacters, \"U\"),\r\n    getCharacter(greenCharacters, \"N\"),\r\n    getCharacter(greenCharacters, \"D\"),\r\n];\r\n\r\nconst {\r\n    width\r\n} = getFrameDimensions(roundCharacters[0], pixelSize);\r\n\r\nconst top = gameField.bottom * 0.33;\r\nconst left = pixelSize * 26;\r\nconst barwidth = pixelSize * 30;\r\nconst roundWidth = 76 * pixelSize;\r\nconst charSpacing = pixelSize * 2;\r\n\r\nexport function drawLevelBanner(level: number): void {\r\n\r\n    let barcolor: string;\r\n    let bartop = top;\r\n    for (let i = 0; i < 3; i++) {\r\n        if (i % 2 === 0) {\r\n            barcolor = CGAColors.red;\r\n        } else {\r\n            barcolor = CGAColors.brown;\r\n        }\r\n\r\n        ctx.fillStyle = barcolor;\r\n        ctx.fillRect(left, bartop, barwidth, pixelSize);\r\n        ctx.fillRect(left + roundWidth, bartop, barwidth, pixelSize);\r\n\r\n        bartop += pixelSize * 2;\r\n    }\r\n\r\n    let levelNumberStartPos: number = 0;\r\n    for (let i = 0; i < 5; i++) {\r\n        const spacing = i === 0 ? 0 : charSpacing * i;\r\n        const charLeft = left + barwidth + charSpacing * 2 + spacing + width * i;\r\n\r\n        levelNumberStartPos = charLeft;\r\n\r\n        renderFrame(charLeft, top, roundCharacters[i]);\r\n    }\r\n\r\n    levelNumberStartPos += width + charSpacing;\r\n\r\n    let leftNumber: string | undefined;\r\n    let rightNumber: string | undefined;\r\n\r\n    let leftNumberFrame: Frame | undefined;\r\n    let rightNumberFrame: Frame;\r\n\r\n    const stringLevel = level.toString();\r\n\r\n    const rightNumberPosition = levelNumberStartPos + width + charSpacing;\r\n\r\n    if (level >= 10) {\r\n        leftNumber = stringLevel[0];\r\n        rightNumber = stringLevel[1];\r\n\r\n        leftNumberFrame = getFrameByIndex(greenNumbers, parseInt(leftNumber, 10));\r\n        rightNumberFrame = getFrameByIndex(greenNumbers, parseInt(rightNumber, 10));\r\n\r\n    } else {\r\n        rightNumber = stringLevel;\r\n        rightNumberFrame = getFrameByIndex(greenNumbers, parseInt(rightNumber, 10));\r\n    }\r\n\r\n    // Render the left number if it's available.\r\n    if (leftNumber && leftNumberFrame) {\r\n        renderFrame(levelNumberStartPos, top, leftNumberFrame);\r\n    }\r\n\r\n    // Always render the right number.\r\n    renderFrame(rightNumberPosition, top, rightNumberFrame);\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { Frames } from \"../Types\";\r\nimport Mutators from \"../Utility/FrameMutators\";\r\n\r\n/**\r\n * Module:          Characters\r\n * Responsibility:  Define character frames. A to Z with some other characters\r\n *                  All these are all frames which can be rendered directly.\r\n *                  on screen using the renderFrame function.\r\n *                  Their colors are \"V\". Meaning \"Variant\" so they\r\n *                  can be set with a single function call.\r\n */\r\n\r\nexport default function getCharacters(color: string): Frames {\r\n    const Characters: Frames = [\r\n        [\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n        ],\r\n        [\r\n            [\"0\", \"V\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"0\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"V\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\"],\r\n            [\"0\", \"V\", \"0\"],\r\n            [\"0\", \"V\", \"0\"],\r\n            [\"0\", \"V\", \"0\"],\r\n            [\"V\", \"V\", \"V\"],\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"0\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"V\", \"0\"],\r\n            [\"V\", \"V\", \"0\", \"0\"],\r\n            [\"V\", \"0\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"0\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"V\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n        ],\r\n        [\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n        ],\r\n        [\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"V\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"V\"],\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n        ],\r\n        [\r\n            [\"0\", \"V\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"0\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\", \"V\", \"V\"],\r\n            [\"0\", \"0\", \"V\", \"0\", \"0\"],\r\n            [\"0\", \"0\", \"V\", \"0\", \"0\"],\r\n            [\"0\", \"0\", \"V\", \"0\", \"0\"],\r\n            [\"0\", \"0\", \"V\", \"0\", \"0\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"0\", \"V\", \"0\"],\r\n            [\"0\", \"V\", \"0\", \"V\", \"0\"],\r\n            [\"0\", \"0\", \"V\", \"0\", \"0\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"V\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"V\", \"0\"],\r\n            [\"0\", \"V\", \"0\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"0\", \"V\", \"0\"],\r\n            [\"0\", \"0\", \"V\", \"0\", \"0\"],\r\n            [\"0\", \"V\", \"0\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"0\", \"V\", \"0\"],\r\n            [\"0\", \"0\", \"V\", \"0\", \"0\"],\r\n            [\"0\", \"0\", \"V\", \"0\", \"0\"],\r\n            [\"0\", \"0\", \"V\", \"0\", \"0\"],\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"0\", \"0\", \"V\", \"0\"],\r\n            [\"0\", \"V\", \"0\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n        ],\r\n        [\r\n            [\"0\"],\r\n            [\"0\"],\r\n            [\"0\"],\r\n            [\"0\"],\r\n            [\"0\"],\r\n        ],\r\n    ];\r\n\r\n    Mutators.Frames.setColor(Characters, color);\r\n    return Characters;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { Frame, Frames } from \"../Types\";\r\n\r\n/**\r\n * Module:          getCharacter\r\n * Responsibility:  Return a character\r\n */\r\n\r\nexport default function getCharacter(frames: Frames, character: string): Frame {\r\n    const upperCaseCharacter = character.toUpperCase();\r\n\r\n    if (upperCaseCharacter === \"SPACE\") {\r\n        return frames[character.length - 1];\r\n    } else {\r\n        const cc = upperCaseCharacter.charCodeAt(0) - 65;\r\n        return frames[cc];\r\n    }\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { GameLocation } from \"../../Models/GameLocation\";\r\nimport dimensionProvider from \"../../Providers/DimensionProvider\";\r\n\r\n/**\r\n * Module:          BirdSpawnLocations\r\n * Responsibility:  Define the spawn locations for the BirdEnemy.\r\n */\r\n\r\nconst firstAndThirdRowLeftStart = 20;\r\nconst secondRowLeftStart = 30;\r\nconst spacing = 20;\r\nconst birdSpawnLocations: GameLocation[] = [];\r\n\r\nconst {\r\n    pixelSize,\r\n    gameField,\r\n} = dimensionProvider();\r\n\r\n// Top row birds.\r\nfor (let i = 0; i < 7; i++) {\r\n    birdSpawnLocations.push({\r\n        left: (firstAndThirdRowLeftStart * pixelSize) + spacing * i * pixelSize,\r\n        top: gameField.top + pixelSize * 5,\r\n    });\r\n}\r\n\r\n// Second row birds.\r\nfor (let i = 0; i < 6; i++) {\r\n    birdSpawnLocations.push({\r\n        left: (secondRowLeftStart * pixelSize) + spacing * i * pixelSize,\r\n        top: gameField.top + pixelSize * 15,\r\n    });\r\n}\r\n\r\n// Third row birds.\r\nfor (let i = 0; i < 7; i++) {\r\n    birdSpawnLocations.push({\r\n        left: (firstAndThirdRowLeftStart * pixelSize) + spacing * i * pixelSize,\r\n        top: gameField.top + pixelSize * 25,\r\n    });\r\n}\r\n\r\nexport default birdSpawnLocations;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          EnemyFrameTime\r\n * Responsibility:  Constants how many milliseconds should be between frame changes.\r\n */\r\n\r\nexport const birdFrameTime = 100;\r\n\r\nexport const robotFrameTime = 200;\r\n\r\nexport const orbFrameTime = 200;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseLocationProvider from \"../Base/BaseLocationProvider\";\r\nimport ILocationProvider from \"../Interfaces/ILocationProvider\";\r\nimport { GameLocation } from \"../Models/GameLocation\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport { getLocation } from \"../Utility/Location\";\r\n\r\n/**\r\n * Module:          MoveDownAppearUp\r\n * Responsibility:  A location provider where the enemy moves down to a certain point and then reappears at the top of the screen.\r\n *                  Enemies will bounce from up to down a few times just like the original game.\r\n */\r\n\r\nconst {\r\n    pixelSize,\r\n    gameField\r\n} = dimensionProvider();\r\n\r\nexport default class MoveDownAppearUpLocationProvider extends BaseLocationProvider implements ILocationProvider {\r\n    /**\r\n     * The limit to how far the enemy will travel before its position is set to the top position.\r\n     */\r\n    private bottomLimit: number;\r\n\r\n    /**\r\n     * Constructs the immobile location provider.\r\n     */\r\n    constructor(gamePixelsFromBottom: number, left: number, top: number, speed: number, angle: number, width: number, height: number) {\r\n        super(left, top, speed, angle, width, height);\r\n\r\n        this.bottomLimit = gamePixelsFromBottom * pixelSize;\r\n    }\r\n\r\n    /**\r\n     * Returns the given location.\r\n     */\r\n    public getCurrentLocation(): GameLocation {\r\n\r\n        if (this.top + this.height > this.bottomLimit) {\r\n            this.top = gameField.top + this.height;\r\n        }\r\n\r\n        return getLocation(this.left, this.top, this.angle, this.speed);\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseLocationProvider from \"../Base/BaseLocationProvider\";\r\nimport ILocationProvider from \"../Interfaces/ILocationProvider\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport { getLocation } from \"../Utility/Location\";\r\n\r\n/**\r\n * Module:          SideToSideUpAndDown\r\n * Responsibility:  Location provider for enemies that move from left to right and up then down.\r\n */\r\n\r\nconst {\r\n    gameField,\r\n    pixelSize,\r\n    fullGameHeight,\r\n    fullGameWidth,\r\n} = dimensionProvider();\r\n\r\nexport default class SideToSideUpAndDownLocationProvider extends BaseLocationProvider implements ILocationProvider {\r\n\r\n    public updateState(tick: number): void {\r\n        super.updateState(tick);\r\n        const leftLimit = pixelSize * 2;\r\n        const rightLimit = fullGameWidth - this.width - pixelSize * 2;\r\n\r\n        if (this.left <= leftLimit || this.left >= rightLimit) {\r\n            this.angle = 180 - this.angle;\r\n        }\r\n\r\n        if (this.top <= gameField.top || this.top >= fullGameHeight - this.height) {\r\n            this.angle *= -1;\r\n        }\r\n\r\n        const { left, top } = getLocation(this.left, this.top, this.angle, this.speed);\r\n        this.left = left;\r\n        this.top = top;\r\n    }\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseLocationProvider from \"../Base/BaseLocationProvider\";\r\nimport ILocationProvider from \"../Interfaces/ILocationProvider\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport { getLocation } from \"../Utility/Location\";\r\n\r\n/**\r\n * Module:          Left to right, then left.\r\n * Responsibility:  Location provider for enemies that move from left to right and up then down.\r\n */\r\n\r\nconst {\r\n    gameField\r\n} = dimensionProvider();\r\n\r\nexport default class VanishRightAppearLeftLocationProvider extends BaseLocationProvider implements ILocationProvider {\r\n\r\n    public updateState(tick: number): void {\r\n        super.updateState(tick);\r\n\r\n        if (this.left + this.width > gameField.right) {\r\n            this.left = 0;\r\n        }\r\n\r\n        if (this.top > gameField.top * 0.5) {\r\n            this.top = gameField.top + this.height;\r\n        }\r\n\r\n        const { left, top } = getLocation(this.left, this.top, this.angle, this.speed);\r\n        this.left = left;\r\n        this.top = top;\r\n    }\r\n}\r\n","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport IFrameProvider from \"../Base/BaseFrameProvider\";\r\nimport { Frame } from \"../Types\";\r\n\r\n/**\r\n * Module:          FrameProvider\r\n * Responsibility:  Provide frames for animations.\r\n */\r\n\r\nexport default class BackAndForthFrameProvider extends IFrameProvider {\r\n\r\n    /**\r\n     * Returns the current frame and sets the next one. Goes back and forth between frames.\r\n     * @returns {Frame}. A frame.\r\n     */\r\n    public getNextFrame(): Frame {\r\n        this.frameIndex += this.add;\r\n\r\n        if (this.frameIndex > this.maxIndex) {\r\n            this.frameIndex = this.maxIndex;\r\n        }\r\n\r\n        if ((this.frameIndex === this.maxIndex) || this.frameIndex === 0) {\r\n            this.add *= -1;\r\n        }\r\n\r\n        return  this.getCurrentFrame();\r\n    }\r\n}","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseFrameProvider from \"../Base/BaseFrameProvider\";\r\nimport { Frame } from \"../Types\";\r\n\r\n/**\r\n * Module:          FrameProvider\r\n * Responsibility:  Provide frames for animations.\r\n */\r\n\r\nexport default class CircleFrameProvider extends BaseFrameProvider {\r\n\r\n    /**\r\n     * Returns the next frame using clockwise rotation.\r\n     */\r\n    public getNextFrame(): Frame {\r\n        this.frameIndex += 1;\r\n\r\n        if (this.frameIndex > this.maxIndex) {\r\n            this.frameIndex = 0;\r\n        }\r\n\r\n        return this.getCurrentFrame();\r\n    }\r\n}","\r\n/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport Explosion from \"../Models/Explosion\";\r\nimport Mutators from \"../Utility/FrameMutators\";\r\n\r\n/**\r\n * Module:          Explosion01.\r\n */\r\n\r\nexport default function getExplosion01(centerColor?: string, shrapnellColor?: string): Explosion {\r\n    const explosion01: Explosion = {\r\n        explosionCenterFrame: [\r\n            [\"V\", \"0\", \"V\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"0\", \"V\", \"0\", \"V\"],\r\n        ],\r\n        particleFrames: [\r\n            [\r\n                [\"V\"],\r\n            ],\r\n            [\r\n                [\"V\", \"V\"]\r\n            ],\r\n        ],\r\n        angles: [160, 180, 200, 340, 0, 20],\r\n        particleFrameIndexes: [0, 1, 0, 0, 1, 0],\r\n        speed: 17,\r\n        acceleration: 1.05,\r\n        explosionCenterDelay: 30,\r\n        speeds: [], // not used, all particles travel at the same speed\r\n        useSpeed: true,\r\n    };\r\n\r\n    if (centerColor) {\r\n        Mutators.Frame.setColor(explosion01.explosionCenterFrame, centerColor);\r\n    }\r\n\r\n    if (shrapnellColor) {\r\n        Mutators.Frames.setColor(explosion01.particleFrames, shrapnellColor);\r\n    }\r\n\r\n    return explosion01;\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport Explosion from \"../Models/Explosion\";\r\n\r\n/**\r\n * Module:          Explosion02\r\n */\r\n\r\nexport function getExplosion02(): Explosion {\r\n    const Explosion02: Explosion = {\r\n        explosionCenterFrame: [\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"0\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"0\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n        ],\r\n        particleFrames: [\r\n            [\r\n                [\"V\", \"V\"]\r\n            ],\r\n        ],\r\n        angles: [160, 180, 200, 340, 0, 20],\r\n        particleFrameIndexes: [0, 0, 0, 0, 0, 0],\r\n        speed: 12,\r\n        acceleration: 1.05,\r\n        explosionCenterDelay: 20,\r\n        speeds: [], // not used, all particles travel at the same speed\r\n        useSpeed: true,\r\n    };\r\n\r\n    return Explosion02;\r\n}","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseEnemy from \"../../Base/BaseEnemy\";\r\nimport BaseFrameProvider from \"../../Base/BaseFrameProvider\";\r\nimport CGAColors from \"../../Constants/CGAColors\";\r\nimport TickHandler from \"../../Handlers/TickHandler\";\r\nimport ILocationProvider from \"../../Interfaces/ILocationProvider\";\r\nimport { ExplosionProviderFunction, Frame, OffsetFramesProviderFunction } from \"../../Types\";\r\nimport { getRandomArrayElement } from \"../../Utility/Array\";\r\nimport Mutators from \"../../Utility/FrameMutators\";\r\n\r\n/**\r\n * Module:          Bird enemy\r\n * Responsibility:  Defines the behaviour of the bird enemy first seen in level 1.\r\n */\r\n\r\nconst colors = [CGAColors.lightMagenta, CGAColors.yellow, CGAColors.lightCyan, CGAColors.lightRed];\r\n\r\nexport default class BirdEnemy extends BaseEnemy {\r\n\r\n    /**\r\n     * Hanels color changes.\r\n     */\r\n    private colorTickHandler: TickHandler;\r\n\r\n    /**\r\n     * Creates the object.\r\n     */\r\n    constructor(\r\n        frameChangeTime: number,\r\n        locationProvider: ILocationProvider,\r\n        frameProvider: BaseFrameProvider,\r\n        getExplosion: ExplosionProviderFunction,\r\n        getOffsetFrames: OffsetFramesProviderFunction) {\r\n        super(\r\n            frameChangeTime,\r\n            getOffsetFrames,\r\n            getExplosion,\r\n            locationProvider,\r\n            frameProvider);\r\n\r\n        this.colorTickHandler = new TickHandler(40, () => this.onColorChange());\r\n\r\n        Mutators.Frame.setColor(this.explosion.explosionCenterFrame, CGAColors.white);\r\n        Mutators.Frame.setColor(this.explosion.particleFrames[0], CGAColors.white);\r\n        Mutators.Frame.setColor(this.explosion.particleFrames[1], CGAColors.white);\r\n\r\n        this.onFrameChange();\r\n    }\r\n\r\n    /**\r\n     * Updates the objects state.\r\n     * @param {tick: number} tick. Current tick.\r\n     */\r\n    public updateState(tick: number): void {\r\n        super.updateState(tick);\r\n\r\n        this.colorTickHandler.tick(tick);\r\n    }\r\n\r\n    /**\r\n     * Returns the points for the bird.\r\n     * @returns {number}. Points rewarded when the BirdEnemy is destroyed.\r\n     */\r\n    public getPoints(): number {\r\n        return 200;\r\n    }\r\n\r\n    /**\r\n     * Called by a TickHandler when the bird should change color.\r\n     */\r\n    private onColorChange(): void {\r\n        const currentFrame = this.frameProvider.getCurrentFrame();\r\n        this.setCurrentFrameColor(currentFrame);\r\n    }\r\n\r\n    /**\r\n     * Sets the current's frame color\r\n     * @param {Frame} frame. Frame to set the color on.\r\n     */\r\n    private setCurrentFrameColor(frame: Frame) {\r\n        Mutators.Frame.setColor(frame, getRandomArrayElement(colors));\r\n        this.currentFrame = frame;\r\n    }\r\n\r\n    /**\r\n     * Changes the frame of the OrbEnemy. Also ensures the new frame is given colors.\r\n     */\r\n    protected onFrameChange(): void {\r\n        const nextFrame = this.frameProvider.getNextFrame();\r\n        this.setCurrentFrameColor(nextFrame);\r\n    }\r\n}","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { OffsetFrames } from \"../../Models/OffsetFrames\";\r\n\r\n/**\r\n * Module:          Bird enemy\r\n * Responsibility:  Define animation frames for the bird enemy.\r\n */\r\n\r\nexport default function getBirdFrames(): OffsetFrames {\r\n    const birdFrames: OffsetFrames = {\r\n        frames: [\r\n            [\r\n                [\"0\", \"V\", \"0\", \"V\", \"0\"],\r\n                [\"V\", \"0\", \"V\", \"0\", \"V\"],\r\n                [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n            ],\r\n            [\r\n                [\"0\", \"V\", \"V\", \"0\", \"V\", \"V\", \"0\"],\r\n                [\"V\", \"0\", \"0\", \"V\", \"0\", \"0\", \"V\"],\r\n                [\"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\"],\r\n            ],\r\n            [\r\n                [\"V\", \"V\", \"V\", \"0\", \"V\", \"V\", \"V\"],\r\n                [\"0\", \"0\", \"0\", \"V\", \"0\", \"0\", \"0\"],\r\n            ],\r\n            [\r\n                [\"V\", \"0\", \"0\", \"0\", \"0\", \"0\", \"V\"],\r\n                [\"0\", \"V\", \"V\", \"0\", \"V\", \"V\", \"0\"],\r\n                [\"0\", \"0\", \"0\", \"V\", \"0\", \"0\", \"0\"],\r\n            ],\r\n        ],\r\n        offSets: [\r\n            {\r\n                top: 1,\r\n                left: 1,\r\n            },\r\n            {\r\n                top: 1,\r\n                left: 0,\r\n            },\r\n            {\r\n                top: 1,\r\n                left: 0,\r\n            },\r\n            {\r\n                top: 0,\r\n                left: 0,\r\n            }\r\n        ]\r\n    };\r\n\r\n    return birdFrames;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseEnemy from \"../../Base/BaseEnemy\";\r\nimport BaseFrameProvider from \"../../Base/BaseFrameProvider\";\r\nimport CGAColors from \"../../Constants/CGAColors\";\r\nimport TickHandler from \"../../Handlers/TickHandler\";\r\nimport ILocationProvider from \"../../Interfaces/ILocationProvider\";\r\nimport { ExplosionProviderFunction, Frame, OffsetFramesProviderFunction } from \"../../Types\";\r\nimport Mutators from \"../../Utility/FrameMutators\";\r\n\r\n/**\r\n * Module:          OrbEnemy\r\n * Responsibility:  Define behaviour of the orb enemy.\r\n */\r\nconst colors: string[][] = [\r\n    [CGAColors.lightGreen, CGAColors.lightBlue],\r\n    [CGAColors.brown, CGAColors.lightGreen],\r\n    [CGAColors.lightBlue, CGAColors.white],\r\n    [CGAColors.white, CGAColors.brown],\r\n];\r\n\r\nexport default class OrbEnemy extends BaseEnemy {\r\n    /**\r\n     * Handles the color change ticks.\r\n     */\r\n    private colorTickHandler: TickHandler;\r\n\r\n    /**\r\n     * Tracks the current color index.\r\n     */\r\n    private currentColorIndex = 0;\r\n\r\n    /**\r\n     * Construct the enemy.\r\n     */\r\n    constructor(\r\n        frameChangeTime: number,\r\n        locationProvider: ILocationProvider,\r\n        frameProvider: BaseFrameProvider,\r\n        getExplosion: ExplosionProviderFunction,\r\n        getFrames: OffsetFramesProviderFunction) {\r\n        super(frameChangeTime, getFrames, getExplosion, locationProvider, frameProvider);\r\n\r\n        // We only have one frame in this enemy but its color DOES change. Set the currentFrame to the only available one\r\n        // and sets its color to the first color set so we get a a good render when the enemy first appears.\r\n        this.updateCurrentFrameAndColor(this.frameProvider.getCurrentFrame());\r\n\r\n        Mutators.Frame.setColor(this.explosion.explosionCenterFrame, CGAColors.magenta);\r\n        Mutators.Frames.setColor(this.explosion.particleFrames, CGAColors.magenta);\r\n\r\n        this.colorTickHandler = new TickHandler(100, () => this.onColorChange());\r\n    }\r\n\r\n    /**\r\n     * Called by a TickHandler when the bird should change color.\r\n     */\r\n    private onColorChange(): void {\r\n        this.currentColorIndex++;\r\n        if (this.currentColorIndex >= colors.length) {\r\n            this.currentColorIndex = 0;\r\n        }\r\n\r\n        this.updateCurrentFrameAndColor(this.frameProvider.getCurrentFrame());\r\n    }\r\n\r\n    /**\r\n     * Sets the current frame and its color.\r\n     * @param {Frame} frame. A frame.\r\n     */\r\n    private updateCurrentFrameAndColor(frame: Frame): void {\r\n        const currentColor = colors[this.currentColorIndex];\r\n        if (currentColor === undefined) {\r\n            throw new Error(\"Color cannot be undefined.\");\r\n        }\r\n\r\n        Mutators.Frame.setColor(frame, ...currentColor);\r\n        this.currentFrame = frame;\r\n    }\r\n\r\n    /**\r\n     * Changes the frame of the OrbEnemy. Also ensures the new frame is given colors.\r\n     */\r\n    protected onFrameChange(): void {\r\n        const frame = this.frameProvider.getNextFrame();\r\n        this.updateCurrentFrameAndColor(frame);\r\n    }\r\n\r\n    /**\r\n     * Updates the objects state.\r\n     * @param {tick: number} tick. Current tick.\r\n     */\r\n    public updateState(tick: number): void {\r\n        super.updateState(tick);\r\n\r\n        this.colorTickHandler.tick(tick);\r\n    }\r\n\r\n    /**\r\n     * Returns the points of this enemy.\r\n     * @returns {number}. The points.\r\n     */\r\n    public getPoints(): number {\r\n        return 200;\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseEnemy from \"../../Base/BaseEnemy\";\r\nimport BaseFrameProvider from \"../../Base/BaseFrameProvider\";\r\nimport ILocationProvider from \"../../Interfaces/ILocationProvider\";\r\nimport { ExplosionProviderFunction, OffsetFramesProviderFunction } from \"../../Types\";\r\nimport Mutators from \"../../Utility/FrameMutators\";\r\n\r\n/**\r\n * Module:          RobotEnemey\r\n * Responsibility:  Handles the Robot enemeny first seen in level 2.\r\n */\r\n\r\nexport default class RobotEnemy extends BaseEnemy {\r\n\r\n    private color: string;\r\n\r\n    constructor(\r\n        color: string,\r\n        frameChangeTime: number,\r\n        locationProvider: ILocationProvider,\r\n        frameProvider: BaseFrameProvider,\r\n        getExplosion: ExplosionProviderFunction,\r\n        getFrames: OffsetFramesProviderFunction) {\r\n        super(\r\n            frameChangeTime,\r\n            getFrames,\r\n            getExplosion,\r\n            locationProvider,\r\n            frameProvider);\r\n\r\n        Mutators.Frame.setColor(this.explosion.explosionCenterFrame, color);\r\n        Mutators.Frame.setColor(this.explosion.particleFrames[0], color);\r\n\r\n        this.color = color;\r\n\r\n        this.onFrameChange();\r\n    }\r\n\r\n    /**\r\n     * Called when a frame change is required. The robot frames are all colored at initialisation so we can keep this simple.\r\n     */\r\n    protected onFrameChange(): void {\r\n        const nextFrame = this.frameProvider.getNextFrame();\r\n        Mutators.Frame.setColor(nextFrame, this.color);\r\n        this.currentFrame = nextFrame;\r\n    }\r\n\r\n    /**\r\n     * Returns the points of the robot enemy.\r\n     * @returns {number}.\r\n     */\r\n    public getPoints(): number {\r\n        return 100;\r\n    }\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseEnemyLevel from \"../Base/BaseEnemyLevel\";\r\nimport BulletRunner from \"../BulletProviders/BulletRunner\";\r\nimport { robotBulletSpeed } from \"../Constants/BulletSpeeds\";\r\nimport CGAColors from \"../Constants/CGAColors\";\r\nimport { robotMovementSpeed } from \"../Constants/EnemyMovementSpeeds\";\r\nimport { robotFireFrequence } from \"../Constants/FireFrequences\";\r\nimport { robotAngle as robotAngle } from \"../Constants/MovementAngles\";\r\nimport { enemyFactory } from \"../Enemies/EnemyFactory\";\r\nimport robotSpawnLocationsAndColor from \"../Enemies/Robot/RobotSpawnLocationsAndColor\";\r\nimport robotsToFire from \"../Enemies/Robot/RobotsToFire\";\r\nimport downFireAngleProvider from \"../FireAngleProviders/DownAngleProvider\";\r\nimport robotLevel02FireCheck from \"../FireChecks/RobotFireCheck\";\r\nimport getTwoPixelBullet from \"../SharedFrames/twoPXBullet\";\r\n\r\n/**\r\n * Module:          Level 02\r\n * Responsibility:  Define the second level.\r\n */\r\n\r\n/**\r\n * Sets up level 02.\r\n */\r\nexport default class Level02 extends BaseEnemyLevel {\r\n\r\n    /**\r\n     * Start Level 02\r\n     */\r\n    public start(): void {\r\n        super.start();\r\n\r\n        const enemies = robotSpawnLocationsAndColor.map((lc) => {\r\n            return enemyFactory(\"robot\", lc.left, lc.top, robotMovementSpeed, robotAngle, lc.color);\r\n        });\r\n\r\n        const bulletProvider = new BulletRunner(getTwoPixelBullet, CGAColors.lightRed, robotBulletSpeed, downFireAngleProvider, robotsToFire, robotLevel02FireCheck);\r\n        this.begin(enemies, robotFireFrequence, bulletProvider);\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport CGAColors from \"../../Constants/CGAColors\";\r\nimport { GameLocation } from \"../../Models/GameLocation\";\r\nimport dimensionProvider from \"../../Providers/DimensionProvider\";\r\nimport { getRandomArrayElement } from \"../../Utility/Array\";\r\nimport { getFrameDimensions } from \"../../Utility/Frame\";\r\nimport getRobotFrames from \"./RobotFrames\";\r\n\r\n/**\r\n * Module:          RobotSpawnLocations\r\n * Responsibility:  Returns the robot spawn locations.\r\n */\r\n\r\ninterface GameLocationAndcolor extends GameLocation {\r\n    /**\r\n     * color for the robot.\r\n     */\r\n    color: string;\r\n}\r\n\r\nconst {\r\n    pixelSize,\r\n    gameField\r\n} = dimensionProvider();\r\n\r\nconst robotSpawnLocationsAndColor: GameLocationAndcolor[] = [];\r\nconst { width } = getFrameDimensions(getRobotFrames().frames[0], pixelSize);\r\n\r\nconst top = gameField.top + pixelSize * 20;\r\nconst left = pixelSize * 15;\r\nconst spacing = pixelSize * 3;\r\n\r\nconst colors = [\r\n    CGAColors.lightBlue,\r\n    CGAColors.lightCyan,\r\n    CGAColors.lightRed,\r\n    CGAColors.lightGreen,\r\n    CGAColors.lightBlue,\r\n    CGAColors.lightMagenta,\r\n    CGAColors.lightCyan,\r\n];\r\n\r\nfor (let i = 0; i < 14; i++) {\r\n    const actualSpacing = i === 0 ? 0 : spacing * i;\r\n    const actualLeft = left + i * width + spacing;\r\n\r\n    const color = getRandomArrayElement(colors);\r\n\r\n    const value = {\r\n        left: actualLeft + actualSpacing,\r\n        top,\r\n        color,\r\n    };\r\n\r\n    robotSpawnLocationsAndColor.push(value);\r\n}\r\n\r\nexport default robotSpawnLocationsAndColor;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { EnemyState } from \"../../State/EnemyLevel/EnemyState\";\r\n\r\n/**\r\n * Module:          RobotsTofire\r\n * Responsibility:  Probide a list of robots to fire.\r\n */\r\n\r\nexport default function robotsToFire(robots: EnemyState[]): EnemyState[] {\r\n    // Just return the robots. pp\r\n    return robots;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { angles } from \"../Constants/Angles\";\r\nimport { EnemyState } from \"../State/EnemyLevel/EnemyState\";\r\n\r\n/**\r\n * Module:          DownAngleProvider\r\n * Responsibility:  Always returns 'down' as the angle\r\n */\r\n\r\n/**\r\n * Returns down.\r\n * @param {BaseEnemy} enemy. Any enemy.\r\n */\r\nexport default function downFireAngleProvider(enemy: EnemyState, top: number, left: number): number {\r\n    return angles.down;\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { EnemyState } from \"../State/EnemyLevel/EnemyState\";\r\nimport { appState } from \"../State/Store\";\r\n\r\n/**\r\n * Module:          RobotFireCheck\r\n * Responsibility:  Fire check funciton used by robots in level 02.\r\n */\r\n\r\n/**\r\n * Level 02 robot canFire. Only the right most robot fires bullets.\r\n * @param {BaseEnemy} self. Reference to a robot object. Called from within the RobotEnemy to determine\r\n * if the robot can fire bullets or not.\r\n */\r\nexport default function robotLevel02FireCheck(enemy: EnemyState): boolean {\r\n\r\n    const {\r\n        enemies: enemyState,\r\n    } = appState().enemyLevelState;\r\n\r\n    const lastEnemy = enemyState[enemyState.length - 1];\r\n\r\n    if (lastEnemy !== undefined) {\r\n        if (lastEnemy.enemyId === enemy.enemyId) {\r\n            const rnd = Math.ceil(Math.random() * 20);\r\n            return rnd === 1;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseEnemyLevel from \"../Base/BaseEnemyLevel\";\r\nimport BulletRunner from \"../BulletProviders/BulletRunner\";\r\nimport { orbBulletSpeed } from \"../Constants/BulletSpeeds\";\r\nimport CGAColors from \"../Constants/CGAColors\";\r\nimport { orbMovementSpeed } from \"../Constants/EnemyMovementSpeeds\";\r\nimport { orbFireFrequence } from \"../Constants/FireFrequences\";\r\nimport { orbAngle } from \"../Constants/MovementAngles\";\r\nimport { enemyFactory } from \"../Enemies/EnemyFactory\";\r\nimport orbSpawnLocations from \"../Enemies/Orb/OrbEnemiesSpawnLocations\";\r\nimport orbsToFire from \"../Enemies/Orb/OrbsToFire\";\r\nimport orbEnemyAngleProvider from \"../FireAngleProviders/OrbEnemyAngleProvider\";\r\nimport orbFireCheck from \"../FireChecks/OrbFireCheck\";\r\nimport getTwoPixelBullet from \"../SharedFrames/twoPXBullet\";\r\n\r\n/**\r\n * Module:          Level03\r\n * Responsibility:  Define level 03\r\n */\r\n\r\nexport class Level03 extends BaseEnemyLevel {\r\n\r\n    public start(): void {\r\n        super.start();\r\n        const enemies = orbSpawnLocations.map((location) => {\r\n            return enemyFactory(\"orb\", location.left, location.top, orbMovementSpeed, orbAngle);\r\n        });\r\n\r\n        const bulletRunner = new BulletRunner(getTwoPixelBullet, CGAColors.magenta, orbBulletSpeed, orbEnemyAngleProvider, orbsToFire, orbFireCheck);\r\n        this.begin(enemies, orbFireFrequence, bulletRunner);\r\n    }\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { GameLocation } from \"../../Models/GameLocation\";\r\nimport dimensionProvider from \"../../Providers/DimensionProvider\";\r\nimport { getFrameDimensions } from \"../../Utility/Frame\";\r\nimport getOrbFrames from \"./OrbFrames\";\r\n\r\n/**\r\n * Module:          RobotSpawnLocations\r\n * Responsibility:  Returns the robot spawn locations.\r\n */\r\n\r\nconst {\r\n    pixelSize,\r\n    gameField\r\n} = dimensionProvider();\r\n\r\nconst orbSpawnLocations: GameLocation[] = [];\r\nconst { width } = getFrameDimensions(getOrbFrames().frames[0], pixelSize);\r\n\r\nconst top = gameField.top + pixelSize * 26;\r\nconst left = pixelSize * 8;\r\nconst spacing = pixelSize * 2;\r\n\r\nfor (let i = 0; i < 22; i++) {\r\n    const actualSpacing = i === 0 ? 0 : spacing * i;\r\n    const actualLeft = left + i * width + spacing;\r\n\r\n    const value = {\r\n        left: actualLeft + actualSpacing,\r\n        top,\r\n    };\r\n\r\n    orbSpawnLocations.push(value);\r\n}\r\n\r\nexport default orbSpawnLocations;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          OrbsTofire\r\n * Responsibility:  Provide a function which orbs are best suited to fire a bullet.\r\n */\r\n\r\nimport Guard from \"../../Guard\";\r\nimport { EnemyState } from \"../../State/EnemyLevel/EnemyState\";\r\nimport { appState } from \"../../State/Store\";\r\nimport { FireAngleProviderFunction } from \"../../Types\";\r\nimport { calculateAngle, calculateAngleDifference } from \"../../Utility/Geometry\";\r\n\r\n/**\r\n * A function that selects the orbs that should fire.\r\n * @param {number} tick. Current tick\r\n */\r\nexport default function orbsToFire(orbs: EnemyState[], fireAngleProvider?: FireAngleProviderFunction): EnemyState[] {\r\n\r\n    if (fireAngleProvider === undefined) {\r\n        throw new Error(\"Fire angle provider is required for OrbsToFire\");\r\n    }\r\n\r\n    const {\r\n        playerState,\r\n    } = appState();\r\n\r\n    if (Guard.isPlayerAlive(playerState)) {\r\n        const { hitboxes } = playerState;\r\n\r\n        // To determine which enemies have the best change of hitting\r\n        // the player we calculate difference between the angle at which the\r\n        // enemy will fire vs the angle towards the player.\r\n        const candidates: Array<{ ship: EnemyState, angleDifference: number, angle: number }> = [];\r\n\r\n        let above = 0;\r\n        let below = 0;\r\n        for (const orb of orbs) {\r\n            const center = orb.centerLocation;\r\n\r\n            if (center) {\r\n                const angle = fireAngleProvider(orb, orb.offsetLeft, orb.offsetTop);\r\n                const angleToPlayer = calculateAngle(center.left, center.top, playerState.left, playerState.top);\r\n\r\n                if (center.top > hitboxes.middle.bottom) {\r\n                    below += 1;\r\n                } else {\r\n                    above += 1;\r\n                }\r\n\r\n                if (angle !== undefined && angleToPlayer !== undefined) {\r\n                    const angleDifference = calculateAngleDifference(angle, angleToPlayer);\r\n                    candidates.push({ ship: orb, angleDifference, angle });\r\n                }\r\n            }\r\n        }\r\n\r\n        // If the player is below the orbs, the ones with the lowest angle difference have the best shot\r\n        // If the player is above the orbs, the situation is revesed.\r\n        const sortFunction = above > below ? (a: number, b: number) => a < b : (a: number, b: number) => a > b;\r\n\r\n        candidates.sort((e1, e2) => {\r\n            if (sortFunction(e1.angleDifference, e2.angleDifference)) {\r\n                return -1;\r\n            } else {\r\n                return 1;\r\n            }\r\n        });\r\n\r\n        return candidates.map((c) => c.ship);\r\n    } else {\r\n        return [];\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Actions\r\n * Responsibility:  Action definitions for the Keyboard State\r\n */\r\n\r\nimport { GameKeys } from \"../../Utility/KeyboardEvents\";\r\nimport Constants from \"./KeyboardConstants\";\r\nimport { KeyDown, KeyUp } from \"./KeyboardTypes\";\r\n\r\nexport function keyDown(key: GameKeys): KeyDown {\r\n    return {\r\n        type: Constants.keydown,\r\n        payload: key,\r\n    };\r\n}\r\n\r\nexport function keyUp(key: GameKeys): KeyUp {\r\n    return {\r\n        type: Constants.keyup,\r\n        payload: key\r\n    };\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          DiagonalAtPlayerAngleProvider\r\n * Responsibility:  Returns down/left or down/right aimed at the player\r\n */\r\n\r\nimport { angles } from \"../Constants/Angles\";\r\nimport Guard from \"../Guard\";\r\nimport { EnemyState } from \"../State/EnemyLevel/EnemyState\";\r\nimport { appState } from \"../State/Store\";\r\n\r\n/**\r\n * Returns an angle of down/left or down/right but only if the passed enemy has a 'change' of hitting the\r\n * player. If it can't hit the player the angle will be undefined.\r\n * @param {BaseEnemy} self. An enemy.\r\n */\r\nexport default function orbEnemyAngleProvider(enemy: EnemyState, left: number, top: number): number | undefined {\r\n\r\n    const {\r\n        playerState,\r\n        enemyLevelState: { enemies }\r\n    } = appState();\r\n\r\n    // do nothin when the player is dead.\r\n    if (Guard.isPlayerAlive(playerState)) {\r\n        const { hitboxes } = playerState;\r\n\r\n        // Increase the change the orb enemy will fire down as its numbers are reduced.\r\n        const rnd = Math.ceil(Math.random() * enemies.length / 1.5);\r\n        const canFireDown = rnd === 1;\r\n\r\n        if (canFireDown) {\r\n            const {\r\n                centerLocation,\r\n            } = enemy;\r\n\r\n            if (centerLocation !== undefined) {\r\n                // Check if it makes sense for the orb to fire down. If not, it'll pick one of its diagonal angles.\r\n                if (centerLocation.left >= hitboxes.middle.left && centerLocation.left <= hitboxes.middle.right) {\r\n                    return angles.down;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (left < hitboxes.middle.left) {\r\n            return angles.rightdown;\r\n        } else {\r\n            return angles.leftdown;\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { EnemyState } from \"../State/EnemyLevel/EnemyState\";\r\nimport { appState } from \"../State/Store\";\r\n\r\n/**\r\n * Module:          OrbFireCheck\r\n * Responsibility:  Fire check function for the Orb enemy\r\n */\r\n\r\n/**\r\n * Defines the orb fire behaviour.\r\n * Orbs fire a salvo of 5 bullets, aimed at the player. They never fire until all their\r\n * bullets are offscreen.\r\n * @param {BaseEnemy} enemy.\r\n */\r\nexport default function orbFireCheck(enemy: EnemyState): boolean {\r\n    const {\r\n        enemyLevelState: { enemies, bullets}\r\n    } = appState();\r\n\r\n    let canFire = false;\r\n\r\n    const remainingEnemies = enemies.length;\r\n\r\n    if (bullets.length === 0) {\r\n        // No bullets, can always fire.\r\n        return true;\r\n    } else if (bullets.length < 5) {\r\n        if (remainingEnemies >= 5) {\r\n            // if there's 5 enemies or more, an enemy is limited to a single bullet.\r\n            canFire = bullets.filter((p) => p.owner === enemy.enemyId).length === 0;\r\n        } else if (remainingEnemies < 5) {\r\n            // if there's 5 enemies or more, an enemy is limited to a single bullet.\r\n            canFire = bullets.filter((p) => p.owner === enemy.enemyId).length < Math.ceil(5 / remainingEnemies);\r\n        } else {\r\n            canFire = false;\r\n        }\r\n    } else {\r\n        // Enemy shouldn't fire, so, we can return it.\r\n        return false;\r\n    }\r\n\r\n    return canFire;\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport CGAColors from \"../Constants/CGAColors\";\r\nimport WarpLevelConstants from \"../Constants/WarpLevelConstants\";\r\nimport { DEBUGGING_drawGameRect } from \"../Debugging/Debugging\";\r\nimport GameLoop from \"../GameLoop\";\r\nimport { drawBackground, drawWarpBackground } from \"../GameScreen/StaticRenders\";\r\nimport Guard from \"../Guard\";\r\nimport ILevel from \"../Interfaces/ILevel\";\r\nimport { GameRectangle } from \"../Models/GameRectangle\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport { setWarpGamteComplexity } from \"../State/Game/GameActions\";\r\nimport { setPlayerMovementLimit } from \"../State/Player/PlayerActions\";\r\nimport { appState, appStore, dispatch } from \"../State/Store\";\r\nimport { handlePlayerDeath } from \"../StateHandlers/HandlePlayerDeath\";\r\nimport { getRandomArrayElement } from \"../Utility/Array\";\r\nimport { coinFlip } from \"../Utility/Lib\";\r\nimport { fallsWithin } from \"../Utility/Location\";\r\n\r\n/**\r\n * Module:          WarpLevel\r\n * Responsibility:  Warp level for the player to pass though.\r\n */\r\n\r\nconst backgroundColor: string[] = [\r\n    CGAColors.brown,\r\n    CGAColors.green,\r\n    CGAColors.magenta,\r\n    CGAColors.blue,\r\n];\r\n\r\nconst {\r\n    pixelSize,\r\n    fullGameWidth,\r\n    gameField\r\n} = dimensionProvider();\r\n\r\n// This constants 'left' takes the width of the wrap gate corridor into consireration.\r\n// Always start a warp game using this left so we ensure the player is aligned perfectly.\r\nconst warpGateInitialleft = fullGameWidth / 2 - (16 * pixelSize) / 2;\r\n\r\nexport default class WarpLevel implements ILevel {\r\n\r\n    private gameLoopSubscriptions: Array<(tick?: number) => void> = [];\r\n\r\n    /**\r\n     * Store the movement restriction to force up\r\n     */\r\n    private storeSub = appStore().subscribe(() => {\r\n        const { playerState } = appState();\r\n\r\n        // Check when the player is alive and set its movement limit to force up to force\r\n        // the player to traverse the warp level.\r\n        // I'm doing this in a subscription because the PlayerSpawnManager will\r\n        // set a movement limit on the player depending on the game state.\r\n        if (playerState.alive && playerState.moveLimit !== \"none\") {\r\n            dispatch(setPlayerMovementLimit(\"forceup\"));\r\n        }\r\n    });\r\n\r\n    public start(): void {\r\n\r\n        // Register the background draw function so it runs in the game loop.\r\n        this.gameLoopSubscriptions.push(GameLoop.registerBackgroundDrawing(drawBackground));\r\n\r\n        // Determine which additional color next to white the warp background will have.\r\n        const colorIndex = Math.ceil(Math.random() * backgroundColor.length - 1);\r\n        const additionalColor = backgroundColor[colorIndex];\r\n\r\n        dispatch(setWarpGamteComplexity(8));\r\n\r\n        const {\r\n            gameState\r\n        } = appState();\r\n\r\n        const warpGate = this.calculateWarpGate(gameField.left, gameField.right, gameState.warpLevelSteps.stepsX, gameState.warpLevelSteps.stepsY);\r\n\r\n        const badSpace = warpGate\r\n            .map((wg) => {\r\n                return {\r\n                    left: {\r\n                        left: gameField.left,\r\n                        right: wg.left,\r\n                        top: wg.top,\r\n                        bottom: wg.bottom,\r\n                    },\r\n                    right: {\r\n                        left: wg.right,\r\n                        right: gameField.right,\r\n                        top: wg.top,\r\n                        bottom: wg.bottom,\r\n                    },\r\n                };\r\n            });\r\n\r\n        this.gameLoopSubscriptions.push(GameLoop.registerBackgroundDrawing(() => drawWarpBackground(additionalColor, warpGate)));\r\n        this.gameLoopSubscriptions.push(GameLoop.registerUpdateState((tick) => this.hitDetection(tick, badSpace)));\r\n    }\r\n\r\n    private hitDetection(tick: number, badSpace: Array<{ left: GameRectangle; right: GameRectangle }>): void {\r\n        const { playerState } = appState();\r\n        if (Guard.isPlayerAlive(playerState)) {\r\n\r\n            const { hitboxes, alive } = playerState;\r\n\r\n            badSpace.forEach((bs) => {\r\n                DEBUGGING_drawGameRect(bs.left, \"red\");\r\n                DEBUGGING_drawGameRect(bs.right, \"red\");\r\n            });\r\n\r\n            const hitside = badSpace.some((sb) => {\r\n                const { left: leftDanger, right: rightDanger } = sb;\r\n                const { middle, bottom } = hitboxes;\r\n\r\n                return fallsWithin(bottom.left, bottom.right, bottom.top, bottom.bottom, leftDanger.left, leftDanger.right, leftDanger.top, leftDanger.bottom) ||\r\n                    fallsWithin(bottom.left, bottom.right, bottom.top, bottom.bottom, rightDanger.left, rightDanger.right, rightDanger.top, rightDanger.bottom) ||\r\n                    fallsWithin(middle.left, middle.right, middle.top, middle.bottom, leftDanger.left, leftDanger.right, leftDanger.top, leftDanger.bottom) ||\r\n                    fallsWithin(middle.left, middle.right, middle.top, middle.bottom, rightDanger.left, rightDanger.right, rightDanger.top, rightDanger.bottom);\r\n            });\r\n\r\n            if (hitside && alive) {\r\n                DEBUGGING_drawGameRect(hitboxes.bottom, \"red\", 5);\r\n                DEBUGGING_drawGameRect(hitboxes.middle, \"red\", 5);\r\n\r\n                handlePlayerDeath(tick);\r\n            }\r\n        }\r\n    }\r\n\r\n    private calculateWarpGate(outerLeft: number, outerRight: number, stepSizesX: number[], stepSizesY: number[]): GameRectangle[] {\r\n\r\n        const safeZone: GameRectangle[] = [];\r\n\r\n        let direction = warpGateInitialleft;\r\n\r\n        // We'll start at the bottom and draw up. This\r\n        // allows me to ensure a safe position for the player to\r\n        // enter the warp gate.\r\n        let bottom = WarpLevelConstants.bottom;\r\n\r\n        const pixelsToGo = WarpLevelConstants.heightPixelCount;\r\n        let pixelsToDo = 0;\r\n\r\n        let stepSizeY = getRandomArrayElement(stepSizesY);\r\n        let stepSizeX = getRandomArrayElement(stepSizesX);\r\n\r\n        while (pixelsToDo + stepSizeY < pixelsToGo) {\r\n            const up = stepSizeY * pixelSize;\r\n\r\n            const rect: GameRectangle = {\r\n                left: direction,\r\n                top: bottom - up,\r\n                right: direction + WarpLevelConstants.width, // aka the width\r\n                bottom, // aka the height.\r\n            };\r\n\r\n            // New left\r\n            const verticalMove = stepSizeX * pixelSize;\r\n\r\n            // 50/50 change that the warp gate goes left or right.\r\n            const leftOrRight = coinFlip();\r\n            if (leftOrRight) {\r\n                // Left\r\n                direction -= verticalMove;\r\n            } else {\r\n                // Right\r\n                direction += verticalMove;\r\n            }\r\n\r\n            // Prevent the warp gate from going off screen by fliping the direction.\r\n            if (direction <= outerLeft || direction + WarpLevelConstants.width >= outerRight) {\r\n                direction *= -1;\r\n            }\r\n\r\n            // bottom moves up.\r\n            bottom -= up;\r\n\r\n            // Reduce pixels to do.\r\n            pixelsToDo += stepSizeY;\r\n            safeZone.push(rect);\r\n\r\n            stepSizeY = getRandomArrayElement(stepSizesY);\r\n            stepSizeX = getRandomArrayElement(stepSizesX);\r\n        }\r\n\r\n        // Deal with some left over space\r\n        if (pixelsToDo !== 0) {\r\n            const rect: GameRectangle = {\r\n                left: direction,\r\n                top: WarpLevelConstants.top,\r\n                right: direction + WarpLevelConstants.width,\r\n                bottom\r\n            };\r\n\r\n            safeZone.push(rect);\r\n        }\r\n\r\n        return safeZone;\r\n    }\r\n\r\n    /**\r\n     * Dispose stuff.\r\n     */\r\n    public dispose(): void {\r\n        // Dispose all game loop subscriptions.\r\n        this.gameLoopSubscriptions.forEach((s) => s());\r\n        this.storeSub();\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport GameLoop from \"../GameLoop\";\r\nimport { movePlayerHandler } from \"../Handlers/MovePlayerHandler\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport getPlayerSpawnLocation from \"../Providers/PlayerSpawnLocationProvider\";\r\nimport { setPlayerIsAlive, setPlayerLocationData, setPlayerMovementLimit } from \"../State/Player/PlayerActions\";\r\nimport { appState, dispatch } from \"../State/Store\";\r\nimport { MoveLimits } from \"../Types\";\r\nimport { getFrameReturner } from \"../Utility/Frame\";\r\nimport { getLocation } from \"../Utility/Location\";\r\nimport PlayerFormationPart from \"./PlayerFormationPart\";\r\nimport { getPlayerFormationFrames } from \"./PlayerFrames\";\r\n\r\n/**\r\n * Module:          PlayerSpawnManager\r\n * Responsibility:  Handles player respawning.\r\n */\r\n\r\nconst {\r\n    pixelSize,\r\n} = dimensionProvider();\r\n\r\nconst particleTravelDistance = pixelSize * 60;\r\nconst nozzleDistance = particleTravelDistance + pixelSize;\r\nconst nozzleOutAngle = 270;\r\nconst leftWingOutAngle = 200;\r\nconst rightWingOutAngle = 340;\r\n\r\nconst playerFormationFrames = getPlayerFormationFrames();\r\n\r\nlet nozzleTopPart: PlayerFormationPart;\r\nlet nozzleBottomPart: PlayerFormationPart;\r\nlet leftWingPart: PlayerFormationPart;\r\nlet rightWingPart: PlayerFormationPart;\r\n\r\nlet allMovingParts: PlayerFormationPart[] = [];\r\n\r\nlet formationSpeed: \"slow\" | \"fast\";\r\n\r\nlet formationInProgress = false;\r\n\r\n/**\r\n * playerSpawnManager. Once register in the GameLoop this function will check\r\n * the state if the player can and show respawn.\r\n */\r\nexport default function playerSpawnManager(): void {\r\n    const { playerState, enemyLevelState: { enemies, shrapnells, bullets } } = appState();\r\n\r\n    if (!playerState.alive && formationInProgress === false && shrapnells.length === 0) {\r\n        if (enemies.length > 0) { // Enemies in the level\r\n            if (bullets.length === 0) { // wait till there's no particles.\r\n                setupFormation(\"slow\", \"sideways\"); // Start the slow formation where the player has control.\r\n            }\r\n        } else {\r\n            // No enemies, fast formation\r\n            setupFormation(\"fast\", \"immobile\");\r\n        }\r\n    }\r\n\r\n    if (formationInProgress) {\r\n        updateState();\r\n        GameLoop.registerDraw(draw);\r\n    }\r\n}\r\n\r\n/**\r\n * Creates the player formation particles.\r\n */\r\nfunction createParticles(): void {\r\n\r\n    const {\r\n        playerState\r\n    } = appState();\r\n\r\n    const left = playerState.left;\r\n    const top = playerState.top;\r\n\r\n    const nozzleTip = getLocation(left, top, nozzleOutAngle, nozzleDistance);\r\n    const nozzleBottom = getLocation(left, top, nozzleOutAngle, particleTravelDistance);\r\n    const leftWing = getLocation(left, top, leftWingOutAngle, particleTravelDistance);\r\n    const rightWing = getLocation(left, top, rightWingOutAngle, particleTravelDistance);\r\n\r\n    nozzleTopPart = new PlayerFormationPart(\r\n        nozzleTip.left,\r\n        nozzleTip.top,\r\n        getFrameReturner(playerFormationFrames[0]),\r\n        0,\r\n        pixelSize * 2,\r\n        0);\r\n\r\n    nozzleBottomPart = new PlayerFormationPart(\r\n        nozzleBottom.left,\r\n        nozzleBottom.top,\r\n        getFrameReturner(playerFormationFrames[1]),\r\n        0,\r\n        pixelSize * 2,\r\n        pixelSize);\r\n\r\n    leftWingPart = new PlayerFormationPart(\r\n        leftWing.left,\r\n        leftWing.top,\r\n        getFrameReturner(playerFormationFrames[2]),\r\n        0,\r\n        0,\r\n        pixelSize);\r\n\r\n    rightWingPart = new PlayerFormationPart(\r\n        rightWing.left,\r\n        rightWing.top,\r\n        getFrameReturner(playerFormationFrames[3]),\r\n        0,\r\n        pixelSize * 4,\r\n        pixelSize);\r\n\r\n    allMovingParts = [nozzleTopPart, nozzleBottomPart, leftWingPart, rightWingPart].filter((p) => p !== undefined);\r\n}\r\n\r\n/**\r\n * Forms the player quickly. Does not allow movement.\r\n * @param {() => void)} formationDoneCallback. Called when the formation animation has completed.\r\n * @param {\"fast\" | \"slow\"} speed. Speed of the player formation.\r\n * @param {MoveLimits} limit. Movement limit impaired on the player while the ship is forming.\r\n */\r\nfunction setupFormation(speed: \"fast\" | \"slow\", limit: MoveLimits): void {\r\n    formationSpeed = speed;\r\n    const  {left, top }  = getPlayerSpawnLocation();\r\n    dispatch(setPlayerLocationData(left, top));\r\n    createParticles();\r\n\r\n    if (speed === \"fast\") {\r\n        allMovingParts.forEach((p) => p.setSpeed(30));\r\n    } else {\r\n        allMovingParts.forEach((p) => p.setSpeed(10));\r\n    }\r\n\r\n    dispatch(setPlayerMovementLimit(limit));\r\n    formationInProgress = true;\r\n}\r\n\r\n/**\r\n * Main function that draws the player formation.\r\n */\r\nfunction updateState(): void {\r\n    const { keyboardState } = appState();\r\n\r\n    if (keyboardState.space === false && formationSpeed === \"slow\" && allMovingParts.some((p) => p.traveling())) {\r\n        allMovingParts.forEach((p) => {\r\n            p.updateState();\r\n        });\r\n\r\n        movePlayerHandler(5);\r\n    } else if (formationSpeed === \"fast\") {\r\n        allMovingParts.forEach((p) => {\r\n            p.updateState();\r\n        });\r\n    }\r\n\r\n    if (allMovingParts.every((p) => p.traveling() === false)) {\r\n        dispatch(setPlayerIsAlive(true));\r\n        allMovingParts = [];\r\n        formationInProgress = false;\r\n    }\r\n}\r\n\r\n/**\r\n * Draw the moving parts.\r\n */\r\nfunction draw(): void {\r\n    allMovingParts.forEach((p) => p.draw());\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport speedProvider from \"../Providers/SpeedProvider\";\r\nimport renderFrame from \"../Render/RenderFrame\";\r\nimport { appState } from \"../State/Store\";\r\nimport { Frame, FrameProviderFunction } from \"../Types\";\r\nimport Mutators from \"../Utility/FrameMutators\";\r\nimport { calculateAngle } from \"../Utility/Geometry\";\r\nimport { calculateDistance, getLocation } from \"../Utility/Location\";\r\n\r\n/**\r\n * Module:          PlayerFormationPart\r\n * Responsibility:  A particle that travels a distance and then stops being drawn.\r\n */\r\n\r\nconst minimumDistance = speedProvider(20);\r\n\r\nexport default class PlayerFormationPart {\r\n\r\n    /**\r\n     * Current particle location\r\n     */\r\n    private currentLeftLocation: number;\r\n\r\n    /**\r\n     * Current top location\r\n     */\r\n    private currentTopLocation: number;\r\n\r\n    /**\r\n     * Particle speed.\r\n     */\r\n\r\n    private speed: number;\r\n\r\n    /**\r\n     * The current frame.\r\n     */\r\n    private currentFrame: Frame;\r\n\r\n    /**\r\n     * Offset to add to the left.\r\n     */\r\n    private leftOffset: number;\r\n\r\n    /**\r\n     * Offset to add to the top.\r\n     */\r\n    private topOffset: number;\r\n\r\n    /**\r\n     * Construct the object.\r\n     * @param {number} left. Left coordinate.\r\n     * @param {number} top. Top coordinate\r\n     * @param {FrameProviderFunction} getFrame. Frame to render for this part.\r\n     * @param {number} speed. Speed at which the part travels.\r\n     * @param {number} leftOffset. Number of pixels to add to the initial left position and the target left position.\r\n     * @param {number} topOffset. Number of pixels to add to the initial top position and the target top position.\r\n     */\r\n    constructor(left: number, top: number, getFrame: FrameProviderFunction, speed: number, leftOffset: number, topOffset: number) {\r\n\r\n        this.currentFrame = getFrame();\r\n        Mutators.Frame.convertHexToCGA(this.currentFrame);\r\n\r\n        this.currentLeftLocation = left + leftOffset;\r\n        this.currentTopLocation = top + topOffset;\r\n        this.leftOffset = leftOffset;\r\n        this.topOffset = topOffset;\r\n\r\n        this.speed = speed;\r\n    }\r\n\r\n    /**\r\n     * Update the state of the object.\r\n     */\r\n    public updateState(): void {\r\n\r\n        const {\r\n            playerState\r\n        } = appState();\r\n\r\n        const targetLeftLocation = playerState.left + this.leftOffset;\r\n        const targetTopLocation = playerState.top + this.topOffset;\r\n\r\n        const angle = calculateAngle(this.currentLeftLocation, this.currentTopLocation, targetLeftLocation, targetTopLocation);\r\n        const distance = calculateDistance(this.currentLeftLocation, this.currentTopLocation, targetLeftLocation, targetTopLocation);\r\n\r\n        if (distance > minimumDistance) {\r\n            const nextLocation = getLocation(this.currentLeftLocation, this.currentTopLocation, angle, this.speed);\r\n            this.currentLeftLocation = nextLocation.left;\r\n            this.currentTopLocation = nextLocation.top;\r\n        } else {\r\n            this.currentLeftLocation = targetLeftLocation;\r\n            this.currentTopLocation = targetTopLocation;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Draw the particle.\r\n     */\r\n    public draw(): void {\r\n        renderFrame(this.currentLeftLocation, this.currentTopLocation, this.currentFrame);\r\n    }\r\n\r\n    /**\r\n     * Returns true if the particle is still traveling to its location.\r\n     * @returns {boolean}. True if the particle is still traveling.\r\n     */\r\n    public traveling(): boolean {\r\n        const {\r\n            playerState\r\n        } = appState();\r\n\r\n        const targetLeftLocation = playerState.left + this.leftOffset;\r\n        const targetTopLocation = playerState.top + this.topOffset;\r\n\r\n        const distance = calculateDistance(this.currentLeftLocation, this.currentTopLocation, targetLeftLocation, targetTopLocation);\r\n        return distance > minimumDistance;\r\n    }\r\n\r\n    /**\r\n     * Sets the speed of the particle.\r\n     * @param {number} speed. Desired particle speed.\r\n     */\r\n    public setSpeed(speed: number): void {\r\n        this.speed = speed;\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          GenericRunner\r\n * Responsibility:  Handles generic state updates that can occur in any level.\r\n */\r\n\r\nimport GameLoop from \"../GameLoop\";\r\nimport renderFrame from \"../Render/RenderFrame\";\r\nimport { setBulletState, setExplosionCenters, setShrapnellState } from \"../State/EnemyLevel/EnemyLevelActions\";\r\nimport { StateProviders } from \"../State/StateProviders\";\r\nimport { appState, dispatch } from \"../State/Store\";\r\n\r\nexport default function genericRunner(tick: number): void {\r\n    handleExplosionCenters(tick);\r\n    handleBullets();\r\n    handleShrapnell();\r\n    GameLoop.registerDraw(draw);\r\n}\r\n\r\n/**\r\n * Handles explosion centers.\r\n * @param {number} tick. Current tick\r\n */\r\nfunction handleExplosionCenters(tick: number): void {\r\n    const { explosionCenters } = appState().enemyLevelState;\r\n\r\n    const remainingExplosions = explosionCenters.filter((ec) => ec.startTick + ec.explosionCenterDelay > tick);\r\n    dispatch(setExplosionCenters(remainingExplosions));\r\n}\r\n\r\n/**\r\n * Handle bullet movement.\r\n */\r\nfunction handleBullets(): void {\r\n    const bullets = appState().enemyLevelState.bullets;\r\n    const newState = StateProviders.getUpdatedParticleState(bullets);\r\n\r\n    dispatch(setBulletState(newState));\r\n}\r\n\r\n/**\r\n * Handles particles state updates.\r\n * @param {number} tick. Current tick.\r\n */\r\nfunction handleShrapnell(): void {\r\n    const newState = StateProviders.getUpdatedParticleState(appState().enemyLevelState.shrapnells);\r\n    dispatch(setShrapnellState(newState));\r\n}\r\n\r\nfunction draw(): void {\r\n    const { explosionCenters, shrapnells } = appState().enemyLevelState;\r\n    for (const center of explosionCenters) {\r\n        renderFrame(center.left, center.top, center.coloredFrame);\r\n    }\r\n\r\n    for (const shrapnell of shrapnells) {\r\n        renderFrame(shrapnell.left, shrapnell.top, shrapnell.coloredFrame);\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { angles } from \"../Constants/Angles\";\r\nimport { playerBulletSpeed } from \"../Constants/BulletSpeeds\";\r\nimport CGAColors from \"../Constants/CGAColors\";\r\nimport GameLoop from \"../GameLoop\";\r\nimport { movePlayerHandler } from \"../Handlers/MovePlayerHandler\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport renderFrame from \"../Render/RenderFrame\";\r\nimport getTwoPixelBullet from \"../SharedFrames/twoPXBullet\";\r\nimport { ParticleState } from \"../State/Player/ParticleState\";\r\nimport { setPlayerBulletState } from \"../State/Player/PlayerActions\";\r\nimport { StateProviders } from \"../State/StateProviders\";\r\nimport { appState, dispatch } from \"../State/Store\";\r\nimport { getFrameHitbox } from \"../Utility/Frame\";\r\nimport { fallsWithinGameField, getLocation } from \"../Utility/Location\";\r\n\r\n/**\r\n * Module:          PlayerRunner\r\n * Responsibility:  Module dedicated to managing player state.\r\n */\r\n\r\nexport default function playerRunner(): void {\r\n    updateState();\r\n    GameLoop.registerDraw(draw);\r\n}\r\n\r\nconst {\r\n    pixelSize,\r\n} = dimensionProvider();\r\n\r\nconst playerBulletFrame = getTwoPixelBullet(CGAColors.yellow);\r\n\r\n/**\r\n * Updates the player state.\r\n */\r\nfunction updateState(): void {\r\n    const {\r\n        gameState, playerState\r\n    } = appState();\r\n\r\n    if (gameState.pause) {\r\n        return;\r\n    }\r\n\r\n    // Important! The player runner is responsible for handling player action while the\r\n    // player is alive. When the player dies the PlayerSpawnManager takes over.\r\n    if (!playerState.alive) {\r\n        return;\r\n    }\r\n\r\n    movePlayerHandler(10);\r\n\r\n    handlePlayerBulletMovement();\r\n    handlePlayerBulletFiring();\r\n}\r\n\r\n/**\r\n * Checks if the player can fire and if they pressed the fire key. If so, a bullet is dispatched to the state.\r\n */\r\nfunction handlePlayerBulletFiring(): void {\r\n    const { playerState, keyboardState } = appState();\r\n    if (playerState.nozzleLocation !== undefined && keyboardState.fire && playerState.bulletState === undefined) {\r\n        const nozzleLocation = playerState.nozzleLocation;\r\n        const bullet = getPlayerBullet(nozzleLocation.left, nozzleLocation.top);\r\n        dispatch(setPlayerBulletState(bullet));\r\n    }\r\n}\r\n\r\n/**\r\n * Moves the bullet up until it reached the top of the game game field.\r\n * If the bullet hits something, that handled in the EnemyLevelRunner.\r\n */\r\nfunction handlePlayerBulletMovement(): void {\r\n    const { playerState } = appState();\r\n    if (playerState.bulletState !== undefined) {\r\n        const bullet = playerState.bulletState;\r\n        const nextLocation = getLocation(bullet.left, bullet.top, bullet.angle, bullet.speed);\r\n        const newHitbox = getFrameHitbox(nextLocation.left, nextLocation.top, bullet.coloredFrame);\r\n\r\n        if (fallsWithinGameField(newHitbox.left, newHitbox.right, nextLocation.top, newHitbox.bottom)) {\r\n            const newState = getPlayerBullet(nextLocation.left, nextLocation.top);\r\n            dispatch(setPlayerBulletState(newState));\r\n        } else {\r\n            dispatch(setPlayerBulletState(undefined));\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Gets a player bullet particle state.\r\n * @param {number} left\r\n * @param {number} top\r\n * @returns {ParticleState}\r\n */\r\nfunction getPlayerBullet(left: number, top: number): ParticleState {\r\n    return StateProviders.getParticleState(left, top, playerBulletSpeed, angles.up, playerBulletFrame, 1, -0.5 * pixelSize, -0.5 * pixelSize);\r\n}\r\n\r\n/**\r\n * Draw the player and player bullet.\r\n */\r\nfunction draw(): void {\r\n    const { playerState } = appState();\r\n    if (playerState.alive) {\r\n        renderFrame(playerState.left, playerState.top, playerState.coloredFrame);\r\n    }\r\n\r\n    if (playerState.bulletState) {\r\n        const bullet = playerState.bulletState;\r\n        renderFrame(bullet.left, bullet.top, bullet.coloredFrame);\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Actions\r\n * Responsibility:  Actions for Debugging state.\r\n */\r\n\r\nimport Constants from \"./DebuggingConstants\";\r\nimport { PlayerImmortal, RenderPhaser } from \"./DebuggingTypes\";\r\n\r\nexport function playerMortality(mortality: \"mortal\" | \"immortal\"): PlayerImmortal {\r\n    return {\r\n        type: Constants.playerMortality,\r\n        payload: mortality,\r\n    };\r\n}\r\n\r\nexport function renderPhaserOn(render: boolean): RenderPhaser {\r\n    return {\r\n        type: Constants.renderPhaser,\r\n        render\r\n    };\r\n}"],"sourceRoot":""}