{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Providers/DimensionProvider.ts","webpack:///./src/State/Store.ts","webpack:///./src/Utility/Frame.ts","webpack:///./src/Constants/Constants.ts","webpack:///./src/Utility/Location.ts","webpack:///./src/Constants/CGAColors.ts","webpack:///./src/Utility/FrameMutators.ts","webpack:///./src/Constants/Angles.ts","webpack:///./src/Utility/Geometry.ts","webpack:///./src/GameLoop.ts","webpack:///./src/Utility/Array.ts","webpack:///./src/State/Game/GameActions.ts","webpack:///./src/State/Player/PlayerActions.ts","webpack:///./src/Render/CtxProvider.ts","webpack:///./src/Render/RenderFrame.ts","webpack:///./src/State/EnemyLevel/EnemyLevelActions.ts","webpack:///./src/Utility/Lib.tsx","webpack:///./src/Base/BaseEnemy.ts","webpack:///./node_modules/immer/src/common.js","webpack:///./node_modules/immer/src/scope.js","webpack:///./node_modules/immer/src/es5.js","webpack:///./node_modules/immer/src/proxy.js","webpack:///./node_modules/immer/src/patches.js","webpack:///./node_modules/immer/src/immer.js","webpack:///./node_modules/immer/src/index.js","webpack:///./src/Player/PlayerFrames.ts","webpack:///./src/Guard.ts","webpack:///./src/State/StateProviders.ts","webpack:///./src/Base/BaseLocationProvider.ts","webpack:///./src/GameScreen/StaticRenders.ts","webpack:///./src/Providers/SpeedProvider.ts","webpack:///./src/ShipsToFireProviders/GetShipsReadyToFire.ts","webpack:///./src/Handlers/TickHandler.ts","webpack:///./src/StateHandlers/HandleLevelWon.ts","webpack:///./node_modules/symbol-observable/es/index.js","webpack:///./src/Debugging/Debugging.ts","webpack:///./src/State/Debugging/DebuggingConstants.ts","webpack:///./src/State/EnemyLevel/EnemyLevelConstants.ts","webpack:///./src/State/Game/GameConstants.ts","webpack:///./src/State/Keyboard/KeyboardConstants.ts","webpack:///./src/State/Player/PlayerConstants.ts","webpack:///./src/SharedFrames/Numbers.ts","webpack:///./src/Levels/EnemyLevel.ts","webpack:///./src/GameScreen/LevelBanner.ts","webpack:///./src/SharedFrames/twoPXBullet.ts","webpack:///./src/Utility/KeyboardEvents.ts","webpack:///./src/Providers/EnemyFactory.ts","webpack:///./src/Base/BaseFrameProvider.ts","webpack:///./src/Runners/EnemyLevelRunner.ts","webpack:///./src/StateHandlers/DispatchExplosion.ts","webpack:///./src/StateHandlers/HandlePlayerDeath.ts","webpack:///./src/Handlers/PlayerMovementHandler.ts","webpack:///./node_modules/symbol-observable/es/ponyfill.js","webpack:///./src/index.ts","webpack:///./node_modules/redux/es/redux.js","webpack:///(webpack)/buildin/global.js","webpack:///(webpack)/buildin/harmony-module.js","webpack:///./src/State/Debugging/DebuggingReducer.ts","webpack:///./src/State/EnemyLevel/EnemyLevelReducer.ts","webpack:///./node_modules/process/browser.js","webpack:///./src/State/Game/GameStateReducer.ts","webpack:///./src/State/Game/WarpGameComplexities.ts","webpack:///./src/State/Keyboard/KeyboardStateReducer.ts","webpack:///./src/State/Player/PlayerReducer.ts","webpack:///./src/Providers/PlayerSpawnLocationProvider.ts","webpack:///./src/Player/PlayerExplosion.ts","webpack:///./src/Utility/HexToCGAConverter.ts","webpack:///./src/GameScreen/StatusBar.ts","webpack:///./src/Utility/String.ts","webpack:///./src/Levels/SubscribeToStore.ts","webpack:///./src/Levels/LevelFactory.ts","webpack:///./src/SharedFrames/Characters.ts","webpack:///./src/Utility/getCharacter.ts","webpack:///./src/Providers/EnemyLevelContentProvider.ts","webpack:///./src/Enemies/Boat/GetBoatSpawnLocations.ts","webpack:///./src/Enemies/Orb/OrbEnemiesSpawnLocations.ts","webpack:///./src/Enemies/Robot/RobotSpawnLocations.ts","webpack:///./src/Runners/BulletRunner.ts","webpack:///./src/ShipsToFireProviders/FireDownAimed.ts","webpack:///./src/State/Keyboard/KeyboardActions.ts","webpack:///./src/ShipsToFireProviders/FireDownRandom.ts","webpack:///./src/ShipsToFireProviders/FirstEnemyOccasionalDown.ts","webpack:///./src/ShipsToFireProviders/MaxFiveDiagonal.ts","webpack:///./src/SpawnLocations/ElevennInALine.ts","webpack:///./src/SpawnLocations/GetRandomSpawnLocations.ts","webpack:///./src/SpawnLocations/SevenSixSevenGridProvider.ts","webpack:///./src/Enemies/Asteroid/AsteroidEnemy.ts","webpack:///./src/Enemies/Asteroid/GetAsteroidOffsetFrames.ts","webpack:///./src/Enemies/Balloon/GetBalloonOffsetFrames.ts","webpack:///./src/Enemies/Bats/BatExplosion.ts","webpack:///./src/Enemies/Bats/GetBatOffsetFrames.ts","webpack:///./src/Enemies/Bird/BirdEnemy.ts","webpack:///./src/Enemies/Bird/GetBirdOffsetFrames.ts","webpack:///./src/Enemies/Boat/GetBoatOffsetFrames.ts","webpack:///./src/Enemies/CloakingOrb/GetCloakingOrbOffsetFrames.ts","webpack:///./src/Enemies/Crap/GetCrapOffsetFrames.ts","webpack:///./src/Enemies/DefaultEnemy.ts","webpack:///./src/Enemies/Devil/DevilEnemy.ts","webpack:///./src/Enemies/Devil/GetDevilOffsetFrames.ts","webpack:///./src/Enemies/Diabolo/GetDiaboloOffsetFrames.ts","webpack:///./src/Enemies/Orb/GetOrbOffsetFrames.ts","webpack:///./src/Enemies/Orb/OrbEnemy.ts","webpack:///./src/Enemies/Piston/GetPistonOffsetFrames.ts","webpack:///./src/Enemies/Robot/GetRobotOffsetFrames.ts","webpack:///./src/Enemies/SpaceMonster/SpaceMonster.ts","webpack:///./src/Enemies/SpaceMonster/SpaceMonsterEnemy.ts","webpack:///./src/Enemies/Spinner/GetSpinnerOffsetFrames.ts","webpack:///./src/FrameProviders/BackAndForthFrameProvider.ts","webpack:///./src/FrameProviders/CircleFrameProvider.ts","webpack:///./src/LocationProviders/CloakingOrbLocationProvider.ts","webpack:///./src/LocationProviders/CrabLocationProvider.ts","webpack:///./src/LocationProviders/DevilLocationProvider.ts","webpack:///./src/LocationProviders/MoveToMaxThenReset.ts","webpack:///./src/LocationProviders/RandomReapperance.ts","webpack:///./src/LocationProviders/SideAppearOtherSide.ts","webpack:///./src/LocationProviders/SideAppearOtherSideVariesSpeed.ts","webpack:///./src/LocationProviders/SideToSideUpAndDown.ts","webpack:///./src/LocationProviders/Wobble.ts","webpack:///./src/SharedFrames/DevilExplosion.ts","webpack:///./src/SharedFrames/Explosion01.ts","webpack:///./src/SharedFrames/Explosion02.ts","webpack:///./src/SharedFrames/Explosion03.ts","webpack:///./src/SharedFrames/Explosion04.ts","webpack:///./src/SharedFrames/Explosion05.ts","webpack:///./src/Player/GetPhaserLocations.ts","webpack:///./src/Player/PlayerHelper.ts","webpack:///./src/Levels/TimeLimitLevel.ts","webpack:///./src/Levels/WarpLevel.ts","webpack:///./src/Player/PlayerSpawnManager.ts","webpack:///./src/Player/PlayerFormationPart.ts","webpack:///./src/Runners/GenericRunner.ts","webpack:///./src/Runners/PlayerRunner.ts","webpack:///./src/State/Debugging/DebuggingActions.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","gameDimensions","body","document","getElementById","rect","getBoundingClientRect","height","pixelSize","width","Math","floor","fullGameHeight","fullGameWidth","statusBarBottom","gameFieldRight","gameFieldTop","gameFieldBottom","pixelSize2x","gameField","left","top","right","bottom","allReducers","combineReducers","enemyLevelState","playerState","debuggingState","gameState","keyboardState","store","createReduxStore","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","appStore","getState","action","dispatch","getFrameDimensions","frame","length","copyFrame","newFrame","row","newRow","push","copyFrames","frames","newFrames","copyExplosion","explosion","newExplosion","particleFrames","explosionCenterFrame","allFrameDimensions","map","f","allWidths","af","allHeights","max","dimensions","objectKeys","keys","round","random","index","Error","topOffset","bottomOffset","frameCopy","Speeds","Movement","Bullets","Asteroid","SpaceMonster","Piston","Boat","Player","bird","robot","orb","spinner","balloon","crab","bat","down","diagonal","diabolo","devil","slow","fast","aliveSpeed","formingSpeed","warpUpSpeed","player","piston","cloakingOrb","Locations","Orb","Devil","Crab","CloakingOrb","topStart","maxBottom","scatteredMaxBottom","maxTop","spawnLocation","MovementAngles","angles","leftdown","rightdown","FrameTimes","boat","Points","asteroid","spaceMonster","WarpLevelConstants","heightPixelCount","ColorSchemes","lightBlue","lightCyan","lightRed","lightGreen","lightMagenta","fallsWithin","outerLeft","outerRight","outerTop","outerBottom","getLocation","angle","speed","undefined","relativeSpeed","getNextX","getNextY","left1","top1","left2","top2","xd","yd","sqrt","pow","leftOffset","currentLeft","currentTop","direction","getLeftOrRightFromAngle","topLimit","bottomLimit","nextLocation","location","maxLeft","maxRight","randomNumberInRange","CGAColors","black","blue","green","cyan","red","magenta","brown","lightGray","darkGray","yellow","white","validColors","Mutators","Frames","Frame","setColor","colors","convertHexToCGA","forEach","rowIndex","cellColor","cellIndex","useColor","indexOf","colorIndex","replace","parseInt","up","leftup","rightup","extraAngles","leftleftdown","rightrightdown","k","currentX","cos","PI","currentY","sin","state","hitbox1","hitbox2","newAngle","startLeft","startTop","endLeft","endTop","dx","dy","atan2","angle1","angle2","angleDifference","abs","mainHandle","updateStateFunctions","backgroundDrawFunctions","foregroundDrawFunctions","drawFunctions","GameLoop","run","tick","requestAnimationFrame","pause","appState","drawHitboxes","DEBUGGING_renderHitboxes","drawGrid","DEBUGGING_drawGrid","gridDetail","Start","Stop","cancelAnimationFrame","registerUpdateState","filter","registerBackgroundDrawing","registerForegroundDrawing","registerDraw","arr","score","type","increaseScore","payload","lives","setLives","addLife","removeLife","phasers","setPhasers","addPhaser","removePhaser","addLevel","level","setLevel","nextLevel","addLifeAndPhaser","setPause","complexity","setWarpLevelComplexity","playerAlive","setPlayerIsAlive","playerIsAlive","moveLimit","setPlayerMovementLimit","hitboxes","nozzleLocation","setPlayerLocationData","particleState","setPlayerBulletState","cachedCtx","canvas","getContext","ctx","columns","columnIndex","color","x","y","fillStyle","fillRect","resetLevelState","particle","addParticle","particles","addParticles","explosionCenter","shrapnell","addExplosionCenter","setShrapnellState","locations","setPhaserLocations","clearPhaserLocations","explosionCenters","setExplosionCenters","bullet","addBullet","bullets","setBulletState","totalEnemies","setTotalEnemies","enemyState","addOrUpdateEnemy","enemyId","removeEnemy","setEnemyLastFireTick","min","time","factor","query","split","item","kvp","negativepixelSize","BaseEnemy","frameChangeTime","getOffsetFrames","getExplosion","locationProvider","frameProvider","this","frameTickHandler","onFrameChange","offSetFrames","offSets","setFrames","currentFrame","getCurrentFrame","getOffsetLocation","offsetLeft","offsetTop","idCounter","offsetLocation","updateState","beforeDispatch","dispatchCurrentState","getId","coloredExplosion","hitpoints","getHitpoints","hitbox","getHitbox","centerLocation","getCenterLocation","points","getPoints","currentFrameIndex","getCurrentIndex","frameOffsets","getCurrentLocation","increaseSpeed","getFrameCenter","getFrameHitbox","NOTHING","DRAFTABLE","for","DRAFT_STATE","isDraft","isDraftable","Array","isArray","proto","getPrototypeOf","isPlainObject","constructor","isMap","isSet","original","base","const","assign","target","overrides","override","ownKeys","Reflect","getOwnPropertySymbols","obj","getOwnPropertyNames","concat","shallowCopy","invokeGetters","slice","Map","Set","clone","desc","getOwnPropertyDescriptor","writable","configurable","each","iter","entry","isEnumerable","prop","has","thing","is","hasSymbol","hasMap","hasSet","makeIterable","next","self","iterator","iterateMapValues","receiver","isEntries","latest","result","done","makeIterateSetValues","createProxy","draft","drafts","finalized","finalizing","set","modified","copy","add","wrapSetValue","cloned","freeze","deep","isFrozen","clear","delete","dontMutateFrozenCollections","_","ImmerScope","parent","canAutoFreeze","patches","revoke","clonePotentialDraft","defineProperties","mapTraps","proxyMethod","setTraps","iterateSetValues","proxySet","descriptors","assertUnrevoked","peek","prepareCopy","assigned","markChanged","proxyProperty","scope","current","revoked","createHiddenProperty","usePatches","patchListener","inversePatches","leave","enter","finalizeTraps","size","reciever","cb","values","entries","thisArg","traps","reduce","acc","builder","proxyAttr","fn","trap","args","JSON","stringify","markChangesSweep","let","hasArrayChanges","hasMapChanges","hasSetChanges","hasObjectChanges","baseValue","descriptor","hasChanges","isReplaced","markChangesRecursively","objectTraps","arrayTraps","Proxy","revocable","proxy","deleteProperty","owner","setPrototypeOf","arguments","apply","isNaN","reflectTraps","makeTrapsForGetters","prev","assignMap","getters","generateArrayPatches","basePath","delta","start","end","path","op","replaceCount","generatePatchesFromAssigned","assignedValue","origValue","generateSetPatches","unshift","applyPatches","patch","join","splice","configDefaults","useProxies","autoFreeze","process","onAssign","onDelete","onCopy","Immer","config","setUseProxies","produce","produceWithPatches","recipe","defaultBase","hasError","Promise","then","processResult","error","maybeFreeze","arg1","arg2","arg3","ip","createDraft","isManual","finishDraft","setAutoFreeze","modernProxy","legacyProxy","baseDraft","willFinalize","finalize","finalizeTree","exists","generatePatches","root","rootPath","needPatches","finalizeProperty","isDraftProp","isSetMember","immer","Guard","isValidGameKey","allGameKeys","isEnemy","getObjectType","isPlayerAlive","alive","StateProviders","getParticleState","acceletation","hitboxTopOffset","hitboxBottomOffset","coloredFrame","getBulletParticleState","ownerId","explosionShrapnellProvider","particleFrameIndexes","particleFrameIndex","particleFrame","useSpeed","speeds","acceleration","getUpdatedParticleState","nextState","updatedParticle","newLocation","fallsWithinGameField","getEnemyState","enemy","enemies","find","e","baseSpeed","clearGameFieldBackground","additionalColor","gate","drawWhite","lastFiretick","onTimePassed","lastTick","baseTime","calculateTimeSpeedIncrease","global","DEBUGGING_drawGameRect","lineWith","beginPath","strokeStyle","lineWidth","stroke","closePath","middle","bulletState","b","shrapnells","lineTo","Constants","setDebuggingState","setFireInterval","arrowUp","arrowDown","arrowLeft","arrowRight","backspace","f1","f2","space","keyup","keydown","numbers","subscriptions","levelReady","bulletRunner","enemyLevelContentFactory","registerSubscription","drawBackground","drawLevelBanner","setEnemies","monitorLevelWonRun","levelClear","greenCharacters","greenNumbers","roundCharacters","barwidth","roundWidth","charSpacing","levelNumber","sub","barcolor","bartop","leftNumber","rightNumber","leftNumberFrame","rightNumberFrame","levelNumberStartPos","charLeft","stringLevel","toString","rightNumberPosition","getFrameByIndex","draw","setTimeout","twoPixelBullet","onKeyDown","event","code","stopPropagation","preventDefault","keyDown","onKeyUp","keyUp","addEventListener","removeEventListener","resource","maxSizes","getRandomFrameKeyIndex","randomMovementAngle","getRandomArrayElement","robotColor","explosionColor","explosionParticleColor","varyingEnemyColor","reset","even","verticalBounds","randomAngle","getAsteroidOffsetFrames","anglesToUse","speedsToUse","AsteroidEnemy","getAngles","coinFlip","startFrameIndex","frameIndex","maxIndex","returnValue","localState","phaserFrame","EnemyLevelRunner","phaserLocations","pf","handleEnemyHitByplayer","hitEnemy","handleEnemyDestruction","recudeHitpoints","playerHitByParticle","some","playerIsHit","handlePlayerDeath","awardPoints","totalNumberOfEnemies","dispatchExplosion","selfDestruct","es","handleSelfDestruct","phraser","randomEnemy","playerNozzleLocation","randomEnemyCenter","handlePhaser","handleEnemies","enemyHitPlayerDetection","playerBulletHitbox","overlaps","playerHitEnemyDetection","handleHitDetection","newEnemies","addEnemy","newEnemy","newShrapnell","startTick","explosionCenterDelay","playerIsImmortal","doublePixel","playerHitboxAdjustment","playerWidth","playerHeight","getPlayerFrame","localKeyboardState","speedX","speedY","getAngle","nextX","nextY","currentLocation","getNextLocationForPlayer","hitBox","hitBoxes","symbolObservablePonyfill","observable","startEssential","registerListeners","drawStatusBar","drawGameFieldBorder","onload","queryKeyValuePairs","getURLQueryKVPs","search","showPlayGround","showCanvas","showhitboxes","immortal","r42","setWarpGamteComplexity","v","randomString","substring","ActionTypes","INIT","REPLACE","PROBE_UNKNOWN_ACTION","reducer","preloadedState","enhancer","_ref2","currentReducer","currentState","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","subscribe","listener","isSubscribed","listeners","replaceReducer","nextReducer","_ref","outerSubscribe","observer","TypeError","observeState","unsubscribe","getUndefinedStateErrorMessage","actionType","String","reducers","reducerKeys","finalReducers","shapeAssertionError","finalReducerKeys","assertReducerShape","hasChanged","_i","_key","previousStateForKey","nextStateForKey","errorMessage","bindActionCreator","actionCreator","bindActionCreators","actionCreators","boundActionCreators","_defineProperty","enumerableOnly","sym","_objectSpread2","source","getOwnPropertyDescriptors","compose","_len","funcs","arg","a","applyMiddleware","middlewares","_dispatch","middlewareAPI","chain","middleware","g","Function","originalModule","webpackPolyfill","children","newState","findIndex","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","len","marker","runClearTimeout","Item","array","noop","nextTick","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","warpLevelSteps","warpLevelComplexities","0","stepsX","stepsY","1","2","3","4","5","6","7","8","fire","playerExplosion","playerFrame","initState","leftSpawnPosition","topSpawnPosition","hex","numberFrames","lifeFrame","scoreStartPosition","scoreSpacing","phaserStartPosition","phaserSpacing","phaserBackgroundWidth","livesSpacing","lifeFrameWidth","leftNumberLeft","rightNumberLeft","scoreBoardHeight","scoreString","padLeft","cnt","actualSpacing","drawScore","maxPhasersToBeDrawn","drawPhasers","maxLivesToBeDrawn","drawLives","paddedLevelString","rightFrame","leftFrame","drawLevel","padWidth","padLength","padding","currentLevel","currentScore","dispose","levelFactory","begin","TimeLimitLevel","Characters","character","upperCaseCharacter","toUpperCase","charCodeAt","threeDownRandom","fiveDownRandom","spacing","orbSpawnLocations","robotSpawnLocations","bulletColor","shipsToFire","coloredBulletFrame","shipToFire","maxBullets","fireOnFrames","candidates","bottomhitbox","GetShipsReadyToFire","getCandidates","enemyToFire","queuedTofire","mayFire","randomDown","lastEnemy","ceil","getBestAngle","bulletsToFire","above","below","center","angleToPlayer","calculateAngle","calculateAngleDifference","sortFunction","sort","e1","e2","getBestCandiates","candiate","spawnCount","getRandomLocation","verticalSpacing","super","getNextFrame","getMaximumFrameDimensions","BirdEnemy","colorTickHandler","onColorChange","setCurrentFrameColor","nextFrame","uniqueFrames","reverse","DefaultEnemy","getFrames","colorOptions","DevilEnemy","locationDirecntionProvider","getDirection","orbMainFrame","OrbEnemy","currentColorIndex","updateCurrentFrameAndColor","currentColor","offset","offsetCount","jawsOpenTop","explosionColors","jawsClosed","BackAndForthFrameProvider","CircleFrameProvider","indexProvider","canChangeLocationResetHandle","canChangeLocation","sideAngles","attacking","recovering","playerBottomHixbox","getNextLocationAndAngle","MoveToUpDownMaxThenReset","newTop","getUpOrDownFromAngle","doubleHeight","getRandomLeft","SideAppearOtherSide","getNextLocationWithinBoundaries","slowSpeed","fastSpeed","slowFrames","fastFrames","baseSlowSpeed","baseFastSpeed","SideToSideUpAndDownLocationProvider","Wobble","angleSwitchTimeout","centerColor","shrapnellColor","sourceLeft","sourceTop","targetLeft","targetTop","distance","calculateDistance","playerHitboxes","hitMiddle","hitBottom","timeUp","handleRespawn","backgroundColor","warpGateInitialleft","gameLoopSubscriptions","warpGate","calculateWarpGate","badSpace","getWallHitboxes","drawWarpBackground","monitorLevelWon","hitDetection","wg","sb","leftDanger","rightDanger","bs","stepSizesX","stepSizesY","safeZone","pixelsToGo","pixelsToDo","stepSizeY","stepSizeX","verticalMove","particleTravelDistance","nozzleDistance","playerFormationFrames","getPlayerFormationFrames","nozzleTopPart","nozzleBottomPart","leftWingPart","rightWingPart","formationSpeed","allMovingParts","formationInProgress","currentMovementLimit","setup","limit","nozzleTip","nozzleBottom","leftWing","rightWing","getFrameReturner","createParticles","setSpeed","traveling","playerMovementHandler","every","minimumDistance","getFrame","currentLeftLocation","currentTopLocation","targetLeftLocation","targetTopLocation","remainingExplosions","ec","handleExplosionCenters","handleBullets","handleShrapnell","newHitbox","getPlayerBullet","handlePlayerBulletMovement","handlePlayerBulletFiring","playerBulletFrame"],"mappings":"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AAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,MAEf,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,MAEzB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAA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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 47);\n","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { GameDimensions } from \"../Models/GameDimensions\";\r\n\r\n/**\r\n * Module:          Dimension Provider\r\n * Responsibility:  Provide dimensions for game objects. Not a part of the State because the entire game uses it.\r\n */\r\n\r\nlet gameDimensions: GameDimensions;\r\n\r\n/**\r\n * dimensionProvider. Single function responsible for all dimensions important to the game.\r\n * @param {Node} node. Node\r\n * @returns {GameDimensions}. An object with dimensions.\r\n */\r\nexport default function dimensionProvider(): GameDimensions {\r\n    if (!gameDimensions) {\r\n\r\n        const body = document.getElementById(\"body\") as HTMLBodyElement;\r\n\r\n        let rect: DOMRect;\r\n        if (!body) {\r\n            // Not a nice solution, but the dimensionProvider is called from within unit tests and I do not want\r\n            // to add elements.\r\n            rect = { height: 1024 } as DOMRect;\r\n        } else {\r\n            rect = body.getBoundingClientRect();\r\n        }\r\n\r\n        let pixelSize = 0;\r\n        if (rect.width < rect.height) {\r\n            pixelSize = Math.floor(rect.width / 160);\r\n        } else {\r\n            pixelSize = Math.floor(rect.height / 100);\r\n        }\r\n\r\n        const fullGameHeight = pixelSize * 100;\r\n        const fullGameWidth = pixelSize * 160;\r\n\r\n        const statusBarBottom = pixelSize * 6;\r\n\r\n        const gameFieldLeft = pixelSize;\r\n        const gameFieldRight = fullGameWidth - pixelSize;\r\n        const gameFieldTop = statusBarBottom + pixelSize;\r\n        const gameFieldBottom = fullGameHeight - pixelSize;\r\n\r\n        const gameFieldWidth = gameFieldRight - gameFieldLeft;\r\n        const gameFieldHeight = gameFieldBottom - gameFieldTop;\r\n\r\n        gameDimensions = {\r\n            fullGameWidth,\r\n            fullGameHeight,\r\n            statusBarBottom,\r\n            pixelSize,\r\n            pixelSize2x: pixelSize * 2,\r\n            gameField: {\r\n                left: gameFieldLeft,\r\n                top: gameFieldTop,\r\n                right: gameFieldRight,\r\n                bottom: gameFieldBottom,\r\n                width: gameFieldWidth,\r\n                height: gameFieldHeight,\r\n            }\r\n        };\r\n    }\r\n\r\n    return gameDimensions;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { Action, combineReducers, createStore, Store } from \"redux\";\r\nimport ApplicationState from \"./ApplicationState\";\r\nimport debuggingReducer from \"./Debugging/DebuggingReducer\";\r\nimport enemyLevelReducer from \"./EnemyLevel/EnemyLevelReducer\";\r\nimport gameStateReducer from \"./Game/GameStateReducer\";\r\nimport keyboardStateReducer from \"./Keyboard/KeyboardStateReducer\";\r\nimport playerReducer from \"./Player/PlayerReducer\";\r\n\r\n/**\r\n * Module:          Store\r\n * Responsibility:  Handles the redux store\r\n */\r\n\r\nconst allReducers = combineReducers({\r\n    enemyLevelState: enemyLevelReducer,\r\n    playerState: playerReducer,\r\n    debuggingState: debuggingReducer,\r\n    gameState: gameStateReducer,\r\n    keyboardState: keyboardStateReducer\r\n});\r\n\r\nconst store = createReduxStore();\r\n\r\nexport function createReduxStore(): Store<ApplicationState> {\r\n    return createStore(\r\n        allReducers,\r\n        (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__());\r\n}\r\n\r\n/**\r\n * Returns the store\r\n * @returns {Store}. The redux store.\r\n */\r\nexport function appStore(): Store<ApplicationState> {\r\n    return store;\r\n}\r\n\r\n/**\r\n * Returns the ApplicationState\r\n * @returns {ApplicationState}. The application state.\r\n */\r\nexport function appState(): ApplicationState {\r\n    return appStore().getState();\r\n}\r\n\r\nexport function dispatch(action: Action): void {\r\n    store.dispatch(action);\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport Explosion from \"../Models/Explosion\";\r\nimport { GameLocation } from \"../Models/GameLocation\";\r\nimport { GameRectangle } from \"../Models/GameRectangle\";\r\nimport { GameSize } from \"../Models/GameSize\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport { Frame } from \"../Types\";\r\n\r\n/**\r\n * Module:          Frame\r\n * Responsibility:  Module for dealing with Frames.\r\n */\r\n\r\n/**\r\n * Returns the dimensions of a frame in PX.\r\n * @param {Frame} frame. A frame.\r\n * @returns {width, height}.\r\n */\r\nexport function getFrameDimensions(frame: Frame): GameSize {\r\n\r\n    const pixelSize = dimensionProvider().pixelSize;\r\n\r\n    return {\r\n        width: frame[0].length * pixelSize,\r\n        height: frame.length * pixelSize,\r\n    };\r\n}\r\n\r\n/**\r\n * Returns the maximum width and height for an array of frames.\r\n * @param {Frame[]} frames. Fram array.\r\n * @param {number?} pixelSize. Optional.\r\n */\r\nexport function getMaximumFrameDimensions(frames: Frame[]): GameSize {\r\n    const allFrameDimensions = frames.map((f) => getFrameDimensions(f));\r\n\r\n    const allWidths = allFrameDimensions.map((af) => af.width);\r\n    const allHeights = allFrameDimensions.map((af) => af.width);\r\n\r\n    return {\r\n        width: Math.max(...allWidths),\r\n        height: Math.max(...allHeights),\r\n    };\r\n}\r\n\r\n/**\r\n * Calculates a location object where the center of a frame resides.\r\n * @param {number} left. Left coordinate.\r\n * @param {number} top. Top coordinate.\r\n * @param {frame} frame.\r\n */\r\nexport function getFrameCenter(left: number, top: number, frame: Frame): GameLocation {\r\n    const dimensions = getFrameDimensions(frame);\r\n\r\n    return {\r\n        left: left + dimensions.width / 2,\r\n        top: top + dimensions.height / 2,\r\n    };\r\n}\r\n\r\n/**\r\n * Returns a random frame index.\r\n * @param {Frames} frames.\r\n * @returns {number}. Frame index.\r\n */\r\nexport function getRandomFrameKeyIndex(frames: Frame[]): number {\r\n    const objectKeys = Object.keys(frames).length - 1;\r\n\r\n    return Math.round(Math.random() * objectKeys);\r\n}\r\n\r\n/**\r\n * Returns a frame by index. Returns undefined if the frame is not defined.\r\n * @param {Frames} frames. Frames.\r\n * @param {number} index. Index of the frame.\r\n * @returns {Frame | undefined}. Returns the frame if one was found for the passed index, otherwise returns undefined.\r\n */\r\nexport function getFrameByIndex(frames: Frame[], index: number): Frame {\r\n    const frame = frames[index];\r\n\r\n    if (!frame) {\r\n        throw new Error(\"No frame found\");\r\n    }\r\n\r\n    return frame;\r\n}\r\n\r\n/**\r\n * getFrameHitbox\r\n * @param {number} Left. Left coordinate.\r\n * @param {number} top. Top coordinate.\r\n * @param {Frame} frame. A frame\r\n * @param {number} pixelSize.\r\n * @param {number} topOffset.\r\n * @param {number} bottomOffset.\r\n * @returns {GameRectangle}. The frame's hitbox.\r\n */\r\nexport function getFrameHitbox(left: number, top: number, frame: Frame, topOffset: number = 0, bottomOffset: number = 0): GameRectangle {\r\n    const { width, height } = getFrameDimensions(frame);\r\n\r\n    return {\r\n        top: top + topOffset,\r\n        left,\r\n        right: left + width,\r\n        bottom: top + height + bottomOffset,\r\n    };\r\n}\r\n\r\n/**\r\n * Uses spreads to create a new Frame.\r\n * @param {Frame} frame. The frame.\r\n * @returns {Frame}. A copy of the original frame.\r\n */\r\nexport function copyFrame(frame: Frame): Frame {\r\n    const newFrame: Frame = [];\r\n\r\n    for (const row of frame) {\r\n        const newRow = [...row];\r\n        newFrame.push(newRow);\r\n    }\r\n\r\n    return newFrame;\r\n}\r\n\r\n/**\r\n * Uses spreads to create new Frames.\r\n * @param {Frames} frames. Frames to copy.\r\n * @return {Frames}. Fresh copy of the Frames.\r\n */\r\nexport function copyFrames(frames: Frame[]): Frame[] {\r\n    const newFrames: Frame[] = [];\r\n\r\n    for (const frame of frames) {\r\n        const newFrame = copyFrame(frame);\r\n        newFrames.push(newFrame);\r\n    }\r\n\r\n    return newFrames;\r\n}\r\n\r\nexport function getFrameReturner(frame: Frame): () => Frame {\r\n    const frameCopy = copyFrame(frame);\r\n\r\n    return () => frameCopy;\r\n}\r\n\r\nexport function copyExplosion(explosion: Explosion): Explosion {\r\n    const newExplosion = { ...explosion };\r\n    newExplosion.particleFrames = copyFrames(explosion.particleFrames);\r\n    newExplosion.explosionCenterFrame = copyFrame(explosion.explosionCenterFrame);\r\n\r\n    return explosion;\r\n}\r\n\r\nexport function getExplosionReturner(explosion: Explosion): () => Explosion {\r\n    const newExplosion = copyExplosion(explosion);\r\n\r\n    return () => newExplosion;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport getShipSpawnLocation from \"../Providers/PlayerSpawnLocationProvider\";\r\nimport { angles } from \"./Angles\";\r\nimport CGAColors from \"./CGAColors\";\r\n\r\n/**\r\n * Module:          All speeds for all objects\r\n * Responsibility:  Define constants at which speed an enemy moves.\r\n */\r\n\r\nconst {\r\n    gameField,\r\n    pixelSize\r\n} = dimensionProvider();\r\n\r\n// Collective namespace for all speeds.\r\nexport namespace Speeds {\r\n\r\n    export namespace Movement {\r\n        export const bird = 1.3;\r\n        export const robot = 1.3;\r\n        export const orb = 0.1;\r\n        export const spinner = 1.3;\r\n        export const balloon = 1.3;\r\n        export const crab = 1.3;\r\n        export const bat = 1.3;\r\n        export namespace Asteroid {\r\n            export const down = [2, 4, 6, 8, 10];\r\n            export const diagonal = [4, 5, 7, 10, 12];\r\n        }\r\n        export namespace SpaceMonster {\r\n            export const down = [2, 4, 6, 8, 10];\r\n            export const diagonal = [4, 4, 7, 10, 12];\r\n        }\r\n        export const diabolo = 1.3;\r\n        export const devil = 1.3;\r\n\r\n        export namespace Piston {\r\n            export const slow = 1.3;\r\n            export const fast = 3;\r\n        }\r\n\r\n        export namespace Boat {\r\n            export const slow = 1.3;\r\n            export const fast = 3;\r\n\r\n        }\r\n        export namespace Player {\r\n            export const aliveSpeed = 9;\r\n            export const formingSpeed = 4;\r\n            export const warpUpSpeed = 3;\r\n        }\r\n    }\r\n\r\n    export namespace Bullets {\r\n        export const player = 38;\r\n        export const robot = 11;\r\n        export const orb = 11;\r\n        export const spinner = 11;\r\n        export const balloon = 11;\r\n        export const piston = 11;\r\n        export const diabolo = 11;\r\n        export const devil = 11;\r\n        export const crab = 11;\r\n        export const bat = 11;\r\n        export const cloakingOrb = 11;\r\n        export const bird = 11;\r\n\r\n    }\r\n}\r\n\r\nexport namespace Locations {\r\n    // All locations were determined by drawing a grid over screenshot.\r\n    export namespace robot {\r\n        export const topStart = gameField.top + pixelSize * 18;\r\n        export const maxBottom = gameField.top + pixelSize * 65;\r\n        export const scatteredMaxBottom = gameField.top + pixelSize * 45;\r\n    }\r\n\r\n    export namespace Orb {\r\n        export const topStart = gameField.top + pixelSize * 18;\r\n        export const maxTop = gameField.top + pixelSize * 5;\r\n        export const maxBottom = gameField.top + pixelSize * 55;\r\n    }\r\n    export namespace Piston {\r\n        export const topStart = gameField.top + pixelSize * 18;\r\n    }\r\n    export namespace Devil {\r\n        export const maxBottom = gameField.top + pixelSize * 60;\r\n    }\r\n\r\n    export namespace Crab {\r\n        export const topStart = gameField.top + pixelSize * 18;\r\n    }\r\n    export namespace Player {\r\n        export const spawnLocation = getShipSpawnLocation();\r\n    }\r\n\r\n    export namespace Boat {\r\n        export const topStart = pixelSize * 18;\r\n    }\r\n    export namespace CloakingOrb {\r\n        export const maxBottom = pixelSize * 55;\r\n    }\r\n}\r\n\r\n// Collective namespace for all movement angles.\r\nexport namespace MovementAngles {\r\n    export const bird = [2, 358, 178, 182];\r\n    export const robot = 5;\r\n    export const spinner = [2, 358, 178, 182];\r\n    export const piston = 170;\r\n    export const diabolo = [2, 358, 178, 182];\r\n    export const devil = [angles.leftdown, angles.rightdown];\r\n}\r\n\r\n// Collective namespace for all frametimes.\r\nexport namespace FrameTimes {\r\n    export const bird = 100;\r\n    export const robot = 200;\r\n    export const orb = 200;\r\n    export const spinner = 100;\r\n    export const balloon = 100;\r\n    export const piston = 200;\r\n    export const diabolo = 200;\r\n    export const crab = 100;\r\n    export const bat = 100;\r\n    export const boat = 200;\r\n    export  const cloakingOrb = 150;\r\n}\r\n\r\nexport namespace Points {\r\n    export const bird = 200;\r\n    export const robot = 200;\r\n    export const orb = 300;\r\n    export const spinner = 200;\r\n    export const balloon = 200;\r\n    export const asteroid = 300;\r\n    export const piston = 200;\r\n    export const diabolo = 200;\r\n    export const spaceMonster = 200;\r\n    export const devil = 100;\r\n    export const crab = 200;\r\n    export const bat = 200;\r\n    export const boat = 200;\r\n    export const cloakingOrb = 200;\r\n\r\n}\r\n\r\nexport namespace WarpLevelConstants {\r\n    export const heightPixelCount = 72;\r\n    export const top = pixelSize * 8;\r\n    export const height = heightPixelCount * pixelSize;\r\n    export const left = gameField.left + pixelSize;\r\n    export const right = gameField.right - pixelSize * 2;\r\n    export const bottom = top + height;\r\n    export const width = pixelSize * 16;\r\n}\r\n\r\nexport namespace ColorSchemes {\r\n    export const robot = [\r\n        CGAColors.lightBlue,\r\n        CGAColors.lightCyan,\r\n        CGAColors.lightRed,\r\n        CGAColors.lightGreen,\r\n        CGAColors.lightBlue,\r\n        CGAColors.lightMagenta,\r\n    ];\r\n\r\n    export const cloakingOrb = [\r\n        CGAColors.lightBlue,\r\n        CGAColors.lightCyan,\r\n        CGAColors.lightRed,\r\n        CGAColors.lightGreen,\r\n        CGAColors.lightBlue,\r\n        CGAColors.lightMagenta,\r\n    ];\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { GameLocation } from \"../Models/GameLocation\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport speedProvider from \"../Providers/SpeedProvider\";\r\nimport { Angle } from \"../Types\";\r\nimport { getLeftOrRightFromAngle, getNextX, getNextY } from \"./Geometry\";\r\nimport { randomNumberInRange } from \"./Lib\";\r\n\r\n/**\r\n * Module:          Location utilities\r\n * Responsibility:  Offer utility functions for stuff that needs to know where it is.\r\n */\r\n\r\nconst {\r\n    gameField,\r\n    pixelSize\r\n} = dimensionProvider();\r\n\r\n/**\r\n * Calculate distance in pixels.\r\n * @param {number} left1. 1st left coordinate.\r\n * @param {number} top1. 1st top coordinate.\r\n * @param {number} left2. 2nd left coordinate.\r\n * @param {number} top2. 2nd right coordinate.\r\n * @returns {number}. Distance in actual pixels.\r\n */\r\nexport function calculateDistance(left1: number, top1: number, left2: number, top2: number): number {\r\n\r\n    const xd = left1 - left2;\r\n    const yd = top1 - top2;\r\n\r\n    return Math.sqrt(Math.pow(xd, 2) + Math.pow(yd, 2));\r\n}\r\n\r\n/**\r\n * Checks if a location falls within an area.\r\n * @param {number} left. Left coordinate\r\n * @param {number} top. Top coordinate.\r\n * @param {number} outerTop. Top of the area.\r\n * @param {number} outerBottom. Bottom of the area.\r\n * @param {number} outerLeft. Left of the area.\r\n * @param {number} outerRight. Right of the area.\r\n * @returns {boolean}. Returns true if the given coordinates fall within the given limits.\r\n */\r\nexport function fallsWithin(left: number, right: number, top: number, bottom: number, outerLeft: number, outerRight: number, outerTop: number, outerBottom: number): boolean {\r\n\r\n    const yBounds = bottom >= outerTop && top <= outerBottom;\r\n    const xBounds = right >= outerLeft && left <= outerRight;\r\n\r\n    const res = xBounds && yBounds;\r\n\r\n    return res;\r\n}\r\n\r\n/**\r\n * fallsWithinGameField. Returns true if the location falls within the game field\r\n * @param {number} left. Left coordinate.\r\n * @param {number} right. Right coordinate.\r\n * @param {number} top. Top coordinate.\r\n * @param {number} bottom. Bottom coordinate.\r\n * @returns {boolean}. True if the given coordinates fall within the game field\r\n */\r\nexport function fallsWithinGameField(left: number, right: number, top: number, bottom: number): boolean {\r\n    const res = fallsWithin(left, right, top, bottom, gameField.left, gameField.right, gameField.top, gameField.bottom - pixelSize);\r\n\r\n    return res;\r\n}\r\n\r\n/**\r\n * Calculates a location.\r\n * @param {number} left. Left coordinate.\r\n * @param {number} top. Top coordinate.\r\n * @param {Angle} angle. The angle of the object.\r\n * @param {number} speed. The speed the of the object\r\n * @returns {GameLocation}. The location of the object. If angle is undefined the original location is returns as a new object.\r\n */\r\nexport function getLocation(left: number, top: number, angle: Angle, speed: number): GameLocation {\r\n\r\n    if (angle === undefined) {\r\n        return {\r\n            left,\r\n            top,\r\n        };\r\n    }\r\n\r\n    const relativeSpeed = speedProvider(speed);\r\n\r\n    const nextLeft = getNextX(angle, relativeSpeed, left);\r\n    const nextTop = getNextY(angle, relativeSpeed, top);\r\n\r\n    return {\r\n        left: nextLeft,\r\n        top: nextTop,\r\n    };\r\n}\r\n\r\n/**\r\n * Offsets a location using the given offsers and return a new location.\r\n * @param {number} left. Left coordinate.\r\n * @param {number} top. Top coordinate.\r\n * @param {number} leftOffset. Left offset in real pixels.\r\n * @param {number} topOffset. Top offset in real pixels.\r\n * @returns {location}. A new location offset to animation overlap.\r\n */\r\nexport function getOffsetLocation(left: number, top: number, leftOffset: number, topOffset: number): GameLocation {\r\n    return {\r\n        left: left + leftOffset,\r\n        top: top + topOffset,\r\n    };\r\n}\r\n\r\n/**\r\n * getNextLocationWithinBoundaries. Returns the next location that falls within the given boundaries.\r\n * This function will reset the left and right positions.\r\n * @param {number} currentLeft. Current left position of the object.\r\n * @param {number} currentTop. Current top position of the object\r\n * @param {number} width. Width of the object.\r\n * @param {number} angle. Travel angle.\r\n * @param {number} speed. Speed of travel.\r\n * @param {number} maxTop. Maximum top position before the object must go down.\r\n * @param {number} maxBottom. Maximum bottom position before the object must go up.\r\n */\r\nexport function getNextLocationWithinBoundaries(\r\n    currentLeft: number,\r\n    currentTop: number,\r\n    width: number,\r\n    angle: number,\r\n    speed: number,\r\n    maxTop: number,\r\n    maxBottom: number): GameLocation {\r\n\r\n    // Get the next location, this location might fall outside the boundaries.\r\n    let { left, top } = getLocation(currentLeft, currentTop, angle, speed);\r\n\r\n    // Determine which way the enemy is rought moving, left or right. This\r\n    // determine is we use the left or rigth side of the gamfield to\r\n    // determine if the enemy is moving off screen.\r\n\r\n    const direction = getLeftOrRightFromAngle(angle);\r\n    if (direction === \"right\") {\r\n        if (left - width > gameField.right) {\r\n            left = gameField.left - width;\r\n        }\r\n    } else if (direction === \"left\") {\r\n        if (left + width < gameField.left) {\r\n            left = gameField.right + width;\r\n        }\r\n    }\r\n\r\n    if (top > maxBottom) {\r\n        top = maxTop;\r\n    }\r\n\r\n    return { left, top };\r\n}\r\n\r\n/**\r\n * getNextLocationAndAngle. Returns a new location and angle (if required). This function will also flip angles to ensure\r\n * an object bounces off the outer limits. The left and right limit are the gameField.left and right coordinate\r\n * Top and bottom are passed as a parameter.\r\n * @param {number} currentLeft. Current left position of the object.\r\n * @param {number} currentTop. Current top position of the object.\r\n * @param {number} angle. Current angle of the object.\r\n * @param {number} speed. Speed of the object.\r\n * @param {number} width. Width o the object.\r\n * @param {number} height. Height of the object.\r\n * @param {number} topLimit. top limit. This is as high as the top coordiante can go.\r\n * @param {number} bottomLimit. bottom limit. This is as high as the bottom limit can go.\r\n */\r\nexport function getNextLocationAndAngle(currentLeft: number, currentTop: number, angle: number, speed: number, width: number, height: number, topLimit: number, bottomLimit: number): { location: GameLocation, angle: number } {\r\n    const nextLocation = getLocation(currentLeft, currentTop, angle, speed);\r\n\r\n    if (nextLocation.left <= gameField.left || nextLocation.left + width >= gameField.right) {\r\n        angle = 180 - angle;\r\n    }\r\n\r\n    if (nextLocation.top <= topLimit || nextLocation.top >= bottomLimit - height) {\r\n        angle *= -1;\r\n    }\r\n\r\n    // Grab in a fresh location in case the angle was changed.\r\n    const location = getLocation(nextLocation.left, nextLocation.top, angle, speed);\r\n\r\n    return {\r\n        location,\r\n        angle\r\n    };\r\n}\r\n\r\n/**\r\n * Returns a random location within passed limits.\r\n * @param {number} maxLeft. Maximum left position.\r\n * @param {number} maxRight. Maximum right position.\r\n * @param {number} maxTop. Maximum top position.\r\n * @param {number} maxBottom. Maximum bottom position.\r\n * @returns {GameLocation}. A random location.\r\n */\r\nexport function getRandomLocation(maxLeft: number, maxRight: number, maxTop: number, maxBottom: number): GameLocation {\r\n    const left = randomNumberInRange(maxRight, maxLeft);\r\n    const top = randomNumberInRange(maxBottom, maxTop);\r\n\r\n    return {\r\n        left,\r\n        top\r\n    };\r\n}","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          CGA Colors\r\n * Responsibility:  Contains color for the CGA 16 color pallet.\r\n */\r\n\r\nconst CGAColors = {             // Color hex code. Used to set the color of assets.\r\n    black: \"#000000\",           // 0\r\n    blue: \"#0000AA\",            // 1\r\n    green: \"#00AA00\",           // 2\r\n    cyan: \"#00AAAA\",            // 3\r\n    red: \"#AA0000\",             // 4\r\n    magenta: \"#AA00AA\",         // 5\r\n    brown: \"#AA5500\",           // 6\r\n    lightGray: \"#AAAAAA\",       // 7\r\n    darkGray: \"555555\",         // 8\r\n    lightBlue: \"#5555FF\",       // 9\r\n    lightGreen: \"#55FF55\",      // A\r\n    lightCyan: \"#55FFFF\",       // B\r\n    lightRed: \"#FF5555\",        // C\r\n    lightMagenta: \"#FF55FF\",    // D\r\n    yellow: \"#FFFF55\",          // E\r\n    white: \"#FFFFFF\",           // F\r\n    // Varies                   // V. Special color that flags a pixel as varies in color.\r\n};\r\n\r\nexport const validColors = Object.keys(CGAColors).map((key) => (CGAColors as any)[key]);\r\n\r\nexport default CGAColors;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { Frame as FrameType } from \"../Types\";\r\nimport hexToCGAConverter from \"./HexToCGAConverter\";\r\n\r\n/**\r\n * Module:          Functions that mutate frames.\r\n * Responsibility:  Update frames with colors.\r\n */\r\n\r\nnamespace Mutators {\r\n\r\n    export namespace Frames {\r\n\r\n        /**\r\n         * Sets a cell's color to the passed color. Doesn't matter if they're variable (V).\r\n         * @param {Frames} frames. All frames.\r\n         */\r\n        export function setColor(frames: FrameType[], ...colors: string[]): void {\r\n            for (const frame of frames) {\r\n                Frame.setColor(frame, ...colors);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Updates a frame to actual CGA colors.\r\n         * @param {Frames} frames. All frames.\r\n         */\r\n        export function convertHexToCGA(frames: FrameType[]): void {\r\n            for (const frame of frames) {\r\n                Frame.convertHexToCGA(frame);\r\n            }\r\n        }\r\n    }\r\n\r\n    export namespace Frame {\r\n        /**\r\n         * Set the predefined color for a single frame.\r\n         * @param {Frame} frame. A single frame.\r\n         */\r\n        export function convertHexToCGA(frame: FrameType) {\r\n            frame.forEach((row, rowIndex) => {\r\n                row.forEach((cellColor, cellIndex) => {\r\n                    if (cellColor !== \"0\") {\r\n                        frame[rowIndex][cellIndex] = hexToCGAConverter(cellColor);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Sets a frame colors when the color is not black (\"0\")\r\n         * @param {Frame} frame. A frame\r\n         * @param {string} color. A color\r\n         */\r\n        export function setColor(frame: FrameType, ...colors: string[]) {\r\n            if (colors.length === 0) {\r\n                throw new Error(\"No colors\");\r\n            }\r\n            frame.forEach((row, rowIndex) => {\r\n                row.forEach((cellColor, cellIndex) => {\r\n                    if (cellColor !== \"0\") {\r\n                        let useColor = \"\";\r\n                        if (cellColor.indexOf(\"V\") !== -1) {\r\n                            const colorIndex = cellColor.replace(\"V\", \"\");\r\n                            if (colorIndex === \"\") {\r\n                                // if the V cell has no index, just pick the first color.\r\n                                useColor = colors[0];\r\n                            } else {\r\n                                useColor = colors[parseInt(colorIndex, 10)];\r\n                            }\r\n                        } else {\r\n                            // Not a V, set the color.\r\n                            useColor = colors[0];\r\n                        }\r\n\r\n                        if (useColor === undefined || useColor === \"\") {\r\n                            throw Error(\"Color shoud not be undefined\");\r\n                        }\r\n\r\n                        frame[rowIndex][cellIndex] = useColor;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default Mutators;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Angles\r\n * Responsibility:  Define the simple angles\r\n */\r\n\r\nexport const angles = {\r\n    left: 180,\r\n    right: 0,\r\n    up: 270,\r\n    down: 90,\r\n    leftup: 235,\r\n    rightup: 325,\r\n    leftdown: 135,\r\n    rightdown: 45,\r\n};\r\n\r\nexport const extraAngles = {\r\n    leftleftdown: 155,\r\n    rightrightdown: 25\r\n};\r\n\r\n/**\r\n * Returns all angles as numbers.\r\n * @returns {number[]}.\r\n */\r\nexport function getAngles(): number[] {\r\n    return Object.keys(angles).map((k) => (angles as any)[k] as number);\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { angles } from \"../Constants/Angles\";\r\nimport { GameRectangle } from \"../Models/GameRectangle\";\r\nimport KeyboardState from \"../State/Keyboard/KeyboardState\";\r\nimport { Angle } from \"../Types\";\r\n\r\n/**\r\n * Module:          Geometry\r\n * Responsibility:  Contains geometry functions.\r\n */\r\n\r\n/**\r\n * Gets the next X coordinats based on the angle, speed and the current X coordinate.\r\n * @param {number} angle. The angle.\r\n * @param {number} speed. The speed.\r\n * @param {number} current. The current X coordinate.\r\n * @returns {number}. The next X coordinate.\r\n */\r\nexport function getNextX(angle: number, speed: number, currentX: number): number {\r\n    return Math.cos(angle * Math.PI / 180) * speed + currentX;\r\n}\r\n\r\n/**\r\n * Gets the next Y coordinate based on the angle, speed and the current Y coordinate.\r\n * @param {number} angle. The angle.\r\n * @param {number} speed. The speed.\r\n * @param {number} current. The current X coordinate.\r\n * @returns {number}. The next Y coordinate.\r\n */\r\nexport function getNextY(angle: number, speed: number, currentY: number): number {\r\n    return Math.sin(angle * (Math.PI / 180)) * speed + currentY;\r\n}\r\n\r\n/**\r\n * getAngle.\r\n * @param {KeyboardState} state. Current keyboard dstate\r\n * @returns {number}. The angle. -1 indicates no movement.\r\n */\r\nexport function getAngle(state: KeyboardState): number {\r\n    let angle = -1;\r\n    if (state.up && state.left) {\r\n        angle = angles.leftup;\r\n    } else if (state.up && state.right) {\r\n        angle = angles.rightup;\r\n    } else if (state.down && state.left) {\r\n        angle = angles.leftdown;\r\n    } else if (state.down && state.right) {\r\n        angle = angles.rightdown;\r\n    } else if (state.left) {\r\n        angle = angles.left;\r\n    } else if (state.right) {\r\n        angle = angles.right;\r\n    } else if (state.up) {\r\n        angle = angles.up;\r\n    } else if (state.down) {\r\n        angle = angles.down;\r\n    }\r\n\r\n    return angle;\r\n}\r\n\r\n/**\r\n * Returns true if two hitboxes overlap.\r\n * @param {GameRectangle | undefined} hitbox1.\r\n * @param {GameRectangle | undefined} hitbox2.\r\n * @returns {boolean}. True if overlap. If either hibox is undefined, returns false.\r\n */\r\nexport function overlaps(hitbox1: GameRectangle | undefined, hitbox2: GameRectangle | undefined): boolean {\r\n\r\n    if (hitbox1 === undefined || hitbox2 === undefined) {\r\n        return false;\r\n    }\r\n\r\n    if (hitbox1.right < hitbox2.left || hitbox1.left > hitbox2.right) {\r\n        return false;\r\n    }\r\n\r\n    if (hitbox1.bottom < hitbox2.top || hitbox1.top > hitbox2.bottom) {\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/**\r\n * returns the reverse angle\r\n * @param {number} angle. An angle in degrees\r\n * @returns {number}. The angle in the opposite direction.\r\n */\r\nexport function reverseDegreeAngle(angle: number): number {\r\n    let newAngle = angle += 180;\r\n\r\n    if (newAngle > 360) {\r\n        newAngle -= 360;\r\n    }\r\n\r\n    return newAngle;\r\n}\r\n\r\n/**\r\n * Calculates the angle from the source location to the target location.\r\n * @param {number} startLeft. Left begin point.\r\n * @param {number} startTop. Top begin point.\r\n * @param {number} endLeft. Left end point.\r\n * @param {number} endTop. Top end pint.\r\n * @returns {number | undefined}. The angle to towards the target in degrees.\r\n */\r\nexport function calculateAngle(startLeft: number, startTop: number, endLeft: number, endTop: number): number | undefined {\r\n    const dx = endLeft - startLeft;\r\n    const dy = endTop - startTop;\r\n\r\n    // Singularity.\r\n    if (dx === 0 && dy === 0) {\r\n        return undefined;\r\n    }\r\n\r\n    return Math.atan2(dy, dx) * 180 / Math.PI;\r\n}\r\n\r\n/**\r\n * Calculates the difference between two angles.\r\n * @param {number} angle1. Angle 1 in degrees.\r\n * @param {number} angle2. Angle 2 in degrees.\r\n * @returns {number}. The difference, in degrees, between the angles\r\n * Source: https://stackoverflow.com/questions/1878907/the-smallest-difference-between-2-angles\r\n */\r\nexport function calculateAngleDifference(angle1: number, angle2: number): number {\r\n    const absoluteAngleDifference = Math.abs(angle1 - angle2);\r\n    const angleDifference = (absoluteAngleDifference + 180) % 360 - 180;\r\n    return Math.abs(angleDifference);\r\n}\r\n\r\n/**\r\n * Checks the angle if it is headed to the left or right.\r\n * Returns undefined if the angle is up or down.\r\n * @param {number} angle. an angle.\r\n * @returns {\"left\" | \"right\" | \"undefined\"}. Returns undefined if there is no left or right direction.\r\n */\r\nexport function getLeftOrRightFromAngle(angle: Angle): \"left\" | \"right\" | undefined {\r\n    if (angle === undefined) {\r\n        return undefined;\r\n    }\r\n\r\n    if (angle > 270 && angle <= 360 || angle >= 0 && angle < 90) {\r\n        return \"right\";\r\n    } else if (angle > 90 && angle < 270) {\r\n        return \"left\";\r\n    }\r\n}\r\n\r\n/**\r\n * Checks if the angle is headed u or down.\r\n * @param {Angle} angle. The angle\r\n * @returns {\"up\" | \"down\" | undefined}. Returns undefined if the angle is not going up or down.\r\n */\r\nexport function getUpOrDownFromAngle(angle: Angle): \"up\" | \"down\" | undefined {\r\n    if (angle === undefined) {\r\n        return undefined;\r\n    }\r\n\r\n    if (angle === 0 || angle === 360 || angle === 180) {\r\n        return undefined;\r\n    } else if (angle > 180 && angle < 360) {\r\n        return \"up\";\r\n    } else if (angle > 0 && angle < 180) {\r\n        return \"down\";\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { DEBUGGING_drawGrid, DEBUGGING_renderHitboxes } from \"./Debugging/Debugging\";\r\nimport { appState } from \"./State/Store\";\r\nimport { TickFunction } from \"./Types\";\r\n\r\n/**\r\n * Module:          GameLoop\r\n * Responsibility:  Handles all functions that should be called within the GameLoop.\r\n */\r\n\r\n/**\r\n * A handle for the main loop.\r\n */\r\nlet mainHandle: number | undefined;\r\n\r\n/**\r\n * Functions that subscripbe to the game tick.\r\n */\r\nlet updateStateFunctions: TickFunction[] = [];\r\n\r\n/**\r\n * Functions that perform background drawing.\r\n */\r\nlet backgroundDrawFunctions: Array<() => void> = [];\r\n\r\nlet foregroundDrawFunctions: Array<() => void> = [];\r\n\r\n/**\r\n * Functions that draw.\r\n */\r\nlet drawFunctions: Array<() => void> = [];\r\n\r\nexport namespace GameLoop {\r\n    /**\r\n     * Start game loop\r\n     */\r\n    export function Start(): void {\r\n        mainHandle = window.requestAnimationFrame(run);\r\n    }\r\n\r\n    /**\r\n     * Stop game loop and clear subscriptions.\r\n     */\r\n    export function Stop(): void {\r\n\r\n        if (mainHandle !== undefined) {\r\n            window.cancelAnimationFrame(mainHandle);\r\n        }\r\n\r\n        updateStateFunctions = [];\r\n        backgroundDrawFunctions = [];\r\n        drawFunctions = [];\r\n    }\r\n\r\n    /**\r\n     * Register a tick handling function\r\n     * @param {TickFunction} f. A function that handles a tick\r\n     * @returns {() => void}. A function that removes the tick handler funtion from the subscription array.\r\n     */\r\n    export function registerUpdateState(f: TickFunction): () => void {\r\n        updateStateFunctions.push(f);\r\n\r\n        return () => {\r\n            updateStateFunctions = updateStateFunctions.filter((s) => s !== f);\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Register a function that draws the background.\r\n     * @param {function} f. Background draw function\r\n     * @returns {function}. Function to remove the background draw from the queue.\r\n     */\r\n    export function registerBackgroundDrawing(f: () => void): () => void {\r\n        backgroundDrawFunctions.push(f);\r\n\r\n        return () => {\r\n            backgroundDrawFunctions = backgroundDrawFunctions.filter((d) => d !== f);\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Register a function that draws the background.\r\n     * @param {function} f. Background draw function\r\n     * @returns {function}. Function to remove the background draw from the queue.\r\n     */\r\n    export function registerForegroundDrawing(f: () => void): () => void {\r\n        foregroundDrawFunctions.push(f);\r\n\r\n        return () => {\r\n            foregroundDrawFunctions = foregroundDrawFunctions.filter((d) => d !== f);\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Registers a function that is called once, but only if there is currently no render in progress.\r\n     * @param {function} f. A function.\r\n     */\r\n    export function registerDraw(f: () => void): void {\r\n        drawFunctions.push(f);\r\n    }\r\n\r\n    /**\r\n     * Runner function. Calls all functions that subscribed to the game loop.\r\n     * @param {number} tick. Current animation tick.\r\n     */\r\n    function run(tick: number): void {\r\n        mainHandle = window.requestAnimationFrame(run);\r\n\r\n        const {\r\n            gameState: { pause }\r\n        } = appState();\r\n\r\n        if (pause) {\r\n            return;\r\n        }\r\n\r\n        // Always update the states. This will also register draw function (if required).\r\n        updateStateFunctions.forEach((f) => f(tick));\r\n\r\n        // Draw the back ground, other stuff is drawn over this so we render it first.\r\n        backgroundDrawFunctions.forEach((f) => f());\r\n\r\n        // Now we go over the register draw functions\r\n        drawFunctions.forEach((f) => f());\r\n        drawFunctions = [];\r\n\r\n        // Finally we finish with drawing foreground stuff. The status bar for one, and the game border\r\n        // are both foreground and render over anything.\r\n        foregroundDrawFunctions.forEach((f) => f());\r\n\r\n        const { debuggingState } = appState();\r\n\r\n        if (debuggingState.drawHitboxes) {\r\n            DEBUGGING_renderHitboxes();\r\n        }\r\n\r\n        if (debuggingState.drawGrid) {\r\n            DEBUGGING_drawGrid(debuggingState.gridDetail);\r\n        }\r\n    }\r\n}\r\n\r\nexport default GameLoop;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Array\r\n * Responsibility:  Array utilities\r\n */\r\n\r\n/**\r\n * Returns a random element from an array\r\n * @param {T[]} arr. An array of type T.\r\n * @returns {T}. Value found in a random position.\r\n */\r\nexport function getRandomArrayElement<T>(arr: T[]): T {\r\n    if (arr.length === 1) {\r\n        return arr[0];\r\n    } else {\r\n        const randomIndex = Math.floor(Math.random() * arr.length);\r\n        return arr[randomIndex];\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Actions\r\n * Responsibility:  Action creator functions for the GameState\r\n */\r\n\r\nimport Constants from \"./GameConstants\";\r\nimport { AddLevel, AddLife, AddLifeAndPhaser, AddPhaser, IncreaseScore, NextLevel, RemoveLife, RemovePhaser, SetLevel, SetLives, SetPause, SetPhasers, SetWarpGateComplexity } from \"./GameTypes\";\r\nimport { WarpLevelComplexity } from \"./WarpLevelTypes\";\r\n\r\nexport function increaseScore(score: number): IncreaseScore {\r\n    return {\r\n        type: Constants.increaseScore,\r\n        payload: score\r\n    };\r\n}\r\n\r\nexport function setLives(lives: number): SetLives {\r\n    return {\r\n        type: Constants.setLives,\r\n        payload: lives,\r\n    };\r\n}\r\n\r\nexport function addLife(): AddLife {\r\n    return {\r\n        type: Constants.addLife,\r\n    };\r\n}\r\n\r\nexport function removeLife(): RemoveLife {\r\n    return {\r\n        type: Constants.removeLife,\r\n    };\r\n}\r\n\r\nexport function setPhasers(phasers: number): SetPhasers {\r\n    return { type: Constants.setPhasers, payload: phasers };\r\n}\r\n\r\nexport function addPhaser(): AddPhaser {\r\n    return { type: Constants.addPhaser };\r\n}\r\n\r\nexport function removePhaser(): RemovePhaser {\r\n    return { type: Constants.removePhaser };\r\n}\r\n\r\nexport function addLevel(): AddLevel {\r\n    return { type: Constants.addLevel };\r\n}\r\n\r\nexport function setLevel(level: number): SetLevel {\r\n    return { type: Constants.setLevel, payload: level };\r\n}\r\n\r\nexport function nextLevel(): NextLevel {\r\n    return { type: Constants.nextLevel };\r\n}\r\n\r\nexport function addLifeAndPhaser(): AddLifeAndPhaser {\r\n    return { type: Constants.addLifeAndPhaser };\r\n}\r\n\r\nexport function setPause(pause: boolean): SetPause {\r\n    return {\r\n        type: Constants.setPause,\r\n        payload: pause,\r\n    };\r\n}\r\n\r\nexport function setWarpGamteComplexity(complexity: WarpLevelComplexity): SetWarpGateComplexity {\r\n    return {\r\n        type: Constants.setWarpLevelComplexity,\r\n        complexity,\r\n    };\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Actions\r\n * Responsibility:  Action production functions for the PlayerState.\r\n */\r\n\r\nimport { GameLocation } from \"../../Models/GameLocation\";\r\nimport { MoveLimits } from \"../../Types\";\r\nimport { ParticleState } from \"./ParticleState\";\r\nimport Constants from \"./PlayerConstants\";\r\nimport { PlayerHitboxes } from \"./PlayerState\";\r\nimport { SetPlayerBulletState, SetPlayerIsAlive, SetPlayerLocationData, SetPlayerMovementLimit } from \"./PlayerTypes\";\r\n\r\nexport function setPlayerIsAlive(playerAlive: boolean): SetPlayerIsAlive {\r\n    return {\r\n        type: Constants.setPlayerIsAlive,\r\n        playerIsAlive: playerAlive,\r\n    };\r\n}\r\n\r\nexport function setPlayerMovementLimit(moveLimit: MoveLimits): SetPlayerMovementLimit {\r\n    return {\r\n        type: Constants.setPlayerMovementLimit,\r\n        payload: moveLimit\r\n    };\r\n}\r\n\r\nexport function setPlayerLocationData(left: number, top: number, hitboxes?: PlayerHitboxes, nozzleLocation?: GameLocation): SetPlayerLocationData {\r\n    return {\r\n        type: Constants.setPlayerLocationData,\r\n        payload: {\r\n            left,\r\n            top,\r\n            hitboxes,\r\n            nozzleLocation\r\n        }\r\n    };\r\n}\r\n\r\nexport function setPlayerBulletState(particleState: ParticleState | undefined): SetPlayerBulletState  {\r\n    return {\r\n        type: Constants.setPlayerBulletState,\r\n        particleState,\r\n    };\r\n}","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          CtxProvider\r\n * Responsibility:  Provides the 2d Canvas context\r\n */\r\n\r\nlet cachedCtx: CanvasRenderingContext2D;\r\n\r\n/**\r\n * ctxProvider.\r\n * @returns {CanvasRenderingContext2D}. Returns a 2d canvar renderign context.\r\n */\r\nexport default function ctxProvider(): CanvasRenderingContext2D {\r\n    if (!cachedCtx) {\r\n        const canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\r\n        cachedCtx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n\r\n    }\r\n\r\n    return cachedCtx;\r\n}","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { validColors } from \"../Constants/CGAColors\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport { Frame } from \"../Types\";\r\nimport ctxProvider from \"./CtxProvider\";\r\n\r\n/**\r\n * Module:          RenderFrame\r\n * Responsibility:  Renders a single frame to the canvas\r\n */\r\nconst {\r\n    pixelSize,\r\n} = dimensionProvider();\r\n\r\n/**\r\n * Renders a single frame to the canvas.\r\n * @param {left} left. Left coordinate.\r\n * @param {top} top. Top coordinate.\r\n * @param {Frame} frame. A 2d string array.\r\n */\r\nexport default function renderFrame(left: number, top: number, frame: Frame): void {\r\n    const ctx = ctxProvider();\r\n\r\n    for (let rowIndex = 0; rowIndex < frame.length; rowIndex++) {\r\n\r\n        const columns = frame[rowIndex];\r\n\r\n        for (let columnIndex = 0; columnIndex < columns.length; columnIndex++) {\r\n            const color = columns[columnIndex];\r\n\r\n            const x = Math.round(left + columnIndex * pixelSize);\r\n            const y = Math.round(top + rowIndex * pixelSize);\r\n\r\n            // 0 is black. No point in drawing it since the back ground is black.\r\n            if (color !== \"0\") {\r\n\r\n                // DEBUGGING.\r\n                if (validColors.indexOf(color) === -1) {\r\n                    // tslint:disable-next-line: no-console\r\n                    throw new Error(\"Provided color is not a valid CGA color\");\r\n                }\r\n\r\n                ctx.fillStyle = color;\r\n                // But we use the max pixel size to draw a pixel. This ensures the pixels overlap slightly.\r\n                // Otherwise, you'll see bits and pieces of the back ground.\r\n                ctx.fillRect(x, y, pixelSize, pixelSize);\r\n            }\r\n        }\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Actions\r\n * Responsibility:  Action creators for the EnemyLevelState\r\n */\r\n\r\nimport { GameLocation } from \"../../Models/GameLocation\";\r\nimport { ParticleState } from \"../Player/ParticleState\";\r\nimport Constants from \"./EnemyLevelConstants\";\r\nimport { AddBullet, AddExplosionCenter, AddOrUpdateEnemy, AddParticle, AddParticles, ClearPhaserLocations, RemoveEnemy, ResetLevelState, SetBulletState, SetPhaserLocations, SetShrapnellState, SetTotalEnemies, UpdateEnemyLastFireTick as SetEnemyLastFireTick } from \"./EnemyLevelTypes\";\r\nimport { EnemyState } from \"./EnemyState\";\r\nimport { ExplosionCenterState } from \"./ExplosionCenterState\";\r\n\r\nexport function resetLevelState(): ResetLevelState {\r\n    return {\r\n        type: Constants.resetLevelState,\r\n    };\r\n}\r\n\r\nexport function addParticle(particle: ParticleState): AddParticle {\r\n    return {\r\n        type: Constants.addParticle,\r\n        particle,\r\n    };\r\n}\r\n\r\nexport function addParticles(particles: ParticleState[]): AddParticles {\r\n    return {\r\n        type: Constants.addParticles,\r\n        particles,\r\n    };\r\n}\r\n\r\nexport function addExplosionCenter(explosionCenter: ExplosionCenterState, shrapnell: ParticleState[]): AddExplosionCenter {\r\n    return {\r\n        type: Constants.addExplosionCenter,\r\n        explosionCenter,\r\n        shrapnell,\r\n    };\r\n}\r\n\r\nexport function setShrapnellState(shrapnell: ParticleState[]): SetShrapnellState {\r\n    return {\r\n        type: Constants.setShrapnellState,\r\n        shrapnell,\r\n    };\r\n}\r\n\r\nexport function setPhaserLocations(locations: GameLocation[]): SetPhaserLocations {\r\n    return {\r\n        type: Constants.setPhaserLocations,\r\n        payload: locations,\r\n    };\r\n}\r\n\r\nexport function clearPhaserLocations(): ClearPhaserLocations {\r\n    return {\r\n        type: Constants.clearPhaserLocations,\r\n    };\r\n}\r\n\r\nexport function setExplosionCenters(explosionCenters: ExplosionCenterState[]) {\r\n    return {\r\n        type: Constants.setExplosionCenters,\r\n        explosionCenters\r\n    };\r\n}\r\n\r\nexport function addBullet(bullet: ParticleState): AddBullet {\r\n    return {\r\n        type: Constants.addBullet,\r\n        bullet,\r\n    };\r\n}\r\n\r\nexport function setBulletState(bullets: ParticleState[]): SetBulletState {\r\n    return {\r\n        type: Constants.setBulletState,\r\n        bullets,\r\n    };\r\n}\r\n\r\nexport function setTotalEnemies(totalEnemies: number): SetTotalEnemies {\r\n    return {\r\n        type: Constants.setTotalEnemies,\r\n        totalEnemies,\r\n    };\r\n}\r\n\r\nexport function addOrUpdateEnemy(enemyState: EnemyState): AddOrUpdateEnemy {\r\n    return {\r\n        type: Constants.addOrUpdateEnemy,\r\n        enemyState,\r\n    };\r\n}\r\n\r\nexport function removeEnemy(enemyId: number): RemoveEnemy {\r\n    return {\r\n        type: Constants.removeEnemy,\r\n        enemyId,\r\n    };\r\n}\r\n\r\nexport function setEnemyLastFireTick(enemyId: number, tick: number): SetEnemyLastFireTick {\r\n    return {\r\n        type: Constants.setEnemyLastFireTick,\r\n        payload: {\r\n            enemyId,\r\n            tick,\r\n        }\r\n    };\r\n}","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport KeyValuePair from \"../Models/KeyValuePair\";\r\n\r\n/**\r\n * Module:          Lib\r\n * Responsibility:  A library containing various helper functions\r\n */\r\n\r\n/**\r\n * Picks a random number within a range.\r\n * @param {number} max. Maximum value.\r\n * @param {number} min. Minimum value.\r\n */\r\nexport function randomNumberInRange(max: number, min: number): number {\r\n    return Math.floor(Math.random() * (max - min) + min);\r\n}\r\n\r\n/**\r\n * Calculates the new time to be used between ticks based on the passed factor.\r\n * @param {number} time. The time to use as a base.\r\n * @param {number} factor. A factor > 1 is an increase, < 1 a decrease.\r\n */\r\nexport function calculateTimeSpeedIncrease(time: number, factor: number): number {\r\n    return time * 1 / factor;\r\n}\r\n\r\n/**\r\n * Splits a URI that uses ? to pass stuff into key value pairs. Only used in playground to debug.\r\n * @param {string} query.\r\n * @returns {KeyValuePair}. An array of keys and valyes.\r\n */\r\nexport function getURLQueryKVPs(query: string): KeyValuePair[] {\r\n    const kvps = query.split(\"?\");\r\n    return kvps.map((item) => {\r\n        const kvp = item.split(\"=\");\r\n        return {\r\n            key: kvp[0],\r\n            value: kvp[1],\r\n        };\r\n    });\r\n}\r\n\r\n/**\r\n * 50/50 change to return true of false\r\n * @returns {boolean}. True or false.\r\n */\r\nexport function coinFlip(): boolean {\r\n    return Math.floor(Math.random() * 2) === 1;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport TickHandler from \"../Handlers/TickHandler\";\r\nimport ILocationProvider from \"../Interfaces/ILocationProvider\";\r\nimport Explosion from \"../Models/Explosion\";\r\nimport { GameLocation } from \"../Models/GameLocation\";\r\nimport { GameRectangle } from \"../Models/GameRectangle\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport { addOrUpdateEnemy } from \"../State/EnemyLevel/EnemyLevelActions\";\r\nimport { dispatch } from \"../State/Store\";\r\nimport { ExplosionProviderFunction, Frame, OffsetFramesProviderFunction } from \"../Types\";\r\nimport { getFrameCenter, getFrameHitbox } from \"../Utility/Frame\";\r\nimport { getOffsetLocation } from \"../Utility/Location\";\r\nimport BaseFrameProvider from \"./BaseFrameProvider\";\r\n\r\n/**\r\n * Module:          BaseEnemy\r\n * Responsibility:  Base class for all enemies.\r\n *                  This class provides contacts and default methods that will work\r\n *                  for most enemies in the game leaving specifics to derived classes.\r\n */\r\n\r\nconst {\r\n    pixelSize,\r\n} = dimensionProvider();\r\n\r\nconst negativepixelSize = pixelSize * -1;\r\n\r\nexport default abstract class BaseEnemy {\r\n\r\n    /**\r\n     * Static to ensure every enemy gets a new id.\r\n     */\r\n    private static idCounter = 0;\r\n\r\n    /**\r\n     * Id of the enemy. Used to check if a bullet belongs to an enemy.\r\n     */\r\n    private enemyId = 0;\r\n\r\n    /**\r\n     * The frame provider. Must be set in an inheriting class.\r\n     */\r\n    protected frameProvider: BaseFrameProvider;\r\n\r\n    /**\r\n     * Frame tick handler. Handles changes in the frames.\r\n     */\r\n    private frameTickHandler: TickHandler;\r\n\r\n    /**\r\n     * Offets for each frame.\r\n     */\r\n    private offSets: GameLocation[];\r\n\r\n    /**\r\n     * Explosion for the enemy.\r\n     */\r\n    protected explosion: Explosion;\r\n\r\n    /**\r\n     * Left position offset for animation.\r\n     */\r\n    private offsetLeft: number;\r\n\r\n    /**\r\n     * Top position offset for animation.\r\n     */\r\n    protected offsetTop: number;\r\n\r\n    /**\r\n     * Current frame of the object\r\n     */\r\n    protected currentFrame?: Frame;\r\n\r\n    /**\r\n     * Provides location. Can be used to alter the movement behaviour of enemies.\r\n     */\r\n    protected locationProvider: ILocationProvider;\r\n\r\n    /**\r\n     * Creates an instance of BaseEnemy.\r\n     * @param {number} frameChangeTime. Time between frames.\r\n     * @param {OffsetFramesProviderFunction} getOffsetFrames. Returns an OffsetFrames object.\r\n     * @param {ExplosionProviderFunction} getExplosion. Returns an explosion object.\r\n     * @param {ILocationProvider} locationProvider. Provides the location of the enemy.\r\n     * @param {BaseFrameProvider} frameProvider. Provides the frame of the enemy.\r\n     * @param {FireAngleProviderFunction} [fireAngleProvider]. Provides a fire hangle for the enemy.\r\n     * @memberof BaseEnemy\r\n     */\r\n    constructor(\r\n        frameChangeTime: number,\r\n        getOffsetFrames: OffsetFramesProviderFunction,\r\n        getExplosion: ExplosionProviderFunction,\r\n        locationProvider: ILocationProvider,\r\n        frameProvider: BaseFrameProvider) {\r\n\r\n        this.locationProvider = locationProvider;\r\n\r\n        this.explosion = getExplosion();\r\n        this.frameTickHandler = new TickHandler(frameChangeTime, () => this.onFrameChange());\r\n\r\n        const offSetFrames = getOffsetFrames();\r\n        this.offSets = offSetFrames.offSets.map((o) => {\r\n            return {\r\n                left: o.left * pixelSize,\r\n                top: o.top * pixelSize,\r\n            };\r\n        });\r\n\r\n        this.frameProvider = frameProvider;\r\n        this.frameProvider.setFrames(offSetFrames.frames);\r\n\r\n        this.currentFrame = this.frameProvider.getCurrentFrame();\r\n\r\n        const { left, top } = this.getOffsetLocation();\r\n        this.offsetLeft = left;\r\n        this.offsetTop = top;\r\n\r\n        this.enemyId = BaseEnemy.idCounter;\r\n        BaseEnemy.idCounter += 1;\r\n    }\r\n\r\n    /**\r\n     * getId\r\n     * @returns {number}\r\n     * @memberof BaseEnemy\r\n     */\r\n    public getId(): number {\r\n        return this.enemyId;\r\n    }\r\n\r\n    /**\r\n     * Returns the point worth.\r\n     * @returns {number}. Point worth of the enemy.\r\n     */\r\n    public abstract getPoints(): number;\r\n\r\n    /**\r\n     * Called by a TickHandler when the next frame is up.\r\n     */\r\n    protected abstract onFrameChange(): void;\r\n\r\n    /**\r\n     * Base implementation of a state update.\r\n     * @param {number} tick\r\n     */\r\n    public updateState(tick: number) {\r\n        this.frameTickHandler.tick(tick);\r\n\r\n        const offsetLocation = this.getOffsetLocation();\r\n        this.offsetLeft = offsetLocation.left;\r\n        this.offsetTop = offsetLocation.top;\r\n\r\n        this.locationProvider.updateState(tick);\r\n\r\n        this.beforeDispatch(tick);\r\n\r\n        this.dispatchCurrentState();\r\n    }\r\n\r\n    /**\r\n     * Do some last moment changes here for additional custom behaviour.\r\n     * @param {number} tick. Current game tick.\r\n     */\r\n    public abstract beforeDispatch(tick: number): void;\r\n\r\n    /**\r\n     * Dispatches the current state of the enemy.\r\n     */\r\n    protected dispatchCurrentState(): void {\r\n        dispatch(addOrUpdateEnemy({\r\n            enemyId: this.getId(),\r\n            coloredExplosion: this.explosion,\r\n            offsetLeft: this.offsetLeft,\r\n            offsetTop: this.offsetTop,\r\n            currentFrame: this.currentFrame,\r\n            hitpoints: this.getHitpoints(),\r\n            hitbox: this.getHitbox(),\r\n            centerLocation: this.getCenterLocation(),\r\n            points: this.getPoints(),\r\n            currentFrameIndex: this.frameProvider.getCurrentIndex(),\r\n        }));\r\n    }\r\n\r\n    /**\r\n     * Calculates the offsetLocation\r\n     * @returns {GameLocation}. Location offset to let the frames render over one another.\r\n     */\r\n    protected getOffsetLocation(): GameLocation {\r\n        const frameOffsets = this.offSets[this.frameProvider.getCurrentIndex()];\r\n        const location = this.locationProvider.getCurrentLocation();\r\n\r\n        if (frameOffsets) {\r\n            return getOffsetLocation(location.left, location.top, frameOffsets.left, frameOffsets.top);\r\n        } else {\r\n            return location;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Increases the speed of an enemy.\r\n     * @param {number} value. Values below 1 decrease speed, values above 1 increase speed.\r\n     */\r\n    public increaseSpeed(value: number): void {\r\n        this.locationProvider.increaseSpeed(value);\r\n        this.frameTickHandler.increaseSpeed(value);\r\n    }\r\n\r\n    /**\r\n     * Returns the hitpoint of the enemy.\r\n     * @returns {number}\r\n     * @memberof BaseEnemy\r\n     */\r\n    public getHitpoints(): number {\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * Reduce the enemies hitpoints.\r\n     */\r\n    public recudeHitpoints(): void {\r\n        // Override. Only the astroid enemy has hitpoints.\r\n    }\r\n\r\n    /**\r\n     * Returns the center location of the object.\r\n     * @returns {GameLocation}. Location located at the center of the object.\r\n     */\r\n    private getCenterLocation(): GameLocation {\r\n        if (this.currentFrame !== undefined) {\r\n            return getFrameCenter(this.offsetLeft, this.offsetTop, this.currentFrame);\r\n        } else {\r\n            // Return a non existing location. This simply means the enemy is not on the screen\r\n            // and it saves a billion undefined checks.\r\n            return {\r\n                top: -100,\r\n                left: -100,\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the enemies hitbox.\r\n     * @returns {GameRectangle}\r\n     * @memberof BaseEnemy\r\n     */\r\n    private getHitbox(): GameRectangle {\r\n        if (this.currentFrame) {\r\n            return getFrameHitbox(this.offsetLeft, this.offsetTop, this.currentFrame, negativepixelSize);\r\n        } else {\r\n            return {\r\n                left: 0,\r\n                top: 0,\r\n                right: 0,\r\n                bottom: 0,\r\n            };\r\n        }\r\n    }\r\n}","export const NOTHING =\n\ttypeof Symbol !== \"undefined\"\n\t\t? Symbol(\"immer-nothing\")\n\t\t: {[\"immer-nothing\"]: true}\n\nexport const DRAFTABLE =\n\ttypeof Symbol !== \"undefined\" && Symbol.for\n\t\t? Symbol.for(\"immer-draftable\")\n\t\t: \"__$immer_draftable\"\n\nexport const DRAFT_STATE =\n\ttypeof Symbol !== \"undefined\" && Symbol.for\n\t\t? Symbol.for(\"immer-state\")\n\t\t: \"__$immer_state\"\n\nexport function isDraft(value) {\n\treturn !!value && !!value[DRAFT_STATE]\n}\n\nexport function isDraftable(value) {\n\tif (!value) return false\n\treturn (\n\t\tisPlainObject(value) ||\n\t\t!!value[DRAFTABLE] ||\n\t\t!!value.constructor[DRAFTABLE] ||\n\t\tisMap(value) ||\n\t\tisSet(value)\n\t)\n}\n\nexport function isPlainObject(value) {\n\tif (!value || typeof value !== \"object\") return false\n\tif (Array.isArray(value)) return true\n\tconst proto = Object.getPrototypeOf(value)\n\treturn !proto || proto === Object.prototype\n}\n\nexport function original(value) {\n\tif (value && value[DRAFT_STATE]) {\n\t\treturn value[DRAFT_STATE].base\n\t}\n\t// otherwise return undefined\n}\n\n// We use Maps as `drafts` for Sets, not Objects\n// See proxy.js\nexport function assignSet(target, override) {\n\toverride.forEach(value => {\n\t\t// When we add new drafts we have to remove their originals if present\n\t\tconst prev = original(value)\n\t\tif (prev) target.delete(prev)\n\t\ttarget.add(value)\n\t})\n\treturn target\n}\n\n// We use Maps as `drafts` for Maps, not Objects\n// See proxy.js\nexport function assignMap(target, override) {\n\toverride.forEach((value, key) => target.set(key, value))\n\treturn target\n}\n\nexport const assign =\n\tObject.assign ||\n\t((target, ...overrides) => {\n\t\toverrides.forEach(override =>\n\t\t\tObject.keys(override).forEach(key => (target[key] = override[key]))\n\t\t)\n\t\treturn target\n\t})\n\nexport const ownKeys =\n\ttypeof Reflect !== \"undefined\" && Reflect.ownKeys\n\t\t? Reflect.ownKeys\n\t\t: typeof Object.getOwnPropertySymbols !== \"undefined\"\n\t\t? obj =>\n\t\t\t\tObject.getOwnPropertyNames(obj).concat(\n\t\t\t\t\tObject.getOwnPropertySymbols(obj)\n\t\t\t\t)\n\t\t: Object.getOwnPropertyNames\n\nexport function shallowCopy(base, invokeGetters = false) {\n\tif (Array.isArray(base)) return base.slice()\n\tif (isMap(base)) return new Map(base)\n\tif (isSet(base)) return new Set(base)\n\tconst clone = Object.create(Object.getPrototypeOf(base))\n\townKeys(base).forEach(key => {\n\t\tif (key === DRAFT_STATE) {\n\t\t\treturn // Never copy over draft state.\n\t\t}\n\t\tconst desc = Object.getOwnPropertyDescriptor(base, key)\n\t\tlet {value} = desc\n\t\tif (desc.get) {\n\t\t\tif (!invokeGetters) {\n\t\t\t\tthrow new Error(\"Immer drafts cannot have computed properties\")\n\t\t\t}\n\t\t\tvalue = desc.get.call(base)\n\t\t}\n\t\tif (desc.enumerable) {\n\t\t\tclone[key] = value\n\t\t} else {\n\t\t\tObject.defineProperty(clone, key, {\n\t\t\t\tvalue,\n\t\t\t\twritable: true,\n\t\t\t\tconfigurable: true\n\t\t\t})\n\t\t}\n\t})\n\treturn clone\n}\n\nexport function each(obj, iter) {\n\tif (Array.isArray(obj) || isMap(obj) || isSet(obj)) {\n\t\tobj.forEach((entry, index) => iter(index, entry, obj))\n\t} else {\n\t\townKeys(obj).forEach(key => iter(key, obj[key], obj))\n\t}\n}\n\nexport function isEnumerable(base, prop) {\n\tconst desc = Object.getOwnPropertyDescriptor(base, prop)\n\treturn !!desc && desc.enumerable\n}\n\nexport function has(thing, prop) {\n\treturn isMap(thing)\n\t\t? thing.has(prop)\n\t\t: Object.prototype.hasOwnProperty.call(thing, prop)\n}\n\nexport function get(thing, prop) {\n\treturn isMap(thing) ? thing.get(prop) : thing[prop]\n}\n\nexport function is(x, y) {\n\t// From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n\tif (x === y) {\n\t\treturn x !== 0 || 1 / x === 1 / y\n\t} else {\n\t\treturn x !== x && y !== y\n\t}\n}\n\nexport const hasSymbol = typeof Symbol !== \"undefined\"\n\nexport const hasMap = typeof Map !== \"undefined\"\n\nexport function isMap(target) {\n\treturn hasMap && target instanceof Map\n}\n\nexport const hasSet = typeof Set !== \"undefined\"\n\nexport function isSet(target) {\n\treturn hasSet && target instanceof Set\n}\n\nexport function makeIterable(next) {\n\tlet self\n\treturn (self = {\n\t\t[Symbol.iterator]: () => self,\n\t\tnext\n\t})\n}\n\n/** Map.prototype.values _-or-_ Map.prototype.entries */\nexport function iterateMapValues(state, prop, receiver) {\n\tconst isEntries = prop !== \"values\"\n\treturn () => {\n\t\tconst iterator = latest(state)[Symbol.iterator]()\n\t\treturn makeIterable(() => {\n\t\t\tconst result = iterator.next()\n\t\t\tif (!result.done) {\n\t\t\t\tconst [key] = result.value\n\t\t\t\tconst value = receiver.get(key)\n\t\t\t\tresult.value = isEntries ? [key, value] : value\n\t\t\t}\n\t\t\treturn result\n\t\t})\n\t}\n}\n\nexport function makeIterateSetValues(createProxy) {\n\tfunction iterateSetValues(state, prop) {\n\t\tconst isEntries = prop === \"entries\"\n\t\treturn () => {\n\t\t\tconst iterator = latest(state)[Symbol.iterator]()\n\t\t\treturn makeIterable(() => {\n\t\t\t\tconst result = iterator.next()\n\t\t\t\tif (!result.done) {\n\t\t\t\t\tconst value = wrapSetValue(state, result.value)\n\t\t\t\t\tresult.value = isEntries ? [value, value] : value\n\t\t\t\t}\n\t\t\t\treturn result\n\t\t\t})\n\t\t}\n\t}\n\n\tfunction wrapSetValue(state, value) {\n\t\tconst key = original(value) || value\n\t\tlet draft = state.drafts.get(key)\n\t\tif (!draft) {\n\t\t\tif (state.finalized || !isDraftable(value) || state.finalizing) {\n\t\t\t\treturn value\n\t\t\t}\n\t\t\tdraft = createProxy(value, state)\n\t\t\tstate.drafts.set(key, draft)\n\t\t\tif (state.modified) {\n\t\t\t\tstate.copy.add(draft)\n\t\t\t}\n\t\t}\n\t\treturn draft\n\t}\n\n\treturn iterateSetValues\n}\n\nfunction latest(state) {\n\treturn state.copy || state.base\n}\n\nexport function clone(obj) {\n\tif (!isDraftable(obj)) return obj\n\tif (Array.isArray(obj)) return obj.map(clone)\n\tif (isMap(obj)) return new Map(obj)\n\tif (isSet(obj)) return new Set(obj)\n\tconst cloned = Object.create(Object.getPrototypeOf(obj))\n\tfor (const key in obj) cloned[key] = clone(obj[key])\n\treturn cloned\n}\n\nexport function freeze(obj, deep = false) {\n\tif (!isDraftable(obj) || isDraft(obj) || Object.isFrozen(obj)) return\n\tif (isSet(obj)) {\n\t\tobj.add = obj.clear = obj.delete = dontMutateFrozenCollections\n\t} else if (isMap(obj)) {\n\t\tobj.set = obj.clear = obj.delete = dontMutateFrozenCollections\n\t}\n\tObject.freeze(obj)\n\tif (deep) each(obj, (_, value) => freeze(value, true))\n}\n\nfunction dontMutateFrozenCollections() {\n\tthrow new Error(\"This object has been frozen and should not be mutated\")\n}\n","import {DRAFT_STATE} from \"./common\"\n\n/** Each scope represents a `produce` call. */\nexport class ImmerScope {\n\tconstructor(parent) {\n\t\tthis.drafts = []\n\t\tthis.parent = parent\n\n\t\t// Whenever the modified draft contains a draft from another scope, we\n\t\t// need to prevent auto-freezing so the unowned draft can be finalized.\n\t\tthis.canAutoFreeze = true\n\n\t\t// To avoid prototype lookups:\n\t\tthis.patches = null\n\t}\n\tusePatches(patchListener) {\n\t\tif (patchListener) {\n\t\t\tthis.patches = []\n\t\t\tthis.inversePatches = []\n\t\t\tthis.patchListener = patchListener\n\t\t}\n\t}\n\trevoke() {\n\t\tthis.leave()\n\t\tthis.drafts.forEach(revoke)\n\t\tthis.drafts = null // Make draft-related methods throw.\n\t}\n\tleave() {\n\t\tif (this === ImmerScope.current) {\n\t\t\tImmerScope.current = this.parent\n\t\t}\n\t}\n}\n\nImmerScope.current = null\nImmerScope.enter = function() {\n\treturn (this.current = new ImmerScope(this.current))\n}\n\nfunction revoke(draft) {\n\tdraft[DRAFT_STATE].revoke()\n}\n","\"use strict\"\nimport {\n\teach,\n\thas,\n\tis,\n\tisDraft,\n\tisDraftable,\n\tisEnumerable,\n\tisMap,\n\tisSet,\n\thasSymbol,\n\tshallowCopy,\n\tDRAFT_STATE,\n\titerateMapValues,\n\tmakeIterable,\n\tmakeIterateSetValues\n} from \"./common\"\nimport {ImmerScope} from \"./scope\"\n\nexport function willFinalize(scope, result, isReplaced) {\n\tscope.drafts.forEach(draft => {\n\t\tdraft[DRAFT_STATE].finalizing = true\n\t})\n\tif (!isReplaced) {\n\t\tif (scope.patches) {\n\t\t\tmarkChangesRecursively(scope.drafts[0])\n\t\t}\n\t\t// This is faster when we don't care about which attributes changed.\n\t\tmarkChangesSweep(scope.drafts)\n\t}\n\t// When a child draft is returned, look for changes.\n\telse if (isDraft(result) && result[DRAFT_STATE].scope === scope) {\n\t\tmarkChangesSweep(scope.drafts)\n\t}\n}\n\nexport function createProxy(base, parent) {\n\tconst isArray = Array.isArray(base)\n\tconst draft = clonePotentialDraft(base)\n\n\tif (isMap(base)) {\n\t\tproxyMap(draft)\n\t} else if (isSet(base)) {\n\t\tproxySet(draft)\n\t} else {\n\t\teach(draft, prop => {\n\t\t\tproxyProperty(draft, prop, isArray || isEnumerable(base, prop))\n\t\t})\n\t}\n\n\t// See \"proxy.js\" for property documentation.\n\tconst scope = parent ? parent.scope : ImmerScope.current\n\tconst state = {\n\t\tscope,\n\t\tmodified: false,\n\t\tfinalizing: false, // es5 only\n\t\tfinalized: false,\n\t\tassigned: isMap(base) ? new Map() : {},\n\t\tparent,\n\t\tbase,\n\t\tdraft,\n\t\tdrafts: isSet(base) ? new Map() : null,\n\t\tcopy: null,\n\t\trevoke,\n\t\trevoked: false // es5 only\n\t}\n\n\tcreateHiddenProperty(draft, DRAFT_STATE, state)\n\tscope.drafts.push(draft)\n\treturn draft\n}\n\nfunction revoke() {\n\tthis.revoked = true\n}\n\nfunction latest(state) {\n\treturn state.copy || state.base\n}\n\n// Access a property without creating an Immer draft.\nfunction peek(draft, prop) {\n\tconst state = draft[DRAFT_STATE]\n\tif (state && !state.finalizing) {\n\t\tstate.finalizing = true\n\t\tconst value = draft[prop]\n\t\tstate.finalizing = false\n\t\treturn value\n\t}\n\treturn draft[prop]\n}\n\nfunction get(state, prop) {\n\tassertUnrevoked(state)\n\tconst value = peek(latest(state), prop)\n\tif (state.finalizing) return value\n\t// Create a draft if the value is unmodified.\n\tif (value === peek(state.base, prop) && isDraftable(value)) {\n\t\tprepareCopy(state)\n\t\treturn (state.copy[prop] = createProxy(value, state))\n\t}\n\treturn value\n}\n\nfunction set(state, prop, value) {\n\tassertUnrevoked(state)\n\tstate.assigned[prop] = true\n\tif (!state.modified) {\n\t\tif (is(value, peek(latest(state), prop))) return\n\t\tmarkChanged(state)\n\t\tprepareCopy(state)\n\t}\n\tstate.copy[prop] = value\n}\n\nfunction markChanged(state) {\n\tif (!state.modified) {\n\t\tstate.modified = true\n\t\tif (state.parent) markChanged(state.parent)\n\t}\n}\n\nfunction prepareCopy(state) {\n\tif (!state.copy) state.copy = clonePotentialDraft(state.base)\n}\n\nfunction clonePotentialDraft(base) {\n\tconst state = base && base[DRAFT_STATE]\n\tif (state) {\n\t\tstate.finalizing = true\n\t\tconst draft = shallowCopy(state.draft, true)\n\t\tstate.finalizing = false\n\t\treturn draft\n\t}\n\treturn shallowCopy(base)\n}\n\n// property descriptors are recycled to make sure we don't create a get and set closure per property,\n// but share them all instead\nconst descriptors = {}\n\nfunction proxyProperty(draft, prop, enumerable) {\n\tlet desc = descriptors[prop]\n\tif (desc) {\n\t\tdesc.enumerable = enumerable\n\t} else {\n\t\tdescriptors[prop] = desc = {\n\t\t\tconfigurable: true,\n\t\t\tenumerable,\n\t\t\tget() {\n\t\t\t\treturn get(this[DRAFT_STATE], prop)\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tset(this[DRAFT_STATE], prop, value)\n\t\t\t}\n\t\t}\n\t}\n\tObject.defineProperty(draft, prop, desc)\n}\n\nfunction proxyMap(target) {\n\tObject.defineProperties(target, mapTraps)\n\n\tif (hasSymbol) {\n\t\tObject.defineProperty(\n\t\t\ttarget,\n\t\t\tSymbol.iterator,\n\t\t\tproxyMethod(iterateMapValues)\n\t\t)\n\t}\n}\n\nconst mapTraps = finalizeTraps({\n\tsize: state => latest(state).size,\n\thas: state => key => latest(state).has(key),\n\tset: state => (key, value) => {\n\t\tif (latest(state).get(key) !== value) {\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\tstate.assigned.set(key, true)\n\t\t\tstate.copy.set(key, value)\n\t\t}\n\t\treturn state.draft\n\t},\n\tdelete: state => key => {\n\t\tprepareCopy(state)\n\t\tmarkChanged(state)\n\t\tstate.assigned.set(key, false)\n\t\tstate.copy.delete(key)\n\t\treturn false\n\t},\n\tclear: state => () => {\n\t\tif (!state.copy) {\n\t\t\tprepareCopy(state)\n\t\t}\n\t\tmarkChanged(state)\n\t\tstate.assigned = new Map()\n\t\tfor (const key of latest(state).keys()) {\n\t\t\tstate.assigned.set(key, false)\n\t\t}\n\t\treturn state.copy.clear()\n\t},\n\tforEach: (state, key, reciever) => cb => {\n\t\tlatest(state).forEach((value, key, map) => {\n\t\t\tcb(reciever.get(key), key, map)\n\t\t})\n\t},\n\tget: state => key => {\n\t\tconst value = latest(state).get(key)\n\n\t\tif (state.finalizing || state.finalized || !isDraftable(value)) {\n\t\t\treturn value\n\t\t}\n\n\t\tif (value !== state.base.get(key)) {\n\t\t\treturn value\n\t\t}\n\t\tconst draft = createProxy(value, state)\n\t\tprepareCopy(state)\n\t\tstate.copy.set(key, draft)\n\t\treturn draft\n\t},\n\tkeys: state => () => latest(state).keys(),\n\tvalues: iterateMapValues,\n\tentries: iterateMapValues\n})\n\nfunction proxySet(target) {\n\tObject.defineProperties(target, setTraps)\n\n\tif (hasSymbol) {\n\t\tObject.defineProperty(\n\t\t\ttarget,\n\t\t\tSymbol.iterator,\n\t\t\tproxyMethod(iterateSetValues)\n\t\t)\n\t}\n}\n\nconst iterateSetValues = makeIterateSetValues(createProxy)\n\nconst setTraps = finalizeTraps({\n\tsize: state => {\n\t\treturn latest(state).size\n\t},\n\tadd: state => value => {\n\t\tif (!latest(state).has(value)) {\n\t\t\tmarkChanged(state)\n\t\t\tif (!state.copy) {\n\t\t\t\tprepareCopy(state)\n\t\t\t}\n\t\t\tstate.copy.add(value)\n\t\t}\n\t\treturn state.draft\n\t},\n\tdelete: state => value => {\n\t\tmarkChanged(state)\n\t\tif (!state.copy) {\n\t\t\tprepareCopy(state)\n\t\t}\n\t\treturn state.copy.delete(value)\n\t},\n\thas: state => key => {\n\t\treturn latest(state).has(key)\n\t},\n\tclear: state => () => {\n\t\tmarkChanged(state)\n\t\tif (!state.copy) {\n\t\t\tprepareCopy(state)\n\t\t}\n\t\treturn state.copy.clear()\n\t},\n\tkeys: iterateSetValues,\n\tentries: iterateSetValues,\n\tvalues: iterateSetValues,\n\tforEach: state => (cb, thisArg) => {\n\t\tconst iterator = iterateSetValues(state)()\n\t\tlet result = iterator.next()\n\t\twhile (!result.done) {\n\t\t\tcb.call(thisArg, result.value, result.value, state.draft)\n\t\t\tresult = iterator.next()\n\t\t}\n\t}\n})\n\nfunction finalizeTraps(traps) {\n\treturn Object.keys(traps).reduce(function(acc, key) {\n\t\tconst builder = key === \"size\" ? proxyAttr : proxyMethod\n\t\tacc[key] = builder(traps[key], key)\n\t\treturn acc\n\t}, {})\n}\n\nfunction proxyAttr(fn) {\n\treturn {\n\t\tget() {\n\t\t\tconst state = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\treturn fn(state)\n\t\t}\n\t}\n}\n\nfunction proxyMethod(trap, key) {\n\treturn {\n\t\tget() {\n\t\t\treturn function(...args) {\n\t\t\t\tconst state = this[DRAFT_STATE]\n\t\t\t\tassertUnrevoked(state)\n\t\t\t\treturn trap(state, key, state.draft)(...args)\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction assertUnrevoked(state) {\n\tif (state.revoked === true)\n\t\tthrow new Error(\n\t\t\t\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" +\n\t\t\t\tJSON.stringify(latest(state))\n\t\t)\n}\n\n// This looks expensive, but only proxies are visited, and only objects without known changes are scanned.\nfunction markChangesSweep(drafts) {\n\t// The natural order of drafts in the `scope` array is based on when they\n\t// were accessed. By processing drafts in reverse natural order, we have a\n\t// better chance of processing leaf nodes first. When a leaf node is known to\n\t// have changed, we can avoid any traversal of its ancestor nodes.\n\tfor (let i = drafts.length - 1; i >= 0; i--) {\n\t\tconst state = drafts[i][DRAFT_STATE]\n\t\tif (!state.modified) {\n\t\t\tif (Array.isArray(state.base)) {\n\t\t\t\tif (hasArrayChanges(state)) markChanged(state)\n\t\t\t} else if (isMap(state.base)) {\n\t\t\t\tif (hasMapChanges(state)) markChanged(state)\n\t\t\t} else if (isSet(state.base)) {\n\t\t\t\tif (hasSetChanges(state)) markChanged(state)\n\t\t\t} else if (hasObjectChanges(state)) {\n\t\t\t\tmarkChanged(state)\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction markChangesRecursively(object) {\n\tif (!object || typeof object !== \"object\") return\n\tconst state = object[DRAFT_STATE]\n\tif (!state) return\n\tconst {base, draft, assigned} = state\n\tif (!Array.isArray(object)) {\n\t\t// Look for added keys.\n\t\tObject.keys(draft).forEach(key => {\n\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\tif (base[key] === undefined && !has(base, key)) {\n\t\t\t\tassigned[key] = true\n\t\t\t\tmarkChanged(state)\n\t\t\t} else if (!assigned[key]) {\n\t\t\t\t// Only untouched properties trigger recursion.\n\t\t\t\tmarkChangesRecursively(draft[key])\n\t\t\t}\n\t\t})\n\t\t// Look for removed keys.\n\t\tObject.keys(base).forEach(key => {\n\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\tif (draft[key] === undefined && !has(draft, key)) {\n\t\t\t\tassigned[key] = false\n\t\t\t\tmarkChanged(state)\n\t\t\t}\n\t\t})\n\t} else if (hasArrayChanges(state)) {\n\t\tmarkChanged(state)\n\t\tassigned.length = true\n\t\tif (draft.length < base.length) {\n\t\t\tfor (let i = draft.length; i < base.length; i++) assigned[i] = false\n\t\t} else {\n\t\t\tfor (let i = base.length; i < draft.length; i++) assigned[i] = true\n\t\t}\n\t\tfor (let i = 0; i < draft.length; i++) {\n\t\t\t// Only untouched indices trigger recursion.\n\t\t\tif (assigned[i] === undefined) markChangesRecursively(draft[i])\n\t\t}\n\t}\n}\n\nfunction hasObjectChanges(state) {\n\tconst {base, draft} = state\n\n\t// Search for added keys and changed keys. Start at the back, because\n\t// non-numeric keys are ordered by time of definition on the object.\n\tconst keys = Object.keys(draft)\n\tfor (let i = keys.length - 1; i >= 0; i--) {\n\t\tconst key = keys[i]\n\t\tconst baseValue = base[key]\n\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\tif (baseValue === undefined && !has(base, key)) {\n\t\t\treturn true\n\t\t}\n\t\t// Once a base key is deleted, future changes go undetected, because its\n\t\t// descriptor is erased. This branch detects any missed changes.\n\t\telse {\n\t\t\tconst value = draft[key]\n\t\t\tconst state = value && value[DRAFT_STATE]\n\t\t\tif (state ? state.base !== baseValue : !is(value, baseValue)) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t}\n\t}\n\n\t// At this point, no keys were added or changed.\n\t// Compare key count to determine if keys were deleted.\n\treturn keys.length !== Object.keys(base).length\n}\n\nfunction hasArrayChanges(state) {\n\tconst {draft} = state\n\tif (draft.length !== state.base.length) return true\n\t// See #116\n\t// If we first shorten the length, our array interceptors will be removed.\n\t// If after that new items are added, result in the same original length,\n\t// those last items will have no intercepting property.\n\t// So if there is no own descriptor on the last position, we know that items were removed and added\n\t// N.B.: splice, unshift, etc only shift values around, but not prop descriptors, so we only have to check\n\t// the last one\n\tconst descriptor = Object.getOwnPropertyDescriptor(draft, draft.length - 1)\n\t// descriptor can be null, but only for newly created sparse arrays, eg. new Array(10)\n\tif (descriptor && !descriptor.get) return true\n\t// For all other cases, we don't have to compare, as they would have been picked up by the index setters\n\treturn false\n}\n\nfunction hasMapChanges(state) {\n\tconst {base, draft} = state\n\n\tif (base.size !== draft.size) return true\n\n\t// IE11 supports only forEach iteration\n\tlet hasChanges = false\n\tdraft.forEach(function(value, key) {\n\t\tif (!hasChanges) {\n\t\t\thasChanges = isDraftable(value) ? value.modified : value !== base.get(key)\n\t\t}\n\t})\n\treturn hasChanges\n}\n\nfunction hasSetChanges(state) {\n\tconst {base, draft} = state\n\n\tif (base.size !== draft.size) return true\n\n\t// IE11 supports only forEach iteration\n\tlet hasChanges = false\n\tdraft.forEach(function(value, key) {\n\t\tif (!hasChanges) {\n\t\t\thasChanges = isDraftable(value) ? value.modified : !base.has(key)\n\t\t}\n\t})\n\treturn hasChanges\n}\n\nfunction createHiddenProperty(target, prop, value) {\n\tObject.defineProperty(target, prop, {\n\t\tvalue: value,\n\t\tenumerable: false,\n\t\twritable: true\n\t})\n}\n","\"use strict\"\nimport {\n\tassign,\n\teach,\n\thas,\n\tis,\n\tisDraftable,\n\tisDraft,\n\tisMap,\n\tisSet,\n\thasSymbol,\n\tshallowCopy,\n\tmakeIterable,\n\tDRAFT_STATE,\n\tassignMap,\n\tassignSet,\n\toriginal,\n\titerateMapValues,\n\tmakeIterateSetValues\n} from \"./common\"\nimport {ImmerScope} from \"./scope\"\n\n// Do nothing before being finalized.\nexport function willFinalize() {}\n\n/**\n * Returns a new draft of the `base` object.\n *\n * The second argument is the parent draft-state (used internally).\n */\nexport function createProxy(base, parent) {\n\tconst scope = parent ? parent.scope : ImmerScope.current\n\tconst state = {\n\t\t// Track which produce call this is associated with.\n\t\tscope,\n\t\t// True for both shallow and deep changes.\n\t\tmodified: false,\n\t\t// Used during finalization.\n\t\tfinalized: false,\n\t\t// Track which properties have been assigned (true) or deleted (false).\n\t\tassigned: {},\n\t\t// The parent draft state.\n\t\tparent,\n\t\t// The base state.\n\t\tbase,\n\t\t// The base proxy.\n\t\tdraft: null,\n\t\t// Any property proxies.\n\t\tdrafts: {},\n\t\t// The base copy with any updated values.\n\t\tcopy: null,\n\t\t// Called by the `produce` function.\n\t\trevoke: null\n\t}\n\n\tlet target = state\n\tlet traps = objectTraps\n\tif (Array.isArray(base)) {\n\t\ttarget = [state]\n\t\ttraps = arrayTraps\n\t}\n\t// Map drafts must support object keys, so we use Map objects to track changes.\n\telse if (isMap(base)) {\n\t\ttraps = mapTraps\n\t\tstate.drafts = new Map()\n\t\tstate.assigned = new Map()\n\t}\n\t// Set drafts use a Map object to track which of its values are drafted.\n\t// And we don't need the \"assigned\" property, because Set objects have no keys.\n\telse if (isSet(base)) {\n\t\ttraps = setTraps\n\t\tstate.drafts = new Map()\n\t}\n\n\tconst {revoke, proxy} = Proxy.revocable(target, traps)\n\n\tstate.draft = proxy\n\tstate.revoke = revoke\n\n\tscope.drafts.push(proxy)\n\treturn proxy\n}\n\n/**\n * Object drafts\n */\n\nconst objectTraps = {\n\tget(state, prop) {\n\t\tif (prop === DRAFT_STATE) return state\n\t\tlet {drafts} = state\n\n\t\t// Check for existing draft in unmodified state.\n\t\tif (!state.modified && has(drafts, prop)) {\n\t\t\treturn drafts[prop]\n\t\t}\n\n\t\tconst value = latest(state)[prop]\n\t\tif (state.finalized || !isDraftable(value)) {\n\t\t\treturn value\n\t\t}\n\n\t\t// Check for existing draft in modified state.\n\t\tif (state.modified) {\n\t\t\t// Assigned values are never drafted. This catches any drafts we created, too.\n\t\t\tif (value !== peek(state.base, prop)) return value\n\t\t\t// Store drafts on the copy (when one exists).\n\t\t\tdrafts = state.copy\n\t\t}\n\n\t\treturn (drafts[prop] = createProxy(value, state))\n\t},\n\thas(state, prop) {\n\t\treturn prop in latest(state)\n\t},\n\townKeys(state) {\n\t\treturn Reflect.ownKeys(latest(state))\n\t},\n\tset(state, prop, value) {\n\t\tif (!state.modified) {\n\t\t\tconst baseValue = peek(state.base, prop)\n\t\t\t// Optimize based on value's truthiness. Truthy values are guaranteed to\n\t\t\t// never be undefined, so we can avoid the `in` operator. Lastly, truthy\n\t\t\t// values may be drafts, but falsy values are never drafts.\n\t\t\tconst isUnchanged = value\n\t\t\t\t? is(baseValue, value) || value === state.drafts[prop]\n\t\t\t\t: is(baseValue, value) && prop in state.base\n\t\t\tif (isUnchanged) return true\n\t\t\tmarkChanged(state)\n\t\t}\n\t\tstate.assigned[prop] = true\n\t\tstate.copy[prop] = value\n\t\treturn true\n\t},\n\tdeleteProperty(state, prop) {\n\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\tif (peek(state.base, prop) !== undefined || prop in state.base) {\n\t\t\tstate.assigned[prop] = false\n\t\t\tmarkChanged(state)\n\t\t} else if (state.assigned[prop]) {\n\t\t\t// if an originally not assigned property was deleted\n\t\t\tdelete state.assigned[prop]\n\t\t}\n\t\tif (state.copy) delete state.copy[prop]\n\t\treturn true\n\t},\n\t// Note: We never coerce `desc.value` into an Immer draft, because we can't make\n\t// the same guarantee in ES5 mode.\n\tgetOwnPropertyDescriptor(state, prop) {\n\t\tconst owner = latest(state)\n\t\tconst desc = Reflect.getOwnPropertyDescriptor(owner, prop)\n\t\tif (desc) {\n\t\t\tdesc.writable = true\n\t\t\tdesc.configurable = !Array.isArray(owner) || prop !== \"length\"\n\t\t}\n\t\treturn desc\n\t},\n\tdefineProperty() {\n\t\tthrow new Error(\"Object.defineProperty() cannot be used on an Immer draft\") // prettier-ignore\n\t},\n\tgetPrototypeOf(state) {\n\t\treturn Object.getPrototypeOf(state.base)\n\t},\n\tsetPrototypeOf() {\n\t\tthrow new Error(\"Object.setPrototypeOf() cannot be used on an Immer draft\") // prettier-ignore\n\t}\n}\n\n/**\n * Array drafts\n */\n\nconst arrayTraps = {}\neach(objectTraps, (key, fn) => {\n\tarrayTraps[key] = function() {\n\t\targuments[0] = arguments[0][0]\n\t\treturn fn.apply(this, arguments)\n\t}\n})\narrayTraps.deleteProperty = function(state, prop) {\n\tif (isNaN(parseInt(prop))) {\n\t\tthrow new Error(\"Immer only supports deleting array indices\") // prettier-ignore\n\t}\n\treturn objectTraps.deleteProperty.call(this, state[0], prop)\n}\narrayTraps.set = function(state, prop, value) {\n\tif (prop !== \"length\" && isNaN(parseInt(prop))) {\n\t\tthrow new Error(\"Immer only supports setting array indices and the 'length' property\") // prettier-ignore\n\t}\n\treturn objectTraps.set.call(this, state[0], prop, value)\n}\n\n// Used by Map and Set drafts\nconst reflectTraps = makeReflectTraps([\n\t\"ownKeys\",\n\t\"has\",\n\t\"set\",\n\t\"deleteProperty\",\n\t\"defineProperty\",\n\t\"getOwnPropertyDescriptor\",\n\t\"preventExtensions\",\n\t\"isExtensible\",\n\t\"getPrototypeOf\"\n])\n\n/**\n * Map drafts\n */\n\nconst mapTraps = makeTrapsForGetters({\n\t[DRAFT_STATE]: state => state,\n\tsize: state => latest(state).size,\n\thas: state => key => latest(state).has(key),\n\tset: state => (key, value) => {\n\t\tconst values = latest(state)\n\t\tif (!values.has(key) || values.get(key) !== value) {\n\t\t\tmarkChanged(state)\n\t\t\tstate.assigned.set(key, true)\n\t\t\tstate.copy.set(key, value)\n\t\t}\n\t\treturn state.draft\n\t},\n\tdelete: state => key => {\n\t\tif (latest(state).has(key)) {\n\t\t\tmarkChanged(state)\n\t\t\tstate.assigned.set(key, false)\n\t\t\treturn state.copy.delete(key)\n\t\t}\n\t\treturn false\n\t},\n\tclear: state => () => {\n\t\tmarkChanged(state)\n\t\tstate.assigned = new Map()\n\t\tfor (const key of latest(state).keys()) {\n\t\t\tstate.assigned.set(key, false)\n\t\t}\n\t\treturn state.copy.clear()\n\t},\n\tforEach: (state, _, receiver) => (cb, thisArg) =>\n\t\tlatest(state).forEach((_, key, map) => {\n\t\t\tconst value = receiver.get(key)\n\t\t\tcb.call(thisArg, value, key, map)\n\t\t}),\n\tget: state => key => {\n\t\tconst drafts = state[state.modified ? \"copy\" : \"drafts\"]\n\t\tif (drafts.has(key)) {\n\t\t\treturn drafts.get(key)\n\t\t}\n\n\t\tconst value = latest(state).get(key)\n\t\tif (state.finalized || !isDraftable(value)) {\n\t\t\treturn value\n\t\t}\n\n\t\tconst draft = createProxy(value, state)\n\t\tdrafts.set(key, draft)\n\t\treturn draft\n\t},\n\tkeys: state => () => latest(state).keys(),\n\tvalues: iterateMapValues,\n\tentries: iterateMapValues,\n\t[hasSymbol ? Symbol.iterator : \"@@iterator\"]: iterateMapValues\n})\n\nconst iterateSetValues = makeIterateSetValues(createProxy)\n/**\n * Set drafts\n */\n\nconst setTraps = makeTrapsForGetters({\n\t[DRAFT_STATE]: state => state,\n\tsize: state => latest(state).size,\n\thas: state => key => latest(state).has(key),\n\tadd: state => value => {\n\t\tif (!latest(state).has(value)) {\n\t\t\tmarkChanged(state)\n\t\t\tstate.copy.add(value)\n\t\t}\n\t\treturn state.draft\n\t},\n\tdelete: state => value => {\n\t\tmarkChanged(state)\n\t\treturn state.copy.delete(value)\n\t},\n\tclear: state => () => {\n\t\tmarkChanged(state)\n\t\treturn state.copy.clear()\n\t},\n\tforEach: state => (cb, thisArg) => {\n\t\tconst iterator = iterateSetValues(state)()\n\t\tlet result = iterator.next()\n\t\twhile (!result.done) {\n\t\t\tcb.call(thisArg, result.value, result.value, state.draft)\n\t\t\tresult = iterator.next()\n\t\t}\n\t},\n\tkeys: iterateSetValues,\n\tvalues: iterateSetValues,\n\tentries: iterateSetValues,\n\t[hasSymbol ? Symbol.iterator : \"@@iterator\"]: iterateSetValues\n})\n\n/**\n * Helpers\n */\n\n// Retrieve the latest values of the draft.\nfunction latest(state) {\n\treturn state.copy || state.base\n}\n\n// Access a property without creating an Immer draft.\nfunction peek(draft, prop) {\n\tconst state = draft[DRAFT_STATE]\n\tconst desc = Reflect.getOwnPropertyDescriptor(\n\t\tstate ? latest(state) : draft,\n\t\tprop\n\t)\n\treturn desc && desc.value\n}\n\nfunction markChanged(state) {\n\tif (!state.modified) {\n\t\tstate.modified = true\n\n\t\tconst {base, drafts, parent} = state\n\t\tconst copy = shallowCopy(base)\n\n\t\tif (isSet(base)) {\n\t\t\t// Note: The `drafts` property is preserved for Set objects, since\n\t\t\t// we need to keep track of which values are drafted.\n\t\t\tassignSet(copy, drafts)\n\t\t} else {\n\t\t\t// Merge nested drafts into the copy.\n\t\t\tif (isMap(base)) assignMap(copy, drafts)\n\t\t\telse assign(copy, drafts)\n\t\t\tstate.drafts = null\n\t\t}\n\n\t\tstate.copy = copy\n\t\tif (parent) {\n\t\t\tmarkChanged(parent)\n\t\t}\n\t}\n}\n\n/** Create traps that all use the `Reflect` API on the `latest(state)` */\nfunction makeReflectTraps(names) {\n\treturn names.reduce((traps, name) => {\n\t\ttraps[name] = (state, ...args) => Reflect[name](latest(state), ...args)\n\t\treturn traps\n\t}, {})\n}\n\nfunction makeTrapsForGetters(getters) {\n\treturn {\n\t\t...reflectTraps,\n\t\tget(state, prop, receiver) {\n\t\t\treturn getters.hasOwnProperty(prop)\n\t\t\t\t? getters[prop](state, prop, receiver)\n\t\t\t\t: Reflect.get(state, prop, receiver)\n\t\t},\n\t\tsetPrototypeOf(state) {\n\t\t\tthrow new Error(\"Object.setPrototypeOf() cannot be used on an Immer draft\") // prettier-ignore\n\t\t}\n\t}\n}\n","import {get, each, isMap, isSet, has, clone} from \"./common\"\n\nexport function generatePatches(state, basePath, patches, inversePatches) {\n\tconst generatePatchesFn = Array.isArray(state.base)\n\t\t? generateArrayPatches\n\t\t: isSet(state.base)\n\t\t? generateSetPatches\n\t\t: generatePatchesFromAssigned\n\n\tgeneratePatchesFn(state, basePath, patches, inversePatches)\n}\n\nfunction generateArrayPatches(state, basePath, patches, inversePatches) {\n\tlet {base, copy, assigned} = state\n\n\t// Reduce complexity by ensuring `base` is never longer.\n\tif (copy.length < base.length) {\n\t\t;[base, copy] = [copy, base]\n\t\t;[patches, inversePatches] = [inversePatches, patches]\n\t}\n\n\tconst delta = copy.length - base.length\n\n\t// Find the first replaced index.\n\tlet start = 0\n\twhile (base[start] === copy[start] && start < base.length) {\n\t\t++start\n\t}\n\n\t// Find the last replaced index. Search from the end to optimize splice patches.\n\tlet end = base.length\n\twhile (end > start && base[end - 1] === copy[end + delta - 1]) {\n\t\t--end\n\t}\n\n\t// Process replaced indices.\n\tfor (let i = start; i < end; ++i) {\n\t\tif (assigned[i] && copy[i] !== base[i]) {\n\t\t\tconst path = basePath.concat([i])\n\t\t\tpatches.push({\n\t\t\t\top: \"replace\",\n\t\t\t\tpath,\n\t\t\t\tvalue: copy[i]\n\t\t\t})\n\t\t\tinversePatches.push({\n\t\t\t\top: \"replace\",\n\t\t\t\tpath,\n\t\t\t\tvalue: base[i]\n\t\t\t})\n\t\t}\n\t}\n\n\tconst replaceCount = patches.length\n\n\t// Process added indices.\n\tfor (let i = end + delta - 1; i >= end; --i) {\n\t\tconst path = basePath.concat([i])\n\t\tpatches[replaceCount + i - end] = {\n\t\t\top: \"add\",\n\t\t\tpath,\n\t\t\tvalue: copy[i]\n\t\t}\n\t\tinversePatches.push({\n\t\t\top: \"remove\",\n\t\t\tpath\n\t\t})\n\t}\n}\n\n// This is used for both Map objects and normal objects.\nfunction generatePatchesFromAssigned(state, basePath, patches, inversePatches) {\n\tconst {base, copy} = state\n\teach(state.assigned, (key, assignedValue) => {\n\t\tconst origValue = get(base, key)\n\t\tconst value = get(copy, key)\n\t\tconst op = !assignedValue ? \"remove\" : has(base, key) ? \"replace\" : \"add\"\n\t\tif (origValue === value && op === \"replace\") return\n\t\tconst path = basePath.concat(key)\n\t\tpatches.push(op === \"remove\" ? {op, path} : {op, path, value})\n\t\tinversePatches.push(\n\t\t\top === \"add\"\n\t\t\t\t? {op: \"remove\", path}\n\t\t\t\t: op === \"remove\"\n\t\t\t\t? {op: \"add\", path, value: origValue}\n\t\t\t\t: {op: \"replace\", path, value: origValue}\n\t\t)\n\t})\n}\n\nfunction generateSetPatches(state, basePath, patches, inversePatches) {\n\tlet {base, copy} = state\n\n\tlet i = 0\n\tfor (const value of base) {\n\t\tif (!copy.has(value)) {\n\t\t\tconst path = basePath.concat([i])\n\t\t\tpatches.push({\n\t\t\t\top: \"remove\",\n\t\t\t\tpath,\n\t\t\t\tvalue\n\t\t\t})\n\t\t\tinversePatches.unshift({\n\t\t\t\top: \"add\",\n\t\t\t\tpath,\n\t\t\t\tvalue\n\t\t\t})\n\t\t}\n\t\ti++\n\t}\n\ti = 0\n\tfor (const value of copy) {\n\t\tif (!base.has(value)) {\n\t\t\tconst path = basePath.concat([i])\n\t\t\tpatches.push({\n\t\t\t\top: \"add\",\n\t\t\t\tpath,\n\t\t\t\tvalue\n\t\t\t})\n\t\t\tinversePatches.unshift({\n\t\t\t\top: \"remove\",\n\t\t\t\tpath,\n\t\t\t\tvalue\n\t\t\t})\n\t\t}\n\t\ti++\n\t}\n}\n\nexport const applyPatches = (draft, patches) => {\n\tfor (const patch of patches) {\n\t\tconst {path, op} = patch\n\n\t\tif (!path.length) throw new Error(\"Illegal state\")\n\n\t\tlet base = draft\n\t\tfor (let i = 0; i < path.length - 1; i++) {\n\t\t\tbase = get(base, path[i])\n\t\t\tif (!base || typeof base !== \"object\")\n\t\t\t\tthrow new Error(\"Cannot apply patch, path doesn't resolve: \" + path.join(\"/\")) // prettier-ignore\n\t\t}\n\n\t\tconst value = clone(patch.value) // used to clone patch to ensure original patch is not modified, see #411\n\n\t\tconst key = path[path.length - 1]\n\t\tswitch (op) {\n\t\t\tcase \"replace\":\n\t\t\t\tif (isMap(base)) {\n\t\t\t\t\tbase.set(key, value)\n\t\t\t\t} else if (isSet(base)) {\n\t\t\t\t\tthrow new Error('Sets cannot have \"replace\" patches.')\n\t\t\t\t} else {\n\t\t\t\t\t// if value is an object, then it's assigned by reference\n\t\t\t\t\t// in the following add or remove ops, the value field inside the patch will also be modifyed\n\t\t\t\t\t// so we use value from the cloned patch\n\t\t\t\t\tbase[key] = value\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\tcase \"add\":\n\t\t\t\tif (isSet(base)) {\n\t\t\t\t\tbase.delete(patch.value)\n\t\t\t\t}\n\n\t\t\t\tArray.isArray(base)\n\t\t\t\t\t? base.splice(key, 0, value)\n\t\t\t\t\t: isMap(base)\n\t\t\t\t\t? base.set(key, value)\n\t\t\t\t\t: isSet(base)\n\t\t\t\t\t? base.add(value)\n\t\t\t\t\t: (base[key] = value)\n\t\t\t\tbreak\n\t\t\tcase \"remove\":\n\t\t\t\tArray.isArray(base)\n\t\t\t\t\t? base.splice(key, 1)\n\t\t\t\t\t: isMap(base)\n\t\t\t\t\t? base.delete(key)\n\t\t\t\t\t: isSet(base)\n\t\t\t\t\t? base.delete(patch.value)\n\t\t\t\t\t: delete base[key]\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"Unsupported patch operation: \" + op)\n\t\t}\n\t}\n\n\treturn draft\n}\n","import * as legacyProxy from \"./es5\"\nimport * as modernProxy from \"./proxy\"\nimport {applyPatches, generatePatches} from \"./patches\"\nimport {\n\tassign,\n\teach,\n\thas,\n\tis,\n\tisDraft,\n\tisSet,\n\tget,\n\tisMap,\n\tisDraftable,\n\tisEnumerable,\n\tshallowCopy,\n\tDRAFT_STATE,\n\tNOTHING,\n\tfreeze\n} from \"./common\"\nimport {ImmerScope} from \"./scope\"\n\nfunction verifyMinified() {}\n\nconst configDefaults = {\n\tuseProxies:\n\t\ttypeof Proxy !== \"undefined\" &&\n\t\ttypeof Proxy.revocable !== \"undefined\" &&\n\t\ttypeof Reflect !== \"undefined\",\n\tautoFreeze:\n\t\ttypeof process !== \"undefined\"\n\t\t\t? process.env.NODE_ENV !== \"production\"\n\t\t\t: verifyMinified.name === \"verifyMinified\",\n\tonAssign: null,\n\tonDelete: null,\n\tonCopy: null\n}\n\nexport class Immer {\n\tconstructor(config) {\n\t\tassign(this, configDefaults, config)\n\t\tthis.setUseProxies(this.useProxies)\n\t\tthis.produce = this.produce.bind(this)\n\t\tthis.produceWithPatches = this.produceWithPatches.bind(this)\n\t}\n\tproduce(base, recipe, patchListener) {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\" && typeof recipe !== \"function\") {\n\t\t\tconst defaultBase = recipe\n\t\t\trecipe = base\n\n\t\t\tconst self = this\n\t\t\treturn function curriedProduce(base = defaultBase, ...args) {\n\t\t\t\treturn self.produce(base, draft => recipe.call(this, draft, ...args)) // prettier-ignore\n\t\t\t}\n\t\t}\n\n\t\t// prettier-ignore\n\t\t{\n\t\t\tif (typeof recipe !== \"function\") {\n\t\t\t\tthrow new Error(\"The first or second argument to `produce` must be a function\")\n\t\t\t}\n\t\t\tif (patchListener !== undefined && typeof patchListener !== \"function\") {\n\t\t\t\tthrow new Error(\"The third argument to `produce` must be a function or undefined\")\n\t\t\t}\n\t\t}\n\n\t\tlet result\n\n\t\t// Only plain objects, arrays, and \"immerable classes\" are drafted.\n\t\tif (isDraftable(base)) {\n\t\t\tconst scope = ImmerScope.enter()\n\t\t\tconst proxy = this.createProxy(base)\n\t\t\tlet hasError = true\n\t\t\ttry {\n\t\t\t\tresult = recipe(proxy)\n\t\t\t\thasError = false\n\t\t\t} finally {\n\t\t\t\t// finally instead of catch + rethrow better preserves original stack\n\t\t\t\tif (hasError) scope.revoke()\n\t\t\t\telse scope.leave()\n\t\t\t}\n\t\t\tif (typeof Promise !== \"undefined\" && result instanceof Promise) {\n\t\t\t\treturn result.then(\n\t\t\t\t\tresult => {\n\t\t\t\t\t\tscope.usePatches(patchListener)\n\t\t\t\t\t\treturn this.processResult(result, scope)\n\t\t\t\t\t},\n\t\t\t\t\terror => {\n\t\t\t\t\t\tscope.revoke()\n\t\t\t\t\t\tthrow error\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\tscope.usePatches(patchListener)\n\t\t\treturn this.processResult(result, scope)\n\t\t} else {\n\t\t\tresult = recipe(base)\n\t\t\tif (result === NOTHING) return undefined\n\t\t\tif (result === undefined) result = base\n\t\t\tthis.maybeFreeze(result, true)\n\t\t\treturn result\n\t\t}\n\t}\n\tproduceWithPatches(arg1, arg2, arg3) {\n\t\tif (typeof arg1 === \"function\") {\n\t\t\tconst self = this\n\t\t\treturn (state, ...args) =>\n\t\t\t\tthis.produceWithPatches(state, draft => arg1(draft, ...args))\n\t\t}\n\t\t// non-curried form\n\t\tif (arg3)\n\t\t\tthrow new Error(\"A patch listener cannot be passed to produceWithPatches\")\n\t\tlet patches, inversePatches\n\t\tconst nextState = this.produce(arg1, arg2, (p, ip) => {\n\t\t\tpatches = p\n\t\t\tinversePatches = ip\n\t\t})\n\t\treturn [nextState, patches, inversePatches]\n\t}\n\tcreateDraft(base) {\n\t\tif (!isDraftable(base)) {\n\t\t\tthrow new Error(\"First argument to `createDraft` must be a plain object, an array, or an immerable object\") // prettier-ignore\n\t\t}\n\t\tconst scope = ImmerScope.enter()\n\t\tconst proxy = this.createProxy(base)\n\t\tproxy[DRAFT_STATE].isManual = true\n\t\tscope.leave()\n\t\treturn proxy\n\t}\n\tfinishDraft(draft, patchListener) {\n\t\tconst state = draft && draft[DRAFT_STATE]\n\t\tif (!state || !state.isManual) {\n\t\t\tthrow new Error(\"First argument to `finishDraft` must be a draft returned by `createDraft`\") // prettier-ignore\n\t\t}\n\t\tif (state.finalized) {\n\t\t\tthrow new Error(\"The given draft is already finalized\") // prettier-ignore\n\t\t}\n\t\tconst {scope} = state\n\t\tscope.usePatches(patchListener)\n\t\treturn this.processResult(undefined, scope)\n\t}\n\tsetAutoFreeze(value) {\n\t\tthis.autoFreeze = value\n\t}\n\tsetUseProxies(value) {\n\t\tthis.useProxies = value\n\t\tassign(this, value ? modernProxy : legacyProxy)\n\t}\n\tapplyPatches(base, patches) {\n\t\t// If a patch replaces the entire state, take that replacement as base\n\t\t// before applying patches\n\t\tlet i\n\t\tfor (i = patches.length - 1; i >= 0; i--) {\n\t\t\tconst patch = patches[i]\n\t\t\tif (patch.path.length === 0 && patch.op === \"replace\") {\n\t\t\t\tbase = patch.value\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\tif (isDraft(base)) {\n\t\t\t// N.B: never hits if some patch a replacement, patches are never drafts\n\t\t\treturn applyPatches(base, patches)\n\t\t}\n\t\t// Otherwise, produce a copy of the base state.\n\t\treturn this.produce(base, draft =>\n\t\t\tapplyPatches(draft, patches.slice(i + 1))\n\t\t)\n\t}\n\t/** @internal */\n\tprocessResult(result, scope) {\n\t\tconst baseDraft = scope.drafts[0]\n\t\tconst isReplaced = result !== undefined && result !== baseDraft\n\t\tthis.willFinalize(scope, result, isReplaced)\n\t\tif (isReplaced) {\n\t\t\tif (baseDraft[DRAFT_STATE].modified) {\n\t\t\t\tscope.revoke()\n\t\t\t\tthrow new Error(\"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\") // prettier-ignore\n\t\t\t}\n\t\t\tif (isDraftable(result)) {\n\t\t\t\t// Finalize the result in case it contains (or is) a subset of the draft.\n\t\t\t\tresult = this.finalize(result, null, scope)\n\t\t\t\tthis.maybeFreeze(result)\n\t\t\t}\n\t\t\tif (scope.patches) {\n\t\t\t\tscope.patches.push({\n\t\t\t\t\top: \"replace\",\n\t\t\t\t\tpath: [],\n\t\t\t\t\tvalue: result\n\t\t\t\t})\n\t\t\t\tscope.inversePatches.push({\n\t\t\t\t\top: \"replace\",\n\t\t\t\t\tpath: [],\n\t\t\t\t\tvalue: baseDraft[DRAFT_STATE].base\n\t\t\t\t})\n\t\t\t}\n\t\t} else {\n\t\t\t// Finalize the base draft.\n\t\t\tresult = this.finalize(baseDraft, [], scope)\n\t\t}\n\t\tscope.revoke()\n\t\tif (scope.patches) {\n\t\t\tscope.patchListener(scope.patches, scope.inversePatches)\n\t\t}\n\t\treturn result !== NOTHING ? result : undefined\n\t}\n\t/**\n\t * @internal\n\t * Finalize a draft, returning either the unmodified base state or a modified\n\t * copy of the base state.\n\t */\n\tfinalize(draft, path, scope) {\n\t\tconst state = draft[DRAFT_STATE]\n\t\tif (!state) {\n\t\t\tif (Object.isFrozen(draft)) return draft\n\t\t\treturn this.finalizeTree(draft, null, scope)\n\t\t}\n\t\t// Never finalize drafts owned by another scope.\n\t\tif (state.scope !== scope) {\n\t\t\treturn draft\n\t\t}\n\t\tif (!state.modified) {\n\t\t\tthis.maybeFreeze(state.base, true)\n\t\t\treturn state.base\n\t\t}\n\t\tif (!state.finalized) {\n\t\t\tstate.finalized = true\n\t\t\tthis.finalizeTree(state.draft, path, scope)\n\n\t\t\t// We cannot really delete anything inside of a Set. We can only replace the whole Set.\n\t\t\tif (this.onDelete && !isSet(state.base)) {\n\t\t\t\t// The `assigned` object is unreliable with ES5 drafts.\n\t\t\t\tif (this.useProxies) {\n\t\t\t\t\tconst {assigned} = state\n\t\t\t\t\teach(assigned, (prop, exists) => {\n\t\t\t\t\t\tif (!exists) this.onDelete(state, prop)\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\t// TODO: Figure it out for Maps and Sets if we need to support ES5\n\t\t\t\t\tconst {base, copy} = state\n\t\t\t\t\teach(base, prop => {\n\t\t\t\t\t\tif (!has(copy, prop)) this.onDelete(state, prop)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.onCopy) {\n\t\t\t\tthis.onCopy(state)\n\t\t\t}\n\n\t\t\t// At this point, all descendants of `state.copy` have been finalized,\n\t\t\t// so we can be sure that `scope.canAutoFreeze` is accurate.\n\t\t\tif (this.autoFreeze && scope.canAutoFreeze) {\n\t\t\t\tfreeze(state.copy, false)\n\t\t\t}\n\n\t\t\tif (path && scope.patches) {\n\t\t\t\tgeneratePatches(state, path, scope.patches, scope.inversePatches)\n\t\t\t}\n\t\t}\n\t\treturn state.copy\n\t}\n\t/**\n\t * @internal\n\t * Finalize all drafts in the given state tree.\n\t */\n\tfinalizeTree(root, rootPath, scope) {\n\t\tconst state = root[DRAFT_STATE]\n\t\tif (state) {\n\t\t\tif (!this.useProxies) {\n\t\t\t\t// Create the final copy, with added keys and without deleted keys.\n\t\t\t\tstate.copy = shallowCopy(state.draft, true)\n\t\t\t}\n\t\t\troot = state.copy\n\t\t}\n\n\t\tconst needPatches = !!rootPath && !!scope.patches\n\t\tconst finalizeProperty = (prop, value, parent) => {\n\t\t\tif (value === parent) {\n\t\t\t\tthrow Error(\"Immer forbids circular references\")\n\t\t\t}\n\n\t\t\t// In the `finalizeTree` method, only the `root` object may be a draft.\n\t\t\tconst isDraftProp = !!state && parent === root\n\t\t\tconst isSetMember = isSet(parent)\n\n\t\t\tif (isDraft(value)) {\n\t\t\t\tconst path =\n\t\t\t\t\tisDraftProp &&\n\t\t\t\t\tneedPatches &&\n\t\t\t\t\t!isSetMember && // Set objects are atomic since they have no keys.\n\t\t\t\t\t!has(state.assigned, prop) // Skip deep patches for assigned keys.\n\t\t\t\t\t\t? rootPath.concat(prop)\n\t\t\t\t\t\t: null\n\n\t\t\t\t// Drafts owned by `scope` are finalized here.\n\t\t\t\tvalue = this.finalize(value, path, scope)\n\t\t\t\treplace(parent, prop, value)\n\n\t\t\t\t// Drafts from another scope must prevent auto-freezing.\n\t\t\t\tif (isDraft(value)) {\n\t\t\t\t\tscope.canAutoFreeze = false\n\t\t\t\t}\n\n\t\t\t\t// Unchanged drafts are never passed to the `onAssign` hook.\n\t\t\t\tif (isDraftProp && value === get(state.base, prop)) return\n\t\t\t}\n\t\t\t// Unchanged draft properties are ignored.\n\t\t\telse if (isDraftProp && is(value, get(state.base, prop))) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\t// Search new objects for unfinalized drafts. Frozen objects should never contain drafts.\n\t\t\telse if (isDraftable(value) && !Object.isFrozen(value)) {\n\t\t\t\teach(value, finalizeProperty)\n\t\t\t\tthis.maybeFreeze(value)\n\t\t\t}\n\n\t\t\tif (isDraftProp && this.onAssign && !isSetMember) {\n\t\t\t\tthis.onAssign(state, prop, value)\n\t\t\t}\n\t\t}\n\n\t\teach(root, finalizeProperty)\n\t\treturn root\n\t}\n\tmaybeFreeze(value, deep = false) {\n\t\tif (this.autoFreeze && !isDraft(value)) {\n\t\t\tfreeze(value, deep)\n\t\t}\n\t}\n}\n\nfunction replace(parent, prop, value) {\n\tif (isMap(parent)) {\n\t\tparent.set(prop, value)\n\t} else if (isSet(parent)) {\n\t\t// In this case, the `prop` is actually a draft.\n\t\tparent.delete(prop)\n\t\tparent.add(value)\n\t} else if (Array.isArray(parent) || isEnumerable(parent, prop)) {\n\t\t// Preserve non-enumerable properties.\n\t\tparent[prop] = value\n\t} else {\n\t\tObject.defineProperty(parent, prop, {\n\t\t\tvalue,\n\t\t\twritable: true,\n\t\t\tconfigurable: true\n\t\t})\n\t}\n}\n","import {Immer} from \"./immer\"\n\nconst immer = new Immer()\n\n/**\n * The `produce` function takes a value and a \"recipe function\" (whose\n * return value often depends on the base state). The recipe function is\n * free to mutate its first argument however it wants. All mutations are\n * only ever applied to a __copy__ of the base state.\n *\n * Pass only a function to create a \"curried producer\" which relieves you\n * from passing the recipe function every time.\n *\n * Only plain objects and arrays are made mutable. All other objects are\n * considered uncopyable.\n *\n * Note: This function is __bound__ to its `Immer` instance.\n *\n * @param {any} base - the initial state\n * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n * @param {Function} patchListener - optional function that will be called with all the patches produced here\n * @returns {any} a new state, or the initial state if nothing was modified\n */\nexport const produce = immer.produce\nexport default produce\n\n/**\n * Like `produce`, but `produceWithPatches` always returns a tuple\n * [nextState, patches, inversePatches] (instead of just the next state)\n */\nexport const produceWithPatches = immer.produceWithPatches.bind(immer)\n\n/**\n * Pass true to automatically freeze all copies created by Immer.\n *\n * By default, auto-freezing is disabled in production.\n */\nexport const setAutoFreeze = immer.setAutoFreeze.bind(immer)\n\n/**\n * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n * always faster than using ES5 proxies.\n *\n * By default, feature detection is used, so calling this is rarely necessary.\n */\nexport const setUseProxies = immer.setUseProxies.bind(immer)\n\n/**\n * Apply an array of Immer patches to the first argument.\n *\n * This function is a producer, which means copy-on-write is in effect.\n */\nexport const applyPatches = immer.applyPatches.bind(immer)\n\n/**\n * Create an Immer draft from the given base state, which may be a draft itself.\n * The draft can be modified until you finalize it with the `finishDraft` function.\n */\nexport const createDraft = immer.createDraft.bind(immer)\n\n/**\n * Finalize an Immer draft from a `createDraft` call, returning the base state\n * (if no changes were made) or a modified copy. The draft must *not* be\n * mutated afterwards.\n *\n * Pass a function as the 2nd argument to generate Immer patches based on the\n * changes that were made.\n */\nexport const finishDraft = immer.finishDraft.bind(immer)\n\nexport {\n\toriginal,\n\tisDraft,\n\tisDraftable,\n\tNOTHING as nothing,\n\tDRAFTABLE as immerable\n} from \"./common\"\n\nexport {Immer}\n","/**\r\n * @preserve Copyright 2010-2019 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { Frame } from \"../Types\";\r\n\r\n/**\r\n * Module:          PlayerFrames\r\n * Responsibility:  Contains player related frames\r\n */\r\n\r\nexport function getPlayerFrame(): Frame {\r\n\r\n    const playerFrame: Frame = [\r\n        [\"0\", \"0\", \"B\", \"B\", \"0\", \"0\"],\r\n        [\"A\", \"B\", \"F\", \"F\", \"B\", \"A\"],\r\n        [\"B\", \"F\", \"0\", \"0\", \"F\", \"B\"],\r\n    ];\r\n\r\n    return playerFrame;\r\n}\r\n\r\nexport function getPlayerFormationFrames(): Frame[] {\r\n    const playerFormationFrames: Frame[] = [\r\n        [[\"B\", \"B\"]],  // nozzle tip\r\n        [[\"F\", \"F\"]],  // nozle bottom\r\n        [              // left wing\r\n            [\"A\", \"B\"],\r\n            [\"B\", \"F\"],\r\n        ],\r\n        [              // right wing\r\n            [\"B\", \"A\"],\r\n            [\"F\", \"B\"]\r\n        ],\r\n    ];\r\n\r\n    return playerFormationFrames;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseEnemy from \"./Base/BaseEnemy\";\r\nimport PlayerState, { AlivePlayer } from \"./State/Player/PlayerState\";\r\nimport { allGameKeys, GameKeys } from \"./Utility/KeyboardEvents\";\r\n\r\n/**\r\n * Module:          Guard\r\n * Responsibility:  TypeGuards\r\n */\r\n\r\nnamespace Guard {\r\n    export function isValidGameKey(value: string): value is GameKeys {\r\n        return allGameKeys.indexOf(value as GameKeys) !== -1;\r\n    }\r\n\r\n    /**\r\n     * TypeGuard for enemies\r\n     */\r\n    export function isEnemy(value: any): value is BaseEnemy {\r\n        return value && value.getObjectType() === \"enemy\";\r\n    }\r\n\r\n    /**\r\n     * Checks if the player is alive (and if the hitboxes and nozzleLocation are defined)\r\n     * @param {PlayerState} value.\r\n     * @returns {AlivePlayer}. An interface that extends PlayerState but changes 'type' | undefined o just the type.\r\n     */\r\n    export function isPlayerAlive(value: PlayerState): value is AlivePlayer {\r\n        return value.alive && value.hitboxes !== undefined && value.nozzleLocation !== undefined;\r\n    }\r\n}\r\n\r\nexport default Guard;\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          StateProviders\r\n * Responsibility:  Functions that provide a state object.\r\n */\r\n\r\nimport { produce } from \"immer\";\r\nimport BaseEnemy from \"../Base/BaseEnemy\";\r\nimport Explosion from \"../Models/Explosion\";\r\nimport { Frame } from \"../Types\";\r\nimport { getFrameHitbox } from \"../Utility/Frame\";\r\nimport { fallsWithinGameField, getLocation } from \"../Utility/Location\";\r\nimport { EnemyState } from \"./EnemyLevel/EnemyState\";\r\nimport { ParticleState } from \"./Player/ParticleState\";\r\nimport { appState } from \"./Store\";\r\n\r\nexport namespace StateProviders {\r\n    /**\r\n     * Gets a particle state object.\r\n     * @export\r\n     * @param {number} left. Left coordinate.\r\n     * @param {number} top. Top coordinate\r\n     * @param {number} speed. Speed of the particle in px/tick\r\n     * @param {number} angle. Direction angle\r\n     * @param {Frame} frame. Frame to render.\r\n     * @param {number} [acceletation=1]. Below 1 slows down, above 1 speeds up. 1 by default\r\n     * @param {number} [hitboxTopOffset=0]. Offset, in game pixels, that increases the top of the hitbox.\r\n     * @param {number} [hitboxBottomOffset=0]. Offset, in game pixels, that increases the bottom of the hitbox.\r\n     * @returns {ParticleState}\r\n     */\r\n    export function getParticleState(\r\n        left: number,\r\n        top: number,\r\n        speed: number,\r\n        angle: number,\r\n        frame: Frame,\r\n        acceletation: number = 1,\r\n        hitboxTopOffset: number = 0,\r\n        hitboxBottomOffset: number = 0): ParticleState {\r\n\r\n        const bulletHitbox = getFrameHitbox(left, top, frame, hitboxTopOffset, hitboxBottomOffset);\r\n\r\n        const bullet: ParticleState = {\r\n            acceletation,\r\n            angle,\r\n            coloredFrame: frame,\r\n            hitbox: bulletHitbox,\r\n            speed,\r\n            left,\r\n            top,\r\n        };\r\n\r\n        return bullet;\r\n    }\r\n\r\n    /**\r\n     * Gets a particle state object.\r\n     * @export\r\n     * @param {number} left. Left coordinate.\r\n     * @param {number} top. Top coordinate\r\n     * @param {number} speed. Speed of the particle in px/tick\r\n     * @param {number} angle. Direction angle\r\n     * @param {Frame} frame. Frame to render.\r\n     * @param {number} order. The id of the owner. aka. The ship that fired the bullet.\r\n     * @param {number} [hitboxTopOffset=0]. Offset, in game pixels, that increases the top of the hitbox.\r\n     * @param {number} [hitboxBottomOffset=0]. Offset, in game pixels, that increases the bottom of the hitbox.\r\n     * @returns {ParticleState}\r\n     */\r\n    export function getBulletParticleState(\r\n        left: number,\r\n        top: number,\r\n        speed: number,\r\n        angle: number,\r\n        frame: Frame,\r\n        ownerId: number,\r\n        hitboxTopOffset: number = 0,\r\n        hitboxBottomOffset: number = 0): ParticleState {\r\n\r\n        const particle = getParticleState(left, top, speed, angle, frame, 1, hitboxTopOffset, hitboxBottomOffset);\r\n        particle.owner = ownerId;\r\n\r\n        return particle;\r\n    }\r\n\r\n    /**\r\n     * particleProvider. Provides particle objects based on an Explosion asset.\r\n     * @param {number} left. Left coordinate.\r\n     * @param {number} top. Top coordinate.\r\n     * @param {ExplosionProviderFunction} getExplosion. Explosion asset used to generate particle objects.\r\n     * @returns {Particle[]}. Resulting particles.\r\n     */\r\n    export function explosionShrapnellProvider(left: number, top: number, explosion: Explosion): ParticleState[] {\r\n\r\n        const particles: ParticleState[] = [];\r\n        for (let i = 0; i < explosion.particleFrameIndexes.length; i++) {\r\n            // Create an array with every particle frame.\r\n            const particleFrameIndex = explosion.particleFrameIndexes[i];\r\n            const particleFrame = explosion.particleFrames[particleFrameIndex];\r\n\r\n            const angle = explosion.angles[i];\r\n            const speed = explosion.useSpeed ? explosion.speed : explosion.speeds[i];\r\n\r\n            const p = StateProviders.getParticleState(left, top, speed, angle, particleFrame, explosion.acceleration, 0, 0);\r\n            particles.push(p);\r\n        }\r\n\r\n        return particles;\r\n    }\r\n\r\n    /**\r\n     * Retrns a new particle state with updated speeds and locations.\r\n     * @param {ParticleState[]} particles. Array of ParticleState\r\n     * @returns {ParticleState[]}. Remaining particles with updated speeds and locations.\r\n     */\r\n    export function getUpdatedParticleState(particles: ParticleState[]): ParticleState[] {\r\n\r\n        const nextState: ParticleState[] = [];\r\n        for (const particle of particles) {\r\n\r\n            const updatedParticle = produce(particle, (draft) => {\r\n                const newLocation = getLocation(particle.left, particle.top, particle.angle, particle.speed);\r\n                const hitbox = getFrameHitbox(newLocation.left, newLocation.top, particle.coloredFrame);\r\n\r\n                if (fallsWithinGameField(hitbox.left, hitbox.right, newLocation.top, hitbox.bottom)) {\r\n                    draft.left = newLocation.left;\r\n                    draft.top = newLocation.top;\r\n                    draft.speed = particle.speed * particle.acceletation;\r\n                    draft.hitbox = getFrameHitbox(newLocation.left, newLocation.top, particle.coloredFrame);\r\n                }\r\n            });\r\n\r\n            if (particle !== updatedParticle) {\r\n                nextState.push(updatedParticle);\r\n            }\r\n        }\r\n\r\n        return nextState;\r\n    }\r\n\r\n    /**\r\n     * Gets the enemy's ship's state. Throws an exception if the enemy could not be found.\r\n     * @export\r\n     * @param {BaseEnemy} enemy\r\n     * @returns {EnemyState}\r\n     */\r\n    export function getEnemyState(enemy: BaseEnemy): EnemyState {\r\n        const state = appState().enemyLevelState.enemies.find((e) => e.enemyId === enemy.getId());\r\n\r\n        if (state === undefined) {\r\n            throw new Error(\"Could not retrive state for enemy \" + enemy.getId());\r\n        }\r\n\r\n        return state;\r\n    }\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport ILocationProvider from \"../Interfaces/ILocationProvider\";\r\nimport { GameLocation } from \"../Models/GameLocation\";\r\n\r\n/**\r\n * Module:          BaseLocationProvider\r\n * Responsibility:  BaseClass for most location providers.\r\n */\r\n\r\nexport default abstract class BaseLocationProvider implements ILocationProvider {\r\n    /**\r\n     * Base speed. Used to calculate speed increaes.\r\n     */\r\n    private baseSpeed: number;\r\n    constructor(\r\n        protected left: number,\r\n        protected top: number,\r\n        protected speed: number,\r\n        protected angle: number,\r\n        protected width: number,\r\n        protected height: number) {\r\n\r\n        this.baseSpeed = speed;\r\n    }\r\n\r\n    /**\r\n     * Returns a location. Implement specific movement behaviours in a diriving class.\r\n     * @param {number} left. Left coordinate.\r\n     * @param {number} top. Top coordinate.\r\n     * @param {number} width. Width of the object.\r\n     * @param {number} height. Height of the object.\r\n     */\r\n    public getCurrentLocation(): GameLocation {\r\n        return {\r\n            left: this.left,\r\n            top: this.top\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Updates the state of the location provider.\r\n     * @param {number} tick. Current tick\r\n     */\r\n    public abstract updateState(tick: number): void;\r\n\r\n    /**\r\n     * increases the speed by the provided factor.\r\n     * @param {number} factor.\r\n     */\r\n    public increaseSpeed(factor: number): void {\r\n        this.speed = this.baseSpeed * factor;\r\n    }\r\n}\r\n","\r\n/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport CGAColors from \"../Constants/CGAColors\";\r\nimport { WarpLevelConstants } from \"../Constants/Constants\";\r\nimport { GameRectangle } from \"../Models/GameRectangle\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport ctxProvider from \"../Render/CtxProvider\";\r\n\r\n/**\r\n * Module:          StaticRenders\r\n * Responsibility:  Starts the game\r\n */\r\n\r\nconst {\r\n    pixelSize,\r\n    gameField,\r\n    statusBarBottom,\r\n    fullGameWidth\r\n} = dimensionProvider();\r\n\r\nexport function drawBackground(): void {\r\n    clearGameFieldBackground();\r\n}\r\n\r\n/**\r\n * Renders the entire canvas black\r\n */\r\nfunction clearGameFieldBackground(): void {\r\n    const ctx = ctxProvider();\r\n    ctx.fillStyle = CGAColors.black;\r\n    ctx.fillRect(gameField.left, gameField.top, gameField.right, gameField.bottom);\r\n}\r\n\r\n/**\r\n * Draws a solid red recangle where the game's score is displayed.\r\n */\r\nexport function drawGameFieldBorder(): void {\r\n    const ctx = ctxProvider();\r\n    ctx.fillStyle = CGAColors.blue;\r\n\r\n    // Draw the top field border.\r\n    ctx.fillRect(0, statusBarBottom, fullGameWidth, pixelSize);\r\n\r\n    // Draw the right field border.\r\n    ctx.fillRect(gameField.right, statusBarBottom, pixelSize, gameField.bottom);\r\n\r\n    // // Draw the bottom field border.\r\n    ctx.fillRect(0, gameField.bottom, fullGameWidth, pixelSize);\r\n\r\n    // // Draw the left field border.\r\n    ctx.fillRect(0, statusBarBottom, pixelSize, gameField.bottom);\r\n}\r\n\r\n/**\r\n * Draws the background of the warp level.\r\n * @param {string} additionalColor. The additional color.\r\n */\r\nexport function drawWarpBackground(additionalColor: string, gate: GameRectangle[]): void {\r\n    const ctx = ctxProvider();\r\n\r\n    // The first line in a warp level is always white.\r\n    // we'll use this flag to altername between white and a randonly picked color.\r\n    let drawWhite = true;\r\n    let left = WarpLevelConstants.left;\r\n\r\n    while (WarpLevelConstants.right >= left) {\r\n        if (drawWhite) {\r\n            ctx.fillStyle = CGAColors.white;\r\n            drawWhite = false;\r\n        } else {\r\n            ctx.fillStyle = additionalColor;\r\n            drawWhite = true;\r\n        }\r\n\r\n        ctx.fillRect(left, WarpLevelConstants.top, pixelSize, WarpLevelConstants.height);\r\n        left += pixelSize;\r\n    }\r\n\r\n    ctx.fillStyle = \"black\";\r\n\r\n    gate.forEach((r) => ctx.fillRect(r.left, r.top, r.right - r.left, r.bottom - r.top));\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport dimensionProvider from \"./DimensionProvider\";\r\n\r\n/**\r\n * Module:          speedProvider\r\n * Responsibility:  Calculate the relative speed based on the screensize.\r\n */\r\n\r\nconst {\r\n    gameField\r\n} = dimensionProvider();\r\n\r\nexport default function speedProvider(speed: number): number {\r\n    // 1600 is the size of the canvas when I was developing the game. All game speeds are based on this.\r\n    return speed * (gameField.right / 1600);\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { EnemyState } from \"../State/EnemyLevel/EnemyState\";\r\nimport { appState } from \"../State/Store\";\r\n\r\n/**\r\n * Module:          GetShipsReadyToFire\r\n * Responsibility:  Returns ships whose last fire tick time permits them to fire now.\r\n */\r\n\r\nexport function GetShipsReadyToFire(tick: number): EnemyState[] {\r\n    const {\r\n        enemyLevelState: { enemies }\r\n    } = appState();\r\n\r\n    return enemies.filter((enemy) => enemy.lastFiretick === undefined || enemy.lastFiretick + 50 < tick);\r\n}\r\n","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { calculateTimeSpeedIncrease } from \"../Utility/Lib\";\r\n\r\n/**\r\n * Module:          TickHandler\r\n * Responsibility:  Handles a game tick.\r\n */\r\n\r\nexport default class TickHandler {\r\n\r\n    /**\r\n     * Keeps track of the last time the tick handler ticked.\r\n     */\r\n    private lastTick = 0;\r\n\r\n    /**\r\n     * Time between ticks when we have to do something.\r\n     */\r\n    private time: number;\r\n\r\n    /**\r\n     * The function called when the time between ticks has passed.\r\n     */\r\n    private onTimePassed: (tick: number) => void;\r\n\r\n    /**\r\n     * Base time between actions without modification\r\n     */\r\n    private baseTime: number;\r\n\r\n    /**\r\n     * Creates the TickHandler class.\r\n     * @param {number} time. The time that should pass between ticks.\r\n     * @param {() => void} onTickPassed. The function to call when the specified time has passed between ticks.\r\n     */\r\n    constructor(time: number, onTimePassed: (tick: number) => void) {\r\n        this.time = time;\r\n        this.baseTime = time;\r\n        this.onTimePassed = onTimePassed;\r\n    }\r\n\r\n    /**\r\n     * Tick\r\n     * @param {number} tick. The current tick.\r\n     */\r\n    public tick(tick: number): void {\r\n        if (tick - this.lastTick >= this.time) {\r\n            this.onTimePassed(tick);\r\n\r\n            this.lastTick = tick;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Increase speed means lowering time between actions.\r\n     * @param {number} factor. 1 = no change. > 1 means faster.\r\n     */\r\n    public increaseSpeed(factor: number): void {\r\n        this.time = calculateTimeSpeedIncrease(this.baseTime, factor);\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { addPhaser, nextLevel } from \"../State/Game/GameActions\";\r\nimport { dispatch } from \"../State/Store\";\r\n\r\n/**\r\n * Module:          HandleLevelWon\r\n * Responsibility:  Define what should happen when the player wins a level.\r\n */\r\n\r\nexport default function handleLevelWon(): void {\r\n    // Add a phaser because that's a level won reward.\r\n    dispatch(addPhaser());\r\n\r\n    // Move to the next level.\r\n    dispatch(nextLevel());\r\n}","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","import CGAColors from \"../Constants/CGAColors\";\r\nimport { GameRectangle } from \"../Models/GameRectangle\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport ctxProvider from \"../Render/CtxProvider\";\r\nimport { appState } from \"../State/Store\";\r\n\r\nconst {\r\n    pixelSize,\r\n    fullGameWidth,\r\n    fullGameHeight\r\n} = dimensionProvider();\r\n\r\nexport function DEBUGGING_renderHitboxes() {\r\n    const { playerState, enemyLevelState } = appState();\r\n    const hitboxes = enemyLevelState.enemies.map((e) => e.hitbox);\r\n\r\n    // Add player if defined.\r\n    if (playerState.hitboxes) {\r\n        hitboxes.push(playerState.hitboxes.bottom);\r\n        hitboxes.push(playerState.hitboxes.middle);\r\n    }\r\n\r\n    // Add bullet if defined.\r\n    if (playerState.bulletState?.hitbox) {\r\n        hitboxes.push(playerState.bulletState.hitbox);\r\n    }\r\n\r\n    enemyLevelState.bullets.forEach((b) => hitboxes.push(b.hitbox));\r\n    enemyLevelState.shrapnells.forEach((b) => hitboxes.push(b.hitbox));\r\n\r\n    // Draw a circle around each object using the\r\n    // coordiates and radius of the hitbox.\r\n    for (const hitbox of hitboxes) {\r\n\r\n        if (hitbox !== undefined) {\r\n            DEBUGGING_drawGameRect(hitbox, CGAColors.lightRed);\r\n        }\r\n    }\r\n}\r\n\r\nexport function DEBUGGING_drawGameRect(hitbox: GameRectangle, color: string, lineWith: number = 2) {\r\n    const ctx = ctxProvider();\r\n    ctx.beginPath();\r\n    ctx.strokeStyle = color;\r\n    ctx.rect(hitbox.left, hitbox.top, hitbox.right - hitbox.left, hitbox.bottom - hitbox.top);\r\n    ctx.lineWidth = lineWith;\r\n    ctx.stroke();\r\n    ctx.closePath();\r\n}\r\n\r\n/**\r\n * Debugggin function. Draws a grid in the screen for animation alignment.\r\n */\r\nexport function DEBUGGING_drawGrid(gridDetail?: number): void {\r\n\r\n    if (gridDetail === undefined) {\r\n        gridDetail = 1;\r\n    }\r\n\r\n    const ctx = ctxProvider();\r\n    for (let r = 0; r < 120; r += 1) {\r\n        ctx.beginPath();\r\n        const y = r * pixelSize * gridDetail;\r\n        ctx.lineTo(0, y);\r\n        ctx.lineTo(fullGameWidth, y);\r\n        ctx.lineWidth = 1;\r\n        ctx.strokeStyle = \"white\";\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n    }\r\n\r\n    for (let r = 0; r < 160; r += 1) {\r\n        ctx.beginPath();\r\n        const x = r * pixelSize * gridDetail;\r\n        ctx.lineTo(x, 0);\r\n        ctx.lineTo(x, fullGameHeight);\r\n        ctx.lineWidth = 1;\r\n        ctx.strokeStyle = \"white\";\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Constants\r\n * Responsibility:  Constants for the debugging state\r\n */\r\n\r\nnamespace Constants {\r\n    export const setDebuggingState = \"setDebuggingState\";\r\n}\r\n\r\nexport default Constants;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Constants for enemy level actions and reducer.\r\n */\r\n\r\nnamespace Constants {\r\n    export const resetLevelState = \"resetLevelState\";\r\n    export const addParticle = \"addParticle\";\r\n    export const addParticles = \"addParticles\";\r\n    export const setShrapnellState = \"setShrapnellState\";\r\n    export const addExplosionCenter = \"addExplosionCenter\";\r\n    export const setPhaserLocations = \"setPhaserLocations\";\r\n    export const clearPhaserLocations = \"clearPhaserLocations\";\r\n    export const setFireInterval = \"setFireInterval\";\r\n    export const setExplosionCenters = \"setExplosionCenters\";\r\n    export const addBullet = \"addBullet\";\r\n    export const setBulletState = \"setBulletState\";\r\n    export const setTotalEnemies = \"setTotalEnemies\";\r\n    export const addOrUpdateEnemy = \"addOrUpdateEnemy\";\r\n    export const removeEnemy = \"removeEnemy\";\r\n    export const setEnemyLastFireTick = \"setEnemyLastFireTick\";\r\n}\r\n\r\nexport default Constants;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Constants\r\n * Responsibility:  Constants used by the GameState reducer and by the Action creator functions\r\n */\r\n\r\nnamespace Constants {\r\n    export const setLives = \"setLives\";\r\n    export const addLife = \"addLife\";\r\n    export const removeLife = \"removeLife\";\r\n    export const increaseScore = \"increaseScore\";\r\n    export const addLevel = \"addLevel\";\r\n    export const setLevel = \"setLevel\";\r\n    export const nextLevel = \"nextLevel\";\r\n    export const addLifeAndPhaser = \"addLifeAndPhaser\";\r\n    export const setPhasers = \"setPhasers\";\r\n    export const addPhaser = \"addPhaser\";\r\n    export const removePhaser = \"removePhaser\";\r\n    export const setPause = \"setPause\";\r\n    export const setWarpLevelComplexity = \"setWarpLevelComplexity\";\r\n}\r\n\r\nexport default Constants;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { GameKeys } from \"../../Utility/KeyboardEvents\";\r\n\r\n/**\r\n * Module:          Constants\r\n * Responsibility:  Constants for valid keys used by the GameState\r\n */\r\n\r\nnamespace Constants {\r\n    export const arrowUp: GameKeys = \"ArrowUp\";\r\n    export const arrowDown: GameKeys = \"ArrowDown\";\r\n    export const arrowLeft: GameKeys = \"ArrowLeft\";\r\n    export const arrowRight: GameKeys = \"ArrowRight\";\r\n    export const backspace: GameKeys = \"Backspace\";\r\n    export const f1: GameKeys = \"F1\";\r\n    export const f2: GameKeys = \"F2\";\r\n    export const space: GameKeys = \"Space\";\r\n    export const keyup = \"KeyUp\";\r\n    export const keydown = \"KeyDown\";\r\n}\r\n\r\nexport default Constants;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Constants\r\n * Responsibility:  Constants used to determine the action type for the PlayerState.\r\n */\r\n\r\n/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Constants\r\n * Responsibility:  Provide constants for the player reducer and actions.\r\n */\r\n\r\nnamespace Constants {\r\n    export const setPlayerIsAlive = \"setPlayerIsAlive\";\r\n    export const setPlayerMovementLimit = \"setPlayerMovementLimit\";\r\n    export const setPlayerLocationData = \"setPlayerLocationData\";\r\n    export const setPlayerBulletState = \"setPlayerBulletState\";\r\n}\r\n\r\nexport default Constants;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { Frame } from \"../Types\";\r\nimport Mutators from \"../Utility/FrameMutators\";\r\n\r\n/**\r\n * Module:          Numbers\r\n * Responsibility:  Numbers 0 to 9. All colors are variant and can be set with single function call.\r\n */\r\n\r\nexport default function getNumbers(color: string): Frame[] {\r\n    const numbers: Frame[] = [\r\n        [\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"0\", \"0\", \"V\", \"0\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"0\", \"0\", \"V\", \"0\"],\r\n            [\"0\", \"0\", \"V\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n        ],\r\n        [\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"0\", \"V\", \"0\"],\r\n            [\"0\", \"V\", \"0\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n\r\n        ],\r\n        [\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"0\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"0\", \"V\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"0\", \"0\", \"V\", \"0\"],\r\n            [\"0\", \"0\", \"V\", \"0\"],\r\n\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n            [\"0\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"0\", \"V\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"0\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"0\", \"V\", \"0\"],\r\n            [\"0\", \"V\", \"0\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n        ],\r\n        [\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"V\"],\r\n            [\"0\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n        ],\r\n    ];\r\n\r\n    Mutators.Frames.setColor(numbers, color);\r\n    return numbers;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport GameLoop from \"../GameLoop\";\r\nimport { drawLevelBanner } from \"../GameScreen/LevelBanner\";\r\nimport { drawBackground } from \"../GameScreen/StaticRenders\";\r\nimport ILevel from \"../Interfaces/ILevel\";\r\nimport { enemyLevelContentFactory } from \"../Providers/EnemyLevelContentProvider\";\r\nimport EnemyLevelRunner from \"../Runners/EnemyLevelRunner\";\r\nimport { resetLevelState } from \"../State/EnemyLevel/EnemyLevelActions\";\r\nimport { setPlayerMovementLimit } from \"../State/Player/PlayerActions\";\r\nimport { appState, dispatch } from \"../State/Store\";\r\nimport handleLevelWon from \"../StateHandlers/HandleLevelWon\";\r\nimport { Enemies } from \"../Types\";\r\n\r\nexport default class EnemyLevel implements ILevel {\r\n\r\n    /**\r\n     * Array of subscriptions registered in the GameLoop. Disposed when the level is disposed.\r\n     */\r\n    private subscriptions: Array<() => void> = [];\r\n\r\n    /**\r\n     * Enemies of the level.\r\n     */\r\n    private enemies: Enemies;\r\n\r\n    /**\r\n     * Constructs the base level\r\n     * @param {TickFunction} stateManager. A function that will handle the state for the level.\r\n     * @param {() => boolean} monitorLevelWon. A function that checks fort he win condition of a level.\r\n     */\r\n    constructor(enemies: Enemies) {\r\n        this.enemies = enemies;\r\n    }\r\n\r\n    /**\r\n     * Register subscriptions.\r\n     * @param {function} f.\r\n     */\r\n    protected registerSubscription(f: () => void) {\r\n        this.subscriptions.push(f);\r\n    }\r\n\r\n    /**\r\n     * Begin this level.\r\n     * @param {() => void} levelReady. Optional callback that is called when the level is ready to begin.\r\n     */\r\n    public begin(levelReady?: () => void): void {\r\n\r\n        const { enemies, bulletRunner } = enemyLevelContentFactory(this.enemies);\r\n\r\n        const {\r\n            gameState\r\n        } = appState();\r\n\r\n        dispatch(setPlayerMovementLimit(\"immobile\"));\r\n\r\n        // Register the background draw function so it runs in the game loop.\r\n        this.registerSubscription(GameLoop.registerBackgroundDrawing(drawBackground));\r\n\r\n        // Draw the level banner to show which round we're at.\r\n        let level = 0;\r\n        if (gameState.level !== undefined) {\r\n            level = gameState.level;\r\n        }\r\n\r\n        // Draw the level banner, then start the level.\r\n        drawLevelBanner(level, () => {\r\n            // Register the stateManager so it can act on state changes in the level.\r\n            this.registerSubscription(GameLoop.registerUpdateState(EnemyLevelRunner.run));\r\n\r\n            if (bulletRunner !== undefined) {\r\n                this.registerSubscription(GameLoop.registerUpdateState((tick) => bulletRunner.updateState(tick)));\r\n            }\r\n\r\n            // Add the enemies to the enemy level runner. The registered stateManager will take it from here.\r\n            EnemyLevelRunner.setEnemies(enemies);\r\n\r\n            // Add a function to the GameLoop that will check if a level has been won.\r\n            this.registerSubscription(GameLoop.registerUpdateState(() => this.monitorLevelWonRun()));\r\n\r\n            dispatch(setPlayerMovementLimit(\"none\"));\r\n\r\n            if (levelReady !== undefined) {\r\n                levelReady();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Disposes subscriptions\r\n     */\r\n    public dispose(): void {\r\n        dispatch(resetLevelState());\r\n        // The subscription array contains functions that remove themselves\r\n        // from the GameLoop. Call all of them to remove them from the GameLoop.\r\n        this.subscriptions.forEach((s) => s());\r\n    }\r\n\r\n    /**\r\n     * This method uses the passed in monotorLeveLWon function to check if we can procede to the next level.\r\n     */\r\n    protected monitorLevelWonRun(): void {\r\n\r\n        // Use the provided function to check if the level has been completed.\r\n        if (this.levelClear()) {\r\n            handleLevelWon();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Functions that checks if the level is completely clear.\r\n     * @returns {boolean}. True if the enemies and shrapnell is gone.\r\n     */\r\n    private levelClear(): boolean {\r\n        const { enemyLevelState: { enemies, shrapnells } } = appState();\r\n        if (enemies.length === 0 && shrapnells.length === 0) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport CGAColors from \"../Constants/CGAColors\";\r\nimport GameLoop from \"../GameLoop\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport ctxProvider from \"../Render/CtxProvider\";\r\nimport renderFrame from \"../Render/RenderFrame\";\r\nimport getCharacters from \"../SharedFrames/Characters\";\r\nimport getNumbers from \"../SharedFrames/Numbers\";\r\nimport { Frame } from \"../Types\";\r\nimport { getFrameByIndex, getFrameDimensions } from \"../Utility/Frame\";\r\nimport getCharacter from \"../Utility/getCharacter\";\r\n\r\n/**\r\n * Module:          LevelBanner\r\n * Responsibility:  Shows the ROUND XX message before the level begins.\r\n */\r\n\r\nconst {\r\n    pixelSize,\r\n    gameField\r\n} = dimensionProvider();\r\n\r\nconst ctx = ctxProvider();\r\n\r\nconst greenCharacters = getCharacters(CGAColors.lightGreen);\r\nconst greenNumbers = getNumbers(CGAColors.lightGreen);\r\n\r\nconst roundCharacters = [\r\n    getCharacter(greenCharacters, \"R\"),\r\n    getCharacter(greenCharacters, \"O\"),\r\n    getCharacter(greenCharacters, \"U\"),\r\n    getCharacter(greenCharacters, \"N\"),\r\n    getCharacter(greenCharacters, \"D\"),\r\n];\r\n\r\nconst {\r\n    width\r\n} = getFrameDimensions(roundCharacters[0]);\r\n\r\nconst top = gameField.bottom * 0.33;\r\nconst left = pixelSize * 26;\r\nconst barwidth = pixelSize * 30;\r\nconst roundWidth = 76 * pixelSize;\r\nconst charSpacing = pixelSize * 2;\r\n\r\nexport function drawLevelBanner(level: number | undefined, start: () => void): void {\r\n\r\n    let levelNumber = 0;\r\n    if (level !== undefined) {\r\n        levelNumber = level;\r\n    }\r\n\r\n    const sub = GameLoop.registerBackgroundDrawing(() => draw(levelNumber));\r\n\r\n    // Draw the level banner for 1 second. The use the callback to signal the called something else\r\n    // can now be done.\r\n    window.setTimeout(() => {\r\n        sub();\r\n        start();\r\n    }, 1000);\r\n}\r\n\r\n/**\r\n * Draws the level banner for the passed level.\r\n * @param {number} level. Level the level banner should show.\r\n */\r\nfunction draw(level: number): void {\r\n    let barcolor: string;\r\n    let bartop = top;\r\n    for (let i = 0; i < 3; i++) {\r\n        if (i % 2 === 0) {\r\n            barcolor = CGAColors.red;\r\n        } else {\r\n            barcolor = CGAColors.brown;\r\n        }\r\n\r\n        ctx.fillStyle = barcolor;\r\n        ctx.fillRect(left, bartop, barwidth, pixelSize);\r\n        ctx.fillRect(left + roundWidth, bartop, barwidth, pixelSize);\r\n\r\n        bartop += pixelSize * 2;\r\n    }\r\n\r\n    let levelNumberStartPos: number = 0;\r\n    for (let i = 0; i < 5; i++) {\r\n        const spacing = i === 0 ? 0 : charSpacing * i;\r\n        const charLeft = left + barwidth + charSpacing * 2 + spacing + width * i;\r\n\r\n        levelNumberStartPos = charLeft;\r\n\r\n        renderFrame(charLeft, top, roundCharacters[i]);\r\n    }\r\n\r\n    levelNumberStartPos += width + charSpacing;\r\n\r\n    let leftNumber: string | undefined;\r\n    let rightNumber: string | undefined;\r\n\r\n    let leftNumberFrame: Frame | undefined;\r\n    let rightNumberFrame: Frame;\r\n\r\n    const stringLevel = level.toString();\r\n\r\n    const rightNumberPosition = levelNumberStartPos + width + charSpacing;\r\n\r\n    if (level >= 10) {\r\n        leftNumber = stringLevel[0];\r\n        rightNumber = stringLevel[1];\r\n\r\n        leftNumberFrame = getFrameByIndex(greenNumbers, parseInt(leftNumber, 10));\r\n        rightNumberFrame = getFrameByIndex(greenNumbers, parseInt(rightNumber, 10));\r\n\r\n    } else {\r\n        rightNumber = stringLevel;\r\n        rightNumberFrame = getFrameByIndex(greenNumbers, parseInt(rightNumber, 10));\r\n    }\r\n\r\n    // Render the left number if it's available.\r\n    if (leftNumber && leftNumberFrame) {\r\n        renderFrame(levelNumberStartPos, top, leftNumberFrame);\r\n    }\r\n\r\n    // Always render the right number.\r\n    renderFrame(rightNumberPosition, top, rightNumberFrame);\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          2pxBullet\r\n * Responsibility:  Define a bullet 2 pixels wide. Variant color allows it to be any color.\r\n */\r\n\r\nimport { Frame } from \"../Types\";\r\nimport Mutators from \"../Utility/FrameMutators\";\r\n\r\nexport default function getTwoPixelBullet(color?: string): Frame {\r\n    const twoPixelBullet: Frame = [\r\n        [\"V\", \"V\"],\r\n    ];\r\n\r\n    if (color !== undefined) {\r\n        Mutators.Frame.setColor(twoPixelBullet, color);\r\n    }\r\n\r\n    return twoPixelBullet;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport Guard from \"../Guard\";\r\nimport { setPause } from \"../State/Game/GameActions\";\r\nimport { keyDown, keyUp } from \"../State/Keyboard/KeyboardActions\";\r\nimport { appState, dispatch } from \"../State/Store\";\r\n\r\n/**\r\n * Module:          KeyboardEVents\r\n * Responsibility:  handle keyboard events.\r\n */\r\n\r\n/**\r\n * Valid game keys.\r\n */\r\nexport type GameKeys =\r\n    \"ArrowUp\" |\r\n    \"ArrowDown\" |\r\n    \"ArrowLeft\" |\r\n    \"ArrowRight\" |\r\n    \"Backspace\" |\r\n    \"F1\" |\r\n    \"F2\" |\r\n    \"Space\";\r\n\r\n/**\r\n * Array of valid game keys.\r\n */\r\nexport const allGameKeys: GameKeys[] = [\r\n    \"ArrowDown\",\r\n    \"ArrowLeft\",\r\n    \"ArrowRight\",\r\n    \"ArrowUp\",\r\n    \"Backspace\",\r\n    \"F1\",\r\n    \"F2\",\r\n    \"Space\",\r\n];\r\n\r\n/**\r\n * onKeyDown. Fired when a game control key is pushed down..\r\n * @param {KeyboardEvent} event. A keyboard event.\r\n */\r\nfunction onKeyDown(event: KeyboardEvent): void {\r\n\r\n    const {\r\n        playerState,\r\n        gameState\r\n    } = appState();\r\n\r\n    if (Guard.isValidGameKey(event.code)) {\r\n        // Only dispatch if the key is a game control key.\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n\r\n        // If the space bar is hit and the player is alive the player pauses the game\r\n        // otherwise, the space bar is used to pause formation.\r\n        if (event.code === \"Space\" && playerState.alive) {\r\n            if (gameState.pause) {\r\n                dispatch(setPause(false));\r\n            } else {\r\n                dispatch(setPause(true));\r\n            }\r\n        } else {\r\n            dispatch(keyDown(event.code));\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * onKeyUp. Fired when a game control key is let go.\r\n * @param {KeyboardEvent} event. A keyboard event.\r\n */\r\nfunction onKeyUp(event: KeyboardEvent): void {\r\n    if (Guard.isValidGameKey(event.code)) {\r\n        // Only dispatch if the key is a game control key.\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n\r\n        dispatch(keyUp(event.code));\r\n    }\r\n}\r\n\r\n/**\r\n * Adds event listeners for keyup and keydown.\r\n */\r\nexport function registerListeners(): void {\r\n    window.addEventListener(\"keyup\", onKeyUp);\r\n    window.addEventListener(\"keydown\", onKeyDown);\r\n}\r\n\r\n/**\r\n * Removes the event listeners\r\n */\r\nexport function unregisterListeners(): void {\r\n    window.removeEventListener(\"keyup\", onKeyUp);\r\n    window.removeEventListener(\"keydown\", onKeyDown);\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseEnemy from \"../Base/BaseEnemy\";\r\nimport { angles, extraAngles, getAngles } from \"../Constants/Angles\";\r\nimport CGAColors from \"../Constants/CGAColors\";\r\nimport { ColorSchemes, FrameTimes, Locations, MovementAngles, Points, Speeds } from \"../Constants/Constants\";\r\nimport { AsteroidEnemy } from \"../Enemies/Asteroid/AsteroidEnemy\";\r\nimport { getAsteroidOffsetFrames } from \"../Enemies/Asteroid/GetAsteroidOffsetFrames\";\r\nimport getBalloonOffsetFrames from \"../Enemies/Balloon/GetBalloonOffsetFrames\";\r\nimport getBatExplosiom from \"../Enemies/Bats/BatExplosion\";\r\nimport getBatOffsetFrames from \"../Enemies/Bats/GetBatOffsetFrames\";\r\nimport BirdEnemy from \"../Enemies/Bird/BirdEnemy\";\r\nimport getBirdOffsetFrames from \"../Enemies/Bird/GetBirdOffsetFrames\";\r\nimport getBoatOffsetFrames from \"../Enemies/Boat/GetBoatOffsetFrames\";\r\nimport getCloakingOrbOffsetFrames from \"../Enemies/CloakingOrb/GetCloakingOrbOffsetFrames\";\r\nimport getCrapOffsetFrames from \"../Enemies/Crap/GetCrapOffsetFrames\";\r\nimport DefaultEnemy from \"../Enemies/DefaultEnemy\";\r\nimport DevilEnemy from \"../Enemies/Devil/DevilEnemy\";\r\nimport getDevilOffsetFrames from \"../Enemies/Devil/GetDevilOffsetFrames\";\r\nimport getDiaboloOffsetFrames from \"../Enemies/Diabolo/GetDiaboloOffsetFrames\";\r\nimport { default as getOrbOffsetFrames, default as getOrbResource } from \"../Enemies/Orb/GetOrbOffsetFrames\";\r\nimport OrbEnemy from \"../Enemies/Orb/OrbEnemy\";\r\nimport getPistonOffsetFrames from \"../Enemies/Piston/GetPistonOffsetFrames\";\r\nimport getRobotOffsetFrames from \"../Enemies/Robot/GetRobotOffsetFrames\";\r\nimport getSpaceMonsterOffsetFrames from \"../Enemies/SpaceMonster/SpaceMonster\";\r\nimport SpaceMonster from \"../Enemies/SpaceMonster/SpaceMonsterEnemy\";\r\nimport getSpinnerOffsetFrames from \"../Enemies/Spinner/GetSpinnerOffsetFrames\";\r\nimport BackAndForthFrameProvider from \"../FrameProviders/BackAndForthFrameProvider\";\r\nimport CircleFrameProvider from \"../FrameProviders/CircleFrameProvider\";\r\nimport ILocationProvider from \"../Interfaces/ILocationProvider\";\r\nimport CloakingOrbLocationProvider from \"../LocationProviders/CloakingOrbLocationProvider\";\r\nimport CrabLocationProvider from \"../LocationProviders/CrabLocationProvider\";\r\nimport DevilLocationProvider from \"../LocationProviders/DevilLocationProvider\";\r\nimport MoveToUpDownMaxThenReset from \"../LocationProviders/MoveToMaxThenReset\";\r\nimport RandomReapperance from \"../LocationProviders/RandomReapperance\";\r\nimport SideAppearOtherSide from \"../LocationProviders/SideAppearOtherSide\";\r\nimport SideAppearOtherSideVariesSpeed from \"../LocationProviders/SideAppearOtherSideVariesSpeed\";\r\nimport SideToSideUpAndDown from \"../LocationProviders/SideToSideUpAndDown\";\r\nimport Wobble from \"../LocationProviders/Wobble\";\r\nimport { GameLocation } from \"../Models/GameLocation\";\r\nimport getDevilExplosion from \"../SharedFrames/DevilExplosion\";\r\nimport getExplosion01 from \"../SharedFrames/Explosion01\";\r\nimport getExplosion02 from \"../SharedFrames/Explosion02\";\r\nimport getExplosion03 from \"../SharedFrames/Explosion03\";\r\nimport getExplosion04 from \"../SharedFrames/Explosion04\";\r\nimport getExplosion05 from \"../SharedFrames/Explosion05\";\r\nimport { Enemies } from \"../Types\";\r\nimport { getRandomArrayElement } from \"../Utility/Array\";\r\nimport { getRandomFrameKeyIndex } from \"../Utility/Frame\";\r\nimport { coinFlip } from \"../Utility/Lib\";\r\nimport dimensionProvider from \"./DimensionProvider\";\r\n\r\n/**\r\n * Module:          EnemyFactory\r\n * Responsibility:  Creates an enemy.\r\n */\r\n\r\nlet f = 0;\r\n\r\nconst {\r\n    pixelSize,\r\n    gameField\r\n} = dimensionProvider();\r\n\r\nexport default function enemyFactory(enemy: Enemies, location?: GameLocation, index?: number): BaseEnemy {\r\n    switch (enemy) {\r\n        case \"bird\":\r\n        case \"bird-fire\": {\r\n\r\n            if (location === undefined) {\r\n                throw new Error(\"Bird enemy requires a location\");\r\n            }\r\n\r\n            const resource = getBirdOffsetFrames();\r\n            const { maxSizes: { width, height } } = resource;\r\n\r\n            const frameProvider = new BackAndForthFrameProvider(getRandomFrameKeyIndex(resource.frames));\r\n            const randomMovementAngle = getRandomArrayElement(MovementAngles.bird);\r\n            const locationProvider = new SideToSideUpAndDown(\r\n                location.left,\r\n                location.top,\r\n                Speeds.Movement.bird,\r\n                randomMovementAngle,\r\n                width,\r\n                height,\r\n                gameField.top,\r\n                gameField.bottom);\r\n\r\n            return new BirdEnemy(FrameTimes.bird, getBirdOffsetFrames, getExplosion01, locationProvider, frameProvider);\r\n        }\r\n\r\n        case \"robot\":\r\n        case \"robots-random\": {\r\n\r\n            if (location === undefined) {\r\n                throw new Error(\"Robot enemy requires a starting position\");\r\n            }\r\n\r\n            const { maxSizes: { width, height }, frames } = getRobotOffsetFrames();\r\n\r\n            let locationProvider: ILocationProvider;\r\n\r\n            const frameProvider = new BackAndForthFrameProvider(enemy === \"robot\" ? 0 : getRandomFrameKeyIndex(frames));\r\n            locationProvider = new SideAppearOtherSide(\r\n                location.left,\r\n                location.top,\r\n                Speeds.Movement.robot,\r\n                enemy === \"robot\" ? MovementAngles.robot : angles.right,\r\n                width,\r\n                height,\r\n                gameField.top,\r\n                Locations.robot.maxBottom);\r\n\r\n            const robotColor = getRandomArrayElement(ColorSchemes.robot);\r\n\r\n            return new DefaultEnemy(\r\n                Points.robot,\r\n                FrameTimes.robot,\r\n                getRobotOffsetFrames,\r\n                getExplosion02,\r\n                locationProvider,\r\n                frameProvider,\r\n                { explosionColor: robotColor, explosionParticleColor: robotColor, varyingEnemyColor: robotColor }\r\n            );\r\n        }\r\n\r\n        case \"orb\":\r\n        case \"orb-up-down\": {\r\n            if (location === undefined) {\r\n                throw new Error(\"Orb enemy requires a starting location\");\r\n            }\r\n\r\n            if (index === undefined && enemy === \"orb-up-down\") {\r\n                throw new Error(\"Orb-up-down requires an index\");\r\n            }\r\n\r\n            const { maxSizes: { width, height } } = getOrbOffsetFrames();\r\n\r\n            const frameProvider = new CircleFrameProvider(0);\r\n\r\n            let angle = angles.down;\r\n            let target = Locations.Orb.maxBottom;\r\n            let reset = Locations.Orb.maxTop;\r\n\r\n            if (enemy === \"orb-up-down\" && index !== undefined) {\r\n                const even = index % 2 === 0;\r\n                angle = even ? angles.down : angles.up;\r\n                target = even ? gameField.bottom : gameField.top;\r\n                reset = even ? gameField.top : gameField.bottom;\r\n            }\r\n\r\n            const locationProvider = new MoveToUpDownMaxThenReset(\r\n                location.left,\r\n                location.top,\r\n                Speeds.Movement.orb,\r\n                angle,\r\n                width,\r\n                height,\r\n                target,\r\n                reset);\r\n\r\n            return new OrbEnemy(FrameTimes.orb, getOrbResource, getExplosion02, locationProvider, frameProvider);\r\n        }\r\n\r\n        case \"spinner\": {\r\n            if (location === undefined) {\r\n                throw new Error(\"Spinner enemy requires a starting location\");\r\n            }\r\n            const { frames, maxSizes: { width, height } } = getSpinnerOffsetFrames();\r\n            const verticalBounds = pixelSize * 6;\r\n\r\n            const maxTop = location.top - verticalBounds;\r\n            const maxBottom = location.top + verticalBounds;\r\n\r\n            const frameProvider = new CircleFrameProvider(getRandomFrameKeyIndex(frames));\r\n            const randomAngle = getRandomArrayElement(MovementAngles.spinner);\r\n            const locationProvider = new SideToSideUpAndDown(\r\n                location.left,\r\n                location.top,\r\n                Speeds.Movement.spinner,\r\n                randomAngle,\r\n                width,\r\n                height,\r\n                maxTop,\r\n                maxBottom);\r\n\r\n            return new DefaultEnemy(\r\n                Points.spinner,\r\n                FrameTimes.spinner,\r\n                getSpinnerOffsetFrames,\r\n                getExplosion01,\r\n                locationProvider,\r\n                frameProvider,\r\n                { explosionColor: CGAColors.white, explosionParticleColor: CGAColors.white });\r\n        }\r\n\r\n        case \"balloon\": {\r\n            if (location === undefined) {\r\n                throw new Error(\"Balloon enemy requires a starting location\");\r\n            }\r\n\r\n            const { frames, maxSizes: { width, height } } = getBalloonOffsetFrames();\r\n            const frameProvider = new CircleFrameProvider(getRandomFrameKeyIndex(frames));\r\n            const locationProvider = new Wobble(location.left, location.top, Speeds.Movement.balloon, 0, width, height, 200);\r\n\r\n            return new DefaultEnemy(\r\n                Points.balloon,\r\n                FrameTimes.balloon,\r\n                getBalloonOffsetFrames,\r\n                getExplosion03,\r\n                locationProvider,\r\n                frameProvider);\r\n        }\r\n        case \"asteroid-down\":\r\n        case \"asteroid-diagonal\": {\r\n            const { maxSizes: { width, height } } = getAsteroidOffsetFrames();\r\n            const frameProvider = new CircleFrameProvider(0);\r\n\r\n            let anglesToUse: number[];\r\n            let speedsToUse: number[];\r\n            if (enemy === \"asteroid-down\") {\r\n                anglesToUse = [angles.down];\r\n                speedsToUse = Speeds.Movement.Asteroid.down;\r\n            } else {\r\n                anglesToUse = [extraAngles.leftleftdown, angles.leftdown, angles.down, angles.rightdown, extraAngles.rightrightdown];\r\n                speedsToUse = Speeds.Movement.Asteroid.diagonal;\r\n            }\r\n\r\n            const locationProvider = new RandomReapperance(width, height, anglesToUse, speedsToUse);\r\n\r\n            // Astroids don't change frames over time, they change frames when they're hit.\r\n            return new AsteroidEnemy(0, getAsteroidOffsetFrames, getExplosion04, locationProvider, frameProvider);\r\n        }\r\n\r\n        case \"piston\": {\r\n            if (location === undefined) {\r\n                throw new Error(\"Balloon enemy requires a starting location\");\r\n            }\r\n\r\n            const { maxSizes: { width, height } } = getPistonOffsetFrames();\r\n            const frameProvider = new BackAndForthFrameProvider(0);\r\n\r\n            const locationProvider = new SideAppearOtherSideVariesSpeed(\r\n                location.left,\r\n                location.top,\r\n                MovementAngles.piston,\r\n                height,\r\n                width,\r\n                gameField.top,\r\n                gameField.bottom,\r\n                frameProvider,\r\n                Speeds.Movement.Piston.slow,\r\n                Speeds.Movement.Piston.fast,\r\n                [0, 1, 2],\r\n                [3, 4]);\r\n\r\n            return new DefaultEnemy(\r\n                Points.piston,\r\n                FrameTimes.piston,\r\n                getPistonOffsetFrames,\r\n                getExplosion02,\r\n                locationProvider,\r\n                frameProvider,\r\n                { explosionColor: CGAColors.magenta, explosionParticleColor: CGAColors.magenta });\r\n        }\r\n\r\n        case \"diabolo\": {\r\n            if (location === undefined) {\r\n                throw new Error(\"Diabolo enemy requires a starting location\");\r\n            }\r\n\r\n            const { maxSizes: { width, height }, frames } = getDiaboloOffsetFrames();\r\n            const frameProvider = new CircleFrameProvider(getRandomFrameKeyIndex(frames));\r\n\r\n            const randomAngle = getRandomArrayElement(MovementAngles.diabolo);\r\n            const locationProvider = new SideToSideUpAndDown(\r\n                location.left,\r\n                location.top,\r\n                Speeds.Movement.diabolo,\r\n                randomAngle,\r\n                width,\r\n                height,\r\n                gameField.top,\r\n                gameField.bottom\r\n            );\r\n\r\n            return new DefaultEnemy(\r\n                Points.diabolo,\r\n                FrameTimes.diabolo,\r\n                getDiaboloOffsetFrames,\r\n                getExplosion01,\r\n                locationProvider,\r\n                frameProvider,\r\n                { explosionColor: CGAColors.white, explosionParticleColor: CGAColors.white });\r\n        }\r\n\r\n        case \"spacemonster-down\":\r\n        case \"spacemonster-diagonal\": {\r\n            let anglesToUse: number[];\r\n            let speedsToUse: number[];\r\n            if (enemy === \"spacemonster-down\") {\r\n                anglesToUse = [angles.down];\r\n                speedsToUse = Speeds.Movement.SpaceMonster.down;\r\n            } else {\r\n                anglesToUse = [extraAngles.leftleftdown, angles.leftdown, angles.down, angles.rightdown, extraAngles.rightrightdown];\r\n                speedsToUse = Speeds.Movement.SpaceMonster.diagonal;\r\n            }\r\n\r\n            const { maxSizes: { width, height } } = getSpaceMonsterOffsetFrames();\r\n            const frameProvider = new CircleFrameProvider(0);\r\n            const locationProvider = new RandomReapperance(width, height, anglesToUse, speedsToUse);\r\n\r\n            // Space monsters do not change frames over time, they change frame depending on their position on the screen.\r\n            return new SpaceMonster(0, getSpaceMonsterOffsetFrames, getExplosion05, locationProvider, frameProvider);\r\n        }\r\n\r\n        case \"devil\": {\r\n            if (location === undefined) {\r\n                throw new Error(\"Devil enemy requires a starting location\");\r\n            }\r\n\r\n            const { maxSizes: { width, height }, frames } = getDevilOffsetFrames();\r\n            const frameProvider = new CircleFrameProvider(getRandomFrameKeyIndex(frames));\r\n\r\n            const locationProvider = new DevilLocationProvider(\r\n                location.left,\r\n                location.top,\r\n                Speeds.Movement.devil,\r\n                MovementAngles.devil,\r\n                width,\r\n                height,\r\n                gameField.top,\r\n                Locations.Devil.maxBottom,\r\n            );\r\n\r\n            // Frames have no time, the frame of the devil is determined by where it is headed.\r\n            return new DevilEnemy(0, getDevilOffsetFrames, getDevilExplosion, locationProvider, frameProvider);\r\n        }\r\n\r\n        case \"crab\": {\r\n            if (location === undefined) {\r\n                throw new Error(\"Crap enemy requires a starting location\");\r\n            }\r\n\r\n            const { maxSizes: { height } } = getCrapOffsetFrames();\r\n            const frameProvider = new BackAndForthFrameProvider(0);\r\n\r\n            const locationProvider = new CrabLocationProvider(\r\n                location.left,\r\n                location.top,\r\n                Speeds.Movement.crab,\r\n                height,\r\n                frameProvider);\r\n\r\n            return new DefaultEnemy(\r\n                Points.crab,\r\n                FrameTimes.crab,\r\n                getCrapOffsetFrames,\r\n                getExplosion02,\r\n                locationProvider,\r\n                frameProvider,\r\n                { explosionColor: CGAColors.magenta, explosionParticleColor: CGAColors.magenta });\r\n        }\r\n\r\n        case \"bat\": {\r\n            if (location === undefined) {\r\n                throw new Error(\"Bats enemy requires a starting location\");\r\n            }\r\n\r\n            const { maxSizes: { width, height } } = getBatOffsetFrames();\r\n            const frameProvider = new BackAndForthFrameProvider(0);\r\n\r\n            const randomAngle = getRandomArrayElement(getAngles());\r\n            const locationProvider = new Wobble(\r\n                location.left,\r\n                location.top,\r\n                Speeds.Movement.bat,\r\n                randomAngle,\r\n                width,\r\n                height,\r\n                200);\r\n\r\n            const color = coinFlip() ? CGAColors.lightGreen : CGAColors.lightBlue;\r\n\r\n            return new DefaultEnemy(\r\n                Points.bat,\r\n                FrameTimes.bat,\r\n                getBatOffsetFrames,\r\n                getBatExplosiom,\r\n                locationProvider,\r\n                frameProvider,\r\n                { explosionColor: CGAColors.lightGray, explosionParticleColor: CGAColors.lightGray, varyingEnemyColor: color });\r\n        }\r\n\r\n        case \"boat\": {\r\n            if (location === undefined) {\r\n                throw new Error(\"Boat enemy requires a starting location\");\r\n            }\r\n\r\n            const { maxSizes: { width, height } } = getBoatOffsetFrames();\r\n            const frameProvider = new CircleFrameProvider(0);\r\n\r\n            const locationProvider = new SideAppearOtherSideVariesSpeed(\r\n                location.left,\r\n                location.top,\r\n                extraAngles.rightrightdown,\r\n                height,\r\n                width,\r\n                gameField.top,\r\n                gameField.bottom,\r\n                frameProvider,\r\n                Speeds.Movement.Boat.slow,\r\n                Speeds.Movement.Boat.fast,\r\n                [0, 1, 5],\r\n                [2, 3, 4]);\r\n\r\n            return new DefaultEnemy(\r\n                Points.boat,\r\n                FrameTimes.boat,\r\n                getBoatOffsetFrames,\r\n                getExplosion02,\r\n                locationProvider,\r\n                frameProvider,\r\n                { explosionColor: CGAColors.magenta, explosionParticleColor: CGAColors.magenta });\r\n        }\r\n\r\n        case \"cloaking-orb\": {\r\n            if (location === undefined) {\r\n                throw new Error(\"Cloaking Orb enemy requires a starting location\");\r\n            }\r\n\r\n            const { frames } = getCloakingOrbOffsetFrames();\r\n            const frameProvider = new BackAndForthFrameProvider(getRandomFrameKeyIndex(frames));\r\n\r\n            // 2nd to last frame is completely invisible. That's when the orb can switch location\r\n            // It will appear 'invisible' on its new location and reappear.\r\n            // It can still be hit while it is 'invisible' (because hitboxes are generated and, meh, its fine).\r\n            const locationProvider = new CloakingOrbLocationProvider(location.left, location.top, frames.length - 2, frameProvider);\r\n\r\n            const color = getRandomArrayElement(ColorSchemes.cloakingOrb);\r\n\r\n            return new DefaultEnemy(\r\n                Points.boat,\r\n                FrameTimes.cloakingOrb,\r\n                getCloakingOrbOffsetFrames,\r\n                getExplosion02,\r\n                locationProvider,\r\n                frameProvider,\r\n                { explosionColor: color, explosionParticleColor: color, varyingEnemyColor: color });\r\n        }\r\n\r\n        case \"fish\": {\r\n            \r\n        }\r\n\r\n        default:\r\n            throw new Error(\"Unknown enemy \" + enemy);\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport IGetCurrentIndex from \"../Interfaces/IGetCurrentFrame\";\r\nimport { Frame } from \"../Types\";\r\nimport { copyFrame, copyFrames, getFrameByIndex } from \"../Utility/Frame\";\r\n\r\n/**\r\n * Module:          BaseFrameProvider\r\n * Responsibility:  BaseClass for most frame providers.\r\n */\r\n\r\nexport default abstract class BaseFrameProvider implements IGetCurrentIndex {\r\n    /**\r\n     * Animation frames.\r\n     */\r\n    private frames?: Frame[];\r\n\r\n    /**\r\n     * The current frame for an animated enemy.\r\n     */\r\n    protected frameIndex: number;\r\n\r\n    /**\r\n     * Added to the current frame index.\r\n     */\r\n    protected add = 1;\r\n\r\n    /**\r\n     * Maximum index for the provided frames.\r\n     */\r\n    protected maxIndex: number;\r\n\r\n    /**\r\n     * Initializes the EnemyBase class\r\n     * @param {Frames} frames. Frames.\r\n     * @param {number} startFrameIndex. The first frame to return.\r\n     */\r\n    constructor(startFrameIndex: number) {\r\n        this.frameIndex = startFrameIndex;\r\n        this.maxIndex = -1;\r\n    }\r\n\r\n    /**\r\n     * Called from within an enemy to set the frames.\r\n     * @param {Frame[]} frames.\r\n     */\r\n    public setFrames(frames: Frame[]): void {\r\n        this.frames = copyFrames(frames);\r\n        this.maxIndex = frames.length - 1;\r\n    }\r\n\r\n    /**\r\n     * Gets the current frame.\r\n     * @returns {Frame}. A frame\r\n     */\r\n    public getCurrentFrame(): Frame {\r\n\r\n        if (this.frames === undefined) {\r\n            throw new Error(\"Set the frames.\");\r\n        }\r\n\r\n        const returnValue = getFrameByIndex(this.frames, this.frameIndex);\r\n        return copyFrame(returnValue);\r\n    }\r\n\r\n    /**\r\n     * Returns gets the next frame.\r\n     * @returns {Frame}.\r\n     */\r\n    public abstract getNextFrame(): Frame;\r\n\r\n    /**\r\n     * Returns the current frame index.\r\n     * @returns {number}. The current frame index.\r\n     */\r\n    public getCurrentIndex(): number {\r\n        return this.frameIndex;\r\n    }\r\n}","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseEnemy from \"../Base/BaseEnemy\";\r\nimport CGAColors from \"../Constants/CGAColors\";\r\nimport GameLoop from \"../GameLoop\";\r\nimport getPhaserLocations from \"../Player/GetPhaserLocations\";\r\nimport { playerIsHit } from \"../Player/PlayerHelper\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport renderFrame from \"../Render/RenderFrame\";\r\nimport { clearPhaserLocations, removeEnemy, setPhaserLocations, setTotalEnemies } from \"../State/EnemyLevel/EnemyLevelActions\";\r\nimport { EnemyState } from \"../State/EnemyLevel/EnemyState\";\r\nimport { increaseScore, removePhaser, setPause } from \"../State/Game/GameActions\";\r\nimport { ParticleState } from \"../State/Player/ParticleState\";\r\nimport { setPlayerBulletState } from \"../State/Player/PlayerActions\";\r\nimport { appState, dispatch } from \"../State/Store\";\r\nimport { dispatchExplosion } from \"../StateHandlers/DispatchExplosion\";\r\nimport { handlePlayerDeath } from \"../StateHandlers/HandlePlayerDeath\";\r\nimport { Frame } from \"../Types\";\r\nimport { getRandomArrayElement } from \"../Utility/Array\";\r\nimport { overlaps } from \"../Utility/Geometry\";\r\n\r\n/**\r\n * Module:          EnemyLevelRunner\r\n * Responsibility:  Handles all state reactions and action for levels that contain enemies.\r\n */\r\n\r\n/**\r\n * Array of current game objects on screen.\r\n */\r\n\r\nconst localState: { enemies: BaseEnemy[] } = {\r\n    enemies: [],\r\n};\r\n\r\nconst phaserFrame: Frame = [\r\n    [CGAColors.yellow, CGAColors.yellow]\r\n];\r\n\r\nconst {\r\n    pixelSize\r\n} = dimensionProvider();\r\n\r\nexport namespace EnemyLevelRunner {\r\n    /**\r\n     * Runner function that can be registered in the GameLoop.\r\n     * @param {number} tick. The current tick.\r\n     */\r\n    export function run(tick: number): void {\r\n        updateState(tick);\r\n        GameLoop.registerDraw(draw);\r\n    }\r\n\r\n    export function setEnemies(newEnemies: BaseEnemy[]): void {\r\n        localState.enemies = newEnemies;\r\n        dispatch(setTotalEnemies(newEnemies.length));\r\n    }\r\n\r\n    export function addEnemy(newEnemy: BaseEnemy): void {\r\n        localState.enemies.push(newEnemy);\r\n    }\r\n}\r\n\r\nexport default EnemyLevelRunner;\r\n\r\n/**\r\n * Handles all level state changes.\r\n * @param {number} tick. Current tick.\r\n */\r\nfunction updateState(tick: number) {\r\n    handleSelfDestruct(tick);\r\n    handlePhaser(tick);\r\n    handleEnemies(tick);\r\n    handleHitDetection(tick);\r\n}\r\n\r\n/**\r\n * Draws all objects part of the level but not the player.\r\n * @param {number} tick. Tick.\r\n */\r\nfunction draw(): void {\r\n    const { enemies, bullets, phaserLocations } = appState().enemyLevelState;\r\n\r\n    // Draw all the game objects\r\n    for (const enemyState of enemies) {\r\n        if (enemyState.currentFrame !== undefined) {\r\n            renderFrame(enemyState.offsetLeft, enemyState.offsetTop, enemyState.currentFrame);\r\n        }\r\n    }\r\n\r\n    for (const bullet of bullets) {\r\n        renderFrame(bullet.left, bullet.top, bullet.coloredFrame);\r\n    }\r\n\r\n    phaserLocations.forEach((pf) => renderFrame(pf.left, pf.top, phaserFrame));\r\n}\r\n\r\n/**\r\n * Handles all hit detection.\r\n */\r\nfunction handleHitDetection(tick: number) {\r\n\r\n    // Check if the player was hit.\r\n    enemyHitPlayerDetection(tick);\r\n\r\n    // Check if the player hit anything\r\n    playerHitEnemyDetection(tick);\r\n\r\n    // Check if the player was hit by shrapnell.\r\n    playerHitByParticle(tick, appState().enemyLevelState.shrapnells);\r\n\r\n    // Check if the player was hit by a bullet.\r\n    playerHitByParticle(tick, appState().enemyLevelState.bullets);\r\n}\r\n\r\n/**\r\n * Check if the player hit an enemy.\r\n * @param {number} tick. Current tick.\r\n */\r\nfunction playerHitEnemyDetection(tick: number) {\r\n    const { playerState, enemyLevelState } = appState();\r\n    if (playerState.bulletState !== undefined && playerState.bulletState.hitbox !== undefined) {\r\n\r\n        const playerBulletHitbox = playerState.bulletState.hitbox;\r\n        const hitEnemy = enemyLevelState.enemies.find((e) => {\r\n            if (overlaps(playerBulletHitbox, e.hitbox)) {\r\n                return true;\r\n            }\r\n        });\r\n\r\n        if (hitEnemy !== undefined) {\r\n            handleEnemyHitByplayer(tick, hitEnemy);\r\n\r\n            dispatch(setPlayerBulletState(undefined));\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Handles the actions that can occur of the player hits a enemy.\r\n * @param {number} tick. Current tick\r\n * @param {EnemyState} hitEnemy. Enemy hit by the player.\r\n */\r\nfunction handleEnemyHitByplayer(tick: number, hitEnemy: EnemyState): void {\r\n    if (hitEnemy.hitpoints === 1) {\r\n        handleEnemyDestruction(tick, hitEnemy);\r\n    } else {\r\n        const enemy = localState.enemies.find((e) => e.getId() === hitEnemy.enemyId);\r\n        if (enemy) {\r\n            enemy.recudeHitpoints();\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Check if an enemy physically hit the player.\r\n * @param {number} tick. Current tick.\r\n */\r\nfunction enemyHitPlayerDetection(tick: number) {\r\n    const { enemyLevelState, playerState } = appState();\r\n    if (playerState.alive) {\r\n        const hit = enemyLevelState.enemies.some((e) => playerIsHit(playerState.hitboxes, e.hitbox));\r\n\r\n        if (hit) {\r\n            handlePlayerDeath(tick);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Check if the player was hit by a particle. This can be an enemy bullet or a piece of shrapnell.\r\n * @param {number} tick. Current tuck\r\n * @param {ParticleState[]} particles. Particles.\r\n */\r\nfunction playerHitByParticle(tick: number, particles: ParticleState[]): void {\r\n\r\n    const { playerState } = appState();\r\n    if (playerState.alive) {\r\n        const hit = particles.some((e) => playerIsHit(playerState.hitboxes, e.hitbox));\r\n\r\n        if (hit) {\r\n            handlePlayerDeath(tick);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Handles enemy state updates.\r\n * @param {number} tick. Current tick\r\n */\r\nfunction handleEnemies(tick: number): void {\r\n    localState.enemies.forEach((e) => {\r\n        e.updateState(tick);\r\n    });\r\n}\r\n\r\n/**\r\n * Handle self destruct.\r\n */\r\nfunction handleSelfDestruct(tick: number): void {\r\n    const { playerState, enemyLevelState } = appState();\r\n\r\n    if (playerState.alive && appState().keyboardState.selfDestruct) {\r\n        handlePlayerDeath(tick);\r\n        enemyLevelState.enemies.forEach((es) => handleEnemyDestruction(tick, es, false));\r\n        localState.enemies = [];\r\n    }\r\n}\r\n\r\n/**\r\n * handles the destruction of an enemy.\r\n * @param {BaseEnemy} enemy.\r\n */\r\nfunction handleEnemyDestruction(tick: number, enemy: EnemyState, awardPoints = true): void {\r\n    const { enemyLevelState } = appState();\r\n\r\n    localState.enemies = localState.enemies.filter((e) => {\r\n        if (e.getId() !== enemy.enemyId) {\r\n            e.increaseSpeed(enemyLevelState.totalNumberOfEnemies / (localState.enemies.length - 1));\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    });\r\n\r\n    dispatchExplosion(enemy.offsetLeft, enemy.offsetTop, enemy.coloredExplosion, tick);\r\n    dispatch(removeEnemy(enemy.enemyId));\r\n\r\n    // True by default but self destruct gives no points.\r\n    if (awardPoints) {\r\n        dispatch(increaseScore(enemy.points));\r\n    }\r\n}\r\n\r\n/**\r\n * Handles the firing of a phaser charge.\r\n */\r\nfunction handlePhaser(tick: number): void {\r\n    const { enemyLevelState, playerState, gameState, keyboardState } = appState();\r\n\r\n    if (playerState.alive &&\r\n        playerState.nozzleLocation &&\r\n        keyboardState.phraser &&\r\n        enemyLevelState.enemies.length > 0 &&\r\n        gameState.phasers > 0 &&\r\n        enemyLevelState.phaserLocations.length === 0) {\r\n\r\n        const randomEnemy = getRandomArrayElement(enemyLevelState.enemies);\r\n        const playerNozzleLocation = playerState.nozzleLocation;\r\n        const randomEnemyCenter = randomEnemy.centerLocation;\r\n        if (randomEnemyCenter !== undefined) {\r\n            // Remove one phaser.\r\n            dispatch(removePhaser());\r\n            const phaserLocations = getPhaserLocations(playerNozzleLocation.left, playerNozzleLocation.top, randomEnemyCenter.left, randomEnemyCenter.top);\r\n            dispatch(setPhaserLocations(phaserLocations));\r\n\r\n            // Pause the game for a very brief period. This is what the original game did\r\n            // when you fired a phasor shot.\r\n            dispatch(setPause(true));\r\n            window.setTimeout(() => {\r\n                // Unpause the game to let rendering continue.\r\n                dispatch(setPause(false));\r\n\r\n                // Deal the with the enemy that got hit.\r\n\r\n                handleEnemyHitByplayer(tick, randomEnemy);\r\n                dispatch(clearPhaserLocations());\r\n            }, 100);\r\n        }\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          QueueExplosionRender\r\n * Responsibility:  Helper function to add a full explosion to the state.\r\n */\r\n\r\nimport Explosion from \"../Models/Explosion\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport { addExplosionCenter } from \"../State/EnemyLevel/EnemyLevelActions\";\r\nimport { ExplosionCenterState } from \"../State/EnemyLevel/ExplosionCenterState\";\r\nimport { StateProviders } from \"../State/StateProviders\";\r\nimport { dispatch } from \"../State/Store\";\r\nimport { getFrameHitbox } from \"../Utility/Frame\";\r\n\r\nconst {\r\n    pixelSize\r\n} = dimensionProvider();\r\n\r\n/**\r\n * Handles the dispatches to add an explosion with shrapnell to the state.\r\n * @param {number} left. Left coordinate.\r\n * @param {number} top. Top coordinate.\r\n * @param {Explosion} explosion. An explosion asset.\r\n * @param {Particle[]} targetParticleArray. The array where the particles will be pushed into. Helps keep track of particles belonging to the player or an enemy.\r\n */\r\nexport function dispatchExplosion(left: number, top: number, coloredExplosion: Explosion, tick: number): void {\r\n\r\n    const newShrapnell = StateProviders.explosionShrapnellProvider(left, top, coloredExplosion);\r\n    const explosionHitbox = getFrameHitbox(left, top, coloredExplosion.explosionCenterFrame, pixelSize);\r\n\r\n    const newExplosion: ExplosionCenterState = {\r\n        left,\r\n        top,\r\n        startTick: tick,\r\n        hitbox: explosionHitbox,\r\n        coloredFrame: coloredExplosion.explosionCenterFrame,\r\n        explosionCenterDelay: coloredExplosion.explosionCenterDelay,\r\n    };\r\n\r\n    dispatch(addExplosionCenter(newExplosion, newShrapnell));\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          handlePlayerDeath\r\n * Responsibility:  Performs the required dispatches when the player dies.\r\n */\r\n\r\nimport { removeLife, setPhasers } from \"../State/Game/GameActions\";\r\nimport { setPlayerBulletState, setPlayerIsAlive } from \"../State/Player/PlayerActions\";\r\nimport { appState, dispatch } from \"../State/Store\";\r\nimport { dispatchExplosion } from \"./DispatchExplosion\";\r\n\r\n/**\r\n * Handles a the player's death.\r\n * @param {number} tick\r\n */\r\nexport function handlePlayerDeath(tick: number): void {\r\n\r\n    const { playerState: { left, top, coloredExplosion }, debuggingState, enemyLevelState: {enemies, totalNumberOfEnemies} } = appState();\r\n\r\n    // Don't let the player die once they've killed all enemies.\r\n    if (debuggingState.playerIsImmortal || enemies.length === 0 && totalNumberOfEnemies > 0) {\r\n        return;\r\n    }\r\n\r\n    dispatchExplosion(left, top, coloredExplosion, tick);\r\n\r\n    dispatch(removeLife());\r\n    dispatch(setPlayerIsAlive(false));\r\n    dispatch(setPlayerBulletState(undefined));\r\n    dispatch(setPhasers(1));\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { Speeds } from \"../Constants/Constants\";\r\nimport { GameLocation } from \"../Models/GameLocation\";\r\nimport { getPlayerFrame } from \"../Player/PlayerFrames\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport { setPlayerLocationData } from \"../State/Player/PlayerActions\";\r\nimport { appState, dispatch } from \"../State/Store\";\r\nimport { getFrameDimensions, getFrameHitbox } from \"../Utility/Frame\";\r\nimport { getAngle, getNextX, getNextY } from \"../Utility/Geometry\";\r\n\r\n/**\r\n * Module:          PlayerMovementHandler\r\n * Responsibility:  Handles changes to the player due to movement.\r\n */\r\n\r\nconst {\r\n    pixelSize,\r\n    gameField\r\n} = dimensionProvider();\r\n\r\n// Used in player hitbox calculation, never changes so it can be a constant.\r\nconst doublePixel = pixelSize * 2;\r\n\r\n// The player's hitbox is a bit smaller than the actual ship. This feels better when playing the game.\r\nconst playerHitboxAdjustment = pixelSize * 0.3;\r\n\r\nconst {\r\n    width: playerWidth,\r\n    height: playerHeight\r\n} = getFrameDimensions(getPlayerFrame());\r\n\r\n/**\r\n * Handles player movement.\r\n * @param {number} speed. Speed the ship can travel. Can vary depending on the level or if the player ship is forming.\r\n */\r\nexport function playerMovementHandler(speed: number): void {\r\n    const { keyboardState, playerState } = appState();\r\n\r\n    const localKeyboardState = { ...keyboardState };\r\n\r\n    // By default the speed for x and y is the speed passed to the movement\r\n    const speedX = speed;\r\n    let speedY = speed;\r\n\r\n    // Certain levels limit the movement of the player.\r\n    // We'll use a fresh keyboardState object and make some adjustments.\r\n    switch (playerState.moveLimit) {\r\n        case \"immobile\":\r\n            return;\r\n        case \"sideways\":\r\n            // Used when the player forms. Override the keyboard state.\r\n            localKeyboardState.down = localKeyboardState.up = false;\r\n            break;\r\n        case \"forceup\":\r\n            // Used when the player travels through a warp gate.\r\n            localKeyboardState.up = true;\r\n            localKeyboardState.down = false;\r\n            speedY = Speeds.Movement.Player.warpUpSpeed;\r\n            break;\r\n        case \"none\":\r\n        // Make not changes and allow 360 degrees of freedown\r\n        default:\r\n        // No default;\r\n    }\r\n\r\n    const angle = getAngle(localKeyboardState);\r\n    const { left: nextX, top: nextY } = getNextLocationForPlayer(angle, speedX, speedY, playerState.left, playerState.top);\r\n\r\n    const hitBox = getFrameHitbox(nextX, nextY, playerState.coloredFrame, 0);\r\n\r\n    const middleHitbox = {\r\n        ...hitBox,\r\n        left: hitBox.left + doublePixel + playerHitboxAdjustment,\r\n        right: hitBox.right - doublePixel - playerHitboxAdjustment,\r\n        top: hitBox.top + playerHitboxAdjustment,\r\n        bottom: hitBox.bottom - playerHitboxAdjustment,\r\n    };\r\n\r\n    const bottomHitbox = {\r\n        ...hitBox,\r\n        top: hitBox.top + pixelSize + playerHitboxAdjustment,\r\n        left: hitBox.left + playerHitboxAdjustment,\r\n        right: hitBox.right - playerHitboxAdjustment,\r\n        bottom: hitBox.bottom - playerHitboxAdjustment,\r\n    };\r\n\r\n    const hitBoxes = { middle: middleHitbox, bottom: bottomHitbox };\r\n\r\n    const nozzleLocation = {\r\n        left: nextX + pixelSize * 2,\r\n        top: nextY,\r\n    };\r\n\r\n    dispatch(setPlayerLocationData(nextX, nextY, hitBoxes, nozzleLocation));\r\n}\r\n\r\n/**\r\n * Returns the next locatoin for the player taking into account, no movement and moving outside the game field.\r\n * @export\r\n * @param {number} angle\r\n * @param {number} speedX\r\n * @param {number} currentX\r\n * @param {number} currentY\r\n * @returns {GameLocation}\r\n */\r\nfunction getNextLocationForPlayer(angle: number, speedX: number, speedY: number, currentX: number, currentY: number): GameLocation {\r\n    const currentLocation = { left: currentX, top: currentY };\r\n    if (angle === -1) {\r\n        return currentLocation;\r\n    }\r\n\r\n    const nextX = getNextX(angle, speedX, currentX);\r\n    const nextY = getNextY(angle, speedY, currentY);\r\n\r\n    if (nextX < gameField.left || nextX + playerWidth > gameField.right) {\r\n        return currentLocation;\r\n    }\r\n\r\n    if (nextY + playerHeight > gameField.bottom || nextY < gameField.top) {\r\n        return currentLocation;\r\n    }\r\n\r\n    return {\r\n        left: nextX,\r\n        top: nextY,\r\n    };\r\n}","export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport GameLoop from \"./GameLoop\";\r\nimport { drawGameFieldBorder } from \"./GameScreen/StaticRenders\";\r\nimport { drawStatusBar } from \"./GameScreen/StatusBar\";\r\nimport subscribeToStoreChanges from \"./Levels/SubscribeToStore\";\r\nimport playerSpawnManager from \"./Player/PlayerSpawnManager\";\r\nimport dimensionProvider from \"./Providers/DimensionProvider\";\r\nimport ctxProvider from \"./Render/CtxProvider\";\r\nimport genericRunner from \"./Runners/GenericRunner\";\r\nimport playerRunner from \"./Runners/PlayerRunner\";\r\nimport { setDebuggingState } from \"./State/Debugging/DebuggingActions\";\r\nimport DebuggingState from \"./State/Debugging/DebuggingState\";\r\nimport { addPhaser, increaseScore, nextLevel, setLevel, setLives, setPhasers, setWarpGamteComplexity } from \"./State/Game/GameActions\";\r\nimport { WarpLevelComplexity } from \"./State/Game/WarpLevelTypes\";\r\nimport { dispatch } from \"./State/Store\";\r\nimport { registerListeners } from \"./Utility/KeyboardEvents\";\r\nimport { getURLQueryKVPs } from \"./Utility/Lib\";\r\n\r\n/**\r\n * Module:          Index\r\n * Responsibility:  Entry point for the game\r\n */\r\n\r\nwindow.onload = () => {\r\n\r\n    const canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\r\n    if (canvas) {\r\n        // Initialize the dimentions of the canvas.\r\n        canvas.width = dimensionProvider().fullGameWidth;\r\n        canvas.height = dimensionProvider().fullGameHeight;\r\n\r\n        const queryKeyValuePairs = getURLQueryKVPs(window.location.search);\r\n\r\n        const showPlayGround = queryKeyValuePairs.some((kvp) => kvp.key === \"playground\");\r\n        const showCanvas = queryKeyValuePairs.some((kvp) => kvp.key === \"canvas\");\r\n        let level = queryKeyValuePairs.find((kvp) => kvp.key === \"level\")?.value;\r\n        const drawGrid = queryKeyValuePairs.find((kvp) => kvp.key === \"grid\");\r\n        const showhitboxes = queryKeyValuePairs.find((kvp) => kvp.key === \"hitboxes\");\r\n        const immortal = queryKeyValuePairs.find((kvp) => kvp.key === \"god\");\r\n\r\n        if (showPlayGround) {\r\n\r\n            const debuggingState: DebuggingState = {};\r\n\r\n            if (!level) {\r\n                level = \"0\";\r\n            }\r\n\r\n            startEssential();\r\n\r\n            dispatch(setLives(900));\r\n            dispatch(setPhasers(900));\r\n\r\n            if (level) {\r\n                dispatch(setLevel(parseInt(level, 10)));\r\n            }\r\n\r\n            GameLoop.Start();\r\n\r\n            if (immortal) {\r\n                debuggingState.playerIsImmortal = true;\r\n            }\r\n\r\n            if (drawGrid) {\r\n                let gridDetail: number | undefined;\r\n                if (drawGrid.value) {\r\n                    gridDetail = parseInt(drawGrid.value, 10);\r\n                }\r\n\r\n                debuggingState.drawGrid = true;\r\n                debuggingState.gridDetail = gridDetail;\r\n            }\r\n\r\n            if (showhitboxes) {\r\n                debuggingState.drawHitboxes = true;\r\n            }\r\n\r\n            dispatch(setDebuggingState(debuggingState));\r\n\r\n            (window as any).r42 = {\r\n                setLevel: (n: number) => dispatch(setLevel(n)),\r\n                nextLevel: () => dispatch(nextLevel()),\r\n                setPhasers: (n: number) => dispatch(setPhasers(n)),\r\n                setLives: (n: number) => dispatch(setLives(n)),\r\n                increaseScore: (n: number) => dispatch(increaseScore(n)),\r\n                addPhaser: () => dispatch(addPhaser()),\r\n                setWarpLevelComplexity: (n: WarpLevelComplexity) => dispatch(setWarpGamteComplexity(n)),\r\n                setDebuggingState: (v: DebuggingState) => dispatch(setDebuggingState(v)),\r\n            };\r\n\r\n        } else if (showCanvas) {\r\n            // canvas testing\r\n            const ctx = ctxProvider();\r\n\r\n            // Green.\r\n            ctx.fillStyle = \"#00AA00\";\r\n\r\n            (window as any).r42 = ctx;\r\n        } else {\r\n            startGame();\r\n        }\r\n    }\r\n};\r\n\r\nfunction startGame(): void {\r\n\r\n    startEssential();\r\n    dispatch(setPhasers(1));\r\n    dispatch(setLives(2));\r\n\r\n    dispatch(setLevel(1));\r\n    GameLoop.Start();\r\n}\r\n\r\nfunction startEssential() {\r\n    subscribeToStoreChanges();\r\n    registerListeners();\r\n\r\n    GameLoop.registerForegroundDrawing(drawStatusBar);\r\n    GameLoop.registerForegroundDrawing(drawGameFieldBorder);\r\n    GameLoop.registerUpdateState(playerRunner);\r\n    GameLoop.registerUpdateState(playerSpawnManager);\r\n    GameLoop.registerUpdateState(genericRunner);\r\n}","import $$observable from 'symbol-observable';\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error('It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error('You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected the listener to be a function.');\n    }\n\n    if (isDispatching) {\n      throw new Error('You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api-reference/store#subscribelistener for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error('You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api-reference/store#subscribelistener for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionDescription = actionType && \"action \\\"\" + String(actionType) + \"\\\"\" || 'an action';\n  return \"Given \" + actionDescription + \", reducer \\\"\" + key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\";\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle \" + ActionTypes.INIT + \" or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n        throw new Error(errorMessage);\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(\"bindActionCreators expected an object or a function, instead received \" + (actionCreators === null ? 'null' : typeof actionCreators) + \". \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    keys.push.apply(keys, Object.getOwnPropertySymbols(object));\n  }\n\n  if (enumerableOnly) keys = keys.filter(function (sym) {\n    return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n  });\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error('Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread2({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\n\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \"production\". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { ActionTypes as __DO_NOT_USE__ActionTypes, applyMiddleware, bindActionCreators, combineReducers, compose, createStore };\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport Constants from \"./DebuggingConstants\";\r\nimport DebuggingState from \"./DebuggingState\";\r\nimport { DebuggingTypes } from \"./DebuggingTypes\";\r\n\r\n/**\r\n * Module:          debuggingReducer\r\n * Responsibility:  Handles the debugging state.\r\n */\r\n\r\n/**\r\n * debuggingReducer\r\n * @param {DebuggingState} state. The current state.\r\n * @param {ActionPayload<any>} action. The desired action with optional paylood.\r\n * @returns {DebuggingState}. New state.\r\n */\r\nexport default function debuggingReducer(state: DebuggingState = {}, action: DebuggingTypes): DebuggingState {\r\n    switch (action.type) {\r\n        case Constants.setDebuggingState:\r\n            state = { ...action.state };\r\n            break;\r\n    }\r\n\r\n    return state;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          LevelReducuer\r\n * Responsibility:  LevelReducer.\r\n */\r\n\r\nimport produce from \"immer\";\r\nimport Constants from \"./EnemyLevelConstants\";\r\nimport EnemyLevelState from \"./EnemyLevelState\";\r\nimport { EnemyLevelTypes } from \"./EnemyLevelTypes\";\r\n\r\n/**\r\n * enemyLevelReducer\r\n * @param {EnemyLevelState} state. The current state.\r\n * @param {ActionPayload<any>} action. The desired action with optional paylood.\r\n * @returns {EnemyLevelState}. New state.\r\n */\r\nexport default function enemyLevelReducer(state: EnemyLevelState = initState(), action: EnemyLevelTypes): EnemyLevelState {\r\n\r\n    const newState = produce(state, (draft) => {\r\n        switch (action.type) {\r\n            case Constants.addExplosionCenter:\r\n                draft.explosionCenters.push(action.explosionCenter);\r\n                draft.shrapnells.push(...action.shrapnell);\r\n                break;\r\n            case Constants.setShrapnellState:\r\n                draft.shrapnells = action.shrapnell;\r\n                break;\r\n            case Constants.addParticle:\r\n                draft.shrapnells.push(action.particle);\r\n                break;\r\n            case Constants.addParticles:\r\n                draft.shrapnells.push(...action.particles);\r\n                break;\r\n            case Constants.setPhaserLocations:\r\n                draft.phaserLocations = action.payload;\r\n                break;\r\n            case Constants.clearPhaserLocations:\r\n                draft.phaserLocations = [];\r\n                break;\r\n            case Constants.setExplosionCenters:\r\n                draft.explosionCenters = action.explosionCenters;\r\n                break;\r\n            case Constants.addBullet:\r\n                draft.bullets.push(action.bullet);\r\n                break;\r\n            case Constants.setBulletState:\r\n                draft.bullets = action.bullets;\r\n                break;\r\n            case Constants.setTotalEnemies:\r\n                draft.totalNumberOfEnemies = action.totalEnemies;\r\n                break;\r\n            case Constants.addOrUpdateEnemy: {\r\n                // IMPORTANT. This action is solely dispatched from Enemies.\r\n                const index = state.enemies.findIndex((es) => es.enemyId === action.enemyState.enemyId);\r\n                if (index > -1) {\r\n                    draft.enemies[index] = { ...draft.enemies[index], ...action.enemyState };\r\n                } else {\r\n                    draft.enemies.push(action.enemyState);\r\n                }\r\n\r\n                break;\r\n            }\r\n            case Constants.removeEnemy:\r\n                draft.enemies = draft.enemies.filter((es) => es.enemyId !== action.enemyId);\r\n                break;\r\n            case Constants.setEnemyLastFireTick: {\r\n                const index = state.enemies.findIndex((es) => es.enemyId === action.payload.enemyId);\r\n                if (index > -1) {\r\n                    draft.enemies[index].lastFiretick = action.payload.tick;\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    if (action.type === Constants.resetLevelState) {\r\n        return initState();\r\n    }\r\n\r\n    return newState;\r\n}\r\n\r\nfunction initState(): EnemyLevelState {\r\n    return {\r\n        shrapnells: [],\r\n        phaserLocations: [],\r\n        explosionCenters: [],\r\n        bullets: [],\r\n        totalNumberOfEnemies: 0,\r\n        enemies: [],\r\n    };\r\n}","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport produce from \"immer\";\r\nimport Constants from \"./GameConstants\";\r\nimport GameState from \"./GameState\";\r\nimport { GameStateTypes } from \"./GameTypes\";\r\nimport getWarpGateComplexity from \"./WarpGameComplexities\";\r\n\r\n/**\r\n * Module:          GameStateReducer\r\n * Responsibility:  Reducer for the game state\r\n */\r\n\r\n/**\r\n * gameStateReducer\r\n * @param {DebuggingState} state. The current state.\r\n * @param {ActionPayload<any>} action. The desired action with optional paylood.\r\n * @returns {GameState}. New state.\r\n */\r\nexport default function gameStateReducer(state: GameState = initState(), action: GameStateTypes): GameState {\r\n    return produce(state, (draft) => {\r\n        switch (action.type) {\r\n            case Constants.increaseScore:\r\n                draft.score += action.payload;\r\n                break;\r\n            case Constants.setLives:\r\n                draft.lives = action.payload;\r\n                break;\r\n            case Constants.addLife:\r\n                draft.lives += 1;\r\n                break;\r\n            case Constants.removeLife:\r\n                draft.lives -= 1;\r\n                break;\r\n            case Constants.setPhasers:\r\n                draft.phasers = action.payload;\r\n                break;\r\n            case Constants.addPhaser:\r\n                draft.phasers += 1;\r\n                break;\r\n            case Constants.removePhaser:\r\n                draft.phasers--;\r\n                break;\r\n            case Constants.addLevel:\r\n                if (draft.level) {\r\n                    draft.level++;\r\n                }\r\n                break;\r\n            case Constants.setLevel:\r\n                draft.level = action.payload;\r\n                break;\r\n            case Constants.nextLevel:\r\n                if (draft.level === 42) {\r\n                    draft.level = 1;\r\n                } else if (draft.level !== undefined) {\r\n                    draft.level++;\r\n                }\r\n\r\n                break;\r\n            case Constants.addLifeAndPhaser:\r\n                draft.lives++;\r\n                draft.phasers++;\r\n                break;\r\n            case Constants.setPause:\r\n                draft.pause = action.payload;\r\n                break;\r\n            case Constants.setWarpLevelComplexity:\r\n                draft.warpLevelSteps = getWarpGateComplexity(action.complexity);\r\n                break;\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Initialize the state\r\n * @returns {GameState}. Fresh GameState.\r\n */\r\nfunction initState(): GameState {\r\n    return {\r\n        level: undefined,\r\n        lives: 0,\r\n        score: 0,\r\n        phasers: 0,\r\n        pause: false,\r\n        warpLevelSteps: getWarpGateComplexity(0),\r\n    };\r\n}\r\n","import { WarpLevelComplexity, WarpLevelComplexitySteps, WarpLevelSteps } from \"./WarpLevelTypes\";\r\n\r\n/**\r\n * Typed constants that defined the warp gate complexities.\r\n */\r\nconst warpLevelComplexities: WarpLevelComplexitySteps = {\r\n    0: {\r\n        stepsX: [0, 2, 2, 4],\r\n        stepsY: [4, 4, 6, 8]\r\n    },\r\n    1: {\r\n        stepsX: [0, 2, 2, 4],\r\n        stepsY: [4, 4, 6, 6],\r\n    },\r\n    2: {\r\n        stepsX: [0, 2, 2, 4],\r\n        stepsY: [4, 4, 4, 6],\r\n    },\r\n    3: {\r\n        stepsX: [2, 2, 4, 4],\r\n        stepsY: [2, 4, 4, 6],\r\n    },\r\n    4: {\r\n        stepsX: [2, 2, 2, 4],\r\n        stepsY: [2, 2, 4],\r\n    },\r\n    5: {\r\n        stepsX: [2, 2, 2, 4],\r\n        stepsY: [2, 2, 4],\r\n    },\r\n    6: {\r\n        stepsX: [2, 2, 4, 4],\r\n        stepsY: [2, 4],\r\n    },\r\n    7: {\r\n        stepsX: [2, 2, 4, 4],\r\n        stepsY: [2],\r\n    },\r\n    8: {\r\n        stepsX: [2, 2, 4, 4],\r\n        stepsY: [2],\r\n    }\r\n};\r\n\r\nexport default function getWarpGateComplexity(complexity: WarpLevelComplexity): WarpLevelSteps {\r\n    return warpLevelComplexities[complexity];\r\n}","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          KeyboardReducer\r\n * Responsibility:  Handles keyup and keydown events and stores the currently held down heys.\r\n */\r\n\r\nimport produce from \"immer\";\r\nimport Constants from \"./KeyboardConstants\";\r\nimport KeyboardState from \"./KeyboardState\";\r\nimport { KeyboardTypes } from \"./KeyboardTypes\";\r\n\r\n/**\r\n * keyboardStateReducer\r\n * @param {DebuggingState} state. The current state.\r\n * @param {ActionPayload<any>} action. The desired action with optional paylood.\r\n * @returns {KeyboardState}. New state.\r\n */\r\nexport default function keyboardStateReducer(state: KeyboardState = initState(), action: KeyboardTypes): KeyboardState {\r\n\r\n    return produce(state, (draft) => {\r\n\r\n        let keyDown = false;\r\n        if (action.type === Constants.keydown) {\r\n            keyDown = true;\r\n        } else if (action.type === Constants.keyup) {\r\n            keyDown = false;\r\n        }\r\n\r\n        switch (action.payload) {\r\n            case undefined:\r\n                break;\r\n            case Constants.arrowUp:\r\n                draft.up = keyDown;\r\n                break;\r\n            case Constants.arrowDown:\r\n                draft.down = keyDown;\r\n                break;\r\n            case Constants.arrowLeft:\r\n                draft.left = keyDown;\r\n                break;\r\n            case Constants.arrowRight:\r\n                draft.right = keyDown;\r\n                break;\r\n            case Constants.backspace:\r\n                draft.selfDestruct = keyDown;\r\n                break;\r\n            case Constants.f1:\r\n                draft.fire = keyDown;\r\n                break;\r\n            case Constants.f2:\r\n                draft.phraser = keyDown;\r\n                break;\r\n            case Constants.space:\r\n                draft.space = keyDown;\r\n                break;\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Initialize KeyboardState\r\n * @returns {KeyboardState}. Initial keyboard state.\r\n */\r\nfunction initState(): KeyboardState {\r\n    return {\r\n        up: false,\r\n        down: false,\r\n        left: false,\r\n        right: false,\r\n        fire: false,\r\n        phraser: false,\r\n        selfDestruct: false,\r\n        space: false,\r\n    };\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport produce from \"immer\";\r\nimport { Locations } from \"../../Constants/Constants\";\r\nimport getPlayerExplosion from \"../../Player/PlayerExplosion\";\r\nimport { getPlayerFrame } from \"../../Player/PlayerFrames\";\r\nimport Mutators from \"../../Utility/FrameMutators\";\r\nimport Constants from \"./PlayerConstants\";\r\nimport PlayerState from \"./PlayerState\";\r\nimport { PlayerStateTypes } from \"./PlayerTypes\";\r\n\r\n/**\r\n * Module:          playerReducer\r\n * Responsibility:  Handles the player's state.\r\n */\r\n\r\n/**\r\n * playerReducer\r\n * @param {PlayerState} state. The current state.\r\n * @param {ActionPayload<any>} action. The desired action with optional paylood.\r\n * @returns {PlayerState}. New state.\r\n */\r\nexport default function playerReducer(state: PlayerState = initState(), action: PlayerStateTypes): PlayerState {\r\n    return produce(state, (draft) => {\r\n        switch (action.type) {\r\n            case Constants.setPlayerIsAlive:\r\n                draft.alive = action.playerIsAlive;\r\n                break;\r\n            case Constants.setPlayerMovementLimit:\r\n                draft.moveLimit = action.payload;\r\n                break;\r\n            case Constants.setPlayerLocationData:\r\n                draft.left = action.payload.left;\r\n                draft.top = action.payload.top;\r\n                draft.hitboxes = action.payload.hitboxes;\r\n                draft.nozzleLocation = action.payload.nozzleLocation;\r\n                break;\r\n            case Constants.setPlayerBulletState:\r\n                draft.bulletState = action.particleState;\r\n                break;\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Initialize the base player state.\r\n * @returns {PlayerState}\r\n */\r\nfunction initState(): PlayerState {\r\n    const playerExplosion = getPlayerExplosion();\r\n    Mutators.Frame.convertHexToCGA(playerExplosion.explosionCenterFrame);\r\n\r\n    playerExplosion.particleFrames.forEach((p) => Mutators.Frame.convertHexToCGA(p));\r\n\r\n    const spawnLocation = Locations.Player.spawnLocation;\r\n\r\n    const playerFrame = getPlayerFrame();\r\n    Mutators.Frame.convertHexToCGA(playerFrame);\r\n\r\n    return {\r\n        alive: false,\r\n        moveLimit: \"none\",\r\n        left: spawnLocation.left,\r\n        top: spawnLocation.top,\r\n        hitboxes: undefined,\r\n        nozzleLocation: { left: 0, top: 0 },\r\n        coloredExplosion: playerExplosion,\r\n        coloredFrame: playerFrame,\r\n        bulletState: undefined,\r\n    };\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { GameLocation } from \"../Models/GameLocation\";\r\nimport { getPlayerFrame } from \"../Player/PlayerFrames\";\r\nimport { getFrameDimensions } from \"../Utility/Frame\";\r\nimport dimensionProvider from \"./DimensionProvider\";\r\n\r\n/**\r\n * Module:          PlayerSpawnLocationProvider\r\n * Responsibility:  Providers the location where the ship should spawn in a level with enemeies\r\n */\r\n\r\nconst {\r\n    pixelSize,\r\n    fullGameWidth,\r\n    fullGameHeight\r\n} = dimensionProvider();\r\n\r\nconst shipDimensions = getFrameDimensions(getPlayerFrame());\r\n\r\nconst leftSpawnPosition = (fullGameWidth / 2) - shipDimensions.width / 2;\r\nconst topSpawnPosition = fullGameHeight - pixelSize * 8;\r\n\r\n/**\r\n * Gets the ship's spawn location, center screen.\r\n */\r\nexport default function getShipSpawnLocation(): GameLocation {\r\n    return {\r\n        left: leftSpawnPosition,\r\n        top: topSpawnPosition,\r\n    };\r\n}\r\n","\r\n/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport Explosion from \"../Models/Explosion\";\r\n\r\n/**\r\n * Module:          PlayerExplosion\r\n * Responsibility:  Explosion effect only for the player\r\n */\r\n\r\nexport default function getPlayerExplosion(): Explosion {\r\n\r\n    const playerExplosion: Explosion = {\r\n        explosionCenterFrame: [\r\n            [\"0\", \"0\", \"2\", \"2\", \"0\", \"0\"],\r\n            [\"4\", \"E\", \"0\", \"0\", \"E\", \"4\"],\r\n        ],\r\n        particleFrames: [\r\n            [\r\n                [\"C\", \"C\"], // red block\r\n            ],\r\n            [\r\n                [\"E\", \"C\"], // yellow red block\r\n            ],\r\n            [\r\n                [\"C\", \"E\"], // red yellow block\r\n            ],\r\n            [\r\n                [\"F\", \"C\"], // white red block\r\n            ],\r\n            [\r\n                [\"C\", \"F\"], // red white block\r\n            ],\r\n        ],\r\n        particleFrameIndexes: [\r\n            0, 0, 0, 0, 0,\r\n            1, 1, 1, 1,\r\n            2, 2, 2, 2,\r\n            2, 3, 3, 3,\r\n            4, 4, 4, 4,\r\n            0, 0,\r\n            0, 0,\r\n        ],\r\n        angles: [\r\n            270, 270, 270, 270, 270, // five red block flying up.\r\n            210, 210, 210, 210, // four yellow red blocks.\r\n            330, 330, 330, 300, // four red yellow blocks.\r\n            195, 195, 195, 195, // four white red blocks.\r\n            345, 345, 345, 345, // four red yellow blocks.\r\n            180, 180, // two red blocks\r\n            0, 0 // two red blocks\r\n        ],\r\n        speeds: [\r\n            3, 4.5, 7, 8, 10, // Speeds for the first angles.\r\n            3, 4.5, 7, 8, // Speeds for the second row of angles.\r\n            3, 4.5, 7, 8, // Speeds for the third row of angles.\r\n            3, 4.5, 7, 8, // Speeds for the fourh row of angles.\r\n            3, 4.5, 7, 8, // Speeds for the fith fow of angles\r\n            4.5, 8, // Speeds for the fith fow of angles\r\n            4.5, 8, // Speeds for the fith fow of angles\r\n        ],\r\n        acceleration: 1.10,\r\n        explosionCenterDelay: 20,\r\n        useSpeed: false,\r\n        speed: 0, // not used.\r\n    };\r\n\r\n    return playerExplosion;\r\n}","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          HexToCGAConverter.\r\n * Responsibility:  Convert hex color to a CGA color\r\n */\r\n\r\nimport CGAColors from \"../Constants/CGAColors\";\r\n\r\nexport default function hexToCGAConverter(hex: string): string {\r\n    switch (hex) {\r\n        case \"0\":\r\n            return CGAColors.black;\r\n        case \"1\":\r\n            return CGAColors.blue;\r\n        case \"2\":\r\n            return CGAColors.green;\r\n        case \"3\":\r\n            return CGAColors.cyan;\r\n        case \"4\":\r\n            return CGAColors.red;\r\n        case \"5\":\r\n            return CGAColors.magenta;\r\n        case \"6\":\r\n            return CGAColors.brown;\r\n        case \"7\":\r\n            return CGAColors.lightGray;\r\n        case \"8\":\r\n            return CGAColors.darkGray;\r\n        case \"9\":\r\n            return CGAColors.lightBlue;\r\n        case \"A\":\r\n            return CGAColors.lightGreen;\r\n        case \"B\":\r\n            return CGAColors.lightCyan;\r\n        case \"C\":\r\n            return CGAColors.lightRed;\r\n        case \"D\":\r\n            return CGAColors.lightMagenta;\r\n        case \"E\":\r\n            return CGAColors.yellow;\r\n        case \"F\":\r\n            return CGAColors.white;\r\n        default:\r\n            return \"\";\r\n    }\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport CGAColors from \"../Constants/CGAColors\";\r\nimport { getPlayerFrame } from \"../Player/PlayerFrames\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport ctxProvider from \"../Render/CtxProvider\";\r\nimport renderFrame from \"../Render/RenderFrame\";\r\nimport getNumbers from \"../SharedFrames/Numbers\";\r\nimport { appState } from \"../State/Store\";\r\nimport { Frame } from \"../Types\";\r\nimport { getFrameByIndex, getFrameDimensions } from \"../Utility/Frame\";\r\nimport Mutators from \"../Utility/FrameMutators\";\r\nimport { padLeft } from \"../Utility/String\";\r\n\r\n/**\r\n * Module:          StatusBar\r\n * Responsibility:  Drawn at the top of the screen for score, phasers, lives and level.\r\n */\r\n\r\nconst ctx = ctxProvider();\r\n\r\nconst {\r\n    statusBarBottom,\r\n    pixelSize,\r\n    fullGameWidth\r\n} = dimensionProvider();\r\n\r\nconst numberFrames = getNumbers(CGAColors.yellow);\r\n\r\nconst lifeFrame = getPlayerFrame();\r\nMutators.Frame.setColor(lifeFrame, CGAColors.yellow);\r\n\r\n// Score constants\r\nconst scoreStartPosition = 4 * pixelSize;\r\nconst scoreSpacing = 2 * pixelSize;\r\nconst scoreBackgroundWidth = 45 * pixelSize;\r\n\r\n// Phaser constants.\r\nconst phaserStartPosition = scoreBackgroundWidth;\r\nconst phaserSpacing = pixelSize * 2;\r\nconst phaserBackgroundWidth = pixelSize * 50;\r\n\r\n// The phaser frame is only used in the status bar.\r\n// no point in moving it to anther file.\r\nconst phaserFrame: Frame = [\r\n    [\"E\", \"0\"],\r\n    [\"E\", \"0\"],\r\n    [\"E\", \"E\"],\r\n    [\"0\", \"E\"],\r\n    [\"0\", \"E\"],\r\n];\r\n\r\nMutators.Frame.convertHexToCGA(phaserFrame);\r\n\r\n// Lives constants.\r\nconst livesSpacing = 2 * pixelSize;\r\nconst lifeFrameWidth = getFrameDimensions(lifeFrame).width;\r\n\r\n// Level number constants.\r\nconst leftNumberLeft = pixelSize * 148;\r\nconst rightNumberLeft = pixelSize * 154;\r\nconst scoreBoardHeight = pixelSize * 6;\r\n\r\n/**\r\n * Main funtion that draw the entire status bar.\r\n */\r\nexport function drawStatusBar(): void {\r\n    ctx.fillStyle = CGAColors.red;\r\n    ctx.fillRect(0, 0, fullGameWidth, scoreBoardHeight);\r\n    drawScore();\r\n    drawPhasers();\r\n    drawLives();\r\n    drawLevel();\r\n}\r\n\r\n/**\r\n * Draw the level indicator.\r\n */\r\nfunction drawScore(): void {\r\n    const { gameState } = appState();\r\n    const scoreString = padLeft(gameState.score.toString(), 6, \"0\");\r\n\r\n    let cnt = 0;\r\n    for (const n of scoreString) {\r\n        const frame = getFrameByIndex(numberFrames, parseInt(n, 10));\r\n\r\n        const actualSpacing = cnt === 0 ? 0 : scoreSpacing;\r\n        let left = cnt * (getFrameDimensions(frame).width + actualSpacing);\r\n        left = scoreStartPosition + left;\r\n        renderFrame(left, 0, frame);\r\n        cnt++;\r\n    }\r\n}\r\n\r\nfunction drawPhasers(): void {\r\n    const { gameState } = appState();\r\n\r\n    const maxPhasersToBeDrawn = gameState.phasers < 11 ? gameState.phasers : 11;\r\n\r\n    for (let i = 0; i < maxPhasersToBeDrawn; i++) {\r\n        const actualSpacing = i === 0 ? 0 : phaserSpacing;\r\n        const left = phaserStartPosition + i * pixelSize + i * actualSpacing;\r\n\r\n        if (left <= phaserStartPosition + phaserBackgroundWidth) {\r\n            renderFrame(left, 0, phaserFrame);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Draws the player lives. These are drawn from right.\r\n */\r\nfunction drawLives(): void {\r\n    const { gameState } = appState();\r\n    let left = 135 * pixelSize;\r\n\r\n    const maxLivesToBeDrawn = gameState.lives <= 8 ? gameState.lives : 8;\r\n\r\n    for (let lives = 1; lives <= maxLivesToBeDrawn; lives++) {\r\n        renderFrame(left, pixelSize, lifeFrame);\r\n        left -= livesSpacing + lifeFrameWidth;\r\n    }\r\n}\r\n\r\nfunction drawLevel(): void {\r\n    const { gameState } = appState();\r\n    let paddedLevelString = \"0\";\r\n    if (gameState.level !== undefined) {\r\n        paddedLevelString = padLeft(gameState.level.toString(), 2, \"0\");\r\n    }\r\n\r\n    const rightNumber = parseInt(paddedLevelString[1], 10);\r\n    const leftNumber = parseInt(paddedLevelString[0], 10);\r\n\r\n    const rightFrame = getFrameByIndex(numberFrames, rightNumber);\r\n    const leftFrame = getFrameByIndex(numberFrames, leftNumber);\r\n\r\n    renderFrame(leftNumberLeft, 0, leftFrame);\r\n    renderFrame(rightNumberLeft, 0, rightFrame);\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          String\r\n * Responsibility:  String utility functions\r\n */\r\n\r\n/**\r\n * pads a string on its left size until it is a given length\r\n * @param {string} value. Value to pad left.\r\n * @param {number} length. Length of the desired output.\r\n * @param {string} paddWidth. Character to pad width.\r\n */\r\nexport function padLeft(value: string, length: number, padWidth: string): string {\r\n\r\n    if (value.length >= length) {\r\n        return value;\r\n    } else {\r\n\r\n        const padLength = length - value.length;\r\n        let padding = \"\";\r\n\r\n        for (let i = 0; i < padLength; i++) {\r\n            padding += padWidth;\r\n        }\r\n\r\n        return padding + value;\r\n    }\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          SubscribeToStore\r\n * Responsibility:  Creates a Redux Store subscription that monitors state changes\r\n *                  that trigger a state action.\r\n */\r\n\r\nimport ILevel from \"../Interfaces/ILevel\";\r\nimport { addLifeAndPhaser } from \"../State/Game/GameActions\";\r\nimport { appState, appStore, dispatch } from \"../State/Store\";\r\nimport { levelFactory } from \"./LevelFactory\";\r\n\r\n// Used to track changes in level\r\nlet levelNumber: number;\r\n\r\n// Current level object.\r\nlet currentLevel: ILevel | undefined;\r\n\r\n// Used to track changes in score to award ships and phasers.\r\nlet currentScore = 0;\r\n\r\n/**\r\n * Lazy load a subscription to the redux store.\r\n */\r\nexport default function subscribeToStoreChanges(): void {\r\n\r\n    // We'll monitor changes in the state on which we ant to act.\r\n    appStore().subscribe(() => {\r\n        const { gameState } = appState();\r\n\r\n        // Handle level change acting on a change in level.\r\n        if (gameState.level !== undefined && levelNumber !== gameState.level) {\r\n            levelNumber = gameState.level;\r\n\r\n            if (currentLevel !== undefined) {\r\n                currentLevel.dispose();\r\n            }\r\n\r\n            // Get new level\r\n            currentLevel = levelFactory(levelNumber);\r\n\r\n            if (currentLevel !== undefined) {\r\n                currentLevel.begin();\r\n            }\r\n        }\r\n\r\n        if (gameState.score - currentScore >= 7500) {\r\n            // Each 7500 points the player is given an extra life and phaser. This\r\n            // can be done in a single dispatch.\r\n            currentScore = gameState.score;\r\n            dispatch(addLifeAndPhaser());\r\n        }\r\n    });\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          LevelFactory\r\n * Responsibility:  Provide Level objects\r\n */\r\n\r\nimport ILevel from \"../Interfaces/ILevel\";\r\nimport { setLevel, setWarpGamteComplexity as setWarpGameComplexity } from \"../State/Game/GameActions\";\r\nimport { dispatch } from \"../State/Store\";\r\nimport EnemyLevel from \"./EnemyLevel\";\r\nimport { TimeLimitLevel } from \"./TimeLimitLevel\";\r\nimport WarpLevel from \"./WarpLevel\";\r\nimport { setEnemyLastFireTick } from \"../State/EnemyLevel/EnemyLevelActions\";\r\n\r\n/**\r\n * LevelFactory. Provides level objects\r\n * @param {number} level. The desired level.\r\n * @returns {BaseEnemyLevel}. A level.\r\n */\r\nexport function levelFactory(level: number): ILevel | undefined {\r\n    switch (level) {\r\n        case 0:\r\n            // Test level\r\n            return new WarpLevel();\r\n        case 1:\r\n            return new EnemyLevel(\"bird\");\r\n        case 2:\r\n            return new EnemyLevel(\"robot\");\r\n        case 3:\r\n            return new EnemyLevel(\"orb\");\r\n        case 4:\r\n            dispatch(setWarpGameComplexity(0));\r\n            return new WarpLevel();\r\n        case 5:\r\n            return new EnemyLevel(\"spinner\");\r\n        case 6:\r\n            return new EnemyLevel(\"balloon\");\r\n        case 7:\r\n            return new TimeLimitLevel(\"asteroid-down\");\r\n        case 8:\r\n            dispatch(setWarpGameComplexity(1));\r\n            return new WarpLevel();\r\n        case 9:\r\n            return new EnemyLevel(\"piston\");\r\n        case 10:\r\n            return new EnemyLevel(\"diabolo\");\r\n        case 11:\r\n            return new TimeLimitLevel(\"spacemonster-down\");\r\n        case 12:\r\n            dispatch(setWarpGameComplexity(2));\r\n            return new WarpLevel();\r\n        case 13:\r\n            return new EnemyLevel(\"devil\");\r\n        case 14:\r\n            return new EnemyLevel(\"balloon\");\r\n        case 15:\r\n            return new EnemyLevel(\"asteroid-diagonal\");\r\n        case 16:\r\n            dispatch(setWarpGameComplexity(3));\r\n            return new WarpLevel();\r\n        case 17:\r\n            return new EnemyLevel(\"crab\");\r\n        case 18:\r\n            return new EnemyLevel(\"bat\");\r\n        case 19:\r\n            return new TimeLimitLevel(\"spacemonster-diagonal\");\r\n        case 20:\r\n            dispatch(setWarpGameComplexity(5));\r\n            return new WarpLevel();\r\n        case 21:\r\n            return new EnemyLevel(\"piston\");\r\n        case 22:\r\n            return new EnemyLevel(\"boat\");\r\n        case 23:\r\n            return new EnemyLevel(\"cloaking-orb\");\r\n        case 24:\r\n            dispatch(setWarpGameComplexity(5));\r\n            return new WarpLevel();\r\n        case 25:\r\n            return new EnemyLevel(\"orb-up-down\");\r\n        case 26:\r\n            return new EnemyLevel(\"asteroid-diagonal\");\r\n        case 27:\r\n            return new TimeLimitLevel(\"spacemonster-diagonal\");\r\n        case 28:\r\n            dispatch(setWarpGameComplexity(6));\r\n            return new WarpLevel();\r\n        case 29:\r\n            return new EnemyLevel(\"robots-random\");\r\n        case 30:\r\n            return new EnemyLevel(\"boat\");\r\n        case 31:\r\n            return new EnemyLevel(\"orb-up-down\");\r\n        case 32:\r\n            dispatch(setWarpGameComplexity(7));\r\n            return new WarpLevel();\r\n        case 33:\r\n            return new EnemyLevel(\"piston\");\r\n        case 34:\r\n            return new EnemyLevel(\"bird-fire\");\r\n        case 35:\r\n            // Max complexity\r\n            dispatch(setWarpGameComplexity(8));\r\n            return new WarpLevel();\r\n        case 36:\r\n        case 37:\r\n            return new WarpLevel();\r\n        case 38:\r\n            return new EnemyLevel(\"spinner\");\r\n        case 39:\r\n        case 40:\r\n        case 41:\r\n            return new WarpLevel();\r\n        default:\r\n            // Reset to first level.\r\n            return new EnemyLevel(\"crab\");\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { Frame } from \"../Types\";\r\nimport Mutators from \"../Utility/FrameMutators\";\r\n\r\n/**\r\n * Module:          Characters\r\n * Responsibility:  Define character frames. A to Z with some other characters\r\n *                  All these are all frames which can be rendered directly.\r\n *                  on screen using the renderFrame function.\r\n *                  Their colors are \"V\". Meaning \"Variant\" so they\r\n *                  can be set with a single function call.\r\n */\r\n\r\nexport default function getCharacters(color: string): Frame[] {\r\n    const Characters: Frame[] = [\r\n        [\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n        ],\r\n        [\r\n            [\"0\", \"V\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"0\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"V\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\"],\r\n            [\"0\", \"V\", \"0\"],\r\n            [\"0\", \"V\", \"0\"],\r\n            [\"0\", \"V\", \"0\"],\r\n            [\"V\", \"V\", \"V\"],\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"0\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"V\", \"0\"],\r\n            [\"V\", \"V\", \"0\", \"0\"],\r\n            [\"V\", \"0\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"0\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"V\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n        ],\r\n        [\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n        ],\r\n        [\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"V\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"V\"],\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n        ],\r\n        [\r\n            [\"0\", \"V\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"0\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\", \"V\", \"V\"],\r\n            [\"0\", \"0\", \"V\", \"0\", \"0\"],\r\n            [\"0\", \"0\", \"V\", \"0\", \"0\"],\r\n            [\"0\", \"0\", \"V\", \"0\", \"0\"],\r\n            [\"0\", \"0\", \"V\", \"0\", \"0\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"0\", \"V\", \"0\"],\r\n            [\"0\", \"V\", \"0\", \"V\", \"0\"],\r\n            [\"0\", \"0\", \"V\", \"0\", \"0\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"V\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"V\", \"0\"],\r\n            [\"0\", \"V\", \"0\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"0\", \"V\", \"0\"],\r\n            [\"0\", \"0\", \"V\", \"0\", \"0\"],\r\n            [\"0\", \"V\", \"0\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"0\", \"V\", \"0\"],\r\n            [\"0\", \"0\", \"V\", \"0\", \"0\"],\r\n            [\"0\", \"0\", \"V\", \"0\", \"0\"],\r\n            [\"0\", \"0\", \"V\", \"0\", \"0\"],\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"0\", \"0\", \"V\", \"0\"],\r\n            [\"0\", \"V\", \"0\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n        ],\r\n        [\r\n            [\"0\"],\r\n            [\"0\"],\r\n            [\"0\"],\r\n            [\"0\"],\r\n            [\"0\"],\r\n        ],\r\n    ];\r\n\r\n    Mutators.Frames.setColor(Characters, color);\r\n    return Characters;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { Frame } from \"../Types\";\r\n\r\n/**\r\n * Module:          getCharacter\r\n * Responsibility:  Return a character\r\n */\r\n\r\n/**\r\n * Get character\r\n * @param {Frame[]} frames. Character frames.\r\n * @param {string} character. Character frame to rturn.\r\n * @returns {Frame}. Character frame.\r\n */\r\nexport default function getCharacter(frames: Frame[], character: string): Frame {\r\n    const upperCaseCharacter = character.toUpperCase();\r\n\r\n    if (upperCaseCharacter === \"SPACE\") {\r\n        return frames[character.length - 1];\r\n    } else {\r\n        const cc = upperCaseCharacter.charCodeAt(0) - 65;\r\n        return frames[cc];\r\n    }\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseEnemy from \"../Base/BaseEnemy\";\r\nimport CGAColors from \"../Constants/CGAColors\";\r\nimport { Locations, Speeds } from \"../Constants/Constants\";\r\nimport getBoatSpawnLocations from \"../Enemies/Boat/GetBoatSpawnLocations\";\r\nimport orbSpawnLocations from \"../Enemies/Orb/OrbEnemiesSpawnLocations\";\r\nimport robotSpawnLocations from \"../Enemies/Robot/RobotSpawnLocations\";\r\nimport BulletRunner from \"../Runners/BulletRunner\";\r\nimport fireDownAimed from \"../ShipsToFireProviders/FireDownAimed\";\r\nimport { fiveDownRandom, threeDownRandom } from \"../ShipsToFireProviders/FireDownRandom\";\r\nimport firstEnemyOccasionalDown from \"../ShipsToFireProviders/FirstEnemyOccasionalDown\";\r\nimport maxFiveDiagonal from \"../ShipsToFireProviders/MaxFiveDiagonal\";\r\nimport elevenInALine from \"../SpawnLocations/ElevennInALine\";\r\nimport getRandomSpawnLocations from \"../SpawnLocations/GetRandomSpawnLocations\";\r\nimport sevenSixSevnrGridProvider from \"../SpawnLocations/SevenSixSevenGridProvider\";\r\nimport { Enemies } from \"../Types\";\r\nimport dimensionProvider from \"./DimensionProvider\";\r\nimport enemyFactory from \"./EnemyFactory\";\r\n\r\n/**\r\n * Module:          EnemyFactory\r\n * Responsibility:  Create enemy objects\r\n */\r\n\r\nconst {\r\n    gameField\r\n} = dimensionProvider();\r\n\r\nexport function enemyLevelContentFactory(enemy: Enemies): { bulletRunner?: BulletRunner, enemies: BaseEnemy[] } {\r\n    switch (enemy) {\r\n        case \"bird\":\r\n        case \"bird-fire\": {\r\n            const enemies = sevenSixSevnrGridProvider().map((location) => enemyFactory(enemy, location));\r\n\r\n            let bulletRunner: BulletRunner | undefined;\r\n\r\n            if (enemy === \"bird-fire\") {\r\n                bulletRunner = new BulletRunner(CGAColors.brown, Speeds.Bullets.bird, maxFiveDiagonal);\r\n            }\r\n\r\n            return {\r\n                enemies,\r\n                bulletRunner,\r\n            };\r\n        }\r\n\r\n        case \"robot\":\r\n        case \"robots-random\": {\r\n\r\n            let bulletRunner: BulletRunner;\r\n            let enemies: BaseEnemy[];\r\n\r\n            if (enemy === \"robot\") {\r\n                bulletRunner = new BulletRunner(CGAColors.lightRed, Speeds.Bullets.robot, firstEnemyOccasionalDown);\r\n                enemies = robotSpawnLocations.map((location) => enemyFactory(enemy, location));\r\n            } else if (enemy === \"robots-random\") {\r\n                bulletRunner = new BulletRunner(CGAColors.lightRed, Speeds.Bullets.robot, maxFiveDiagonal);\r\n                enemies = getRandomSpawnLocations(14, gameField.top, Locations.robot.scatteredMaxBottom).map((location) => enemyFactory(enemy, location));\r\n            } else {\r\n                throw new Error(\"Unhandled level creation\");\r\n            }\r\n\r\n            return {\r\n                enemies,\r\n                bulletRunner,\r\n            };\r\n        }\r\n\r\n        case \"orb\":\r\n        case \"orb-up-down\": {\r\n            const enemies = orbSpawnLocations.map((location, index) => enemyFactory(enemy, location, index));\r\n            const bulletRunner = new BulletRunner(CGAColors.magenta, Speeds.Bullets.orb, maxFiveDiagonal);\r\n\r\n            return {\r\n                enemies,\r\n                bulletRunner,\r\n            };\r\n        }\r\n\r\n        case \"spinner\": {\r\n\r\n            const enemies = sevenSixSevnrGridProvider().map((location) => enemyFactory(enemy, location));\r\n            const bulletRunner = new BulletRunner(CGAColors.white, Speeds.Bullets.spinner, maxFiveDiagonal);\r\n\r\n            return {\r\n                enemies,\r\n                bulletRunner,\r\n            };\r\n        }\r\n\r\n        case \"balloon\": {\r\n\r\n            const enemies = sevenSixSevnrGridProvider().map((location) => enemyFactory(enemy, location));\r\n            const bulletRunner = new BulletRunner(CGAColors.blue, Speeds.Bullets.balloon, maxFiveDiagonal);\r\n\r\n            return {\r\n                enemies,\r\n                bulletRunner\r\n            };\r\n        }\r\n\r\n        case \"asteroid-down\":\r\n        case \"asteroid-diagonal\": {\r\n            const enemies: BaseEnemy[] = [];\r\n\r\n            for (let i = 0; i < 7; i++) {\r\n                enemies.push(enemyFactory(enemy));\r\n            }\r\n\r\n            return {\r\n                enemies\r\n            };\r\n        }\r\n\r\n        case \"piston\": {\r\n            const enemies = elevenInALine(Locations.Piston.topStart).map((location) => enemyFactory(enemy, location));\r\n            const bulletRunner = new BulletRunner(CGAColors.blue, Speeds.Bullets.balloon, threeDownRandom);\r\n\r\n            return {\r\n                enemies,\r\n                bulletRunner\r\n            };\r\n        }\r\n\r\n        case \"diabolo\": {\r\n            const enemies = sevenSixSevnrGridProvider().map((location) => enemyFactory(enemy, location));\r\n            const bulletRunner = new BulletRunner(CGAColors.yellow, Speeds.Bullets.diabolo, maxFiveDiagonal);\r\n\r\n            return {\r\n                enemies,\r\n                bulletRunner\r\n            };\r\n        }\r\n\r\n        case \"spacemonster-down\":\r\n        case \"spacemonster-diagonal\": {\r\n            const enemies: BaseEnemy[] = [];\r\n\r\n            for (let i = 0; i < 7; i++) {\r\n                enemies.push(enemyFactory(enemy));\r\n            }\r\n\r\n            return {\r\n                enemies\r\n            };\r\n        }\r\n\r\n        case \"devil\": {\r\n\r\n            const enemies = sevenSixSevnrGridProvider().map((location) => enemyFactory(enemy, location));\r\n            const bulletRunner = new BulletRunner(CGAColors.lightGreen, Speeds.Bullets.devil, (tick) => fireDownAimed(tick, 3));\r\n\r\n            return {\r\n                enemies,\r\n                bulletRunner,\r\n            };\r\n        }\r\n        case \"crab\": {\r\n            const enemies = elevenInALine(Locations.Crab.topStart).map((location) => enemyFactory(enemy, location));\r\n            const bulletRunner = new BulletRunner(CGAColors.lightRed, Speeds.Bullets.crab, maxFiveDiagonal);\r\n\r\n            return {\r\n                enemies,\r\n                bulletRunner\r\n            };\r\n        }\r\n\r\n        case \"bat\": {\r\n            const enemies = sevenSixSevnrGridProvider().map((location) => enemyFactory(enemy, location));\r\n            const bulletRunner = new BulletRunner(CGAColors.yellow, Speeds.Bullets.bat, maxFiveDiagonal);\r\n\r\n            return {\r\n                enemies,\r\n                bulletRunner,\r\n            };\r\n        }\r\n\r\n        case \"boat\": {\r\n            const enemies = getBoatSpawnLocations().map((location) => enemyFactory(enemy, location));\r\n            const bulletRunner = new BulletRunner(CGAColors.blue, Speeds.Bullets.balloon, fiveDownRandom);\r\n\r\n            return {\r\n                enemies,\r\n                bulletRunner\r\n            };\r\n        }\r\n\r\n        case \"cloaking-orb\": {\r\n            const enemies = getRandomSpawnLocations(15, gameField.top, Locations.CloakingOrb.maxBottom).map((location) => enemyFactory(enemy, location));\r\n\r\n            // Frames 0, 1, 2 are when the orb is fully vibisble. This is the only time this enemy is allowed to fire.\r\n            // After all, it's going to look pretty weird when bullets appear out of thin air.\r\n            const bulletRunner = new BulletRunner(CGAColors.lightRed, Speeds.Bullets.cloakingOrb, (tick) => fireDownAimed(tick, 5, [0, 1, 3]));\r\n\r\n            return {\r\n                enemies,\r\n                bulletRunner\r\n            };\r\n        }\r\n\r\n        case \"fish\": {\r\n            \r\n        }\r\n\r\n        default:\r\n            throw new Error(`Unknown enemy ${enemy}`);\r\n    }\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { Locations } from \"../../Constants/Constants\";\r\nimport { GameLocation } from \"../../Models/GameLocation\";\r\nimport dimensionProvider from \"../../Providers/DimensionProvider\";\r\n\r\n/**\r\n * Module:          GetBoatSpawnLocations\r\n * Responsibility:  Returns the Piston spawn locations.\r\n */\r\n\r\nconst {\r\n    gameField,\r\n    pixelSize,\r\n} = dimensionProvider();\r\n\r\nexport default function getBoatSpawnLocations(): GameLocation[] {\r\n    const locations: GameLocation[] = [];\r\n    let left = gameField.left + pixelSize * 5;\r\n    const spacing = pixelSize * 10;\r\n\r\n    for (let i = 0; i < 13; i++) {\r\n\r\n        const value = {\r\n            left,\r\n            top: Locations.Boat.topStart,\r\n        };\r\n\r\n        left += spacing;\r\n\r\n        locations.push(value);\r\n    }\r\n\r\n    return locations;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { Locations } from \"../../Constants/Constants\";\r\nimport { GameLocation } from \"../../Models/GameLocation\";\r\nimport dimensionProvider from \"../../Providers/DimensionProvider\";\r\n\r\n/**\r\n * Module:          OrbSpawnLocations\r\n * Responsibility:  Returns the orb spawn locations.\r\n */\r\n\r\nconst {\r\n    pixelSize,\r\n} = dimensionProvider();\r\n\r\nconst orbSpawnLocations: GameLocation[] = [];\r\nconst top = Locations.Orb.topStart;\r\nlet left = pixelSize * 16;\r\nconst spacing = pixelSize * 6;\r\n\r\nfor (let i = 0; i < 22; i++) {\r\n    const value = {\r\n        left,\r\n        top,\r\n    };\r\n\r\n    left += spacing;\r\n\r\n    orbSpawnLocations.push(value);\r\n}\r\n\r\nexport default orbSpawnLocations;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { Locations } from \"../../Constants/Constants\";\r\nimport { GameLocation } from \"../../Models/GameLocation\";\r\nimport dimensionProvider from \"../../Providers/DimensionProvider\";\r\nimport { getFrameDimensions } from \"../../Utility/Frame\";\r\nimport getRobotOffsetFrames from \"./GetRobotOffsetFrames\";\r\n\r\n/**\r\n * Module:          RobotSpawnLocations\r\n * Responsibility:  Returns the robot spawn locations.\r\n */\r\n\r\nconst {\r\n    pixelSize,\r\n} = dimensionProvider();\r\n\r\nconst robotSpawnLocations: GameLocation[] = [];\r\n\r\nconst top = Locations.robot.topStart;\r\nlet left = pixelSize * 12;\r\nconst spacing = pixelSize * 8;\r\n\r\nfor (let i = 0; i < 14; i++) {\r\n\r\n    const value = {\r\n        left,\r\n        top,\r\n    };\r\n\r\n    left += spacing;\r\n\r\n    robotSpawnLocations.push(value);\r\n}\r\n\r\nexport default robotSpawnLocations;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport getTwoPixelBullet from \"../SharedFrames/twoPXBullet\";\r\nimport { addBullet, addOrUpdateEnemy, setEnemyLastFireTick } from \"../State/EnemyLevel/EnemyLevelActions\";\r\nimport { EnemyState } from \"../State/EnemyLevel/EnemyState\";\r\nimport { StateProviders } from \"../State/StateProviders\";\r\nimport { appState, dispatch } from \"../State/Store\";\r\nimport { Frame, ShipsToFireFunction } from \"../Types\";\r\nimport Mutators from \"../Utility/FrameMutators\";\r\n\r\n/**\r\n * Module:          StraightDownBulletProvider\r\n * Responsibility:  Shoots a bullet straight down\r\n */\r\n\r\nconst {\r\n    pixelSize\r\n} = dimensionProvider();\r\n\r\n/**\r\n * Class the handles al bullet business.\r\n * @export\r\n * @class BulletRunner\r\n */\r\nexport default class BulletRunner {\r\n    /**\r\n     * The bullet frame that will be fired.\r\n     */\r\n    private coloredBulletFrame: Frame;\r\n\r\n    /**\r\n     * Speed of the bullets shot by the enemy.\r\n     */\r\n    private speed: number;\r\n\r\n    /**\r\n     * The color of the bullet fired.\r\n     */\r\n    private bulletColor: string;\r\n\r\n    /**\r\n     * A function that provides an array of ships that will fire and the angle at which they will fire.\r\n     */\r\n    private shipsToFire: ShipsToFireFunction;\r\n\r\n    /**\r\n     * Creates an instance of BulletRunner.\r\n     * @param {FrameProviderFunction} getBulletFrame. A function that returns a bullet frame.\r\n     * @param {string} bulletColor. The color of the bullet.\r\n     * @param {number} speed. The speed of the bullet.\r\n     * @param {ShipsToFireFunction} shipsToFire. A function that returns shits that can fire.\r\n     * @param {FireCheckFunction} fireCheck. A function that checks individual ships if they can fire.\r\n     * @memberof BulletRunner\r\n     */\r\n    constructor(\r\n        bulletColor: string,\r\n        speed: number,\r\n        shipsToFire: ShipsToFireFunction) {\r\n\r\n        this.speed = speed;\r\n        this.bulletColor = bulletColor;\r\n        this.shipsToFire = shipsToFire;\r\n\r\n        this.coloredBulletFrame = getTwoPixelBullet();\r\n        Mutators.Frame.setColor(this.coloredBulletFrame, this.bulletColor);\r\n    }\r\n\r\n    /**\r\n     * Determines which enemies can fire and how. Then dispatches bullets to the state.\r\n     * @param {number} tick. Current tick.\r\n     */\r\n    public updateState(tick: number): void {\r\n\r\n        const {\r\n            playerState: { alive}\r\n        } = appState();\r\n\r\n        // Enemies do not fire when the player is dead.\r\n        if (!alive) {\r\n            return;\r\n        }\r\n\r\n        const shipsToFire = this.shipsToFire(tick);\r\n\r\n        // The candiates are sorted so the enemeies with the best odds of hitting the player\r\n        // are at the top. Now we'll use the firecheck function to get an array of enemies that\r\n        // can actually fire.\r\n        for (const shipToFire of shipsToFire) {\r\n\r\n            const { angle, enemy: { hitbox, enemyId }, enemy } = shipToFire;\r\n\r\n            if (angle !== undefined) {\r\n\r\n                const left = hitbox.left + ((hitbox.right - hitbox.left) / 2) - pixelSize;\r\n                const top = hitbox.bottom + pixelSize;\r\n\r\n                const bullet = StateProviders.getBulletParticleState(\r\n                    left,\r\n                    top,\r\n                    this.speed,\r\n                    angle,\r\n                    this.coloredBulletFrame,\r\n                    enemyId,\r\n                );\r\n\r\n                dispatch(addBullet(bullet));\r\n                dispatch(setEnemyLastFireTick(shipToFire.enemy.enemyId, tick));\r\n            }\r\n        }\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { angles } from \"../Constants/Angles\";\r\nimport Guard from \"../Guard\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport ShipToFire from \"../ShipsToFire\";\r\nimport { EnemyState } from \"../State/EnemyLevel/EnemyState\";\r\nimport { appState } from \"../State/Store\";\r\nimport { GetShipsReadyToFire } from \"./GetShipsReadyToFire\";\r\n\r\n/**\r\n * Module:          Ships fire down when the player moves under neath this. Enemies can fire multiple bullets.\r\n * Responsibility:  Ships to fire function for the devil enemy.\r\n */\r\n\r\nconst {\r\n    pixelSize2x\r\n} = dimensionProvider();\r\n\r\n/**\r\n * A function that selects the orbs that should fire.\r\n * @param {number} tick. Current tick\r\n * @param {number} maxBullets. Maximum amount of bullets the enemies can collectivy fire.\r\n * @param {number} fireOnFrame. Optional. When provided, enemies will only be eligable to fire when their current frame is equal to the fireOnFrame. \r\n */\r\nexport default function fireDownAimed(tick: number, maxBullets: number, fireOnFrames?: number[]): ShipToFire[] {\r\n\r\n    const {\r\n        enemyLevelState: { bullets, enemies },\r\n    } = appState();\r\n    const returnValue: ShipToFire[] = [];\r\n\r\n    const remainingBullets = maxBullets - bullets.length;\r\n\r\n    if (remainingBullets === 0) {\r\n        return returnValue;\r\n    }\r\n\r\n    let candidates = getCandidates(tick);\r\n\r\n    // Additional filter on enemies that ony fire on a specified frame.\r\n    if (fireOnFrames !== undefined) {\r\n        candidates = candidates.filter((es) => es.currentFrameIndex !== undefined && fireOnFrames.indexOf(es.currentFrameIndex) > -1);\r\n    }\r\n\r\n    if (candidates.length === 0) {\r\n        return returnValue;\r\n    }\r\n\r\n    const enemyToFire = candidates[0];\r\n\r\n    if (enemyToFire !== undefined) {\r\n        const queuedTofire = returnValue.find((e) => e.enemy.enemyId === enemyToFire.enemyId) !== undefined;\r\n        const mayFire = enemies.length < maxBullets || !bullets.some((bullet) => bullet.owner === enemyToFire.enemyId);\r\n        if (!queuedTofire && mayFire) {\r\n            returnValue.push({ enemy: enemyToFire, angle: angles.down });\r\n        }\r\n    }\r\n\r\n    return returnValue;\r\n}\r\n\r\nfunction getCandidates(tick: number): EnemyState[] {\r\n\r\n    const {\r\n        playerState\r\n    } = appState();\r\n\r\n    if (!Guard.isPlayerAlive(playerState)) {\r\n        return [];\r\n    }\r\n\r\n    const { hitboxes: { bottom: bottomhitbox } } = playerState;\r\n\r\n    return GetShipsReadyToFire(tick).filter((enemy) => enemy.hitbox.left + pixelSize2x >= bottomhitbox.left && enemy.hitbox.right <= bottomhitbox.right + pixelSize2x);\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Actions\r\n * Responsibility:  Action definitions for the Keyboard State\r\n */\r\n\r\nimport { GameKeys } from \"../../Utility/KeyboardEvents\";\r\nimport Constants from \"./KeyboardConstants\";\r\nimport { KeyDown, KeyUp } from \"./KeyboardTypes\";\r\n\r\nexport function keyDown(key: GameKeys): KeyDown {\r\n    return {\r\n        type: Constants.keydown,\r\n        payload: key,\r\n    };\r\n}\r\n\r\nexport function keyUp(key: GameKeys): KeyUp {\r\n    return {\r\n        type: Constants.keyup,\r\n        payload: key\r\n    };\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { angles } from \"../Constants/Angles\";\r\nimport ShipToFire from \"../ShipsToFire\";\r\nimport { appState } from \"../State/Store\";\r\nimport { getRandomArrayElement } from \"../Utility/Array\";\r\nimport { GetShipsReadyToFire } from \"./GetShipsReadyToFire\";\r\n\r\n/**\r\n * Module:          FireDown\r\n * Responsibility:  Provides functions for enemies that fire downwards.\r\n */\r\n\r\n /**\r\n  * Three randomly picked enemies fire each fire a bullet.\r\n  * @param {number} tick. Current game tick\r\n  * @returns {ShipsToFire[]}. Ships that will fire.\r\n  */\r\nexport function threeDownRandom(tick: number): ShipToFire[] {\r\n    return randomDown(tick, 3);\r\n}\r\n\r\n/**\r\n * Five randomly picked enemies fire each fire a bullet.\r\n * @param {number} tick. Current tick\r\n * @returns {ShipToFire[]}. Ships that will fire.\r\n */\r\nexport function fiveDownRandom(tick: number): ShipToFire[] {\r\n    return randomDown(tick, 5);\r\n}\r\n\r\n/**\r\n * A function that selects the orbs that should fire.\r\n * @param {number} tick. Current tick\r\n */\r\nfunction randomDown(tick: number, maxBullets: number): ShipToFire[] {\r\n\r\n    const {\r\n        enemyLevelState: { bullets }\r\n    } = appState();\r\n\r\n    const returnValue: ShipToFire[] = [];\r\n\r\n    const remainingBullets = maxBullets - bullets.length;\r\n\r\n    if (remainingBullets === 0) {\r\n        return returnValue;\r\n    }\r\n\r\n    const enemies = GetShipsReadyToFire(tick);\r\n\r\n    const enemyToFire = getRandomArrayElement(enemies);\r\n\r\n    if (enemyToFire !== undefined) {\r\n        const queuedTofire = returnValue.find((e) => e.enemy.enemyId === enemyToFire.enemyId) !== undefined;\r\n        const mayFire = enemies.length < maxBullets || !bullets.some((bullet) => bullet.owner === enemyToFire.enemyId);\r\n        if (!queuedTofire && mayFire) {\r\n            returnValue.push({ enemy: enemyToFire, angle: angles.down });\r\n        }\r\n    }\r\n\r\n    return returnValue;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { angles } from \"../Constants/Angles\";\r\nimport ShipToFire from \"../ShipsToFire\";\r\nimport { appState } from \"../State/Store\";\r\n\r\n/**\r\n * Module:          firstEnemyOccasionalDown\r\n * Responsibility:  First enemy shoots a bullet downs on occasion.\r\n */\r\n\r\nexport default function firstEnemyOccasionalDown(): ShipToFire[] {\r\n    const {\r\n        enemies: enemyState,\r\n    } = appState().enemyLevelState;\r\n\r\n    const returnValue: ShipToFire[] = [];\r\n\r\n    const lastEnemy = enemyState[enemyState.length - 1];\r\n\r\n    if (lastEnemy !== undefined) {\r\n        const rnd = Math.ceil(Math.random() * 20);\r\n        if (rnd === 1) {\r\n            returnValue.push({ enemy: lastEnemy, angle: angles.down });\r\n        }\r\n    }\r\n\r\n    return returnValue;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          MaxFiveDiagonal\r\n * Responsibility:  Provides 5 enemies to fire.\r\n */\r\n\r\nimport { angles } from \"../Constants/Angles\";\r\nimport Guard from \"../Guard\";\r\nimport ShipToFire from \"../ShipsToFire\";\r\nimport { EnemyState } from \"../State/EnemyLevel/EnemyState\";\r\nimport { appState } from \"../State/Store\";\r\nimport { Angle } from \"../Types\";\r\nimport { calculateAngle, calculateAngleDifference } from \"../Utility/Geometry\";\r\nimport { GetShipsReadyToFire } from \"./GetShipsReadyToFire\";\r\n\r\nconst maxBullets = 5;\r\n\r\ntype Candidates = Array<{ enemy: EnemyState, angleDifference: number, angle: number }>;\r\n\r\n/**\r\n * A function that selects the orbs that should fire.\r\n * @param {number} tick. Current tick\r\n */\r\nexport default function maxFiveDiagonal(tick: number): ShipToFire[] {\r\n\r\n    const {\r\n        enemyLevelState: { bullets, enemies }\r\n    } = appState();\r\n\r\n    const returnValue: ShipToFire[] = [];\r\n    const bulletsToFire = maxBullets - bullets.length;\r\n\r\n    if (bulletsToFire === 0) {\r\n        return returnValue;\r\n    }\r\n\r\n    const candidates = getBestCandiates(tick);\r\n\r\n    if (candidates.length === 0) {\r\n        return returnValue;\r\n    }\r\n\r\n    for (let b = 0; b < bulletsToFire; b++) {\r\n\r\n        let index = b;\r\n\r\n        // If the number of bullets is more than the candidates the best\r\n        // Candidate gets to fire.\r\n        if (candidates.length <= b) {\r\n            index = 0;\r\n        }\r\n\r\n        const candiate = candidates[index];\r\n        const { enemy, angle } = candiate;\r\n\r\n        const queuedTofire = returnValue.find((e) => e.enemy.enemyId === enemy.enemyId) !== undefined;\r\n        const mayFire = !bullets.some((bullet) => bullet.owner === enemy.enemyId) || enemies.length < maxBullets;\r\n\r\n        if (!queuedTofire && mayFire) {\r\n            returnValue.push({ enemy, angle });\r\n        }\r\n    }\r\n\r\n    return returnValue;\r\n}\r\n\r\n/**\r\n * Returns candicates for firing.\r\n */\r\nfunction getBestCandiates(tick: number): Candidates {\r\n\r\n    const {\r\n        playerState\r\n    } = appState();\r\n\r\n    // To determine which enemies have the best change of hitting\r\n    // the player we calculate difference between the angle at which the\r\n    // enemy will fire vs the angle towards the player.\r\n    const candidates: Candidates = [];\r\n\r\n    const enemies = GetShipsReadyToFire(tick);\r\n\r\n    let above = 0;\r\n    let below = 0;\r\n    for (const enemy of enemies) {\r\n        const center = enemy.centerLocation;\r\n\r\n        if (center) {\r\n            const angleToPlayer = calculateAngle(center.left, center.top, playerState.left, playerState.top);\r\n            const angle = getBestAngle(enemy);\r\n\r\n            if (center.top > playerState.top) {\r\n                below += 1;\r\n            } else {\r\n                above += 1;\r\n            }\r\n\r\n            if (angle !== undefined && angleToPlayer !== undefined) {\r\n                const angleDifference = calculateAngleDifference(angle, angleToPlayer);\r\n                candidates.push({ enemy, angleDifference, angle });\r\n            }\r\n        }\r\n    }\r\n\r\n    // If the player is below the orbs, the ones with the lowest angle difference have the best shot\r\n    // If the player is above the orbs, the situation is revesed.\r\n    const sortFunction = above > below ? (a: number, b: number) => a < b : (a: number, b: number) => a > b;\r\n\r\n    candidates.sort((e1, e2) => {\r\n        if (sortFunction(e1.angleDifference, e2.angleDifference)) {\r\n            return -1;\r\n        } else {\r\n            return 1;\r\n        }\r\n    });\r\n\r\n    return candidates;\r\n}\r\n\r\n/**\r\n * Retuns the best angle for an enemy.\r\n * @param {EnemyState} enemy. Single enemy.\r\n */\r\nfunction getBestAngle(enemy: EnemyState): Angle {\r\n\r\n    const {\r\n        playerState,\r\n        enemyLevelState: { enemies }\r\n    } = appState();\r\n\r\n    // do nothin when the player is dead.\r\n    if (!Guard.isPlayerAlive(playerState)) {\r\n        return undefined;\r\n    }\r\n\r\n    const { hitboxes } = playerState;\r\n\r\n    // Increase the change the orb enemy will fire down as its numbers are reduced.\r\n    const rnd = Math.ceil(Math.random() * enemies.length / 1.5);\r\n    const canFireDown = rnd === 1;\r\n\r\n    if (canFireDown) {\r\n        const {\r\n            centerLocation,\r\n        } = enemy;\r\n\r\n        if (centerLocation !== undefined) {\r\n            // Check if it makes sense for the orb to fire down. If not, it'll pick one of its diagonal angles.\r\n            if (centerLocation.left >= hitboxes.middle.left && centerLocation.left <= hitboxes.middle.right) {\r\n                return angles.down;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (enemy.offsetLeft < hitboxes.middle.left) {\r\n        return angles.rightdown;\r\n    } else {\r\n        return angles.leftdown;\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { GameLocation } from \"../Models/GameLocation\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\n\r\n/**\r\n * Module:          PistonSpawnLocations\r\n * Responsibility:  Returns the Piston spawn locations.\r\n */\r\n\r\nconst {\r\n    gameField,\r\n    pixelSize,\r\n} = dimensionProvider();\r\n\r\nexport default function elevenInALine(top: number): GameLocation[] {\r\n    const locations: GameLocation[] = [];\r\n    let left = gameField.left + pixelSize * 18;\r\n    const spacing = pixelSize * 12;\r\n\r\n    for (let i = 0; i < 11; i++) {\r\n\r\n        const value = {\r\n            left,\r\n            top,\r\n        };\r\n\r\n        left += spacing;\r\n\r\n        locations.push(value);\r\n    }\r\n\r\n    return locations;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { Locations } from \"../Constants/Constants\";\r\nimport { GameLocation } from \"../Models/GameLocation\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport { getRandomLocation } from \"../Utility/Location\";\r\n\r\n/**\r\n * Module:          GetRandomSpawnLocations\r\n * Responsibility:  Returns Random spawn locations within the top and bottom limit.\r\n */\r\n\r\nconst {\r\n    gameField,\r\n    pixelSize\r\n} = dimensionProvider();\r\n\r\nexport default function GetRandomSpawnLocations(spawnCount: number, maxTop: number, maxBottom: number): GameLocation[] {\r\n    const locations: GameLocation[] = [];\r\n    const outerLeft = gameField.left;\r\n    const right = gameField.right - pixelSize * 3;\r\n\r\n    for (let i = 0; i < spawnCount; i++) {\r\n        const newLocation = getRandomLocation(right, outerLeft, maxBottom, maxTop);\r\n        locations.push(newLocation);\r\n    }\r\n\r\n    return locations;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { GameLocation } from \"../Models/GameLocation\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\n\r\n/**\r\n * Module:          Provides the locations for enemies that start in a grid of 7 / 6 / 7\r\n */\r\n\r\nconst {\r\n    pixelSize,\r\n    gameField,\r\n} = dimensionProvider();\r\n\r\nconst topStart = pixelSize * 9;\r\nconst verticalSpacing = pixelSize * 8;\r\n\r\nconst firstAndThirdRowLeftStart = 30;\r\nconst secondRowLeftStart = 40;\r\nconst firstAndSecondRowSpacing = 16;\r\nconst secondRowSpacing = 16;\r\n\r\nexport default function sevenSixSevnrGridProvider(): GameLocation[] {\r\n    const returnValue: GameLocation[] = [];\r\n\r\n    let top = topStart;\r\n\r\n    // Top row.\r\n    for (let i = 0; i < 7; i++) {\r\n        returnValue.push({\r\n            left: (firstAndThirdRowLeftStart * pixelSize) + firstAndSecondRowSpacing * i * pixelSize,\r\n            top: gameField.top + top,\r\n        });\r\n    }\r\n\r\n    top += verticalSpacing;\r\n\r\n    // Second.\r\n    for (let i = 0; i < 6; i++) {\r\n        returnValue.push({\r\n            left: (secondRowLeftStart * pixelSize) + secondRowSpacing * i * pixelSize,\r\n            top: gameField.top + top,\r\n        });\r\n    }\r\n\r\n    top += verticalSpacing;\r\n\r\n    // Third row\r\n    for (let i = 0; i < 7; i++) {\r\n        returnValue.push({\r\n            left: (firstAndThirdRowLeftStart * pixelSize) + firstAndSecondRowSpacing * i * pixelSize,\r\n            top: gameField.top + top,\r\n        });\r\n    }\r\n\r\n    return returnValue;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseEnemy from \"../../Base/BaseEnemy\";\r\nimport BaseFrameProvider from \"../../Base/BaseFrameProvider\";\r\nimport CGAColors from \"../../Constants/CGAColors\";\r\nimport ILocationProvider from \"../../Interfaces/ILocationProvider\";\r\nimport { ExplosionProviderFunction, OffsetFramesProviderFunction } from \"../../Types\";\r\nimport Mutators from \"../../Utility/FrameMutators\";\r\nimport { Points } from \"../../Constants/Constants\";\r\n\r\n/**\r\n * Module:          AsteroidEnemy\r\n * Responsibility:  An asteroid. A piece of rock really.\r\n */\r\n\r\nexport class AsteroidEnemy extends BaseEnemy {\r\n\r\n    /**\r\n     * The astroid is the only enem that uses hitpoints. It starts with 4.\r\n     */\r\n    private hitpoints = 4;\r\n\r\n    constructor(\r\n        frameChangeTime: number,\r\n        getOffsetFrames: OffsetFramesProviderFunction,\r\n        getExplosion: ExplosionProviderFunction,\r\n        locationProvider: ILocationProvider,\r\n        frameProvider: BaseFrameProvider) {\r\n        super(frameChangeTime,\r\n            getOffsetFrames,\r\n            getExplosion,\r\n            locationProvider,\r\n            frameProvider);\r\n\r\n        Mutators.Frame.setColor(this.explosion.explosionCenterFrame, CGAColors.lightRed);\r\n        this.explosion.particleFrames.forEach((pf) => Mutators.Frame.setColor(pf, CGAColors.lightRed));\r\n    }\r\n\r\n    /**\r\n     * Returns points for this enemy.\r\n     * @returns {number}. Points.\r\n     */\r\n    public getPoints(): number {\r\n        return Points.asteroid;\r\n    }\r\n\r\n    /**\r\n     * Returns the remaining hitpoints of the asteroid.\r\n     * @returns {number}. Remaining hitpoints.\r\n     */\r\n\r\n    public getHitpoints(): number {\r\n        return this.hitpoints;\r\n    }\r\n\r\n    /**\r\n     * Reduces the remaining hitpoints by 1. Also sets the next frame to\r\n     * make it appear as if the asteroid is getting damager.\r\n     */\r\n    public recudeHitpoints(): void {\r\n        this.hitpoints--;\r\n        // A reduction in hitpoints shows the next frame. This makes it\r\n        // appear as if the asteroid is getting damaged.\r\n        this.frameProvider.getNextFrame();\r\n    }\r\n\r\n    /**\r\n     * Frame change handler.\r\n     */\r\n    protected onFrameChange(): void {\r\n\r\n        // The asteroid is an odd duck here. It doesn't change frames to be animated\r\n        // but to show damage to it.\r\n        // So, we return the current frame and change the frame when the astroid is hit.\r\n        const newFrame = this.frameProvider.getCurrentFrame();\r\n        Mutators.Frame.convertHexToCGA(newFrame);\r\n        this.currentFrame = newFrame;\r\n    }\r\n\r\n    /**\r\n     * Not implemented.\r\n     */\r\n    public beforeDispatch(): void {\r\n        // Not needed\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { OffsetFrames } from \"../../Models/OffsetFrames\";\r\nimport { getMaximumFrameDimensions } from \"../../Utility/Frame\";\r\n\r\n/**\r\n * Module:          GetAsteroidOffsetFrames\r\n * Responsibility:  Returns the requires\r\n */\r\n\r\nexport function getAsteroidOffsetFrames(): OffsetFrames {\r\n    const resource = {\r\n        frames: [\r\n            [\r\n                [\"0\", \"0\", \"6\", \"6\", \"0\", \"0\"],\r\n                [\"0\", \"6\", \"6\", \"6\", \"6\", \"0\"],\r\n                [\"6\", \"6\", \"6\", \"6\", \"6\", \"6\"],\r\n                [\"6\", \"6\", \"6\", \"6\", \"6\", \"6\"],\r\n                [\"0\", \"6\", \"6\", \"6\", \"6\", \"0\"],\r\n                [\"0\", \"0\", \"6\", \"6\", \"0\", \"0\"],\r\n            ],\r\n            [\r\n                [\"0\", \"0\", \"6\", \"6\", \"0\", \"0\"],\r\n                [\"0\", \"6\", \"6\", \"6\", \"6\", \"0\"],\r\n                [\"6\", \"6\", \"C\", \"C\", \"6\", \"6\"],\r\n                [\"6\", \"6\", \"C\", \"C\", \"6\", \"6\"],\r\n                [\"0\", \"6\", \"6\", \"6\", \"6\", \"0\"],\r\n                [\"0\", \"0\", \"6\", \"6\", \"0\", \"0\"],\r\n            ],\r\n            [\r\n                [\"0\", \"0\", \"6\", \"6\", \"0\", \"0\"],\r\n                [\"0\", \"6\", \"C\", \"C\", \"6\", \"0\"],\r\n                [\"6\", \"C\", \"C\", \"C\", \"C\", \"6\"],\r\n                [\"6\", \"C\", \"C\", \"C\", \"C\", \"6\"],\r\n                [\"0\", \"6\", \"C\", \"C\", \"6\", \"0\"],\r\n                [\"0\", \"0\", \"6\", \"6\", \"0\", \"0\"],\r\n            ], [\r\n                [\"0\", \"0\", \"C\", \"C\", \"0\", \"0\"],\r\n                [\"0\", \"C\", \"C\", \"C\", \"C\", \"0\"],\r\n                [\"C\", \"C\", \"C\", \"C\", \"C\", \"C\"],\r\n                [\"C\", \"C\", \"C\", \"C\", \"C\", \"C\"],\r\n                [\"0\", \"C\", \"C\", \"C\", \"C\", \"0\"],\r\n                [\"0\", \"0\", \"C\", \"C\", \"0\", \"0\"],\r\n            ]\r\n        ],\r\n        offSets: [],\r\n        maxSizes: { width: 0, height: 0 }\r\n    };\r\n\r\n    resource.maxSizes = getMaximumFrameDimensions(resource.frames);\r\n\r\n    return resource;\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { OffsetFrames } from \"../../Models/OffsetFrames\";\r\nimport { getMaximumFrameDimensions } from \"../../Utility/Frame\";\r\n\r\n/**\r\n * Module:          GetBalloonOffsetFrames\r\n * Responsibility:  Define the offset frames of the Balloon enemy.\r\n */\r\n\r\nexport default function getBalloonOffsetFrames(): OffsetFrames {\r\n    const resource = {\r\n        frames: [\r\n            [\r\n                [\"0\", \"E\", \"E\", \"E\", \"E\", \"0\"],\r\n                [\"A\", \"E\", \"E\", \"E\", \"E\", \"A\"],\r\n                [\"A\", \"E\", \"E\", \"E\", \"E\", \"A\"],\r\n                [\"0\", \"E\", \"E\", \"E\", \"E\", \"0\"],\r\n                [\"0\", \"0\", \"E\", \"E\", \"0\", \"0\"],\r\n            ],\r\n            [\r\n                [\"0\", \"E\", \"E\", \"E\", \"E\", \"0\"],\r\n                [\"A\", \"A\", \"E\", \"E\", \"E\", \"E\"],\r\n                [\"A\", \"A\", \"E\", \"E\", \"E\", \"E\"],\r\n                [\"0\", \"E\", \"E\", \"E\", \"E\", \"0\"],\r\n                [\"0\", \"0\", \"E\", \"E\", \"0\", \"0\"],\r\n            ],\r\n            [\r\n                [\"0\", \"E\", \"E\", \"E\", \"E\", \"0\"],\r\n                [\"E\", \"A\", \"A\", \"E\", \"E\", \"E\"],\r\n                [\"E\", \"A\", \"A\", \"E\", \"E\", \"E\"],\r\n                [\"0\", \"E\", \"E\", \"E\", \"E\", \"0\"],\r\n                [\"0\", \"0\", \"E\", \"E\", \"0\", \"0\"],\r\n            ],\r\n            [\r\n                [\"0\", \"E\", \"E\", \"E\", \"E\", \"0\"],\r\n                [\"E\", \"E\", \"A\", \"A\", \"E\", \"E\"],\r\n                [\"E\", \"E\", \"A\", \"A\", \"E\", \"E\"],\r\n                [\"0\", \"E\", \"E\", \"E\", \"E\", \"0\"],\r\n                [\"0\", \"0\", \"E\", \"E\", \"0\", \"0\"],\r\n            ],\r\n            [\r\n                [\"0\", \"E\", \"E\", \"E\", \"E\", \"0\"],\r\n                [\"E\", \"E\", \"E\", \"A\", \"A\", \"E\"],\r\n                [\"E\", \"E\", \"E\", \"A\", \"A\", \"E\"],\r\n                [\"0\", \"E\", \"E\", \"E\", \"E\", \"0\"],\r\n                [\"0\", \"0\", \"E\", \"E\", \"0\", \"0\"],\r\n            ],\r\n            [\r\n                [\"0\", \"E\", \"E\", \"E\", \"E\", \"0\"],\r\n                [\"E\", \"E\", \"E\", \"E\", \"A\", \"A\"],\r\n                [\"E\", \"E\", \"E\", \"E\", \"A\", \"A\"],\r\n                [\"0\", \"E\", \"E\", \"E\", \"E\", \"0\"],\r\n                [\"0\", \"0\", \"E\", \"E\", \"0\", \"0\"],\r\n            ],\r\n        ],\r\n        offSets: [],\r\n        maxSizes: { width: 0, height: 0 }\r\n    };\r\n\r\n    resource.maxSizes = getMaximumFrameDimensions(resource.frames);\r\n\r\n    return resource;\r\n}\r\n","\r\n/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { angles } from \"../../Constants/Angles\";\r\nimport Explosion from \"../../Models/Explosion\";\r\n\r\n/**\r\n * Module:          Bat explosion.\r\n */\r\n\r\nexport default function getBatExplosiom(): Explosion {\r\n    const explosion: Explosion = {\r\n        explosionCenterFrame: [[\"0\"]],\r\n        particleFrames: [\r\n            [\r\n                [\"0\", \"0\", \"V\", \"V\", \"V\", \"0\", \"0\"],\r\n                [\"0\", \"V\", \"0\", \"0\", \"0\", \"V\", \"0\"],\r\n                [\"V\", \"0\", \"0\", \"0\", \"0\", \"0\", \"V\"],\r\n            ],\r\n        ],\r\n        angles: [angles.up],\r\n        particleFrameIndexes: [0],\r\n        speed: 10,\r\n        acceleration: 1.00,\r\n        explosionCenterDelay: 0,\r\n        speeds: [], // not used, all particles travel at the same speed\r\n        useSpeed: true,\r\n    };\r\n\r\n    return explosion;\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { OffsetFrames } from \"../../Models/OffsetFrames\";\r\nimport { getMaximumFrameDimensions } from \"../../Utility/Frame\";\r\n\r\n/**\r\n * Module:          GetBatOffsetFrames\r\n * Responsibility:  Define the frames of the Bats enemy.\r\n */\r\n\r\nexport default function getBatOffsetFrames(): OffsetFrames {\r\n    const resource = {\r\n        frames: [\r\n            [\r\n                [\"V\", \"0\", \"0\", \"0\", \"0\", \"0\", \"V\"],\r\n                [\"0\", \"V\", \"0\", \"0\", \"0\", \"V\", \"0\"],\r\n                [\"0\", \"0\", \"V\", \"V\", \"V\", \"0\", \"0\"],\r\n            ],\r\n            [\r\n                [\"0\", \"0\", \"V\", \"V\", \"V\", \"0\", \"0\"],\r\n                [\"0\", \"V\", \"0\", \"0\", \"0\", \"V\", \"0\"],\r\n                [\"V\", \"0\", \"0\", \"0\", \"0\", \"0\", \"V\"],\r\n            ],\r\n        ],\r\n        offSets: [\r\n            {\r\n                top: -2,\r\n                left: 0\r\n            }\r\n        ],\r\n        maxSizes: { width: 0, height: 0 }\r\n    };\r\n\r\n    resource.maxSizes = getMaximumFrameDimensions(resource.frames);\r\n\r\n    return resource;\r\n}\r\n","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseEnemy from \"../../Base/BaseEnemy\";\r\nimport BaseFrameProvider from \"../../Base/BaseFrameProvider\";\r\nimport CGAColors from \"../../Constants/CGAColors\";\r\nimport TickHandler from \"../../Handlers/TickHandler\";\r\nimport ILocationProvider from \"../../Interfaces/ILocationProvider\";\r\nimport { ExplosionProviderFunction, Frame, OffsetFramesProviderFunction } from \"../../Types\";\r\nimport { getRandomArrayElement } from \"../../Utility/Array\";\r\nimport Mutators from \"../../Utility/FrameMutators\";\r\nimport { Points } from \"../../Constants/Constants\";\r\n\r\n/**\r\n * Module:          Bird enemy\r\n * Responsibility:  Defines the behaviour of the bird enemy first seen in level 1.\r\n */\r\n\r\nconst colors = [CGAColors.lightMagenta, CGAColors.yellow, CGAColors.lightCyan, CGAColors.lightRed];\r\n\r\nexport default class BirdEnemy extends BaseEnemy {\r\n\r\n    /**\r\n     * Hanels color changes.\r\n     */\r\n    private colorTickHandler: TickHandler;\r\n\r\n    /**\r\n     * Creates the object.\r\n     */\r\n    constructor(\r\n        frameChangeTime: number,\r\n        getOffsetFrames: OffsetFramesProviderFunction,\r\n        getExplosion: ExplosionProviderFunction,\r\n        locationProvider: ILocationProvider,\r\n        frameProvider: BaseFrameProvider) {\r\n        super(\r\n            frameChangeTime,\r\n            getOffsetFrames,\r\n            getExplosion,\r\n            locationProvider,\r\n            frameProvider);\r\n\r\n        this.colorTickHandler = new TickHandler(40, () => this.onColorChange());\r\n\r\n        Mutators.Frame.setColor(this.explosion.explosionCenterFrame, CGAColors.white);\r\n        this.explosion.particleFrames.forEach((pf) => Mutators.Frame.setColor(pf, CGAColors.white));\r\n    }\r\n\r\n    /**\r\n     * change the birds color before dispatch.\r\n     * @param {number} tick. Current tick\r\n     */\r\n    public beforeDispatch(tick: number): void {\r\n\r\n        this.colorTickHandler.tick(tick);\r\n    }\r\n\r\n    /**\r\n     * Returns the points for the bird.\r\n     * @returns {number}. Points rewarded when the BirdEnemy is destroyed.\r\n     */\r\n    public getPoints(): number {\r\n        return Points.bird;\r\n    }\r\n\r\n    /**\r\n     * Called by a TickHandler when the bird should change color.\r\n     */\r\n    private onColorChange(): void {\r\n        const currentFrame = this.frameProvider.getCurrentFrame();\r\n        this.setCurrentFrameColor(currentFrame);\r\n    }\r\n\r\n    /**\r\n     * Sets the current's frame color\r\n     * @param {Frame} frame. Frame to set the color on.\r\n     */\r\n    private setCurrentFrameColor(frame: Frame) {\r\n        Mutators.Frame.setColor(frame, getRandomArrayElement(colors));\r\n        this.currentFrame = frame;\r\n    }\r\n\r\n    /**\r\n     * Changes the frame of the OrbEnemy. Also ensures the new frame is given colors.\r\n     */\r\n    protected onFrameChange(): void {\r\n        const nextFrame = this.frameProvider.getNextFrame();\r\n        this.setCurrentFrameColor(nextFrame);\r\n    }\r\n}","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { OffsetFrames } from \"../../Models/OffsetFrames\";\r\nimport { getMaximumFrameDimensions } from \"../../Utility/Frame\";\r\n\r\n/**\r\n * Module:          GetBirdOffsetFrames\r\n * Responsibility:  Define animation frames for the bird enemy.\r\n */\r\n\r\nexport default function getBirdOffsetFrames(): OffsetFrames {\r\n    const resource: OffsetFrames = {\r\n        frames: [\r\n            [\r\n                [\"0\", \"V\", \"0\", \"V\", \"0\"],\r\n                [\"V\", \"0\", \"V\", \"0\", \"V\"],\r\n                [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n            ],\r\n            [\r\n                [\"0\", \"V\", \"V\", \"0\", \"V\", \"V\", \"0\"],\r\n                [\"V\", \"0\", \"0\", \"V\", \"0\", \"0\", \"V\"],\r\n                [\"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\"],\r\n            ],\r\n            [\r\n                [\"V\", \"V\", \"V\", \"0\", \"V\", \"V\", \"V\"],\r\n                [\"0\", \"0\", \"0\", \"V\", \"0\", \"0\", \"0\"],\r\n            ],\r\n            [\r\n                [\"V\", \"0\", \"0\", \"0\", \"0\", \"0\", \"V\"],\r\n                [\"0\", \"V\", \"V\", \"0\", \"V\", \"V\", \"0\"],\r\n                [\"0\", \"0\", \"0\", \"V\", \"0\", \"0\", \"0\"],\r\n            ],\r\n        ],\r\n        offSets: [\r\n            {\r\n                top: 1,\r\n                left: 1,\r\n            },\r\n            {\r\n                top: 1,\r\n                left: 0,\r\n            },\r\n            {\r\n                top: 1,\r\n                left: 0,\r\n            },\r\n            {\r\n                top: 0,\r\n                left: 0,\r\n            }\r\n        ],\r\n        maxSizes: { width: 0, height: 0 }\r\n    };\r\n\r\n    resource.maxSizes = getMaximumFrameDimensions(resource.frames);\r\n\r\n    return resource;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { OffsetFrames } from \"../../Models/OffsetFrames\";\r\nimport { getMaximumFrameDimensions } from \"../../Utility/Frame\";\r\n\r\n/**\r\n * Module:          GetBoatOffsetFrames\r\n * Responsibility:  Define the frames of the Boat enemy.\r\n */\r\n\r\nexport default function getBoatOffsetFrames(): OffsetFrames {\r\n    const resource = {\r\n        frames: [\r\n            [\r\n                [\"E\", \"0\", \"C\", \"C\", \"C\", \"C\", \"0\", \"0\"],\r\n                [\"0\", \"E\", \"0\", \"0\", \"A\", \"A\", \"A\", \"0\"],\r\n                [\"E\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"A\"],\r\n                [\"0\", \"E\", \"0\", \"0\", \"A\", \"A\", \"A\", \"0\"],\r\n                [\"E\", \"0\", \"C\", \"C\", \"C\", \"C\", \"0\", \"0\"],\r\n            ],\r\n            [\r\n                [\"0\", \"E\", \"C\", \"C\", \"C\", \"C\", \"0\", \"0\"],\r\n                [\"E\", \"0\", \"0\", \"0\", \"A\", \"A\", \"A\", \"0\"],\r\n                [\"0\", \"E\", \"0\", \"0\", \"0\", \"0\", \"0\", \"A\"],\r\n                [\"E\", \"0\", \"0\", \"0\", \"A\", \"A\", \"A\", \"0\"],\r\n                [\"0\", \"E\", \"C\", \"C\", \"C\", \"C\", \"0\", \"0\"],\r\n            ]\r\n\r\n        ],\r\n        offSets: [\r\n            {\r\n                left: 0,\r\n                top: 0,\r\n            },\r\n            {\r\n                left: 0,\r\n                top: -1,\r\n            },\r\n            {\r\n                left: 0,\r\n                top: -2,\r\n            },\r\n            {\r\n                left: 0,\r\n                top: -3,\r\n            },\r\n            {\r\n                left: 0,\r\n                top: -2,\r\n            },\r\n            {\r\n                left: 0,\r\n                top: -1\r\n            },\r\n            {\r\n                left: 0,\r\n                top: 0\r\n            }\r\n        ],\r\n        maxSizes: { width: 0, height: 0 }\r\n    };\r\n\r\n    resource.frames = [\r\n        ...resource.frames,\r\n        ...resource.frames,\r\n        ...resource.frames,\r\n    ];\r\n\r\n    resource.maxSizes = getMaximumFrameDimensions(resource.frames);\r\n    return resource;\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { OffsetFrames } from \"../../Models/OffsetFrames\";\r\nimport { Frame } from \"../../Types\";\r\nimport { getMaximumFrameDimensions } from \"../../Utility/Frame\";\r\n\r\n/**\r\n * Module:          GetCloakingOrbOffsetFrames\r\n * Responsibility:  Define the frames for the Cloakingorb enemy\r\n */\r\n\r\nexport default function getCloakingOrbOffsetFrames(): OffsetFrames {\r\n\r\n    const uniqueFrames: Frame[] = [\r\n        [ // Fully visible frame. Added two times for a total of three. This ensures the orb is visible for ~0.5 second.\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"0\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\"],\r\n            [\"0\", \"V\", \"V\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\"],\r\n            [\"0\", \"V\"],\r\n            [\"V\", \"0\"],\r\n            [\"0\", \"V\"],\r\n        ],\r\n        [\r\n            [\"0\", \"V\"],\r\n            [\"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"0\"], // Invisible frame 1. Does not have a hitbox.\r\n        ],\r\n        [\r\n            [\"0\"] // Invisible frame 2. Also does not have a hitbox.\r\n        ]\r\n    ];\r\n\r\n    const resource: OffsetFrames = {\r\n        frames: [],\r\n        offSets: [\r\n            { left: 0, top: 0 },\r\n            { left: 0, top: 0 },\r\n            { left: 0, top: 0 },\r\n            { left: 0, top: 0 },\r\n            { left: 1, top: 0 },\r\n            { left: 1, top: 1 },\r\n        ],\r\n        maxSizes: { width: 0, height: 0 }\r\n    };\r\n\r\n    // We'll add frame 0 3 times to lenghen the amount of time the cloaking orb is in its visible state.\r\n    resource.frames.push(uniqueFrames[0]); // 1\r\n    resource.frames.push(uniqueFrames[0]); // 2\r\n    uniqueFrames.forEach((f) => resource.frames.push(f)); // 3 + rest.\r\n\r\n    resource.maxSizes = getMaximumFrameDimensions(resource.frames);\r\n\r\n    return resource;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { OffsetFrames } from \"../../Models/OffsetFrames\";\r\nimport { getMaximumFrameDimensions } from \"../../Utility/Frame\";\r\n\r\n/**\r\n * Module:          GetCrapOffsetFrames\r\n * Responsibility:  Define the frames of the Crap enemy.\r\n */\r\n\r\nexport default function getCrapOffsetFrames(): OffsetFrames {\r\n    const resource = {\r\n        frames: [\r\n            [\r\n                [\"0\", \"E\", \"E\", \"E\", \"0\"],\r\n                [\"E\", \"1\", \"1\", \"1\", \"E\"],\r\n                [\"E\", \"F\", \"1\", \"F\", \"E\"],\r\n                [\"E\", \"1\", \"1\", \"1\", \"E\"],\r\n                [\"E\", \"E\", \"0\", \"E\", \"E\"],\r\n            ],\r\n            [\r\n                [\"0\", \"E\", \"E\", \"E\", \"0\"],\r\n                [\"E\", \"1\", \"1\", \"1\", \"E\"],\r\n                [\"E\", \"F\", \"1\", \"F\", \"E\"],\r\n                [\"E\", \"1\", \"1\", \"1\", \"E\"],\r\n                [\"0\", \"E\", \"0\", \"E\", \"0\"],\r\n                [\"E\", \"0\", \"0\", \"0\", \"E\"],\r\n            ], [\r\n                [\"0\", \"E\", \"E\", \"E\", \"0\"],\r\n                [\"E\", \"1\", \"1\", \"1\", \"E\"],\r\n                [\"E\", \"F\", \"1\", \"F\", \"E\"],\r\n                [\"E\", \"1\", \"1\", \"1\", \"E\"],\r\n                [\"0\", \"E\", \"0\", \"E\", \"0\"],\r\n                [\"0\", \"E\", \"0\", \"E\", \"0\"],\r\n            ], [\r\n                [\"0\", \"E\", \"E\", \"E\", \"0\"],\r\n                [\"E\", \"1\", \"1\", \"1\", \"E\"],\r\n                [\"E\", \"F\", \"1\", \"F\", \"E\"],\r\n                [\"E\", \"1\", \"1\", \"1\", \"E\"],\r\n                [\"0\", \"E\", \"E\", \"E\", \"0\"],\r\n            ],\r\n        ],\r\n        offSets: [\r\n            {\r\n                left: -2,\r\n                top: 0,\r\n            },\r\n            {\r\n                left: 0,\r\n                top: 0\r\n            },\r\n            {\r\n                left: 2,\r\n                top: 0,\r\n            },\r\n            {\r\n                left: 1,\r\n                top: 0,\r\n            }\r\n        ],\r\n        maxSizes: { width: 0, height: 0 }\r\n    };\r\n\r\n    resource.maxSizes = getMaximumFrameDimensions(resource.frames);\r\n\r\n    // Double the frames. The first frames wobble, the last frames do not.\r\n    resource.frames = [\r\n        ...resource.frames,\r\n        ...resource.frames.reverse(),\r\n    ];\r\n\r\n    return resource;\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseEnemy from \"../Base/BaseEnemy\";\r\nimport BaseFrameProvider from \"../Base/BaseFrameProvider\";\r\nimport ILocationProvider from \"../Interfaces/ILocationProvider\";\r\nimport EnemyColorOptions from \"../Models/EnemyColorOptions\";\r\nimport { ExplosionProviderFunction, OffsetFramesProviderFunction } from \"../Types\";\r\nimport Mutators from \"../Utility/FrameMutators\";\r\n\r\n/**\r\n * Module:          DefaultEnemy\r\n * Responsibility:  Generic enemy class for enemies that have static colors and completely rely on a frame provider\r\n *                  for animation.\r\n */\r\n\r\nexport default class DefaultEnemy extends BaseEnemy {\r\n\r\n    /**\r\n     * Enemy point worth.\r\n     */\r\n    private points: number;\r\n\r\n    /**\r\n     * The enemy's color. Only used if the frame has 'V' colors and the colors do not change.\r\n     * e.g. the robot enemy.\r\n     */\r\n    private color?: string;\r\n\r\n    constructor(\r\n        points: number,\r\n        frameChangeTime: number,\r\n        getFrames: OffsetFramesProviderFunction,\r\n        getExplosion: ExplosionProviderFunction,\r\n        locationProvider: ILocationProvider,\r\n        frameProvider: BaseFrameProvider,\r\n        colorOptions?: EnemyColorOptions) {\r\n        super(\r\n            frameChangeTime,\r\n            getFrames,\r\n            getExplosion,\r\n            locationProvider,\r\n            frameProvider);\r\n\r\n        this.points = points;\r\n\r\n        // Explosions CAN be different in coloring. If a color is passed, we update the color, if not we'll convert from hex to CGA\r\n        if (colorOptions !== undefined && colorOptions.explosionColor !== undefined) {\r\n            Mutators.Frame.setColor(this.explosion.explosionCenterFrame, colorOptions.explosionColor);\r\n        } else {\r\n            Mutators.Frame.convertHexToCGA(this.explosion.explosionCenterFrame);\r\n        }\r\n\r\n        // Same for particles.\r\n        if (colorOptions !== undefined && colorOptions.explosionParticleColor !== undefined) {\r\n            const color = colorOptions.explosionParticleColor;\r\n            this.explosion.particleFrames.forEach((pf) => Mutators.Frame.setColor(pf, color));\r\n        } else {\r\n            this.explosion.particleFrames.forEach((pf) => Mutators.Frame.convertHexToCGA(pf));\r\n        }\r\n\r\n        if (colorOptions !== undefined && colorOptions.varyingEnemyColor) {\r\n            this.color = colorOptions.varyingEnemyColor;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Called when a frame change is required. The Piston frames are all colored at initialisation so we can keep this simple.\r\n     */\r\n    protected onFrameChange(): void {\r\n        const newFrame = this.frameProvider.getNextFrame();\r\n\r\n        // Allow the default enemy to handle enemies that come in varying colors.\r\n        if (this.color === undefined) {\r\n            Mutators.Frame.convertHexToCGA(newFrame);\r\n        } else {\r\n            Mutators.Frame.setColor(newFrame, this.color);\r\n        }\r\n\r\n        this.currentFrame = newFrame;\r\n    }\r\n\r\n    /**\r\n     * Returns the points of the Piston enemy.\r\n     * @returns {number}.\r\n     */\r\n    public getPoints(): number {\r\n        return this.points;\r\n    }\r\n\r\n    /**\r\n     * Not implemented.\r\n     */\r\n    public beforeDispatch(tick: number): void {\r\n        // Does nothing here.\r\n    }\r\n\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseEnemy from \"../../Base/BaseEnemy\";\r\nimport BaseFrameProvider from \"../../Base/BaseFrameProvider\";\r\nimport { Points } from \"../../Constants/Constants\";\r\nimport ILocationDirectionProvider from \"../../Interfaces/ILocationDirectionProvider\";\r\nimport { ExplosionProviderFunction, OffsetFramesProviderFunction } from \"../../Types\";\r\nimport Mutators from \"../../Utility/FrameMutators\";\r\n\r\n/**\r\n * Module:          DevilEnemey\r\n * Responsibility:  Handles the Devil enemny.\r\n */\r\n\r\nexport default class DevilEnemy extends BaseEnemy {\r\n\r\n    /**\r\n     * A location provider than also provides a method that gives the general direction: left or right.\r\n     */\r\n    private locationDirecntionProvider: ILocationDirectionProvider;\r\n\r\n    /**\r\n     * Constuct the devil.\r\n     */\r\n    constructor(\r\n        frameChangeTime: number,\r\n        getFrames: OffsetFramesProviderFunction,\r\n        getExplosion: ExplosionProviderFunction,\r\n        locationProvider: ILocationDirectionProvider,\r\n        frameProvider: BaseFrameProvider) {\r\n        super(\r\n            frameChangeTime,\r\n            getFrames,\r\n            getExplosion,\r\n            locationProvider,\r\n            frameProvider);\r\n\r\n        Mutators.Frame.convertHexToCGA(this.explosion.explosionCenterFrame);\r\n        this.explosion.particleFrames.forEach((pf) => Mutators.Frame.convertHexToCGA(pf));\r\n\r\n        this.locationDirecntionProvider = locationProvider;\r\n    }\r\n\r\n    public beforeDispatch(): void {\r\n        if (this.locationDirecntionProvider.getDirection() === \"left\") {\r\n            // Frame going left is index 0, there's two frames so a get next frames switches to the\r\n            // frame of the devil heading right.\r\n            if (this.frameProvider.getCurrentIndex() !== 0) {\r\n                this.frameProvider.getNextFrame();\r\n            }\r\n        } else if (this.locationDirecntionProvider.getDirection() === \"right\") {\r\n            // Frame going left is index 0, there's two frames so a get next frames switches to the\r\n            // frame of the devil heading right.\r\n            if (this.frameProvider.getCurrentIndex() !== 1) {\r\n                this.frameProvider.getNextFrame();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Called when a frame change is required. The Devil frames are all colored at initialisation so we can keep this simple.\r\n     */\r\n    protected onFrameChange(): void {\r\n        const nextFrame = this.frameProvider.getCurrentFrame();\r\n        Mutators.Frame.convertHexToCGA(nextFrame);\r\n        this.currentFrame = nextFrame;\r\n    }\r\n\r\n    /**\r\n     * Returns the points of the Devil enemy.\r\n     * @returns {number}.\r\n     */\r\n    public getPoints(): number {\r\n        return Points.devil;\r\n    }\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { OffsetFrames } from \"../../Models/OffsetFrames\";\r\nimport { getMaximumFrameDimensions } from \"../../Utility/Frame\";\r\n\r\n/**\r\n * Module:          GetDevilOffsetFrames\r\n * Responsibility:  Define the frames of the Devil enemy.\r\n */\r\n\r\nexport default function getDevilOffsetFrames(): OffsetFrames {\r\n    const resource = {\r\n        frames: [\r\n            [\r\n                [\"0\", \"4\", \"4\", \"0\"],\r\n                [\"4\", \"4\", \"4\", \"4\"],\r\n                [\"A\", \"4\", \"A\", \"4\"],\r\n                [\"4\", \"4\", \"4\", \"4\"],\r\n                [\"4\", \"4\", \"4\", \"4\"],\r\n                [\"4\", \"0\", \"4\", \"0\"],\r\n                [\"4\", \"0\", \"4\", \"0\"],\r\n            ],\r\n            [\r\n                [\"0\", \"4\", \"4\", \"0\"],\r\n                [\"4\", \"4\", \"4\", \"4\"],\r\n                [\"4\", \"A\", \"4\", \"A\"],\r\n                [\"4\", \"4\", \"4\", \"4\"],\r\n                [\"4\", \"4\", \"4\", \"4\"],\r\n                [\"0\", \"4\", \"0\", \"4\"],\r\n                [\"0\", \"4\", \"0\", \"4\"],\r\n            ]\r\n        ],\r\n        offSets: [],\r\n        maxSizes: { width: 0, height: 0}\r\n    };\r\n\r\n    resource.maxSizes = getMaximumFrameDimensions(resource.frames);\r\n\r\n    return resource;\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { OffsetFrames } from \"../../Models/OffsetFrames\";\r\nimport { getMaximumFrameDimensions } from \"../../Utility/Frame\";\r\n\r\n/**\r\n * Module:          GetDiaboloOffsetFrames\r\n * Responsibility:  Define the frames of the diabolo enemy.\r\n */\r\n\r\nexport default function getDiaboloOffsetFrames(): OffsetFrames {\r\n    const resource = {\r\n        frames: [\r\n            [\r\n                [\"9\", \"9\", \"9\", \"9\"],\r\n                [\"9\", \"9\", \"9\", \"9\"],\r\n                [\"4\", \"0\", \"0\", \"0\"],\r\n                [\"4\", \"0\", \"0\", \"0\"],\r\n                [\"9\", \"9\", \"9\", \"9\"],\r\n                [\"9\", \"9\", \"9\", \"9\"],\r\n            ],\r\n            [\r\n                [\"9\", \"9\", \"9\", \"9\"],\r\n                [\"9\", \"9\", \"9\", \"9\"],\r\n                [\"0\", \"4\", \"0\", \"0\"],\r\n                [\"0\", \"4\", \"0\", \"0\"],\r\n                [\"9\", \"9\", \"9\", \"9\"],\r\n                [\"9\", \"9\", \"9\", \"9\"],\r\n            ],\r\n            [\r\n                [\"9\", \"9\", \"9\", \"9\"],\r\n                [\"9\", \"9\", \"9\", \"9\"],\r\n                [\"0\", \"0\", \"4\", \"0\"],\r\n                [\"0\", \"0\", \"4\", \"0\"],\r\n                [\"9\", \"9\", \"9\", \"9\"],\r\n                [\"9\", \"9\", \"9\", \"9\"],\r\n            ],\r\n            [\r\n                [\"9\", \"9\", \"9\", \"9\"],\r\n                [\"9\", \"9\", \"9\", \"9\"],\r\n                [\"0\", \"0\", \"0\", \"4\"],\r\n                [\"0\", \"0\", \"0\", \"4\"],\r\n                [\"9\", \"9\", \"9\", \"9\"],\r\n                [\"9\", \"9\", \"9\", \"9\"],\r\n            ],\r\n        ],\r\n        offSets: [],\r\n        maxSizes: { width: 0, height: 0}\r\n    };\r\n\r\n    resource.maxSizes = getMaximumFrameDimensions(resource.frames);\r\n\r\n    return resource;\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { OffsetFrames } from \"../../Models/OffsetFrames\";\r\nimport { getMaximumFrameDimensions } from \"../../Utility/Frame\";\r\n\r\n/**\r\n * Module:          GetOrbOffsetFrames\r\n * Responsibility:  Define the frames for the orb enemy\r\n */\r\n\r\nexport default function getOrbOffsetFrames(): OffsetFrames {\r\n\r\n    const orbMainFrame = [\r\n        [\"0\", \"V0\", \"V0\", \"0\"],\r\n        [\"V0\", \"V1\", \"V1\", \"V0\"],\r\n        [\"V0\", \"V1\", \"V1\", \"V0\"],\r\n        [\"0\", \"V0\", \"V0\", \"0\"],\r\n    ];\r\n\r\n    const resource: OffsetFrames = {\r\n        frames: [],\r\n        offSets: [\r\n            // Move up\r\n            {\r\n                left: 0,\r\n                top: 0,\r\n            },\r\n            {\r\n                left: 0,\r\n                top: -2,\r\n            },\r\n            {\r\n                left: 0,\r\n                top: -4,\r\n            },\r\n            {\r\n                left: 0,\r\n                top: -6,\r\n            },\r\n            // Move right\r\n            {\r\n                left: 2,\r\n                top: -6,\r\n            },\r\n            {\r\n                left: 4,\r\n                top: -6,\r\n            },\r\n            {\r\n                left: 6,\r\n                top: -6,\r\n            },\r\n            // Move down\r\n            {\r\n                left: 6,\r\n                top: -4,\r\n            },\r\n            {\r\n                left: 6,\r\n                top: -2,\r\n            },\r\n            {\r\n                left: 6,\r\n                top: 0,\r\n            },\r\n            // Move left\r\n            {\r\n                left: 4,\r\n                top: 0,\r\n            },\r\n            {\r\n                left: 2,\r\n                top: 0,\r\n            }\r\n        ],\r\n        maxSizes: { width: 0, height: 0 }\r\n    };\r\n\r\n    resource.offSets.forEach(() => {\r\n        resource.frames.push(orbMainFrame);\r\n    });\r\n\r\n    resource.maxSizes = getMaximumFrameDimensions(resource.frames);\r\n\r\n    return resource;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseEnemy from \"../../Base/BaseEnemy\";\r\nimport BaseFrameProvider from \"../../Base/BaseFrameProvider\";\r\nimport CGAColors from \"../../Constants/CGAColors\";\r\nimport { Locations } from \"../../Constants/Constants\";\r\nimport TickHandler from \"../../Handlers/TickHandler\";\r\nimport ILocationProvider from \"../../Interfaces/ILocationProvider\";\r\nimport dimensionProvider from \"../../Providers/DimensionProvider\";\r\nimport { ExplosionProviderFunction, Frame, OffsetFramesProviderFunction } from \"../../Types\";\r\nimport { getFrameDimensions } from \"../../Utility/Frame\";\r\nimport Mutators from \"../../Utility/FrameMutators\";\r\n\r\n/**\r\n * Module:          OrbEnemy\r\n * Responsibility:  Define behaviour of the orb enemy.\r\n */\r\n\r\n// The orb constantly varies between a specific set of color combinations. This array is used to set them.\r\nconst colors: string[][] = [\r\n    [CGAColors.lightGreen, CGAColors.lightBlue],\r\n    [CGAColors.brown, CGAColors.lightGreen],\r\n    [CGAColors.lightBlue, CGAColors.white],\r\n    [CGAColors.white, CGAColors.brown],\r\n];\r\n\r\nconst {\r\n    gameField\r\n} = dimensionProvider();\r\n\r\nexport default class OrbEnemy extends BaseEnemy {\r\n    /**\r\n     * Handles the color change ticks.\r\n     */\r\n    private colorTickHandler: TickHandler;\r\n\r\n    /**\r\n     * Tracks the current color index.\r\n     */\r\n    private currentColorIndex = 0;\r\n\r\n    /**\r\n     * Construct the enemy.\r\n     */\r\n    constructor(\r\n        frameChangeTime: number,\r\n        getFrames: OffsetFramesProviderFunction,\r\n        getExplosion: ExplosionProviderFunction,\r\n        locationProvider: ILocationProvider,\r\n        frameProvider: BaseFrameProvider) {\r\n        super(\r\n            frameChangeTime,\r\n            getFrames,\r\n            getExplosion,\r\n            locationProvider,\r\n            frameProvider);\r\n\r\n        // We only have one frame in this enemy but its color DOES change. Set the currentFrame to the only available one\r\n        // and sets its color to the first color set so we get a a good render when the enemy first appears.\r\n        this.updateCurrentFrameAndColor(this.frameProvider.getCurrentFrame());\r\n\r\n        Mutators.Frame.setColor(this.explosion.explosionCenterFrame, CGAColors.magenta);\r\n        this.explosion.particleFrames.forEach((pf) => Mutators.Frame.setColor(pf, CGAColors.magenta));\r\n\r\n        this.colorTickHandler = new TickHandler(100, () => this.onColorChange());\r\n    }\r\n\r\n    /**\r\n     * Called by a TickHandler when the bird should change color.\r\n     */\r\n    private onColorChange(): void {\r\n        this.currentColorIndex++;\r\n        if (this.currentColorIndex >= colors.length) {\r\n            this.currentColorIndex = 0;\r\n        }\r\n\r\n        this.updateCurrentFrameAndColor(this.frameProvider.getCurrentFrame());\r\n    }\r\n\r\n    /**\r\n     * Sets the current frame and its color.\r\n     * @param {Frame} frame. A frame.\r\n     */\r\n    private updateCurrentFrameAndColor(frame: Frame): void {\r\n        const currentColor = colors[this.currentColorIndex];\r\n        if (currentColor === undefined) {\r\n            throw new Error(\"Color cannot be undefined.\");\r\n        }\r\n\r\n        Mutators.Frame.setColor(frame, ...currentColor);\r\n        this.currentFrame = frame;\r\n    }\r\n\r\n    /**\r\n     * Changes the frame of the OrbEnemy. Also ensures the new frame is given colors.\r\n     */\r\n    protected onFrameChange(): void {\r\n        const frame = this.frameProvider.getNextFrame();\r\n        this.updateCurrentFrameAndColor(frame);\r\n    }\r\n\r\n    /**\r\n     * Handle some color changes and animation stuff.\r\n     * @param {number} tick;\r\n     */\r\n    public beforeDispatch(tick: number): void {\r\n        this.colorTickHandler.tick(tick);\r\n\r\n        if (this.currentFrame) {\r\n            const { height } = getFrameDimensions(this.currentFrame);\r\n            const { top } = this.locationProvider.getCurrentLocation();\r\n            const offset = top - this.offsetTop;\r\n\r\n            if (this.offsetTop < gameField.top) {\r\n                this.offsetTop = Locations.Orb.maxBottom - offset;\r\n            } else if (this.offsetTop + height > Locations.Orb.maxBottom) {\r\n                this.offsetTop = gameField.top + offset;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the points of this enemy.\r\n     * @returns {number}. The points.\r\n     */\r\n    public getPoints(): number {\r\n        return 200;\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { OffsetFrames } from \"../../Models/OffsetFrames\";\r\nimport { getMaximumFrameDimensions } from \"../../Utility/Frame\";\r\n\r\n/**\r\n * Module:          GetPistonOffsetFrames\r\n * Responsibility:  Define the offset frames of the Piston enemy.\r\n */\r\n\r\nexport default function getPistonOffsetFrames(): OffsetFrames {\r\n    const resource = {\r\n        frames: [\r\n            [\r\n                [\"3\", \"3\", \"3\"],\r\n                [\"C\", \"3\", \"C\"],\r\n                [\"C\", \"C\", \"C\"],\r\n                [\"C\", \"3\", \"C\"],\r\n                [\"0\", \"3\", \"0\"],\r\n            ],\r\n            [\r\n                [\"3\", \"3\", \"3\"],\r\n                [\"C\", \"3\", \"C\"],\r\n                [\"C\", \"C\", \"C\"],\r\n                [\"C\", \"3\", \"C\"],\r\n                [\"0\", \"3\", \"0\"],\r\n            ],\r\n            [\r\n                [\"3\", \"3\", \"3\"],\r\n                [\"C\", \"3\", \"C\"],\r\n                [\"C\", \"C\", \"C\"],\r\n                [\"C\", \"3\", \"C\"],\r\n                [\"0\", \"3\", \"0\"],\r\n            ],\r\n            [\r\n                [\"3\", \"3\", \"3\"],\r\n                [\"0\", \"3\", \"0\"],\r\n                [\"C\", \"3\", \"C\"],\r\n                [\"C\", \"C\", \"C\"],\r\n                [\"C\", \"3\", \"C\"],\r\n            ],\r\n            [\r\n                [\"3\", \"3\", \"3\"],\r\n                [\"0\", \"3\", \"0\"],\r\n                [\"0\", \"3\", \"0\"],\r\n                [\"C\", \"3\", \"C\"],\r\n                [\"C\", \"C\", \"C\"],\r\n                [\"C\", \"0\", \"C\"],\r\n            ],\r\n\r\n        ],\r\n        offSets: [\r\n            {\r\n                left: 0,\r\n                top: 0\r\n            },\r\n            {\r\n                left: 0,\r\n                top: 0\r\n            },\r\n            {\r\n                left: 0,\r\n                top: 0\r\n            },\r\n            {\r\n                left: 0,\r\n                top: -1,\r\n            },\r\n            {\r\n                left: 0,\r\n                top: -2,\r\n            }\r\n        ],\r\n        maxSizes: { width: 0, height: 0 }\r\n    };\r\n\r\n    resource.maxSizes = getMaximumFrameDimensions(resource.frames);\r\n\r\n    return resource;\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { OffsetFrames } from \"../../Models/OffsetFrames\";\r\nimport { getMaximumFrameDimensions } from \"../../Utility/Frame\";\r\n\r\n/**\r\n * Module:          GetRobotOffsetFrames\r\n * Responsibility:  Define the frames of the RobotEnemy\r\n */\r\n\r\nexport default function getRobotOffsetFrames(): OffsetFrames {\r\n\r\n    let offsetCount = 0;\r\n    const resource: OffsetFrames = {\r\n        frames: [\r\n            [\r\n                [\"0\", \"V\", \"V\", \"V\", \"0\"],\r\n                [\"V\", \"V\", \"V\", \"V\", \"V\"],\r\n                [\"V\", \"0\", \"V\", \"0\", \"V\"],\r\n                [\"V\", \"V\", \"V\", \"V\", \"V\"],\r\n                [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n                [\"V\", \"V\", \"V\", \"V\", \"V\"],\r\n                [\"0\", \"V\", \"0\", \"V\", \"0\"],\r\n                [\"0\", \"V\", \"0\", \"V\", \"0\"],\r\n                [\"V\", \"V\", \"0\", \"V\", \"V\"],\r\n            ],\r\n            [\r\n                [\"0\", \"V\", \"V\", \"V\", \"0\"],\r\n                [\"V\", \"V\", \"V\", \"V\", \"V\"],\r\n                [\"V\", \"0\", \"V\", \"0\", \"V\"],\r\n                [\"V\", \"V\", \"V\", \"V\", \"V\"],\r\n                [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n                [\"V\", \"V\", \"V\", \"V\", \"V\"],\r\n                [\"0\", \"V\", \"0\", \"V\", \"0\"],\r\n                [\"V\", \"V\", \"0\", \"V\", \"V\"],\r\n            ],\r\n            [\r\n                [\"0\", \"V\", \"V\", \"V\", \"0\"],\r\n                [\"V\", \"V\", \"V\", \"V\", \"V\"],\r\n                [\"V\", \"0\", \"V\", \"0\", \"V\"],\r\n                [\"V\", \"V\", \"V\", \"V\", \"V\"],\r\n                [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n                [\"V\", \"V\", \"V\", \"V\", \"V\"],\r\n                [\"V\", \"V\", \"0\", \"V\", \"V\"],\r\n            ],\r\n        ],\r\n        offSets: [\r\n            {\r\n                top: offsetCount,\r\n                left: 0,\r\n            },\r\n            {\r\n                top: offsetCount,\r\n                left: 0,\r\n            },\r\n            {\r\n                top: offsetCount,\r\n                left: 0,\r\n            },\r\n            {\r\n                top: ++offsetCount,\r\n                left: 0,\r\n            },\r\n            {\r\n                top: ++offsetCount,\r\n                left: 0,\r\n            },\r\n            {\r\n                top: offsetCount += 1,\r\n                left: 0,\r\n            },\r\n            {\r\n                top: offsetCount += 1,\r\n                left: 0,\r\n            },\r\n            {\r\n                top: offsetCount += 2,\r\n                left: 0\r\n            },\r\n            {\r\n                top: offsetCount += 1,\r\n                left: 0\r\n            }\r\n        ],\r\n        maxSizes: { width: 0, height: 0 }\r\n    };\r\n\r\n    // Add frame 0 an additional 7 times to make the animation look good.\r\n    resource.frames = [\r\n        resource.frames[0],\r\n        resource.frames[0],\r\n        resource.frames[0],\r\n        resource.frames[0],\r\n        resource.frames[0],\r\n        resource.frames[0],\r\n        ...resource.frames,\r\n    ];\r\n\r\n    resource.maxSizes = getMaximumFrameDimensions(resource.frames);\r\n\r\n    return resource;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { OffsetFrames } from \"../../Models/OffsetFrames\";\r\nimport { getMaximumFrameDimensions } from \"../../Utility/Frame\";\r\n\r\n/**\r\n * Module:          GetSpacemonsterOffsetFrames\r\n * Responsibility:  Returns the requires\r\n */\r\n\r\nexport default function getSpaceMonsterOffsetFrames(): OffsetFrames {\r\n    const resource = {\r\n        frames: [\r\n            [\r\n                [\"7\", \"7\"],\r\n                [\"7\", \"7\"],\r\n                [\"7\", \"7\"],\r\n                [\"7\", \"7\"],\r\n                [\"7\", \"7\"],\r\n            ],\r\n            [\r\n                [\"0\", \"0\", \"7\", \"7\", \"0\", \"0\"],\r\n                [\"0\", \"0\", \"7\", \"7\", \"0\", \"0\"],\r\n                [\"0\", \"0\", \"7\", \"7\", \"0\", \"0\"],\r\n                [\"0\", \"7\", \"0\", \"0\", \"7\", \"0\"],\r\n                [\"7\", \"0\", \"0\", \"0\", \"0\", \"7\"],\r\n            ]\r\n        ],\r\n        offSets: [\r\n            {\r\n                left: 2,\r\n                top: 0\r\n            },\r\n            {\r\n                left: 0,\r\n                top: 0\r\n            }\r\n        ],\r\n        maxSizes: { width: 0, height: 0 }\r\n    };\r\n\r\n    resource.maxSizes = getMaximumFrameDimensions(resource.frames);\r\n\r\n    return resource;\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseEnemy from \"../../Base/BaseEnemy\";\r\nimport BaseFrameProvider from \"../../Base/BaseFrameProvider\";\r\nimport CGAColors from \"../../Constants/CGAColors\";\r\nimport ILocationProvider from \"../../Interfaces/ILocationProvider\";\r\nimport dimensionProvider from \"../../Providers/DimensionProvider\";\r\nimport { ExplosionProviderFunction, OffsetFramesProviderFunction } from \"../../Types\";\r\nimport { getRandomArrayElement } from \"../../Utility/Array\";\r\nimport Mutators from \"../../Utility/FrameMutators\";\r\nimport { Points } from \"../../Constants/Constants\";\r\n\r\n/**\r\n * Module:          SpaceMonster\r\n * Responsibility:  Opens its mouth when it gets to the bottom of the screen.\r\n */\r\n\r\nconst {\r\n    pixelSize\r\n} = dimensionProvider();\r\n\r\nconst jawsOpenTop = pixelSize * 55;\r\n\r\nconst explosionColors = [\r\n    CGAColors.yellow,\r\n    CGAColors.lightGreen,\r\n    CGAColors.lightBlue,\r\n];\r\n\r\nexport default class SpaceMonster extends BaseEnemy {\r\n\r\n    /**\r\n     * Flag used to track if the jaws of the Space Monster are open or not.\r\n     */\r\n    private jawsClosed = true;\r\n\r\n    constructor(\r\n        frameChangeTime: number,\r\n        getOffsetFrames: OffsetFramesProviderFunction,\r\n        getExplosion: ExplosionProviderFunction,\r\n        locationProvider: ILocationProvider,\r\n        frameProvider: BaseFrameProvider) {\r\n        super(frameChangeTime,\r\n            getOffsetFrames,\r\n            getExplosion,\r\n            locationProvider,\r\n            frameProvider);\r\n\r\n        const color = getRandomArrayElement(explosionColors);\r\n        Mutators.Frame.setColor(this.explosion.explosionCenterFrame, color);\r\n        this.explosion.particleFrames.forEach((pf) => Mutators.Frame.setColor(pf, color));\r\n    }\r\n\r\n    /**\r\n     * Handle jaw open closed behaviour.\r\n     */\r\n    public beforeDispatch(): void {\r\n\r\n        // When the Space monster gets close to the bottom it opens its jaws.\r\n        if (this.offsetTop >= jawsOpenTop && this.jawsClosed) {\r\n            this.frameProvider.getNextFrame();\r\n            this.jawsClosed = false;\r\n        } else if (this.offsetTop < jawsOpenTop && this.jawsClosed === false) {\r\n            this.frameProvider.getNextFrame();\r\n            this.jawsClosed = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the points of the space monster.\r\n     */\r\n    public getPoints(): number {\r\n        return Points.spaceMonster;\r\n    }\r\n\r\n    /**\r\n     * Frame change handler.\r\n     */\r\n    protected onFrameChange(): void {\r\n\r\n        // The Leanasteroid is an odd duck here. It doesn't change frames to be animated\r\n        // but to show damage to it.\r\n        // So, we return the current frame and change the frame when the astroid is hit.\r\n        const newFrame = this.frameProvider.getCurrentFrame();\r\n        Mutators.Frame.convertHexToCGA(newFrame);\r\n        this.currentFrame = newFrame;\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { OffsetFrames } from \"../../Models/OffsetFrames\";\r\nimport { getMaximumFrameDimensions } from \"../../Utility/Frame\";\r\n\r\n/**\r\n * Module:          GetSpinnerOffsetFrames\r\n * Responsibility:  Define the frames of the spinner enemy.\r\n */\r\n\r\nexport default function getSpinnerOffsetFrames(): OffsetFrames {\r\n    const resource = {\r\n        frames: [\r\n            [\r\n                [\"0\", \"A\", \"0\"],\r\n                [\"0\", \"C\", \"0\"],\r\n                [\"0\", \"A\", \"0\"],\r\n            ],\r\n            [\r\n                [\"0\", \"0\", \"A\"],\r\n                [\"0\", \"C\", \"0\"],\r\n                [\"A\", \"0\", \"0\"],\r\n            ],\r\n            [\r\n                [\"0\", \"0\", \"0\"],\r\n                [\"A\", \"C\", \"A\"],\r\n                [\"0\", \"0\", \"0\"],\r\n            ],\r\n            [\r\n                [\"A\", \"0\", \"0\"],\r\n                [\"0\", \"C\", \"0\"],\r\n                [\"0\", \"0\", \"A\"],\r\n            ]\r\n        ],\r\n        offSets: [],\r\n        maxSizes: { width: 0, height: 0}\r\n    };\r\n\r\n    resource.maxSizes = getMaximumFrameDimensions(resource.frames);\r\n\r\n    return resource;\r\n}\r\n","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseFrameProvider from \"../Base/BaseFrameProvider\";\r\nimport { Frame } from \"../Types\";\r\n\r\n/**\r\n * Module:          BackAndForthFrameProvider\r\n * Responsibility:  Provides frames. But when the last frame is given it will return the previous one until it hits the first frame.\r\n */\r\n\r\nexport default class BackAndForthFrameProvider extends BaseFrameProvider {\r\n\r\n    /**\r\n     * Returns the current frame and sets the next one. Goes back and forth between frames.\r\n     * @returns {Frame}. A frame.\r\n     */\r\n    public getNextFrame(): Frame {\r\n        this.frameIndex += this.add;\r\n\r\n        if (this.frameIndex > this.maxIndex) {\r\n            this.frameIndex = this.maxIndex;\r\n        }\r\n\r\n        if ((this.frameIndex === this.maxIndex) || this.frameIndex === 0) {\r\n            this.add *= -1;\r\n        }\r\n\r\n        return this.getCurrentFrame();\r\n    }\r\n}","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseFrameProvider from \"../Base/BaseFrameProvider\";\r\nimport { Frame } from \"../Types\";\r\n\r\n/**\r\n * Module:          CircleFrameProvider\r\n * Responsibility:  Provides frame one after another, if the last frame is given it resets to the first.\r\n */\r\n\r\nexport default class CircleFrameProvider extends BaseFrameProvider {\r\n\r\n    /**\r\n     * Returns the next frame using clockwise rotation.\r\n     * @returns {Frame}. A frame.\r\n     */\r\n    public getNextFrame(): Frame {\r\n        this.frameIndex += 1;\r\n\r\n        if (this.frameIndex > this.maxIndex) {\r\n            this.frameIndex = 0;\r\n        }\r\n\r\n        return this.getCurrentFrame();\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { Locations, FrameTimes } from \"../Constants/Constants\";\r\nimport IGetCurrentIndex from \"../Interfaces/IGetCurrentFrame\";\r\nimport ILocationProvider from \"../Interfaces/ILocationProvider\";\r\nimport { GameLocation } from \"../Models/GameLocation\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport { getRandomLocation } from \"../Utility/Location\";\r\n\r\n/**\r\n * Module:          CloakingOrbLocationProvider\r\n * Responsibility:  Location provider for the Cloaking orb enemy. This enemy disappears and reappears at a random location.\r\n */\r\n\r\nconst {\r\n    gameField,\r\n    pixelSize\r\n} = dimensionProvider();\r\n\r\nconst outerLeft = gameField.left;\r\nconst right = gameField.right - pixelSize * 3;\r\n\r\nexport default class CloakingOrbLocationProvider implements ILocationProvider {\r\n\r\n    /**\r\n     * Handle for a window.setTimeout that resets the canChangeLocation flag when the time is up.\r\n     */\r\n    private canChangeLocationResetHandle: number | undefined = undefined;\r\n\r\n    /**\r\n     * When true the enemy is permitted to change its location.\r\n     */\r\n    private canChangeLocation: boolean = true;\r\n\r\n    constructor(\r\n        private left: number,\r\n        private top: number,\r\n        private maxIndex: number,\r\n        private indexProvider: IGetCurrentIndex) {\r\n    }\r\n\r\n    /**\r\n     * Increase the speed of the enemy.\r\n     * @param {number} factor. Speed increase factor.\r\n     */\r\n    public increaseSpeed(factor: number): void {\r\n        // Not used here.\r\n    }\r\n\r\n    /**\r\n     * Returns the current location.\r\n     * @returns {GameLocation}. Current game location.\r\n     */\r\n    public getCurrentLocation(): GameLocation {\r\n        return {\r\n            left: this.left,\r\n            top: this.top,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Update the state of the location provider.\r\n     * @param {number} tick. Current game tick.\r\n     */\r\n    public updateState(tick: number): void {\r\n        if (this.indexProvider.getCurrentIndex() === this.maxIndex && this.canChangeLocation) {\r\n            this.canChangeLocation = false;\r\n            const { left, top } = getRandomLocation(right, outerLeft, Locations.CloakingOrb.maxBottom, gameField.top);\r\n            this.left = left;\r\n            this.top = top;\r\n        }\r\n\r\n        // If there is no window.setTimeout running and the enemy cannot change its location then we\r\n        // Set up a timer to reset the canChangeLocation flag.\r\n        if (this.canChangeLocationResetHandle === undefined && this.canChangeLocation === false) {\r\n\r\n            // Set a timer. We'll use the FrameTimes.cloacking orbs * 2 to ensure we don't reset the flag while\r\n            // the max frame is still in use. This cannot but coincide.\r\n            this.canChangeLocationResetHandle = window.setTimeout(() => {\r\n\r\n                // Ok, waiting's over the enemy can change location the next time its last frame is rendered.\r\n                // This is when the cloaking orb is completely invisible.\r\n                this.canChangeLocation = true;\r\n\r\n                // Reset the handle so another reset can be queued again.\r\n                this.canChangeLocationResetHandle = undefined;\r\n            }, FrameTimes.cloakingOrb * 2);\r\n        }\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { angles } from \"../Constants/Angles\";\r\nimport IGetCurrentIndex from \"../Interfaces/IGetCurrentFrame\";\r\nimport ILocationProvider from \"../Interfaces/ILocationProvider\";\r\nimport { GameLocation } from \"../Models/GameLocation\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport { getLocation } from \"../Utility/Location\";\r\n\r\n/**\r\n * Module:          CrabLocationProvider.\r\n * Responsibility:  A location provider where the enemy moves up by '3' then moves down '1'. Once the top is reached, the enemy appears down.\r\n */\r\n\r\nconst {\r\n    gameField\r\n} = dimensionProvider();\r\nexport default class CrabLocationProvider implements ILocationProvider {\r\n    /**\r\n     * Used to calculate speed increases.\r\n     */\r\n    private baseSpeed: number;\r\n    private angle: any;\r\n\r\n    constructor(\r\n        private left: number,\r\n        private top: number,\r\n        private speed: number,\r\n        private height: number,\r\n        private indexProvider: IGetCurrentIndex) {\r\n\r\n        this.baseSpeed = speed;\r\n        this.angle = angles.up;\r\n    }\r\n\r\n    /**\r\n     * Increase the speed of the enemy.\r\n     * @param {number} factor. Speed increase factor.\r\n     */\r\n    public increaseSpeed(factor: number): void {\r\n        this.speed = this.baseSpeed * factor;\r\n    }\r\n\r\n    /**\r\n     * Returns the current location.\r\n     * @returns {GameLocation}. Current game location.\r\n     */\r\n    public getCurrentLocation(): GameLocation {\r\n        return {\r\n            left: this.left,\r\n            top: this.top,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Update the state of the location provider.\r\n     * @param {number} tick. Current game tick.\r\n     */\r\n    public updateState(tick: number): void {\r\n        const { left, top } = getLocation(this.left, this.top, this.angle, this.speed);\r\n        this.left = left;\r\n\r\n        if (top < gameField.top - this.height) {\r\n            this.top = gameField.bottom + this.height;\r\n        } else {\r\n            this.top = top;\r\n        }\r\n\r\n        // 4/6 move up. 2/6 frames move down.\r\n        if (this.indexProvider.getCurrentIndex() < 5 || this.top > gameField.bottom) {\r\n            this.angle = angles.up;\r\n        } else {\r\n            this.angle = angles.down;\r\n        }\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { angles } from \"../Constants/Angles\";\r\nimport Guard from \"../Guard\";\r\nimport ILocationDirectionProvider from \"../Interfaces/ILocationDirectionProvider\";\r\nimport { GameLocation } from \"../Models/GameLocation\";\r\nimport { appState } from \"../State/Store\";\r\nimport { getRandomArrayElement } from \"../Utility/Array\";\r\nimport { getLeftOrRightFromAngle } from \"../Utility/Geometry\";\r\nimport { getLocation, getNextLocationAndAngle } from \"../Utility/Location\";\r\n\r\n/**\r\n * Module:          DevilLocationProvider\r\n * Responsibility:  Location provider for the devil enemy.\r\n *                  This enemy moves in diagonal lines but moves down when it can fire. Then, it moves up. Also\r\n *                  It picks a random angle when it hits the top screen.\r\n */\r\n\r\nexport default class DevilLocationProvider implements ILocationDirectionProvider {\r\n    private baseSpeed: number;\r\n    private angle: number;\r\n    private attacking: boolean;\r\n    private recovering: boolean;\r\n    constructor(\r\n        private left: number,\r\n        private top: number,\r\n        private speed: number,\r\n        private sideAngles: number[],\r\n        private width: number,\r\n        private height: number,\r\n        private topLimit: number,\r\n        private bottomLimit: number) {\r\n\r\n        this.baseSpeed = speed;\r\n\r\n        this.angle = getRandomArrayElement(sideAngles);\r\n        this.attacking = false;\r\n        this.recovering = false;\r\n    }\r\n\r\n    /**\r\n     * Returns the direction the enemy is heading. User to show the moving left or right frame.\r\n     * @returns {\"left\" | \"right\" | undefined}. Can be undefined. An straight up or down angle is not going left or right.\r\n     */\r\n    public getDirection(): \"left\" | \"right\" | undefined {\r\n        return getLeftOrRightFromAngle(this.angle);\r\n    }\r\n\r\n    /**\r\n     * Returns the current location\r\n     * @returns {GameLocation}. The location.\r\n     */\r\n    public getCurrentLocation(): GameLocation {\r\n        return {\r\n            left: this.left,\r\n            top: this.top\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Increases movement speed.\r\n     * @param {number} factor. Factor.\r\n     */\r\n\r\n    public increaseSpeed(factor: number): void {\r\n        this.speed = this.baseSpeed * factor;\r\n    }\r\n\r\n    /**\r\n     * Updates the state\r\n     * @param {number} tick. Current tick\r\n     */\r\n    public updateState(tick: number): void {\r\n\r\n        const {\r\n            playerState\r\n        } = appState();\r\n\r\n        if (Guard.isPlayerAlive(playerState)) {\r\n            const { hitboxes: { bottom: playerBottomHixbox } } = playerState;\r\n\r\n            // When the player moves underneath this enemy it moves down to attcck except when it is going up after an attack or if it is still attacking.\r\n            if (this.left > playerBottomHixbox.left &&\r\n                this.left < playerBottomHixbox.right &&\r\n                this.recovering === false && this.attacking === false) {\r\n                this.angle = angles.down;\r\n                this.attacking = true;\r\n\r\n            } else if (this.top - this.height <= this.topLimit && this.recovering) {\r\n\r\n                // The enemy finished moving up so it's recovered from an attack.\r\n                this.recovering = false;\r\n                this.angle = getRandomArrayElement(this.sideAngles);\r\n\r\n            } else if (this.top >= this.bottomLimit && this.attacking) {\r\n                // The enemy has hit the bottom limit while doing an attack, now it must recover.\r\n                this.recovering = true;\r\n\r\n                // Attack done. Time  to recover.\r\n                this.attacking = false;\r\n                this.angle = angles.up;\r\n            }\r\n        }\r\n\r\n        // Regular movement.\r\n        if (!this.attacking && !this.recovering) {\r\n            const { location: { left, top }, angle } = getNextLocationAndAngle(\r\n                this.left,\r\n                this.top,\r\n                this.angle,\r\n                this.speed,\r\n                this.width,\r\n                this.height,\r\n                this.topLimit,\r\n                this.bottomLimit\r\n            );\r\n\r\n            this.left = left;\r\n            this.top = top;\r\n            this.angle = angle;\r\n        } else {\r\n            // On the attack or on recovert.\r\n            const { left, top } = getLocation(this.left, this.top, this.angle, this.speed);\r\n            this.left = left;\r\n            this.top = top;\r\n        }\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseLocationProvider from \"../Base/BaseLocationProvider\";\r\nimport { GameLocation } from \"../Models/GameLocation\";\r\nimport { getLocation } from \"../Utility/Location\";\r\nimport { getUpOrDownFromAngle } from \"../Utility/Geometry\";\r\n\r\n/**\r\n * Module:          MoveToMaxThenReset\r\n * Responsibility:  A location provider where the enemy moves down to a certain point and then reappears resets to a specified location.\r\n */\r\n\r\nexport default class MoveToUpDownMaxThenReset extends BaseLocationProvider {\r\n\r\n    constructor(\r\n        left: number,\r\n        top: number,\r\n        speed: number,\r\n        angle: number,\r\n        width: number,\r\n        height: number,\r\n        private target: number,\r\n        private reset: number) {\r\n        super(left, top, speed, angle, width, height);\r\n    }\r\n\r\n    /**\r\n     * Returns the current location.\r\n     * @returns {GameLocation}. Current game location.\r\n     */\r\n    public getCurrentLocation(): GameLocation {\r\n        return {\r\n            left: this.left,\r\n            top: this.top,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Update the state of the location provider.\r\n     * @param {number} tick. Current game tick.\r\n     */\r\n    public updateState(tick: number): void {\r\n        const { left, top } = getLocation(this.left, this.top, this.angle, this.speed);\r\n\r\n        this.left = left;\r\n        let newTop = top;\r\n\r\n        const direction = getUpOrDownFromAngle(this.angle);\r\n\r\n        if (direction === \"up\") {\r\n            if (newTop < this.target - this.height) {\r\n                newTop = this.reset;\r\n            }\r\n        } else if (direction === \"down\") {\r\n            if (newTop + this.height > this.target) {\r\n                newTop = this.reset;\r\n            }\r\n        }\r\n\r\n        this.top = newTop;\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport ILocationProvider from \"../Interfaces/ILocationProvider\";\r\nimport { GameLocation } from \"../Models/GameLocation\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport { Angle } from \"../Types\";\r\nimport { getRandomArrayElement } from \"../Utility/Array\";\r\nimport { getLeftOrRightFromAngle } from \"../Utility/Geometry\";\r\nimport { randomNumberInRange } from \"../Utility/Lib\";\r\nimport { getLocation } from \"../Utility/Location\";\r\n\r\n/**\r\n * Module:          AsteroidLocationProvider\r\n * Responsibility:  Provides movement for asteroids.\r\n */\r\n\r\nconst {\r\n    gameField\r\n} = dimensionProvider();\r\n\r\nexport default class RandomReapperance implements ILocationProvider {\r\n    /**\r\n     * Current top.\r\n     */\r\n    private top: number;\r\n\r\n    /**\r\n     * Current bottom.\r\n     */\r\n    private left: number;\r\n\r\n    /**\r\n     * Current angle.\r\n     */\r\n    private angle: Angle;\r\n\r\n    /**\r\n     * Current speed.\r\n     */\r\n    private speed: number;\r\n\r\n    /**\r\n     * Maximum bottom position.\r\n     */\r\n    private maxBottom: number;\r\n\r\n    /**\r\n     * Initial top position.\r\n     */\r\n    private startTop: number;\r\n\r\n    constructor(\r\n        private width: number,\r\n        private height: number,\r\n        private angles: Angle[],\r\n        private speeds: number[]) {\r\n\r\n        const doubleHeight = this.height * 2;\r\n        this.top = gameField.top - doubleHeight;\r\n        this.left = this.getRandomLeft();\r\n        this.angle = getRandomArrayElement(angles);\r\n        this.speed = getRandomArrayElement(speeds);\r\n\r\n        this.maxBottom = gameField.bottom + doubleHeight;\r\n        this.startTop = gameField.top - doubleHeight;\r\n    }\r\n\r\n    /**\r\n     * Returns the current location\r\n     * @returns {GameLocation}. Current location.\r\n     */\r\n    public getCurrentLocation(): GameLocation {\r\n        return {\r\n            left: this.left,\r\n            top: this.top,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Updates the state of the location provider.\r\n     * @param {number} tick. Current game tick\r\n     */\r\n    public updateState(tick: number): void {\r\n        const nextLocation = getLocation(this.left, this.top, this.angle, this.speed);\r\n\r\n        this.left = nextLocation.left;\r\n        this.top = nextLocation.top;\r\n\r\n        if (this.top > this.maxBottom) {\r\n            // Reduce top by 2x height for a nice and smooth reapperance of the asteroid\r\n            this.left = this.getRandomLeft();\r\n            this.angle = getRandomArrayElement(this.angles);\r\n            this.speed = getRandomArrayElement(this.speeds);\r\n\r\n            const direction = getLeftOrRightFromAngle(this.angle);\r\n\r\n            if (direction === \"left\") {\r\n                this.left = gameField.right;\r\n                this.top = randomNumberInRange(gameField.bottom / 2, gameField.top);\r\n            } else if (direction === \"right\") {\r\n                this.left = gameField.left;\r\n                this.top = randomNumberInRange(gameField.bottom / 2, gameField.top);\r\n            } else {\r\n                this.top = this.startTop;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a random number between the left and right of the game field compensating for the object width\r\n     * @returns {number}. Random nummber.\r\n     */\r\n    private getRandomLeft(): number {\r\n        return randomNumberInRange(gameField.right - this.width, this.width);\r\n    }\r\n\r\n    /**\r\n     * Not implemented.\r\n     */\r\n    public increaseSpeed(factor: number): void {\r\n        // Does nothing.\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseLocationProvider from \"../Base/BaseLocationProvider\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport { getNextLocationWithinBoundaries } from \"../Utility/Location\";\r\n\r\n/**\r\n * Module:          Left to right, then left.\r\n * Responsibility:  Location provider for enemies that move from left to right and up then down.\r\n */\r\n\r\nconst {\r\n    gameField\r\n} = dimensionProvider();\r\n\r\nexport default class SideAppearOtherSide extends BaseLocationProvider {\r\n    constructor(\r\n        left: number,\r\n        top: number,\r\n        speed: number,\r\n        angle: number,\r\n        width: number,\r\n        height: number,\r\n        private maxTop: number,\r\n        private maxBottom: number) {\r\n        super(left, top, speed, angle, width, height);\r\n    }\r\n\r\n    /**\r\n     * Update the state of the location provider.\r\n     * @param {number} tick. Current tick.\r\n     */\r\n    public updateState(tick: number): void {\r\n        const { left, top } = getNextLocationWithinBoundaries(\r\n            this.left,\r\n            this.top,\r\n            this.width,\r\n            this.angle,\r\n            this.speed,\r\n            this.maxTop,\r\n            this.maxBottom\r\n        );\r\n\r\n        this.left = left;\r\n        this.top = top;\r\n    }\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport IGetCurrentIndex from \"../Interfaces/IGetCurrentFrame\";\r\nimport ILocationProvider from \"../Interfaces/ILocationProvider\";\r\nimport { GameLocation } from \"../Models/GameLocation\";\r\nimport { getNextLocationWithinBoundaries } from \"../Utility/Location\";\r\n\r\n/**\r\n * Module:          SideAppearOtherSideVariesSpeed\r\n * Responsibility:  A location provider where the enemies move to one side and reappear at the other side, but depending on the current frame have different movement\r\n *                  speeds\r\n */\r\n\r\nexport default class SideAppearOtherSideVariesSpeed implements ILocationProvider {\r\n    /**\r\n     * Used to calculate a speed increase for the slow speed.\r\n     */\r\n    private baseSlowSpeed: number;\r\n\r\n    /**\r\n     * Used to calculate a speed increase for the fast speed.\r\n     */\r\n    private baseFastSpeed: number;\r\n    constructor(\r\n        private left: number,\r\n        private top: number,\r\n        private angle: number,\r\n        private width: number,\r\n        private height: number,\r\n        private maxTop: number,\r\n        private maxBottom: number,\r\n        private indexProvider: IGetCurrentIndex,\r\n        private slowSpeed: number,\r\n        private fastSpeed: number,\r\n        private slowFrames: number[],\r\n        private fastFrames: number[]) {\r\n\r\n        this.baseSlowSpeed = slowSpeed;\r\n        this.baseFastSpeed = fastSpeed;\r\n    }\r\n\r\n    /**\r\n     * Retusn the current location\r\n     * @returns {GameLocation}. Current location.\r\n     */\r\n    public getCurrentLocation(): GameLocation {\r\n        return {\r\n            left: this.left,\r\n            top: this.top\r\n        };\r\n\r\n    }\r\n    public updateState(tick?: number | undefined): void {\r\n        const currentFrameIndex = this.indexProvider.getCurrentIndex();\r\n\r\n        let speed = 0;\r\n        if (this.slowFrames.indexOf(currentFrameIndex) > -1) {\r\n            speed = this.slowSpeed;\r\n        } else if (this.fastFrames.indexOf(currentFrameIndex) > -1) {\r\n            speed = this.fastSpeed;\r\n        } else {\r\n            throw new Error(\"Index \" + currentFrameIndex + \" was not found in the slowFrames or fastFrames array\");\r\n        }\r\n\r\n        const { left, top } = getNextLocationWithinBoundaries(\r\n            this.left,\r\n            this.top,\r\n            this.width,\r\n            this.angle,\r\n            speed,\r\n            this.maxTop - this.height,\r\n            this.maxBottom + this.height\r\n        );\r\n\r\n        this.left = left;\r\n        this.top = top;\r\n    }\r\n\r\n    /**\r\n     * increases the speed by the provided factor.\r\n     * @param {number} factor.\r\n     */\r\n    public increaseSpeed(factor: number): void {\r\n        this.slowSpeed = this.baseSlowSpeed * factor;\r\n        this.fastSpeed = this.baseFastSpeed * factor;\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseLocationProvider from \"../Base/BaseLocationProvider\";\r\nimport ILocationProvider from \"../Interfaces/ILocationProvider\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport { getNextLocationAndAngle } from \"../Utility/Location\";\r\n\r\n/**\r\n * Module:          SideToSideUpAndDown\r\n * Responsibility:  Location provider for enemies that move from left to right and up then down.\r\n */\r\n\r\nconst {\r\n    gameField,\r\n} = dimensionProvider();\r\n\r\nexport default class SideToSideUpAndDownLocationProvider extends BaseLocationProvider implements ILocationProvider {\r\n\r\n    constructor(\r\n        left: number,\r\n        top: number,\r\n        speed: number,\r\n        angle: number,\r\n        width: number,\r\n        height: number,\r\n        private topLimit: number,\r\n        private bottomLimit: number) {\r\n        super(left, top, speed, angle, width, height);\r\n    }\r\n\r\n    /**\r\n     * Update the location provider's state.\r\n     * @param {number} tick. Current tick\r\n     */\r\n    public updateState(tick: number): void {\r\n        const { location: { left, top }, angle } = getNextLocationAndAngle(\r\n            this.left,\r\n            this.top,\r\n            this.angle,\r\n            this.speed,\r\n            this.width,\r\n            this.height,\r\n            this.topLimit,\r\n            this.bottomLimit\r\n        );\r\n\r\n        this.left = left;\r\n        this.top = top;\r\n        this.angle = angle;\r\n    }\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Wobble\r\n * Responsibility:  A location provider that makes an enemy wobble. This is done by constantly picking a random angle\r\n */\r\n\r\nimport BaseLocationProvider from \"../Base/BaseLocationProvider\";\r\nimport { getAngles } from \"../Constants/Angles\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport { getRandomArrayElement } from \"../Utility/Array\";\r\nimport { getLocation } from \"../Utility/Location\";\r\n\r\nconst {\r\n    gameField\r\n} = dimensionProvider();\r\n\r\nexport default class Wobble extends BaseLocationProvider {\r\n\r\n    /**\r\n     * Time between switching angles.\r\n     */\r\n    private angleSwitchTimeout: number;\r\n\r\n    /**\r\n     * Last tick an angle was changed.\r\n     */\r\n    private lastTick: number = 0;\r\n\r\n    /**\r\n     * Angles to pick from.\r\n     */\r\n    private angles: number[];\r\n\r\n    constructor(\r\n        left: number,\r\n        top: number,\r\n        speed: number,\r\n        angle: number,\r\n        width: number,\r\n        height: number,\r\n        angleSwitchTimeout: number) {\r\n        super(left,\r\n            top,\r\n            speed,\r\n            angle,\r\n            width,\r\n            height);\r\n\r\n        this.angleSwitchTimeout = angleSwitchTimeout;\r\n\r\n        this.angles = getAngles();\r\n    }\r\n\r\n    /**\r\n     * Update the state of the location provider.\r\n     * @param {number} tick. Current game tick.\r\n     */\r\n    public updateState(tick: number): void {\r\n\r\n        if (tick > this.angleSwitchTimeout + this.lastTick) {\r\n            this.angle = getRandomArrayElement(this.angles);\r\n            this.lastTick = tick;\r\n        }\r\n\r\n        const newLocation = getLocation(this.left, this.top, this.angle, this.speed);\r\n\r\n        if (newLocation.left <= gameField.left || newLocation.left + this.width >= gameField.right) {\r\n            this.angle = 180 - this.angle;\r\n        }\r\n\r\n        if (newLocation.top <= gameField.top) {\r\n            this.angle *= -1;\r\n        }\r\n\r\n        // When a wobbling enemy gets stuck on the bottom, their position is roughtly set to 2/3 of the gamefield\r\n        if (newLocation.top >= gameField.bottom - this.height * 1.5) {\r\n            this.top = gameField.top * (2 / 3);\r\n        }\r\n\r\n        const nextLocation = getLocation(this.left, this.top, this.angle, this.speed);\r\n        this.left = nextLocation.left;\r\n        this.top = nextLocation.top;\r\n    }\r\n}","\r\n/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport Explosion from \"../Models/Explosion\";\r\n\r\n/**\r\n * Module:          Explosion01.\r\n */\r\n\r\nexport default function getDevilExplosion(): Explosion {\r\n    const explosion: Explosion = {\r\n        explosionCenterFrame: [\r\n            [\"0\", \"4\", \"4\", \"0\"],\r\n            [\"0\", \"0\", \"0\", \"0\"],\r\n            [\"4\", \"2\", \"2\", \"4\"],\r\n            [\"0\", \"0\", \"0\", \"0\"],\r\n            [\"4\", \"0\", \"0\", \"4\"],\r\n        ],\r\n        particleFrames: [\r\n            [\r\n                [\"4\"],\r\n            ],\r\n            [\r\n                [\"4\", \"2\"],\r\n            ],\r\n            [\r\n                [\"2\", \"4\"],\r\n            ]\r\n        ],\r\n        angles: [160, 180, 200, 340, 0, 20],\r\n        particleFrameIndexes: [0, 1, 0, 0, 2, 0],\r\n        speed: 17,\r\n        acceleration: 1.05,\r\n        explosionCenterDelay: 30,\r\n        speeds: [], // not used, all particles travel at the same speed\r\n        useSpeed: true,\r\n    };\r\n\r\n    return explosion;\r\n}\r\n","\r\n/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport Explosion from \"../Models/Explosion\";\r\nimport Mutators from \"../Utility/FrameMutators\";\r\n\r\n/**\r\n * Module:          Explosion01.\r\n */\r\n\r\nexport default function getExplosion01(centerColor?: string, shrapnellColor?: string): Explosion {\r\n    const explosion: Explosion = {\r\n        explosionCenterFrame: [\r\n            [\"V\", \"0\", \"V\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"0\", \"V\", \"0\", \"V\"],\r\n        ],\r\n        particleFrames: [\r\n            [\r\n                [\"V\"],\r\n            ],\r\n            [\r\n                [\"V\", \"V\"]\r\n            ],\r\n        ],\r\n        angles: [160, 180, 200, 340, 0, 20],\r\n        particleFrameIndexes: [0, 1, 0, 0, 1, 0],\r\n        speed: 17,\r\n        acceleration: 1.05,\r\n        explosionCenterDelay: 50,\r\n        speeds: [], // not used, all particles travel at the same speed\r\n        useSpeed: true,\r\n    };\r\n\r\n    if (centerColor) {\r\n        Mutators.Frame.setColor(explosion.explosionCenterFrame, centerColor);\r\n    }\r\n\r\n    if (shrapnellColor) {\r\n        Mutators.Frames.setColor(explosion.particleFrames, shrapnellColor);\r\n    }\r\n\r\n    return explosion;\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport Explosion from \"../Models/Explosion\";\r\n\r\n/**\r\n * Module:          Explosion02\r\n */\r\n\r\nexport default function getExplosion02(): Explosion {\r\n    const explosion: Explosion = {\r\n        explosionCenterFrame: [\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"0\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"0\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n        ],\r\n        particleFrames: [\r\n            [\r\n                [\"V\", \"V\"]\r\n            ],\r\n        ],\r\n        angles: [160, 180, 200, 340, 0, 20],\r\n        particleFrameIndexes: [0, 0, 0, 0, 0, 0],\r\n        speed: 12,\r\n        acceleration: 1.05,\r\n        explosionCenterDelay: 0,\r\n        speeds: [], // not used, all particles travel at the same speed\r\n        useSpeed: true,\r\n    };\r\n\r\n    return explosion;\r\n}","\r\n/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport Explosion from \"../Models/Explosion\";\r\nimport Mutators from \"../Utility/FrameMutators\";\r\n\r\n/**\r\n * Module:          Explosion03.\r\n */\r\n\r\nexport default function getExplosion03(): Explosion {\r\n    const explosion: Explosion = {\r\n        explosionCenterFrame: [\r\n            [\"E\", \"A\", \"A\", \"E\"],\r\n            [\"E\", \"E\", \"E\", \"E\"],\r\n            [\"E\", \"A\", \"A\", \"E\"],\r\n        ],\r\n        particleFrames: [\r\n            [\r\n                [\"E\", \"A\"],\r\n            ],\r\n            [\r\n                [\"E\", \"E\"]\r\n            ],\r\n            [\r\n                [\"A\", \"E\"],\r\n            ],\r\n        ],\r\n        angles: [160, 180, 200, 340, 0, 20],\r\n        particleFrameIndexes: [0, 1, 0, 2, 1, 2],\r\n        speed: 17,\r\n        acceleration: 1.05,\r\n        explosionCenterDelay: 50,\r\n        speeds: [], // not used, all particles travel at the same speed\r\n        useSpeed: true,\r\n    };\r\n\r\n    return explosion;\r\n}\r\n","\r\n/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport Explosion from \"../Models/Explosion\";\r\n\r\n/**\r\n * Module:          Explosion04\r\n */\r\n\r\nexport default function getExplosion04(): Explosion {\r\n    const explosion: Explosion = {\r\n        explosionCenterFrame: [\r\n            [\"V\", \"V\", \"0\", \"V\", \"V\"],\r\n            [\"V\", \"V\", \"0\", \"V\", \"V\"],\r\n        ],\r\n        particleFrames: [\r\n            [\r\n                [\"V\", \"V\"],\r\n            ]\r\n        ],\r\n        angles: [160, 150, 20, 30],\r\n        particleFrameIndexes: [0, 0, 0, 0],\r\n        speed: 25,\r\n        acceleration: 1.00,\r\n        explosionCenterDelay: 10,\r\n        speeds: [], // not used, all particles travel at the same speed\r\n        useSpeed: true,\r\n    };\r\n\r\n    return explosion;\r\n}\r\n","\r\n/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport Explosion from \"../Models/Explosion\";\r\n\r\n/**\r\n * Module:          Explosion05\r\n */\r\n\r\nexport default function getExplosion05(): Explosion {\r\n    const explosion: Explosion = {\r\n        explosionCenterFrame: [\r\n            [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n        ],\r\n        particleFrames: [\r\n            [\r\n                [\"V\"],\r\n            ]\r\n        ],\r\n        angles: [160, 150, 20, 30],\r\n        particleFrameIndexes: [0, 0, 0, 0],\r\n        speed: 25,\r\n        acceleration: 1.00,\r\n        explosionCenterDelay: 10,\r\n        speeds: [], // not used, all particles travel at the same speed\r\n        useSpeed: true,\r\n    };\r\n\r\n    return explosion;\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport speedProvider from \"../Providers/SpeedProvider\";\r\nimport { calculateAngle } from \"../Utility/Geometry\";\r\nimport { calculateDistance, getLocation } from \"../Utility/Location\";\r\n\r\n/**\r\n * Module:          GetPhaserFrames\r\n * Responsibility:  Calculate the game locations to draw a phaser beam.\r\n */\r\n\r\nconst {\r\n    pixelSize\r\n} = dimensionProvider();\r\n\r\nexport default function getPhaserLocations(sourceLeft: number, sourceTop: number, targetLeft: number, targetTop: number): Array<{left: number, top: number}> {\r\n\r\n    // offset left by one game pixel to ensure the phaser appears at the nozzle of the ship.\r\n    const angle = calculateAngle(sourceLeft, sourceTop, targetLeft, targetTop);\r\n    let distance = calculateDistance(sourceLeft, sourceTop, targetLeft, targetTop);\r\n\r\n    let left = sourceLeft;\r\n    let top = sourceTop;\r\n\r\n    const returnValue: Array<{left: number, top: number}> = [];\r\n\r\n    while (distance >= 0) {\r\n        returnValue.push(getLocation(left, top, angle, pixelSize));\r\n        distance -= speedProvider(pixelSize);\r\n        const nextLocation = getLocation(left, top, angle, pixelSize);\r\n        left = nextLocation.left;\r\n        top = nextLocation.top;\r\n    }\r\n\r\n    return returnValue;\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { GameRectangle } from \"../Models/GameRectangle\";\r\nimport { PlayerHitboxes } from \"../State/Player/PlayerState\";\r\nimport { overlaps } from \"../Utility/Geometry\";\r\n\r\n/**\r\n * Module:          PlayerHelper\r\n * Responsibility:  Helper functions to aid with player related logic.\r\n */\r\n\r\n/**\r\n * Determines if one of the player's hitboxes overlaps with the provided hitbox.\r\n * @export\r\n * @param {PlayerHitboxes} playerHitboxes. The player's hitboxes.\r\n * @param {GameRectangle} hitbox. Another hitbox.\r\n * @returns {boolean}. True if there's overlap. False other or if any of the hitboxes is undefined.\r\n */\r\nexport function playerIsHit(playerHitboxes: PlayerHitboxes | undefined, hitbox: GameRectangle | undefined): boolean {\r\n    if (playerHitboxes === undefined) {\r\n        return false;\r\n    }\r\n\r\n    if (hitbox === undefined) {\r\n        return false;\r\n    }\r\n\r\n    const hitMiddle = overlaps(playerHitboxes.middle, hitbox);\r\n    const hitBottom = overlaps(playerHitboxes.bottom, hitbox);\r\n\r\n    return hitMiddle || hitBottom;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport GameLoop from \"../GameLoop\";\r\nimport enemyFactory from \"../Providers/EnemyFactory\";\r\nimport EnemyLevelRunner from \"../Runners/EnemyLevelRunner\";\r\nimport { appState } from \"../State/Store\";\r\nimport handleLevelWon from \"../StateHandlers/HandleLevelWon\";\r\nimport { Enemies } from \"../Types\";\r\nimport EnemyLevel from \"./EnemyLevel\";\r\n\r\n/**\r\n * Module:          TimeLimitLevel\r\n * Responsibility:  Level with asteroids\r\n */\r\n\r\nexport class TimeLimitLevel extends EnemyLevel {\r\n\r\n    /**\r\n     * When true the time is up and the level is won.\r\n     */\r\n    private timeUp = false;\r\n\r\n    /**\r\n     * current enemy of the level.\r\n     */\r\n    private enemy: Enemies;\r\n\r\n    constructor(enemy: Enemies) {\r\n        super(enemy);\r\n\r\n        this.enemy = enemy;\r\n    }\r\n\r\n    public begin(): void {\r\n\r\n        // Use the optional callback to register handleRespawn when the level is ready to begin.\r\n        super.begin(() => {\r\n            this.registerSubscription(GameLoop.registerUpdateState(() => this.handleRespawn()));\r\n\r\n            // After 20 seconds the player wins.\r\n            window.setTimeout(() => {\r\n                this.timeUp = true;\r\n            }, 20000);\r\n        });\r\n    }\r\n\r\n    public handleRespawn(): void {\r\n        const {\r\n            enemyLevelState: { enemies }\r\n        } = appState();\r\n\r\n        if (enemies.length < 8) {\r\n            const newEnemy = enemyFactory(this.enemy);\r\n            EnemyLevelRunner.addEnemy(newEnemy);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Override from EnemyLevel.\r\n     */\r\n    protected monitorLevelWonRun(): void {\r\n        const {\r\n            playerState: { alive }\r\n        } = appState();\r\n\r\n        // It is possible to skip these levels when you die and\r\n        // stop your formation, however, like the original game\r\n        // you have to complete your formation before the level\r\n        // will finish.\r\n        if (this.timeUp && alive) {\r\n            handleLevelWon();\r\n        }\r\n    }\r\n\r\n    public dispose(): void {\r\n        super.dispose();\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport CGAColors from \"../Constants/CGAColors\";\r\nimport { Locations, WarpLevelConstants } from \"../Constants/Constants\";\r\nimport { DEBUGGING_drawGameRect } from \"../Debugging/Debugging\";\r\nimport GameLoop from \"../GameLoop\";\r\nimport { drawLevelBanner } from \"../GameScreen/LevelBanner\";\r\nimport { drawBackground, drawWarpBackground } from \"../GameScreen/StaticRenders\";\r\nimport Guard from \"../Guard\";\r\nimport ILevel from \"../Interfaces/ILevel\";\r\nimport { GameRectangle } from \"../Models/GameRectangle\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport { increaseScore } from \"../State/Game/GameActions\";\r\nimport { setPlayerLocationData, setPlayerMovementLimit } from \"../State/Player/PlayerActions\";\r\nimport { appState, dispatch } from \"../State/Store\";\r\nimport handleLevelWon from \"../StateHandlers/HandleLevelWon\";\r\nimport { handlePlayerDeath } from \"../StateHandlers/HandlePlayerDeath\";\r\nimport { getRandomArrayElement } from \"../Utility/Array\";\r\nimport { coinFlip } from \"../Utility/Lib\";\r\nimport { fallsWithin } from \"../Utility/Location\";\r\n\r\n/**\r\n * Module:          WarpLevel\r\n * Responsibility:  Warp level for the player to pass though.\r\n */\r\n\r\n// The colors used alternate between white and something else for background drawing.\r\nconst backgroundColor: string[] = [\r\n    CGAColors.brown,\r\n    CGAColors.green,\r\n    CGAColors.magenta,\r\n    CGAColors.blue,\r\n];\r\n\r\nconst {\r\n    pixelSize,\r\n    fullGameWidth,\r\n    gameField\r\n} = dimensionProvider();\r\n\r\n// This constants 'left' takes the width of the wrap gate corridor into consireration.\r\n// Always start a warp game using this left so we ensure the player is aligned perfectly.\r\nconst warpGateInitialleft = fullGameWidth / 2 - (16 * pixelSize) / 2;\r\n\r\nexport default class WarpLevel implements ILevel {\r\n\r\n    /**\r\n     * An array of game loop subscriptions.\r\n     */\r\n    private gameLoopSubscriptions: Array<(tick?: number) => void> = [];\r\n\r\n    /**\r\n     * Start the level. Required by contract.\r\n     */\r\n    public begin(): void {\r\n        dispatch(setPlayerMovementLimit(\"immobile\"));\r\n        dispatch(setPlayerLocationData(Locations.Player.spawnLocation.left, Locations.Player.spawnLocation.top));\r\n\r\n        // Register the background draw function so it runs in the game loop.\r\n        this.gameLoopSubscriptions.push(GameLoop.registerBackgroundDrawing(drawBackground));\r\n\r\n        // Determine which additional color next to white the warp background will have.\r\n        const colorIndex = Math.ceil(Math.random() * backgroundColor.length - 1);\r\n        const additionalColor = backgroundColor[colorIndex];\r\n\r\n        const {\r\n            gameState\r\n        } = appState();\r\n\r\n        // Show the level banner for this warp gate levels. Warp gates show the level banner BEFORE the back ground\r\n        // is drawn otherwise the level banner is impossible to read.\r\n        drawLevelBanner(gameState.level, () => {\r\n            // Generate the warpgate so we can draw a path and calculate the hitboxes of the adjecent walls. The complexity of the\r\n            // warp gate is taken from the GameState, the WarpGate class hasn't a clue how complicated the gate will be.\r\n            const warpGate = this.calculateWarpGate(gameField.left, gameField.right, gameState.warpLevelSteps.stepsX, gameState.warpLevelSteps.stepsY);\r\n            const badSpace = this.getWallHitboxes(warpGate);\r\n\r\n            // Banner is gone, time to draw the background of the warp gate background and path.\r\n            this.gameLoopSubscriptions.push(GameLoop.registerBackgroundDrawing(() => drawWarpBackground(additionalColor, warpGate)));\r\n\r\n            // Add a function to the GameLoop that will check if a level has been won.\r\n            this.gameLoopSubscriptions.push(GameLoop.registerUpdateState(() => this.monitorLevelWon()));\r\n\r\n            // Add a function to the GameLoop that checks if the player has reached the end of the warp gate. This will\r\n            // trigger progression to the next level.\r\n            this.gameLoopSubscriptions.push(GameLoop.registerUpdateState((tick) => this.hitDetection(tick, badSpace)));\r\n\r\n            dispatch(setPlayerMovementLimit(\"forceup\"));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get the warp gate's wall hitboxes derived from the warpgate.\r\n     * @param {GameRectangle[]} warpGate. Hitboxes for the walls.\r\n     */\r\n    private getWallHitboxes(warpGate: GameRectangle[]): Array<{ left: GameRectangle, right: GameRectangle }> {\r\n        return warpGate\r\n            .map((wg) => {\r\n                return {\r\n                    left: {\r\n                        left: gameField.left,\r\n                        right: wg.left,\r\n                        top: wg.top,\r\n                        bottom: wg.bottom,\r\n                    },\r\n                    right: {\r\n                        left: wg.right,\r\n                        right: gameField.right,\r\n                        top: wg.top,\r\n                        bottom: wg.bottom,\r\n                    },\r\n                };\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Detect if a player hit a wall.\r\n     * @param {number} tick. Current tick.\r\n     * @param {BadSpace} badSpace. Where not to go.\r\n     */\r\n    private hitDetection(tick: number, badSpace: Array<{ left: GameRectangle; right: GameRectangle }>): void {\r\n        const { playerState, debuggingState } = appState();\r\n        if (Guard.isPlayerAlive(playerState)) {\r\n\r\n            const { hitboxes, alive } = playerState;\r\n\r\n            const hitside = badSpace.some((sb) => {\r\n                const { left: leftDanger, right: rightDanger } = sb;\r\n                const { middle, bottom } = hitboxes;\r\n\r\n                return fallsWithin(bottom.left, bottom.right, bottom.top, bottom.bottom, leftDanger.left, leftDanger.right, leftDanger.top, leftDanger.bottom) ||\r\n                    fallsWithin(bottom.left, bottom.right, bottom.top, bottom.bottom, rightDanger.left, rightDanger.right, rightDanger.top, rightDanger.bottom) ||\r\n                    fallsWithin(middle.left, middle.right, middle.top, middle.bottom, leftDanger.left, leftDanger.right, leftDanger.top, leftDanger.bottom) ||\r\n                    fallsWithin(middle.left, middle.right, middle.top, middle.bottom, rightDanger.left, rightDanger.right, rightDanger.top, rightDanger.bottom);\r\n            });\r\n\r\n            if (hitside && alive) {\r\n                handlePlayerDeath(tick);\r\n            }\r\n        }\r\n\r\n        if (debuggingState.drawHitboxes) {\r\n            badSpace.forEach((bs) => {\r\n                GameLoop.registerDraw(() => DEBUGGING_drawGameRect(bs.left, \"red\"));\r\n                GameLoop.registerDraw(() => DEBUGGING_drawGameRect(bs.right, \"red\"));\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Calculates the warp gate.\r\n     * @param {number} outerLeft.\r\n     * @param {number} outerRight.\r\n     * @param {number} stepSizesX.\r\n     * @param {number} stepSizesY.\r\n     */\r\n    private calculateWarpGate(outerLeft: number, outerRight: number, stepSizesX: number[], stepSizesY: number[]): GameRectangle[] {\r\n\r\n        const safeZone: GameRectangle[] = [];\r\n\r\n        let direction = warpGateInitialleft;\r\n\r\n        // We'll start at the bottom and draw up. This\r\n        // allows me to ensure a safe position for the player to\r\n        // enter the warp gate.\r\n        let bottom = WarpLevelConstants.bottom;\r\n\r\n        const pixelsToGo = WarpLevelConstants.heightPixelCount;\r\n        let pixelsToDo = 0;\r\n\r\n        let stepSizeY = getRandomArrayElement(stepSizesY);\r\n        let stepSizeX = getRandomArrayElement(stepSizesX);\r\n\r\n        while (pixelsToDo + stepSizeY < pixelsToGo) {\r\n            const up = stepSizeY * pixelSize;\r\n\r\n            const rect: GameRectangle = {\r\n                left: direction,\r\n                top: bottom - up,\r\n                right: direction + WarpLevelConstants.width, // aka the width\r\n                bottom, // aka the height.\r\n            };\r\n\r\n            // New left\r\n            const verticalMove = stepSizeX * pixelSize;\r\n\r\n            // 50/50 change that the warp gate goes left or right.\r\n            const leftOrRight = coinFlip();\r\n            if (leftOrRight) {\r\n                // Left\r\n                direction -= verticalMove;\r\n            } else {\r\n                // Right\r\n                direction += verticalMove;\r\n            }\r\n\r\n            // Prevent the warp gate from going off screen by fliping the direction.\r\n            if (direction <= outerLeft || direction + WarpLevelConstants.width >= outerRight) {\r\n                direction *= -1;\r\n            }\r\n\r\n            // bottom moves up.\r\n            bottom -= up;\r\n\r\n            // Reduce pixels to do.\r\n            pixelsToDo += stepSizeY;\r\n            safeZone.push(rect);\r\n\r\n            stepSizeY = getRandomArrayElement(stepSizesY);\r\n            stepSizeX = getRandomArrayElement(stepSizesX);\r\n        }\r\n\r\n        // Deal with some left over space\r\n        if (pixelsToDo !== 0) {\r\n            const rect: GameRectangle = {\r\n                left: direction,\r\n                top: WarpLevelConstants.top,\r\n                right: direction + WarpLevelConstants.width,\r\n                bottom\r\n            };\r\n\r\n            safeZone.push(rect);\r\n        }\r\n\r\n        return safeZone;\r\n    }\r\n\r\n    /**\r\n     * Checks if the level is won whe the player reaches the end of the warp gate.\r\n     */\r\n    private monitorLevelWon(): void {\r\n\r\n        const {\r\n            playerState: { top },\r\n        } = appState();\r\n\r\n        if (top < gameField.top + pixelSize * 3) {\r\n            handleLevelWon();\r\n\r\n            // Warp levels reward 1400 points when you make it.\r\n            dispatch(increaseScore(1400));\r\n\r\n            // Reset the player to the spawn location after a warp level or they'll appear\r\n            // in the top of the screen right in the middle of enemies.\r\n            dispatch(setPlayerLocationData(Locations.Player.spawnLocation.left, Locations.Player.spawnLocation.top));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Dispose stuff.\r\n     */\r\n    public dispose(): void {\r\n        // Dispose all game loop subscriptions.\r\n        this.gameLoopSubscriptions.forEach((s) => s());\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { Locations } from \"../Constants/Constants\";\r\nimport GameLoop from \"../GameLoop\";\r\nimport { playerMovementHandler } from \"../Handlers/PlayerMovementHandler\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport { setPlayerIsAlive, setPlayerLocationData, setPlayerMovementLimit } from \"../State/Player/PlayerActions\";\r\nimport { appState, dispatch } from \"../State/Store\";\r\nimport { MoveLimits } from \"../Types\";\r\nimport { getFrameReturner } from \"../Utility/Frame\";\r\nimport { getLocation } from \"../Utility/Location\";\r\nimport PlayerFormationPart from \"./PlayerFormationPart\";\r\nimport { getPlayerFormationFrames } from \"./PlayerFrames\";\r\n\r\n/**\r\n * Module:          PlayerSpawnManager\r\n * Responsibility:  Handles player respawning.\r\n */\r\n\r\nconst {\r\n    pixelSize,\r\n} = dimensionProvider();\r\n\r\nconst particleTravelDistance = pixelSize * 60;\r\nconst nozzleDistance = particleTravelDistance + pixelSize;\r\nconst nozzleOutAngle = 270;\r\nconst leftWingOutAngle = 200;\r\nconst rightWingOutAngle = 340;\r\n\r\nconst playerFormationFrames = getPlayerFormationFrames();\r\n\r\nlet nozzleTopPart: PlayerFormationPart;\r\nlet nozzleBottomPart: PlayerFormationPart;\r\nlet leftWingPart: PlayerFormationPart;\r\nlet rightWingPart: PlayerFormationPart;\r\n\r\nlet allMovingParts: PlayerFormationPart[] = [];\r\n\r\nlet formationSpeed: \"slow\" | \"fast\";\r\n\r\nlet formationInProgress = false;\r\n\r\nlet currentMovementLimit: MoveLimits = \"none\";\r\n\r\n/**\r\n * playerSpawnManager. Once register in the GameLoop this function will check\r\n * the state if the player can and show respawn.\r\n */\r\nexport default function playerSpawnManager(): void {\r\n    const { playerState, enemyLevelState: { enemies, shrapnells, bullets } } = appState();\r\n\r\n    if (!playerState.alive && formationInProgress === false && shrapnells.length === 0) {\r\n        if (enemies.length > 0) { // Enemies in the level\r\n            if (bullets.length === 0) { // wait till there's no particles.\r\n                setup(\"slow\", \"sideways\"); // Start the slow formation where the player has control.\r\n            }\r\n        } else {\r\n            // No enemies, fast formation\r\n            setup(\"fast\", \"immobile\");\r\n        }\r\n    }\r\n\r\n    if (formationInProgress) {\r\n        updateState();\r\n        GameLoop.registerDraw(draw);\r\n    }\r\n}\r\n\r\n/**\r\n * Creates the player formation particles.\r\n */\r\nfunction createParticles(): void {\r\n\r\n    const {\r\n        playerState\r\n    } = appState();\r\n\r\n    const left = playerState.left;\r\n    const top = playerState.top;\r\n\r\n    const nozzleTip = getLocation(left, top, nozzleOutAngle, nozzleDistance);\r\n    const nozzleBottom = getLocation(left, top, nozzleOutAngle, particleTravelDistance);\r\n    const leftWing = getLocation(left, top, leftWingOutAngle, particleTravelDistance);\r\n    const rightWing = getLocation(left, top, rightWingOutAngle, particleTravelDistance);\r\n\r\n    nozzleTopPart = new PlayerFormationPart(\r\n        nozzleTip.left,\r\n        nozzleTip.top,\r\n        getFrameReturner(playerFormationFrames[0]),\r\n        0,\r\n        pixelSize * 2,\r\n        0);\r\n\r\n    nozzleBottomPart = new PlayerFormationPart(\r\n        nozzleBottom.left,\r\n        nozzleBottom.top,\r\n        getFrameReturner(playerFormationFrames[1]),\r\n        0,\r\n        pixelSize * 2,\r\n        pixelSize);\r\n\r\n    leftWingPart = new PlayerFormationPart(\r\n        leftWing.left,\r\n        leftWing.top,\r\n        getFrameReturner(playerFormationFrames[2]),\r\n        0,\r\n        0,\r\n        pixelSize);\r\n\r\n    rightWingPart = new PlayerFormationPart(\r\n        rightWing.left,\r\n        rightWing.top,\r\n        getFrameReturner(playerFormationFrames[3]),\r\n        0,\r\n        pixelSize * 4,\r\n        pixelSize);\r\n\r\n    allMovingParts = [nozzleTopPart, nozzleBottomPart, leftWingPart, rightWingPart].filter((p) => p !== undefined);\r\n}\r\n\r\n/**\r\n * Forms the player quickly. Does not allow movement.\r\n * @param {() => void)} formationDoneCallback. Called when the formation animation has completed.\r\n * @param {\"fast\" | \"slow\"} speed. Speed of the player formation.\r\n * @param {MoveLimits} limit. Movement limit impaired on the player while the ship is forming.\r\n */\r\nfunction setup(speed: \"fast\" | \"slow\", limit: MoveLimits): void {\r\n    formationSpeed = speed;\r\n\r\n    // Store the current movement limit so we can restore it once the player has formed.\r\n    currentMovementLimit = appState().playerState.moveLimit;\r\n\r\n    dispatch(setPlayerLocationData(Locations.Player.spawnLocation.left, Locations.Player.spawnLocation.top));\r\n    createParticles();\r\n\r\n    if (speed === \"fast\") {\r\n        allMovingParts.forEach((p) => p.setSpeed(30));\r\n    } else {\r\n        allMovingParts.forEach((p) => p.setSpeed(10));\r\n    }\r\n\r\n    dispatch(setPlayerMovementLimit(limit));\r\n    formationInProgress = true;\r\n}\r\n\r\n/**\r\n * Main function that draws the player formation.\r\n */\r\nfunction updateState(): void {\r\n    const { keyboardState } = appState();\r\n\r\n    if (keyboardState.space === false && formationSpeed === \"slow\" && allMovingParts.some((p) => p.traveling())) {\r\n        allMovingParts.forEach((p) => {\r\n            p.updateState();\r\n        });\r\n\r\n        playerMovementHandler(5);\r\n    } else if (formationSpeed === \"fast\") {\r\n        allMovingParts.forEach((p) => {\r\n            p.updateState();\r\n        });\r\n    }\r\n\r\n    if (allMovingParts.every((p) => p.traveling() === false)) {\r\n        dispatch(setPlayerIsAlive(true));\r\n        dispatch(setPlayerMovementLimit(currentMovementLimit));\r\n        allMovingParts = [];\r\n        formationInProgress = false;\r\n    }\r\n}\r\n\r\n/**\r\n * Draw the moving parts.\r\n */\r\nfunction draw(): void {\r\n    allMovingParts.forEach((p) => p.draw());\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport speedProvider from \"../Providers/SpeedProvider\";\r\nimport renderFrame from \"../Render/RenderFrame\";\r\nimport { appState } from \"../State/Store\";\r\nimport { Frame, FrameProviderFunction } from \"../Types\";\r\nimport Mutators from \"../Utility/FrameMutators\";\r\nimport { calculateAngle } from \"../Utility/Geometry\";\r\nimport { calculateDistance, getLocation } from \"../Utility/Location\";\r\n\r\n/**\r\n * Module:          PlayerFormationPart\r\n * Responsibility:  A particle that travels a distance and then stops being drawn.\r\n */\r\n\r\nconst minimumDistance = speedProvider(20);\r\n\r\nexport default class PlayerFormationPart {\r\n\r\n    /**\r\n     * Current particle location\r\n     */\r\n    private currentLeftLocation: number;\r\n\r\n    /**\r\n     * Current top location\r\n     */\r\n    private currentTopLocation: number;\r\n\r\n    /**\r\n     * Particle speed.\r\n     */\r\n\r\n    private speed: number;\r\n\r\n    /**\r\n     * The current frame.\r\n     */\r\n    private currentFrame: Frame;\r\n\r\n    /**\r\n     * Offset to add to the left.\r\n     */\r\n    private leftOffset: number;\r\n\r\n    /**\r\n     * Offset to add to the top.\r\n     */\r\n    private topOffset: number;\r\n\r\n    /**\r\n     * Construct the object.\r\n     * @param {number} left. Left coordinate.\r\n     * @param {number} top. Top coordinate\r\n     * @param {FrameProviderFunction} getFrame. Frame to render for this part.\r\n     * @param {number} speed. Speed at which the part travels.\r\n     * @param {number} leftOffset. Number of pixels to add to the initial left position and the target left position.\r\n     * @param {number} topOffset. Number of pixels to add to the initial top position and the target top position.\r\n     */\r\n    constructor(left: number, top: number, getFrame: FrameProviderFunction, speed: number, leftOffset: number, topOffset: number) {\r\n\r\n        this.currentFrame = getFrame();\r\n        Mutators.Frame.convertHexToCGA(this.currentFrame);\r\n\r\n        this.currentLeftLocation = left + leftOffset;\r\n        this.currentTopLocation = top + topOffset;\r\n        this.leftOffset = leftOffset;\r\n        this.topOffset = topOffset;\r\n\r\n        this.speed = speed;\r\n    }\r\n\r\n    /**\r\n     * Update the state of the object.\r\n     */\r\n    public updateState(): void {\r\n\r\n        const {\r\n            playerState\r\n        } = appState();\r\n\r\n        const targetLeftLocation = playerState.left + this.leftOffset;\r\n        const targetTopLocation = playerState.top + this.topOffset;\r\n\r\n        const angle = calculateAngle(this.currentLeftLocation, this.currentTopLocation, targetLeftLocation, targetTopLocation);\r\n        const distance = calculateDistance(this.currentLeftLocation, this.currentTopLocation, targetLeftLocation, targetTopLocation);\r\n\r\n        if (distance > minimumDistance) {\r\n            const nextLocation = getLocation(this.currentLeftLocation, this.currentTopLocation, angle, this.speed);\r\n            this.currentLeftLocation = nextLocation.left;\r\n            this.currentTopLocation = nextLocation.top;\r\n        } else {\r\n            this.currentLeftLocation = targetLeftLocation;\r\n            this.currentTopLocation = targetTopLocation;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Draw the particle.\r\n     */\r\n    public draw(): void {\r\n        renderFrame(this.currentLeftLocation, this.currentTopLocation, this.currentFrame);\r\n    }\r\n\r\n    /**\r\n     * Returns true if the particle is still traveling to its location.\r\n     * @returns {boolean}. True if the particle is still traveling.\r\n     */\r\n    public traveling(): boolean {\r\n        const {\r\n            playerState\r\n        } = appState();\r\n\r\n        const targetLeftLocation = playerState.left + this.leftOffset;\r\n        const targetTopLocation = playerState.top + this.topOffset;\r\n\r\n        const distance = calculateDistance(this.currentLeftLocation, this.currentTopLocation, targetLeftLocation, targetTopLocation);\r\n        return distance > minimumDistance;\r\n    }\r\n\r\n    /**\r\n     * Sets the speed of the particle.\r\n     * @param {number} speed. Desired particle speed.\r\n     */\r\n    public setSpeed(speed: number): void {\r\n        this.speed = speed;\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          GenericRunner\r\n * Responsibility:  Handles generic state updates that can occur in any level.\r\n */\r\n\r\nimport GameLoop from \"../GameLoop\";\r\nimport renderFrame from \"../Render/RenderFrame\";\r\nimport { setBulletState, setExplosionCenters, setShrapnellState } from \"../State/EnemyLevel/EnemyLevelActions\";\r\nimport { StateProviders } from \"../State/StateProviders\";\r\nimport { appState, dispatch } from \"../State/Store\";\r\n\r\nexport default function genericRunner(tick: number): void {\r\n    handleExplosionCenters(tick);\r\n    handleBullets();\r\n    handleShrapnell();\r\n    GameLoop.registerDraw(draw);\r\n}\r\n\r\n/**\r\n * Handles explosion centers.\r\n * @param {number} tick. Current tick\r\n */\r\nfunction handleExplosionCenters(tick: number): void {\r\n    const { explosionCenters } = appState().enemyLevelState;\r\n\r\n    const remainingExplosions = explosionCenters.filter((ec) => ec.startTick + ec.explosionCenterDelay > tick);\r\n    dispatch(setExplosionCenters(remainingExplosions));\r\n}\r\n\r\n/**\r\n * Handle bullet movement.\r\n */\r\nfunction handleBullets(): void {\r\n    const bullets = appState().enemyLevelState.bullets;\r\n    const newState = StateProviders.getUpdatedParticleState(bullets);\r\n\r\n    dispatch(setBulletState(newState));\r\n}\r\n\r\n/**\r\n * Handles particles state updates.\r\n * @param {number} tick. Current tick.\r\n */\r\nfunction handleShrapnell(): void {\r\n    const newState = StateProviders.getUpdatedParticleState(appState().enemyLevelState.shrapnells);\r\n    dispatch(setShrapnellState(newState));\r\n}\r\n\r\nfunction draw(): void {\r\n    const { explosionCenters, shrapnells } = appState().enemyLevelState;\r\n    for (const center of explosionCenters) {\r\n        renderFrame(center.left, center.top, center.coloredFrame);\r\n    }\r\n\r\n    for (const shrapnell of shrapnells) {\r\n        renderFrame(shrapnell.left, shrapnell.top, shrapnell.coloredFrame);\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { angles } from \"../Constants/Angles\";\r\nimport CGAColors from \"../Constants/CGAColors\";\r\nimport { Speeds } from \"../Constants/Constants\";\r\nimport GameLoop from \"../GameLoop\";\r\nimport { playerMovementHandler } from \"../Handlers/PlayerMovementHandler\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport renderFrame from \"../Render/RenderFrame\";\r\nimport getTwoPixelBullet from \"../SharedFrames/twoPXBullet\";\r\nimport { ParticleState } from \"../State/Player/ParticleState\";\r\nimport { setPlayerBulletState } from \"../State/Player/PlayerActions\";\r\nimport { StateProviders } from \"../State/StateProviders\";\r\nimport { appState, dispatch } from \"../State/Store\";\r\nimport { getFrameHitbox } from \"../Utility/Frame\";\r\nimport { fallsWithinGameField, getLocation } from \"../Utility/Location\";\r\n\r\n/**\r\n * Module:          PlayerRunner\r\n * Responsibility:  Module dedicated to managing player state.\r\n */\r\n\r\nexport default function playerRunner(): void {\r\n    updateState();\r\n    GameLoop.registerDraw(draw);\r\n}\r\n\r\nconst {\r\n    pixelSize,\r\n} = dimensionProvider();\r\n\r\nconst playerBulletFrame = getTwoPixelBullet(CGAColors.yellow);\r\n\r\n/**\r\n * Updates the player state.\r\n */\r\nfunction updateState(): void {\r\n    const {\r\n        playerState\r\n    } = appState();\r\n\r\n    // Important! The player runner is responsible for handling player action while the\r\n    // player is alive. When the player dies the PlayerSpawnManager takes over.\r\n    if (!playerState.alive) {\r\n        return;\r\n    }\r\n\r\n    playerMovementHandler(10);\r\n\r\n    handlePlayerBulletMovement();\r\n    handlePlayerBulletFiring();\r\n}\r\n\r\n/**\r\n * Checks if the player can fire and if they pressed the fire key. If so, a bullet is dispatched to the state.\r\n */\r\nfunction handlePlayerBulletFiring(): void {\r\n    const { playerState, keyboardState } = appState();\r\n    if (playerState.nozzleLocation !== undefined && keyboardState.fire && playerState.bulletState === undefined) {\r\n        const nozzleLocation = playerState.nozzleLocation;\r\n        const bullet = getPlayerBullet(nozzleLocation.left, nozzleLocation.top);\r\n        dispatch(setPlayerBulletState(bullet));\r\n    }\r\n}\r\n\r\n/**\r\n * Moves the bullet up until it reached the top of the game game field.\r\n * If the bullet hits something, that handled in the EnemyLevelRunner.\r\n */\r\nfunction handlePlayerBulletMovement(): void {\r\n    const { playerState } = appState();\r\n    if (playerState.bulletState !== undefined) {\r\n        const bullet = playerState.bulletState;\r\n        const nextLocation = getLocation(bullet.left, bullet.top, bullet.angle, bullet.speed);\r\n        const newHitbox = getFrameHitbox(nextLocation.left, nextLocation.top, bullet.coloredFrame);\r\n\r\n        if (fallsWithinGameField(newHitbox.left, newHitbox.right, nextLocation.top, newHitbox.bottom)) {\r\n            const newState = getPlayerBullet(nextLocation.left, nextLocation.top);\r\n            dispatch(setPlayerBulletState(newState));\r\n        } else {\r\n            dispatch(setPlayerBulletState(undefined));\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Gets a player bullet particle state.\r\n * @param {number} left\r\n * @param {number} top\r\n * @returns {ParticleState}\r\n */\r\nfunction getPlayerBullet(left: number, top: number): ParticleState {\r\n    return StateProviders.getParticleState(left, top, Speeds.Bullets.player, angles.up, playerBulletFrame, 1, -0.5 * pixelSize, -0.5 * pixelSize);\r\n}\r\n\r\n/**\r\n * Draw the player and player bullet.\r\n */\r\nfunction draw(): void {\r\n    const { playerState } = appState();\r\n    if (playerState.alive) {\r\n        renderFrame(playerState.left, playerState.top, playerState.coloredFrame);\r\n    }\r\n\r\n    if (playerState.bulletState) {\r\n        const bullet = playerState.bulletState;\r\n        renderFrame(bullet.left, bullet.top, bullet.coloredFrame);\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Actions\r\n * Responsibility:  Actions for Debugging state.\r\n */\r\n\r\nimport Constants from \"./DebuggingConstants\";\r\nimport DebuggingState from \"./DebuggingState\";\r\nimport { SetDebuggingState } from \"./DebuggingTypes\";\r\n\r\nexport function setDebuggingState(state: DebuggingState): SetDebuggingState {\r\n    return {\r\n\r\n        type: Constants.setDebuggingState,\r\n        state,\r\n    };\r\n}"],"sourceRoot":""}