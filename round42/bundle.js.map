{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Providers/DimensionProvider.ts","webpack:///./src/State/Store.ts","webpack:///./src/Utility/Frame.ts","webpack:///./src/Constants/CGAColors.ts","webpack:///./src/Utility/FrameMutators.ts","webpack:///./src/Utility/Location.ts","webpack:///./src/GameLoop.ts","webpack:///./src/State/Game/GameActions.ts","webpack:///./src/Utility/Geometry.ts","webpack:///./src/Utility/Array.ts","webpack:///./src/State/Player/PlayerActions.ts","webpack:///./src/Providers/Render/CtxProvider.ts","webpack:///./src/Render/RenderFrame.ts","webpack:///./src/Constants/Angles.ts","webpack:///./src/Constants/Constants.ts","webpack:///./src/Base/BaseEnemy.ts","webpack:///./src/State/EnemyLevel/EnemyLevelActions.ts","webpack:///./node_modules/immer/src/common.js","webpack:///./node_modules/immer/src/scope.js","webpack:///./node_modules/immer/src/es5.js","webpack:///./node_modules/immer/src/proxy.js","webpack:///./node_modules/immer/src/patches.js","webpack:///./node_modules/immer/src/immer.js","webpack:///./node_modules/immer/src/index.js","webpack:///./src/Player/PlayerFrames.ts","webpack:///./src/Utility/Lib.tsx","webpack:///./src/Base/BaseLocationProvider.ts","webpack:///./src/State/StateProviders.ts","webpack:///./src/Providers/PlayerSpawnLocationProvider.ts","webpack:///./src/GameScreen/StaticRenders.ts","webpack:///./src/Handlers/TickHandler.ts","webpack:///./src/Providers/SpeedProvider.ts","webpack:///./src/StateHandlers/HandleLevelWon.ts","webpack:///./src/Guard.ts","webpack:///./node_modules/symbol-observable/es/index.js","webpack:///./src/Debugging/Debugging.ts","webpack:///./src/State/Debugging/DebuggingConstants.ts","webpack:///./src/State/EnemyLevel/EnemyLevelConstants.ts","webpack:///./src/State/Game/GameConstants.ts","webpack:///./src/State/Keyboard/KeyboardConstants.ts","webpack:///./src/State/Player/PlayerConstants.ts","webpack:///./src/Constants/WarpLevelConstants.ts","webpack:///./src/SharedFrames/Numbers.ts","webpack:///./src/Providers/EnemyFactory.ts","webpack:///./src/Enemies/Orb/GetOrbOffsetFrames.ts","webpack:///./src/Enemies/Robot/GetRobotOffsetFrames.ts","webpack:///./src/Base/BaseFrameProvider.ts","webpack:///./src/Runners/EnemyLevelRunner.ts","webpack:///./src/StateHandlers/DispatchExplosion.ts","webpack:///./src/StateHandlers/HandlePlayerDeath.ts","webpack:///./src/Levels/EnemyLevel.ts","webpack:///./src/GameScreen/LevelBanner.ts","webpack:///./src/SharedFrames/twoPXBullet.ts","webpack:///./src/Utility/KeyboardEvents.ts","webpack:///./src/Handlers/PlayerMovementHandler.ts","webpack:///./node_modules/symbol-observable/es/ponyfill.js","webpack:///./src/index.ts","webpack:///./node_modules/redux/es/redux.js","webpack:///(webpack)/buildin/global.js","webpack:///(webpack)/buildin/harmony-module.js","webpack:///./src/State/Debugging/DebuggingReducer.ts","webpack:///./src/State/EnemyLevel/EnemyLevelReducer.ts","webpack:///./node_modules/process/browser.js","webpack:///./src/State/Game/GameStateReducer.ts","webpack:///./src/State/Game/WarpGameComplexities.ts","webpack:///./src/State/Keyboard/KeyboardStateReducer.ts","webpack:///./src/State/Player/PlayerReducer.ts","webpack:///./src/Player/PlayerExplosion.ts","webpack:///./src/Utility/HexToCGAConverter.ts","webpack:///./src/GameScreen/StatusBar.ts","webpack:///./src/Utility/String.ts","webpack:///./src/Levels/SubscribeToStore.ts","webpack:///./src/Levels/LevelFactory.ts","webpack:///./src/Levels/AsteroidLevel.ts","webpack:///./src/Enemies/Asteroid/AsteroidEnemy.ts","webpack:///./src/Enemies/Asteroid/GetAsteroidOffsetFrames.ts","webpack:///./src/Enemies/Balloon/BalloonEnemy.ts","webpack:///./src/Enemies/Balloon/GetBalloonOffsetFrames.ts","webpack:///./src/Enemies/Bird/BirdEnemy.ts","webpack:///./src/Enemies/Bird/GetBirdOffsetFrames.ts","webpack:///./src/Enemies/Orb/OrbEnemy.ts","webpack:///./src/Enemies/Robot/RobotEnemy.ts","webpack:///./src/Enemies/Spinner/GetSpinnerOffsetFrames.ts","webpack:///./src/Enemies/Spinner/SpinnerEnemy.ts","webpack:///./src/SharedFrames/Explosion01.ts","webpack:///./src/SharedFrames/Explosion02.ts","webpack:///./src/SharedFrames/Explosion03.ts","webpack:///./src/SharedFrames/Explosion04.ts","webpack:///./src/Providers/FrameProviders/BackAndForthFrameProvider.ts","webpack:///./src/Providers/FrameProviders/CircleFrameProvider.ts","webpack:///./src/Providers/LocationProviders/AsteroidLocationProvider.ts","webpack:///./src/Providers/LocationProviders/MoveDownAppearUpLocaionProvider.ts","webpack:///./src/Providers/LocationProviders/SideToSideUpAndDownLocationProvider.ts","webpack:///./src/Providers/LocationProviders/VanishRightAppearLeftLocationProvider.ts","webpack:///./src/Providers/LocationProviders/Wobble.ts","webpack:///./src/Player/GetPhaserLocations.ts","webpack:///./src/Player/PlayerHelper.ts","webpack:///./src/SharedFrames/Characters.ts","webpack:///./src/Utility/getCharacter.ts","webpack:///./src/Providers/EnemyLevelContentProvider.ts","webpack:///./src/Enemies/Orb/OrbEnemiesSpawnLocations.ts","webpack:///./src/Enemies/Robot/RobotSpawnLocations.ts","webpack:///./src/Runners/BulletRunner.ts","webpack:///./src/Providers/ShipsToFireProviders/FirstEnemyOccasionalDown.ts","webpack:///./src/Providers/ShipsToFireProviders/MaxFiveDiagonal.ts","webpack:///./src/State/Keyboard/KeyboardActions.ts","webpack:///./src/Providers/SpawnLocations/SevenSixSevenGridProvider.ts","webpack:///./src/Levels/WarpLevel.ts","webpack:///./src/Player/PlayerSpawnManager.ts","webpack:///./src/Player/PlayerFormationPart.ts","webpack:///./src/Runners/GenericRunner.ts","webpack:///./src/Runners/PlayerRunner.ts","webpack:///./src/State/Debugging/DebuggingActions.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","gameDimensions","body","document","getElementById","rect","getBoundingClientRect","height","pixelSize","width","Math","floor","fullGameHeight","fullGameWidth","statusBarBottom","gameFieldRight","gameFieldTop","gameFieldBottom","pixelSize2x","gameField","left","top","right","bottom","allReducers","combineReducers","enemyLevelState","playerState","debuggingState","gameState","keyboardState","store","createReduxStore","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","appStore","getState","action","dispatch","getFrameDimensions","frame","undefined","length","copyFrame","newFrame","row","newRow","push","copyFrames","frames","newFrames","copyExplosion","explosion","newExplosion","particleFrames","explosionCenterFrame","allFrameDimensions","map","f","allWidths","af","allHeights","max","dimensions","objectKeys","keys","round","random","index","Error","topOffset","bottomOffset","frameCopy","CGAColors","black","blue","green","cyan","red","magenta","brown","lightGray","darkGray","lightBlue","lightGreen","lightCyan","lightRed","lightMagenta","yellow","white","validColors","Mutators","Frames","Frame","setColor","colors","convertHexToCGA","forEach","rowIndex","cellColor","cellIndex","useColor","indexOf","colorIndex","replace","parseInt","fallsWithin","outerLeft","outerRight","outerTop","outerBottom","left1","top1","left2","top2","xd","yd","sqrt","pow","angle","speed","relativeSpeed","getNextX","getNextY","leftOffset","mainHandle","updateStateFunctions","backgroundDrawFunctions","foregroundDrawFunctions","drawFunctions","GameLoop","run","tick","requestAnimationFrame","pause","appState","drawHitboxes","DEBUGGING_renderHitboxes","drawGrid","DEBUGGING_drawGrid","gridDetail","Start","Stop","cancelAnimationFrame","registerUpdateState","filter","registerBackgroundDrawing","registerForegroundDrawing","registerDraw","score","type","increaseScore","payload","lives","setLives","addLife","removeLife","phasers","setPhasers","addPhaser","removePhaser","addLevel","level","setLevel","nextLevel","addLifeAndPhaser","setPause","complexity","setWarpLevelComplexity","currentX","cos","PI","currentY","sin","state","up","angles","leftup","rightup","down","leftdown","rightdown","hitbox1","hitbox2","newAngle","startLeft","startTop","endLeft","endTop","dx","dy","atan2","angle1","angle2","angleDifference","abs","outerRect","innerRect","outerRectWidth","outerRectHeight","widthDifference","heightDifference","arr","playerAlive","setPlayerIsAlive","playerIsAlive","moveLimit","setPlayerMovementLimit","hitboxes","nozzleLocation","setPlayerLocationData","particleState","setPlayerBulletState","cachedCtx","canvas","getContext","ctx","columns","columnIndex","color","x","y","fillStyle","fillRect","k","Speeds","Movement","Bullets","bird","robot","orb","spinner","balloon","asteroid","player","Locations","Enemies","Orb","topStart","maxBottom","maxTop","MovementAngles","FrameTimes","negativepixelSize","BaseEnemy","frameChangeTime","getOffsetFrames","getExplosion","locationProvider","frameProvider","enemyId","this","frameTickHandler","onFrameChange","offSetFrames","offSets","setFrames","currentFrame","getCurrentFrame","getOffsetLocation","offsetLeft","offsetTop","idCounter","offsetLocation","updateState","addOrUpdateEnemy","getId","coloredExplosion","hitpoints","getHitpoints","hitbox","getHitbox","centerLocation","getCenterLocation","points","getPoints","frameOffsets","getCurrentIndex","location","getCurrentLocation","increaseSpeed","getFrameCenter","getFrameHitbox","resetLevelState","particle","addParticle","particles","addParticles","explosionCenter","shrapnell","addExplosionCenter","setShrapnellState","locations","setPhaserLocations","clearPhaserLocations","interval","setFireInterval","explosionCenters","setExplosionCenters","bullet","addBullet","bullets","setBulletState","totalEnemies","setTotalEnemies","enemyState","removeEnemy","NOTHING","DRAFTABLE","for","DRAFT_STATE","isDraft","isDraftable","Array","isArray","proto","getPrototypeOf","isPlainObject","constructor","isMap","isSet","original","base","const","assign","target","overrides","override","ownKeys","Reflect","getOwnPropertySymbols","obj","getOwnPropertyNames","concat","shallowCopy","invokeGetters","slice","Map","Set","clone","desc","getOwnPropertyDescriptor","writable","configurable","each","iter","entry","isEnumerable","prop","has","thing","is","hasSymbol","hasMap","hasSet","makeIterable","next","self","iterator","iterateMapValues","receiver","isEntries","latest","result","done","makeIterateSetValues","createProxy","draft","drafts","finalized","finalizing","set","modified","copy","add","wrapSetValue","cloned","freeze","deep","isFrozen","clear","delete","dontMutateFrozenCollections","_","ImmerScope","parent","canAutoFreeze","patches","revoke","clonePotentialDraft","defineProperties","mapTraps","proxyMethod","setTraps","iterateSetValues","proxySet","descriptors","assertUnrevoked","peek","prepareCopy","assigned","markChanged","proxyProperty","scope","current","revoked","createHiddenProperty","usePatches","patchListener","inversePatches","leave","enter","finalizeTraps","size","reciever","cb","values","entries","thisArg","traps","reduce","acc","builder","proxyAttr","fn","trap","args","JSON","stringify","markChangesSweep","let","hasArrayChanges","hasMapChanges","hasSetChanges","hasObjectChanges","baseValue","descriptor","hasChanges","isReplaced","markChangesRecursively","objectTraps","arrayTraps","Proxy","revocable","proxy","deleteProperty","owner","setPrototypeOf","arguments","apply","isNaN","reflectTraps","makeTrapsForGetters","prev","assignMap","getters","generateArrayPatches","basePath","delta","start","end","path","op","replaceCount","generatePatchesFromAssigned","assignedValue","origValue","generateSetPatches","unshift","applyPatches","patch","join","splice","configDefaults","useProxies","autoFreeze","process","onAssign","onDelete","onCopy","Immer","config","setUseProxies","produce","produceWithPatches","recipe","defaultBase","hasError","Promise","then","processResult","error","maybeFreeze","arg1","arg2","arg3","ip","createDraft","isManual","finishDraft","setAutoFreeze","modernProxy","legacyProxy","baseDraft","willFinalize","finalize","finalizeTree","exists","generatePatches","root","rootPath","needPatches","finalizeProperty","isDraftProp","isSetMember","immer","min","time","factor","query","split","item","kvp","baseSpeed","StateProviders","getParticleState","acceletation","hitboxTopOffset","hitboxBottomOffset","coloredFrame","getBulletParticleState","ownerId","explosionShrapnellProvider","particleFrameIndexes","particleFrameIndex","particleFrame","useSpeed","speeds","acceleration","getUpdatedParticleState","nextState","updatedParticle","newLocation","getLocation","fallsWithinGameField","getEnemyState","enemy","enemies","find","e","leftSpawnPosition","getPlayerFrame","topSpawnPosition","clearGameFieldBackground","additionalColor","gate","drawWhite","onTimePassed","lastTick","baseTime","calculateTimeSpeedIncrease","Guard","isValidGameKey","allGameKeys","isEnemy","getObjectType","isPlayerAlive","alive","global","DEBUGGING_drawGameRect","lineWith","beginPath","strokeStyle","lineWidth","stroke","closePath","middle","bulletState","b","shrapnells","lineTo","Constants","setDebuggingState","arrowUp","arrowDown","arrowLeft","arrowRight","backspace","f1","f2","space","keyup","keydown","WarpLevelConstants","heightPixelCount","numbers","resource","maxSizes","getRandomFrameKeyIndex","randomMovementAngle","getRandomArrayElement","getExplosion02","getSpinnerOffsetFrames","verticalBounds","randomAngle","getBalloonOffsetFrames","getAsteroidOffsetFrames","AsteroidLocationProvider","AsteroidEnemy","orbMainFrame","getMaximumFrameDimensions","offsetCount","startFrameIndex","frameIndex","maxIndex","returnValue","getFrameByIndex","localState","phaserFrame","EnemyLevelRunner","draw","phaserLocations","pf","playerHitByParticle","some","playerIsHit","handlePlayerDeath","handleEnemyDestruction","totalNumberOfEnemies","dispatchExplosion","selfDestruct","es","handleSelfDestruct","phraser","randomEnemy","playerNozzleLocation","randomEnemyCenter","setTimeout","handlePhaser","handleEnemies","enemyHitPlayerDetection","playerBulletHitbox","hitEnemy","overlaps","recudeHitpoints","playerHitEnemyDetection","handleHitDetection","setEnemies","newEnemies","addEnemy","newEnemy","newShrapnell","startTick","explosionCenterDelay","playerIsImmortal","subscriptions","levelReady","bulletRunner","enemyLevelContentFactory","registerSubscription","drawBackground","drawLevelBanner","monitorLevelWonRun","levelClear","greenCharacters","greenNumbers","roundCharacters","barwidth","roundWidth","charSpacing","levelNumber","sub","barcolor","bartop","leftNumber","rightNumber","leftNumberFrame","rightNumberFrame","levelNumberStartPos","charLeft","stringLevel","toString","rightNumberPosition","twoPixelBullet","onKeyDown","event","code","stopPropagation","preventDefault","keyDown","onKeyUp","keyUp","addEventListener","removeEventListener","doublePixel","playerHitboxAdjustment","playerWidth","playerHeight","localKeyboardState","speedX","speedY","getAngle","nextX","nextY","currentLocation","getNextLocationForPlayer","hitBox","hitBoxes","symbolObservablePonyfill","observable","startEssential","registerListeners","drawStatusBar","drawGameFieldBorder","onload","queryKeyValuePairs","getURLQueryKVPs","search","showPlayGround","showCanvas","showhitboxes","immortal","r42","setWarpGamteComplexity","v","randomString","substring","ActionTypes","INIT","REPLACE","PROBE_UNKNOWN_ACTION","reducer","preloadedState","enhancer","_ref2","currentReducer","currentState","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","subscribe","listener","isSubscribed","listeners","replaceReducer","nextReducer","_ref","outerSubscribe","observer","TypeError","observeState","unsubscribe","getUndefinedStateErrorMessage","actionType","String","reducers","reducerKeys","finalReducers","shapeAssertionError","finalReducerKeys","assertReducerShape","hasChanged","_i","_key","previousStateForKey","nextStateForKey","errorMessage","bindActionCreator","actionCreator","bindActionCreators","actionCreators","boundActionCreators","_defineProperty","enumerableOnly","sym","_objectSpread2","source","getOwnPropertyDescriptors","compose","_len","funcs","arg","a","applyMiddleware","middlewares","_dispatch","middlewareAPI","chain","middleware","g","Function","originalModule","webpackPolyfill","children","fireInterval","newState","findIndex","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","len","marker","runClearTimeout","Item","array","noop","nextTick","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","warpLevelSteps","warpLevelComplexities","0","stepsX","stepsY","1","2","3","4","5","6","7","8","fire","playerExplosion","spawnLocation","playerFrame","initState","hex","numberFrames","lifeFrame","scoreStartPosition","scoreSpacing","scoreBackgroundWidth","phaserStartPosition","phaserSpacing","phaserBackgroundWidth","livesSpacing","lifeFrameWidth","leftNumberLeft","rightNumberLeft","scoreBoardHeight","scoreString","padLeft","cnt","actualSpacing","drawScore","maxPhasersToBeDrawn","drawPhasers","maxLivesToBeDrawn","drawLives","paddedLevelString","rightFrame","leftFrame","drawLevel","padWidth","padLength","padding","currentLevel","currentScore","dispose","levelFactory","begin","AsteroidLevel","super","timeUp","handleRespawn","dispatchCurrentState","getNextFrame","BalloonEnemy","getFrames","nextFrame","BirdEnemy","colorTickHandler","onColorChange","setCurrentFrameColor","OrbEnemy","currentColorIndex","updateCurrentFrameAndColor","currentColor","offset","RobotEnemy","SpinnerEnemy","centerColor","shrapnellColor","explosion01","BackAndForthFrameProvider","CircleFrameProvider","doubleHeight","getRandomLeft","nextLocation","randomNumberInRange","MoveDownAppearUpLocationProvider","SideToSideUpAndDownLocationProvider","topLimit","bottomLimit","VanishRightAppearLeftLocationProvider","Wobble","angleSwitchTimeout","getAngles","sourceLeft","sourceTop","targetLeft","targetTop","calculateAngle","distance","calculateDistance","playerHitboxes","hitMiddle","hitBottom","Characters","character","upperCaseCharacter","toUpperCase","charCodeAt","orbSpawnLocations","spacing","robotSpawnLocations","bulletColor","shipsToFire","coloredBulletFrame","shipToFire","lastEnemy","ceil","getBestAngle","bulletsToFire","candidates","above","below","center","angleToPlayer","calculateAngleDifference","sortFunction","sort","e1","e2","getBestCandiates","candiate","verticalSpacing","firstAndThirdRowLeftStart","secondRowLeftStart","firstAndSecondRowSpacing","secondRowSpacing","backgroundColor","warpGateInitialleft","gameLoopSubscriptions","warpGate","calculateWarpGate","badSpace","getWallHitboxes","drawWarpBackground","monitorLevelWon","hitDetection","wg","sb","leftDanger","rightDanger","bs","stepSizesX","stepSizesY","safeZone","direction","pixelsToGo","pixelsToDo","stepSizeY","stepSizeX","verticalMove","coinFlip","particleTravelDistance","nozzleDistance","playerFormationFrames","getPlayerFormationFrames","nozzleTopPart","nozzleBottomPart","leftWingPart","rightWingPart","formationSpeed","allMovingParts","formationInProgress","currentMovementLimit","setup","limit","nozzleTip","nozzleBottom","leftWing","rightWing","getFrameReturner","createParticles","setSpeed","traveling","playerMovementHandler","every","minimumDistance","getFrame","currentLeftLocation","currentTopLocation","targetLeftLocation","targetTopLocation","remainingExplosions","ec","handleExplosionCenters","handleBullets","handleShrapnell","newHitbox","getPlayerBullet","handlePlayerBulletMovement","handlePlayerBulletFiring","playerBulletFrame"],"mappings":"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AEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,KACX,CAAC,IAAK,IAAK,MAEf,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,MAEzB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,MAEpB,CACI,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IA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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 50);\n","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { GameDimensions } from \"../Models/GameDimensions\";\r\n\r\n/**\r\n * Module:          Dimension Provider\r\n * Responsibility:  Provide dimensions for game objects. Not a part of the State because the entire game uses it.\r\n */\r\n\r\nlet gameDimensions: GameDimensions;\r\n\r\n/**\r\n * dimensionProvider. Single function responsible for all dimensions important to the game.\r\n * @param {Node} node. Node\r\n * @returns {GameDimensions}. An object with dimensions.\r\n */\r\nexport default function dimensionProvider(): GameDimensions {\r\n    if (!gameDimensions) {\r\n\r\n        const body = document.getElementById(\"body\") as HTMLBodyElement;\r\n\r\n        let rect: DOMRect;\r\n        if (!body) {\r\n            // Not a nice solution, but the dimensionProvider is called from within unit tests and I do not want\r\n            // to add elements.\r\n            rect = { height: 1024 } as DOMRect;\r\n        } else {\r\n            rect = body.getBoundingClientRect();\r\n        }\r\n\r\n        let pixelSize = 0;\r\n        if (rect.width < rect.height) {\r\n            pixelSize = Math.floor(rect.width / 160);\r\n        } else {\r\n            pixelSize = Math.floor(rect.height / 100);\r\n        }\r\n\r\n        const fullGameHeight = pixelSize * 100;\r\n        const fullGameWidth = pixelSize * 160;\r\n\r\n        const statusBarBottom = pixelSize * 6;\r\n\r\n        const gameFieldLeft = pixelSize;\r\n        const gameFieldRight = fullGameWidth - pixelSize;\r\n        const gameFieldTop = statusBarBottom + pixelSize;\r\n        const gameFieldBottom = fullGameHeight - pixelSize;\r\n\r\n        const gameFieldWidth = gameFieldRight - gameFieldLeft;\r\n        const gameFieldHeight = gameFieldBottom - gameFieldTop;\r\n\r\n        gameDimensions = {\r\n            fullGameWidth,\r\n            fullGameHeight,\r\n            statusBarBottom,\r\n            pixelSize,\r\n            pixelSize2x: pixelSize * 2,\r\n            gameField: {\r\n                left: gameFieldLeft,\r\n                top: gameFieldTop,\r\n                right: gameFieldRight,\r\n                bottom: gameFieldBottom,\r\n                width: gameFieldWidth,\r\n                height: gameFieldHeight,\r\n            }\r\n        };\r\n    }\r\n\r\n    return gameDimensions;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { Action, combineReducers, createStore, Store } from \"redux\";\r\nimport ApplicationState from \"./ApplicationState\";\r\nimport debuggingReducer from \"./Debugging/DebuggingReducer\";\r\nimport enemyLevelReducer from \"./EnemyLevel/EnemyLevelReducer\";\r\nimport gameStateReducer from \"./Game/GameStateReducer\";\r\nimport keyboardStateReducer from \"./Keyboard/KeyboardStateReducer\";\r\nimport playerReducer from \"./Player/PlayerReducer\";\r\n\r\n/**\r\n * Module:          Store\r\n * Responsibility:  Handles the redux store\r\n */\r\n\r\nconst allReducers = combineReducers({\r\n    enemyLevelState: enemyLevelReducer,\r\n    playerState: playerReducer,\r\n    debuggingState: debuggingReducer,\r\n    gameState: gameStateReducer,\r\n    keyboardState: keyboardStateReducer\r\n});\r\n\r\nconst store = createReduxStore();\r\n\r\nexport function createReduxStore(): Store<ApplicationState> {\r\n    return createStore(\r\n        allReducers,\r\n        (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__());\r\n}\r\n\r\n/**\r\n * Returns the store\r\n * @returns {Store}. The redux store.\r\n */\r\nexport function appStore(): Store<ApplicationState> {\r\n    return store;\r\n}\r\n\r\n/**\r\n * Returns the ApplicationState\r\n * @returns {ApplicationState}. The application state.\r\n */\r\nexport function appState(): ApplicationState {\r\n    return appStore().getState();\r\n}\r\n\r\nexport function dispatch(action: Action): void {\r\n    store.dispatch(action);\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport Explosion from \"../Models/Explosion\";\r\nimport { GameLocation } from \"../Models/GameLocation\";\r\nimport { GameRectangle } from \"../Models/GameRectangle\";\r\nimport { GameSize } from \"../Models/GameSize\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport { Frame } from \"../Types\";\r\n\r\n/**\r\n * Module:          Frame\r\n * Responsibility:  Module for dealing with Frames.\r\n */\r\n\r\n/**\r\n * Returns the dimensions of a frame in PX.\r\n * @param {Frame} frame. A frame.\r\n * @returns {width, height}.\r\n */\r\nexport function getFrameDimensions(frame: Frame, pixelSize?: number): GameSize {\r\n\r\n    if (pixelSize === undefined) {\r\n        pixelSize = dimensionProvider().pixelSize;\r\n    }\r\n\r\n    return {\r\n        width: frame[0].length * pixelSize,\r\n        height: frame.length * pixelSize,\r\n    };\r\n}\r\n\r\nexport function getMaximumFrameDimensions(frames: Frame[], pixelSize?: number): GameSize {\r\n    const allFrameDimensions = frames.map((f) => getFrameDimensions(f, pixelSize));\r\n\r\n    const allWidths = allFrameDimensions.map((af) => af.width);\r\n    const allHeights = allFrameDimensions.map((af) => af.width);\r\n\r\n    return {\r\n        width: Math.max(...allWidths),\r\n        height: Math.max(...allHeights),\r\n    };\r\n}\r\n\r\n/**\r\n * Calculates a location object where the center of a frame resides.\r\n * @param {number} left. Left coordinate.\r\n * @param {number} top. Top coordinate.\r\n * @param {frame} frame.\r\n */\r\nexport function getFrameCenter(left: number, top: number, frame: Frame, pixelSize: number): GameLocation {\r\n    const dimensions = getFrameDimensions(frame, pixelSize);\r\n\r\n    return {\r\n        left: left + dimensions.width / 2,\r\n        top: top + dimensions.height / 2,\r\n    };\r\n}\r\n\r\n/**\r\n * Returns a random frame index.\r\n * @param {Frames} frames.\r\n * @returns {number}. Frame index.\r\n */\r\nexport function getRandomFrameKeyIndex(frames: Frame[]): number {\r\n    const objectKeys = Object.keys(frames).length - 1;\r\n\r\n    return Math.round(Math.random() * objectKeys);\r\n}\r\n\r\n/**\r\n * Returns a frame by index. Returns undefined if the frame is not defined.\r\n * @param {Frames} frames. Frames.\r\n * @param {number} index. Index of the frame.\r\n * @returns {Frame | undefined}. Returns the frame if one was found for the passed index, otherwise returns undefined.\r\n */\r\nexport function getFrameByIndex(frames: Frame[], index: number): Frame {\r\n    const frame = frames[index];\r\n\r\n    if (!frame) {\r\n        throw new Error(\"No frame found\");\r\n    }\r\n\r\n    return frame;\r\n}\r\n\r\n/**\r\n * getFrameHitbox\r\n * @param {number} Left. Left coordinate.\r\n * @param {number} top. Top coordinate.\r\n * @param {Frame} frame. A frame\r\n * @param {number} pixelSize.\r\n * @param {number} topOffset.\r\n * @param {number} bottomOffset.\r\n * @returns {GameRectangle}. The frame's hitbox.\r\n */\r\nexport function getFrameHitbox(left: number, top: number, frame: Frame, topOffset: number = 0, bottomOffset: number = 0, pixelSize?: number): GameRectangle {\r\n    const { width, height } = getFrameDimensions(frame, pixelSize);\r\n\r\n    return {\r\n        top: top + topOffset,\r\n        left,\r\n        right: left + width,\r\n        bottom: top + height + bottomOffset,\r\n    };\r\n}\r\n\r\n/**\r\n * Uses spreads to create a new Frame.\r\n * @param {Frame} frame. The frame.\r\n * @returns {Frame}. A copy of the original frame.\r\n */\r\nexport function copyFrame(frame: Frame): Frame {\r\n    const newFrame: Frame = [];\r\n\r\n    for (const row of frame) {\r\n        const newRow = [...row];\r\n        newFrame.push(newRow);\r\n    }\r\n\r\n    return newFrame;\r\n}\r\n\r\n/**\r\n * Uses spreads to create new Frames.\r\n * @param {Frames} frames. Frames to copy.\r\n * @return {Frames}. Fresh copy of the Frames.\r\n */\r\nexport function copyFrames(frames: Frame[]): Frame[] {\r\n    const newFrames: Frame[] = [];\r\n\r\n    for (const frame of frames) {\r\n        const newFrame = copyFrame(frame);\r\n        newFrames.push(newFrame);\r\n    }\r\n\r\n    return newFrames;\r\n}\r\n\r\nexport function getFrameReturner(frame: Frame): () => Frame {\r\n    const frameCopy = copyFrame(frame);\r\n\r\n    return () => frameCopy;\r\n}\r\n\r\nexport function copyExplosion(explosion: Explosion): Explosion {\r\n    const newExplosion = { ...explosion };\r\n    newExplosion.particleFrames = copyFrames(explosion.particleFrames);\r\n    newExplosion.explosionCenterFrame = copyFrame(explosion.explosionCenterFrame);\r\n\r\n    return explosion;\r\n}\r\n\r\nexport function getExplosionReturner(explosion: Explosion): () => Explosion {\r\n    const newExplosion = copyExplosion(explosion);\r\n\r\n    return () => newExplosion;\r\n}","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          CGA Colors\r\n * Responsibility:  Contains color for the CGA 16 color pallet.\r\n */\r\n\r\nconst CGAColors = {             // Color hex code. Used to set the color of assets.\r\n    black: \"#000000\",           // 0\r\n    blue: \"#0000AA\",            // 1\r\n    green: \"#00AA00\",           // 2\r\n    cyan: \"#00AAAA\",            // 3\r\n    red: \"#AA0000\",             // 4\r\n    magenta: \"#AA00AA\",         // 5\r\n    brown: \"#AA5500\",           // 6\r\n    lightGray: \"#AAAAAA\",       // 7\r\n    darkGray: \"555555\",         // 8\r\n    lightBlue: \"#5555FF\",       // 9\r\n    lightGreen: \"#55FF55\",      // A\r\n    lightCyan: \"#55FFFF\",       // B\r\n    lightRed: \"#FF5555\",        // C\r\n    lightMagenta: \"#FF55FF\",    // D\r\n    yellow: \"#FFFF55\",          // E\r\n    white: \"#FFFFFF\",           // F\r\n    // Varies                   // V. Special color that flags a pixel as varies in color.\r\n};\r\n\r\nexport const validColors = Object.keys(CGAColors).map((key) => (CGAColors as any)[key]);\r\n\r\nexport default CGAColors;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { Frame as FrameType } from \"../Types\";\r\nimport hexToCGAConverter from \"./HexToCGAConverter\";\r\n\r\n/**\r\n * Module:          Functions that mutate frames.\r\n * Responsibility:  Update frames with colors.\r\n */\r\n\r\nnamespace Mutators {\r\n\r\n    export namespace Frames {\r\n\r\n        /**\r\n         * Sets a cell's color to the passed color. Doesn't matter if they're variable (V).\r\n         * @param {Frames} frames. All frames.\r\n         */\r\n        export function setColor(frames: FrameType[], ...colors: string[]): void {\r\n            for (const frame of frames) {\r\n                Frame.setColor(frame, ...colors);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Updates a frame to actual CGA colors.\r\n         * @param {Frames} frames. All frames.\r\n         */\r\n        export function convertHexToCGA(frames: FrameType[]): void {\r\n            for (const frame of frames) {\r\n                Frame.convertHexToCGA(frame);\r\n            }\r\n        }\r\n    }\r\n\r\n    export namespace Frame {\r\n        /**\r\n         * Set the predefined color for a single frame.\r\n         * @param {Frame} frame. A single frame.\r\n         */\r\n        export function convertHexToCGA(frame: FrameType) {\r\n            frame.forEach((row, rowIndex) => {\r\n                row.forEach((cellColor, cellIndex) => {\r\n                    if (cellColor !== \"0\") {\r\n                        frame[rowIndex][cellIndex] = hexToCGAConverter(cellColor);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Sets a frame colors when the color is not black (\"0\")\r\n         * @param {Frame} frame. A frame\r\n         * @param {string} color. A color\r\n         */\r\n        export function setColor(frame: FrameType, ...colors: string[]) {\r\n            if (colors.length === 0) {\r\n                throw new Error(\"No colors\");\r\n            }\r\n            frame.forEach((row, rowIndex) => {\r\n                row.forEach((cellColor, cellIndex) => {\r\n                    if (cellColor !== \"0\") {\r\n                        let useColor = \"\";\r\n                        if (cellColor.indexOf(\"V\") !== -1) {\r\n                            const colorIndex = cellColor.replace(\"V\", \"\");\r\n                            if (colorIndex === \"\") {\r\n                                // if the V cell has no index, just pick the first color.\r\n                                useColor = colors[0];\r\n                            } else {\r\n                                useColor = colors[parseInt(colorIndex, 10)];\r\n                            }\r\n                        } else {\r\n                            // Not a V, set the color.\r\n                            useColor = colors[0];\r\n                        }\r\n\r\n                        if (useColor === undefined || useColor === \"\") {\r\n                            throw Error(\"Color shoud not be undefined\");\r\n                        }\r\n\r\n                        frame[rowIndex][cellIndex] = useColor;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default Mutators;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { GameLocation } from \"../Models/GameLocation\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport speedProvider from \"../Providers/SpeedProvider\";\r\nimport { getNextX, getNextY } from \"./Geometry\";\r\n\r\n/**\r\n * Module:          Location utilities\r\n * Responsibility:  Offer utility functions for stuff that needs to know where it is.\r\n */\r\n\r\n/**\r\n * Calculate distance in pixels.\r\n * @param {number} left1. 1st left coordinate.\r\n * @param {number} top1. 1st top coordinate.\r\n * @param {number} left2. 2nd left coordinate.\r\n * @param {number} top2. 2nd right coordinate.\r\n * @returns {number}. Distance in actual pixels.\r\n */\r\nexport function calculateDistance(left1: number, top1: number, left2: number, top2: number): number {\r\n\r\n    const xd = left1 - left2;\r\n    const yd = top1 - top2;\r\n\r\n    return Math.sqrt(Math.pow(xd, 2) + Math.pow(yd, 2));\r\n}\r\n\r\n/**\r\n * Checks if a location falls within an area.\r\n * @param {number} left. Left coordinate\r\n * @param {number} top. Top coordinate.\r\n * @param {number} outerTop. Top of the area.\r\n * @param {number} outerBottom. Bottom of the area.\r\n * @param {number} outerLeft. Left of the area.\r\n * @param {number} outerRight. Right of the area.\r\n */\r\nexport function fallsWithin(left: number, right: number, top: number, bottom: number, outerLeft: number, outerRight: number, outerTop: number, outerBottom: number): boolean {\r\n\r\n    const yBounds = bottom >= outerTop && top <= outerBottom;\r\n    const xBounds = right >= outerLeft && left <= outerRight;\r\n\r\n    const res = xBounds && yBounds;\r\n\r\n    return res;\r\n}\r\n\r\nexport function fallsWithinGameField(left: number, right: number, top: number, bottom: number): boolean {\r\n    const {\r\n        gameField,\r\n        pixelSize\r\n    } = dimensionProvider();\r\n\r\n    const res = fallsWithin(left, right, top, bottom, gameField.left, gameField.right, gameField.top, gameField.bottom - pixelSize);\r\n\r\n    return res;\r\n}\r\n\r\n/**\r\n * Calculates a location.\r\n * @param {number} left. Left coordinate.\r\n * @param {number} top. Top coordinate.\r\n * @param {number | undefined} angle. The angle of the object.\r\n * @param {number} speed. The speed the of the object\r\n * @returns {{left: number, top: number}}. The location of the object. If angle is undefined the original location is returns as a new object.\r\n */\r\nexport function getLocation(left: number, top: number, angle: number | undefined, speed: number): GameLocation {\r\n\r\n    if (angle === undefined) {\r\n        return {\r\n            left,\r\n            top,\r\n        };\r\n    }\r\n\r\n    const relativeSpeed = speedProvider(speed);\r\n\r\n    const nextLeft = getNextX(angle, relativeSpeed, left);\r\n    const nextTop = getNextY(angle, relativeSpeed, top);\r\n\r\n    return {\r\n        left: nextLeft,\r\n        top: nextTop,\r\n    };\r\n}\r\n\r\n/**\r\n * Offsets a location using the given offsers and return a new location.\r\n * @param {number} left. Left coordinate.\r\n * @param {number} top. Top coordinate.\r\n * @param {number} leftOffset. Left offset in real pixels.\r\n * @param {number} topOffset. Top offset in real pixels.\r\n * @param {number} pixelSize. Pixel size used to calculate the actual location.\r\n * @returns {location}. A new location offset to animation overlap.\r\n */\r\nexport function getOffsetLocation(left: number, top: number, leftOffset: number, topOffset: number): GameLocation {\r\n    return {\r\n        left: left + leftOffset,\r\n        top: top + topOffset,\r\n    };\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { DEBUGGING_drawGrid, DEBUGGING_renderHitboxes } from \"./Debugging/Debugging\";\r\nimport { appState } from \"./State/Store\";\r\nimport { TickFunction } from \"./Types\";\r\n\r\n/**\r\n * Module:          GameLoop\r\n * Responsibility:  Handles all functions that should be called within the GameLoop.\r\n */\r\n\r\n/**\r\n * A handle for the main loop.\r\n */\r\nlet mainHandle: number | undefined;\r\n\r\n/**\r\n * Functions that subscripbe to the game tick.\r\n */\r\nlet updateStateFunctions: TickFunction[] = [];\r\n\r\n/**\r\n * Functions that perform background drawing.\r\n */\r\nlet backgroundDrawFunctions: Array<() => void> = [];\r\n\r\nlet foregroundDrawFunctions: Array<() => void> = [];\r\n\r\n/**\r\n * Functions that draw.\r\n */\r\nlet drawFunctions: Array<() => void> = [];\r\n\r\nexport namespace GameLoop {\r\n    /**\r\n     * Start game loop\r\n     */\r\n    export function Start(): void {\r\n        mainHandle = window.requestAnimationFrame(run);\r\n    }\r\n\r\n    /**\r\n     * Stop game loop and clear subscriptions.\r\n     */\r\n    export function Stop(): void {\r\n\r\n        if (mainHandle !== undefined) {\r\n            window.cancelAnimationFrame(mainHandle);\r\n        }\r\n\r\n        updateStateFunctions = [];\r\n        backgroundDrawFunctions = [];\r\n        drawFunctions = [];\r\n    }\r\n\r\n    /**\r\n     * Register a tick handling function\r\n     * @param {TickFunction} f. A function that handles a tick\r\n     * @returns {() => void}. A function that removes the tick handler funtion from the subscription array.\r\n     */\r\n    export function registerUpdateState(f: TickFunction): () => void {\r\n        updateStateFunctions.push(f);\r\n\r\n        return () => {\r\n            updateStateFunctions = updateStateFunctions.filter((s) => s !== f);\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Register a function that draws the background.\r\n     * @param {function} f. Background draw function\r\n     * @returns {function}. Function to remove the background draw from the queue.\r\n     */\r\n    export function registerBackgroundDrawing(f: () => void): () => void {\r\n        backgroundDrawFunctions.push(f);\r\n\r\n        return () => {\r\n            backgroundDrawFunctions = backgroundDrawFunctions.filter((d) => d !== f);\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Register a function that draws the background.\r\n     * @param {function} f. Background draw function\r\n     * @returns {function}. Function to remove the background draw from the queue.\r\n     */\r\n    export function registerForegroundDrawing(f: () => void): () => void {\r\n        foregroundDrawFunctions.push(f);\r\n\r\n        return () => {\r\n            foregroundDrawFunctions = foregroundDrawFunctions.filter((d) => d !== f);\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Registers a function that is called once, but only if there is currently no render in progress.\r\n     * @param {function} f. A function.\r\n     */\r\n    export function registerDraw(f: () => void): void {\r\n        drawFunctions.push(f);\r\n    }\r\n\r\n    /**\r\n     * Runner function. Calls all functions that subscribed to the game loop.\r\n     * @param {number} tick. Current animation tick.\r\n     */\r\n    function run(tick: number): void {\r\n        mainHandle = window.requestAnimationFrame(run);\r\n\r\n        const {\r\n            gameState: { pause }\r\n        } = appState();\r\n\r\n        if (pause) {\r\n            return;\r\n        }\r\n\r\n        // Always update the states. This will also register draw function (if required).\r\n        updateStateFunctions.forEach((f) => f(tick));\r\n\r\n        // Draw the back ground, other stuff is drawn over this so we render it first.\r\n        backgroundDrawFunctions.forEach((f) => f());\r\n\r\n        // Now we go over the register draw functions\r\n        drawFunctions.forEach((f) => f());\r\n        drawFunctions = [];\r\n\r\n        // Finally we finish with drawing foreground stuff. The status bar for one, and the game border\r\n        // are both foreground and render over anything.\r\n        foregroundDrawFunctions.forEach((f) => f());\r\n\r\n        const { debuggingState } = appState();\r\n\r\n        if (debuggingState.drawHitboxes) {\r\n            DEBUGGING_renderHitboxes();\r\n        }\r\n\r\n        if (debuggingState.drawGrid) {\r\n            DEBUGGING_drawGrid(debuggingState.gridDetail);\r\n        }\r\n    }\r\n}\r\n\r\nexport default GameLoop;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Actions\r\n * Responsibility:  Action creator functions for the GameState\r\n */\r\n\r\nimport Constants from \"./GameConstants\";\r\nimport { AddLevel, AddLife, AddLifeAndPhaser, AddPhaser, IncreaseScore, NextLevel, RemoveLife, RemovePhaser, SetLevel, SetLives, SetPause, SetPhasers, SetWarpGateComplexity } from \"./GameTypes\";\r\nimport { WarpLevelComplexity } from \"./WarpLevelTypes\";\r\n\r\nexport function increaseScore(score: number): IncreaseScore {\r\n    return {\r\n        type: Constants.increaseScore,\r\n        payload: score\r\n    };\r\n}\r\n\r\nexport function setLives(lives: number): SetLives {\r\n    return {\r\n        type: Constants.setLives,\r\n        payload: lives,\r\n    };\r\n}\r\n\r\nexport function addLife(): AddLife {\r\n    return {\r\n        type: Constants.addLife,\r\n    };\r\n}\r\n\r\nexport function removeLife(): RemoveLife {\r\n    return {\r\n        type: Constants.removeLife,\r\n    };\r\n}\r\n\r\nexport function setPhasers(phasers: number): SetPhasers {\r\n    return { type: Constants.setPhasers, payload: phasers };\r\n}\r\n\r\nexport function addPhaser(): AddPhaser {\r\n    return { type: Constants.addPhaser };\r\n}\r\n\r\nexport function removePhaser(): RemovePhaser {\r\n    return { type: Constants.removePhaser };\r\n}\r\n\r\nexport function addLevel(): AddLevel {\r\n    return { type: Constants.addLevel };\r\n}\r\n\r\nexport function setLevel(level: number): SetLevel {\r\n    return { type: Constants.setLevel, payload: level };\r\n}\r\n\r\nexport function nextLevel(): NextLevel {\r\n    return { type: Constants.nextLevel };\r\n}\r\n\r\nexport function addLifeAndPhaser(): AddLifeAndPhaser {\r\n    return { type: Constants.addLifeAndPhaser };\r\n}\r\n\r\nexport function setPause(pause: boolean): SetPause {\r\n    return {\r\n        type: Constants.setPause,\r\n        payload: pause,\r\n    };\r\n}\r\n\r\nexport function setWarpGamteComplexity(complexity: WarpLevelComplexity): SetWarpGateComplexity {\r\n    return {\r\n        type: Constants.setWarpLevelComplexity,\r\n        complexity,\r\n    };\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { angles } from \"../Constants/Angles\";\r\nimport { GameLocation } from \"../Models/GameLocation\";\r\nimport { GameRectangle } from \"../Models/GameRectangle\";\r\nimport KeyboardState from \"../State/Keyboard/KeyboardState\";\r\n\r\n/**\r\n * Module:          Geometry\r\n * Responsibility:  Contains geometry functions.\r\n */\r\n\r\n/**\r\n * Gets the next X coordinats based on the angle, speed and the current X coordinate.\r\n * @param {number} angle. The angle.\r\n * @param {number} speed. The speed.\r\n * @param {number} current. The current X coordinate.\r\n * @returns {number}. The next X coordinate.\r\n */\r\nexport function getNextX(angle: number, speed: number, currentX: number): number {\r\n    return Math.cos(angle * Math.PI / 180) * speed + currentX;\r\n}\r\n\r\n/**\r\n * Gets the next Y coordinate based on the angle, speed and the current Y coordinate.\r\n * @param {number} angle. The angle.\r\n * @param {number} speed. The speed.\r\n * @param {number} current. The current X coordinate.\r\n * @returns {number}. The next Y coordinate.\r\n */\r\nexport function getNextY(angle: number, speed: number, currentY: number): number {\r\n    return Math.sin(angle * (Math.PI / 180)) * speed + currentY;\r\n}\r\n\r\n/**\r\n * getAngle.\r\n * @param {KeyboardState} state. Current keyboard dstate\r\n * @returns {number}. The angle. -1 indicates no movement.\r\n */\r\nexport function getAngle(state: KeyboardState): number {\r\n    let angle = -1;\r\n    if (state.up && state.left) {\r\n        angle = angles.leftup;\r\n    } else if (state.up && state.right) {\r\n        angle = angles.rightup;\r\n    } else if (state.down && state.left) {\r\n        angle = angles.leftdown;\r\n    } else if (state.down && state.right) {\r\n        angle = angles.rightdown;\r\n    } else if (state.left) {\r\n        angle = angles.left;\r\n    } else if (state.right) {\r\n        angle = angles.right;\r\n    } else if (state.up) {\r\n        angle = angles.up;\r\n    } else if (state.down) {\r\n        angle = angles.down;\r\n    }\r\n\r\n    return angle;\r\n}\r\n\r\n/**\r\n * Returns true if two hitboxes overlap.\r\n * @param {GameRectangle} hitbox1.\r\n * @param {GameRectangle} hitbox2.\r\n * @returns {boolean}. True if overlap.\r\n */\r\nexport function overlaps(hitbox1: GameRectangle | undefined, hitbox2: GameRectangle | undefined): boolean {\r\n\r\n    if (hitbox1 === undefined || hitbox2 === undefined) {\r\n        return false;\r\n    }\r\n\r\n    if (hitbox1.right < hitbox2.left || hitbox1.left > hitbox2.right) {\r\n        return false;\r\n    }\r\n\r\n    if (hitbox1.bottom < hitbox2.top || hitbox1.top > hitbox2.bottom) {\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/**\r\n * returns the reverse angle\r\n * @param {number} angle. An angle in degrees\r\n * @returns {number}. The angle in the opposite direction.\r\n */\r\nexport function reverseDegreeAngle(angle: number): number {\r\n    let newAngle = angle += 180;\r\n\r\n    if (newAngle > 360) {\r\n        newAngle -= 360;\r\n    }\r\n\r\n    return newAngle;\r\n}\r\n\r\n/**\r\n * Calculates the angle from the source location to the target location.\r\n * @param {number} startLeft. Left begin point.\r\n * @param {number} startTop. Top begin point.\r\n * @param {number} endLeft. Left end point.\r\n * @param {number} endTop. Top end pint.\r\n * @returns {number | undefined}. The angle to towards the target in degrees.\r\n */\r\nexport function calculateAngle(startLeft: number, startTop: number, endLeft: number, endTop: number): number | undefined {\r\n    const dx = endLeft - startLeft;\r\n    const dy = endTop - startTop;\r\n\r\n    // Singularity.\r\n    if (dx === 0 && dy === 0) {\r\n        return undefined;\r\n    }\r\n\r\n    return Math.atan2(dy, dx) * 180 / Math.PI;\r\n}\r\n\r\n/**\r\n * Calculates the difference between two angles.\r\n * @param {number} angle1. Angle 1 in degrees.\r\n * @param {number} angle2. Angle 2 in degrees.\r\n * @returns {number}. The difference, in degrees, between the angles\r\n * Source: https://stackoverflow.com/questions/1878907/the-smallest-difference-between-2-angles\r\n */\r\nexport function calculateAngleDifference(angle1: number, angle2: number): number {\r\n    const absoluteAngleDifference = Math.abs(angle1 - angle2);\r\n    const angleDifference = (absoluteAngleDifference + 180) % 360 - 180;\r\n    return Math.abs(angleDifference);\r\n}\r\n\r\n/**\r\n * Calculates the ideal location where a spaller rectangle should appear in a bigger one.\r\n * @param {GameRectangle} outerRect. Enveloping rectangle.\r\n * @param {GameRectangle} innerRect. Inner rectangle.\r\n */\r\nexport function calculateOptinalInnerRectablePlacement(outerRect: GameRectangle, innerRect: GameRectangle): GameLocation {\r\n    const outerRectWidth = outerRect.right - outerRect.left;\r\n    const outerRectHeight = outerRect.bottom - outerRect.top;\r\n\r\n    const innerRectWidth = innerRect.right - innerRect.left;\r\n    const innerRectHeight = innerRect.bottom - innerRect.top;\r\n\r\n    const widthDifference = outerRectWidth - innerRectWidth;\r\n    const heightDifference = outerRectHeight - innerRectHeight;\r\n\r\n    return {\r\n        left: outerRect.left + widthDifference / 2,\r\n        top: outerRect.top + heightDifference / 2,\r\n    };\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Array\r\n * Responsibility:  Array utilities\r\n */\r\n\r\n/**\r\n * Returns a random element from an array\r\n * @param {T[]} arr. An array of type T.\r\n * @returns {T}. Value found in a random position.\r\n */\r\nexport function getRandomArrayElement<T>(arr: T[]): T {\r\n    if (arr.length === 1) {\r\n        return arr[0];\r\n    } else {\r\n        const randomIndex = Math.floor(Math.random() * arr.length);\r\n        return arr[randomIndex];\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Actions\r\n * Responsibility:  Action production functions for the PlayerState.\r\n */\r\n\r\nimport { GameLocation } from \"../../Models/GameLocation\";\r\nimport { MoveLimits } from \"../../Types\";\r\nimport { ParticleState } from \"./ParticleState\";\r\nimport Constants from \"./PlayerConstants\";\r\nimport { PlayerHitboxes } from \"./PlayerState\";\r\nimport { SetPlayerBulletState, SetPlayerIsAlive, SetPlayerLocationData, SetPlayerMovementLimit } from \"./PlayerTypes\";\r\n\r\nexport function setPlayerIsAlive(playerAlive: boolean): SetPlayerIsAlive {\r\n    return {\r\n        type: Constants.setPlayerIsAlive,\r\n        playerIsAlive: playerAlive,\r\n    };\r\n}\r\n\r\nexport function setPlayerMovementLimit(moveLimit: MoveLimits): SetPlayerMovementLimit {\r\n    return {\r\n        type: Constants.setPlayerMovementLimit,\r\n        payload: moveLimit\r\n    };\r\n}\r\n\r\nexport function setPlayerLocationData(left: number, top: number, hitboxes?: PlayerHitboxes, nozzleLocation?: GameLocation): SetPlayerLocationData {\r\n    return {\r\n        type: Constants.setPlayerLocationData,\r\n        payload: {\r\n            left,\r\n            top,\r\n            hitboxes,\r\n            nozzleLocation\r\n        }\r\n    };\r\n}\r\n\r\nexport function setPlayerBulletState(particleState: ParticleState | undefined): SetPlayerBulletState  {\r\n    return {\r\n        type: Constants.setPlayerBulletState,\r\n        particleState,\r\n    };\r\n}","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          CtxProvider\r\n * Responsibility:  Provides the 2d Canvas context\r\n */\r\n\r\nlet cachedCtx: CanvasRenderingContext2D;\r\n\r\n/**\r\n * ctxProvider.\r\n * @returns {CanvasRenderingContext2D}. Returns a 2d canvar renderign context.\r\n */\r\nexport default function ctxProvider(): CanvasRenderingContext2D {\r\n    if (!cachedCtx) {\r\n        const canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\r\n        cachedCtx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n\r\n    }\r\n\r\n    return cachedCtx;\r\n}","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { validColors } from \"../Constants/CGAColors\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport ctxProvider from \"../Providers/Render/CtxProvider\";\r\nimport { Frame } from \"../Types\";\r\n\r\n/**\r\n * Module:          RenderFrame\r\n * Responsibility:  Renders a single frame to the canvas\r\n */\r\nconst {\r\n    pixelSize,\r\n} = dimensionProvider();\r\n\r\n/**\r\n * Renders a single frame to the canvas.\r\n * @param {left} left. Left coordinate.\r\n * @param {top} top. Top coordinate.\r\n * @param {Frame} frame. A 2d string array.\r\n */\r\nexport default function renderFrame(left: number, top: number, frame: Frame): void {\r\n    const ctx = ctxProvider();\r\n\r\n    for (let rowIndex = 0; rowIndex < frame.length; rowIndex++) {\r\n\r\n        const columns = frame[rowIndex];\r\n\r\n        for (let columnIndex = 0; columnIndex < columns.length; columnIndex++) {\r\n            const color = columns[columnIndex];\r\n\r\n            const x = Math.round(left + columnIndex * pixelSize);\r\n            const y = Math.round(top + rowIndex * pixelSize);\r\n\r\n            if (color !== \"0\") {\r\n\r\n                // DEBUGGING.\r\n                if (validColors.indexOf(color) === -1) {\r\n                    // tslint:disable-next-line: no-console\r\n                    throw new Error(\"Provided color is not a valid CGA color\");\r\n                }\r\n\r\n                ctx.fillStyle = color;\r\n                // But we use the max pixel size to draw a pixel. This ensures the pixels overlap slightly.\r\n                // Otherwise, you'll see bits and pieces of the back ground.\r\n                ctx.fillRect(x, y, pixelSize, pixelSize);\r\n            }\r\n        }\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Angles\r\n * Responsibility:  Define the simple angles\r\n */\r\n\r\nexport const angles = {\r\n    left: 180,\r\n    right: 0,\r\n    up: 270,\r\n    down: 90,\r\n    leftup: 235,\r\n    rightup: 325,\r\n    leftdown: 135,\r\n    rightdown: 45,\r\n};\r\n\r\nexport function getAngles(): number[] {\r\n    return Object.keys(angles).map((k) => (angles as any)[k] as number);\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\n\r\n/**\r\n * Module:          All speeds for all objects\r\n * Responsibility:  Define constants at which speed an enemy moves.\r\n */\r\n\r\nconst {\r\n    gameField,\r\n    pixelSize\r\n} = dimensionProvider();\r\n\r\n// Collective namespace for all speeds.\r\nexport namespace Speeds {\r\n\r\n    export namespace Movement {\r\n        export const bird = 1.5;\r\n        export const robot = 1.5;\r\n        export const orb = 0.1;\r\n        export const spinner = 1.5;\r\n        export const balloon = 1.5;\r\n        export const asteroid = [2, 4, 6, 8, 10];\r\n    }\r\n\r\n    export namespace Bullets {\r\n        export const player = 42;\r\n        export const robot = 7;\r\n        export const orb = 12;\r\n        export const spinner = 12;\r\n        export const balloon = 12;\r\n    }\r\n}\r\n\r\nexport namespace Locations {\r\n    export namespace Enemies {\r\n\r\n        // All locations were determined by drawing a grid over screenshot.\r\n        export namespace robot {\r\n            export const topStart = gameField.top + pixelSize * 18;\r\n            export const maxBottom = gameField.top + pixelSize * 65;\r\n        }\r\n\r\n        export namespace Orb {\r\n            export const topStart = gameField.top + pixelSize * 18;\r\n            export const maxTop = gameField.top + pixelSize * 5;\r\n            export const maxBottom = gameField.top + pixelSize * 55;\r\n        }\r\n    }\r\n}\r\n\r\n// Collective namespace for all movement angles.\r\nexport namespace MovementAngles {\r\n    export const bird = [2, 358, 178, 182];\r\n    export const robot = 5;\r\n    export const orb = 90;\r\n    export const spinner = [2, 358, 178, 182];\r\n}\r\n\r\n// Collective namespace for all frametimes.\r\nexport namespace FrameTimes {\r\n    export const bird = 100;\r\n    export const robot = 200;\r\n    export const orb = 200;\r\n    export const spinner = 100;\r\n    export const balloon = 100;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport TickHandler from \"../Handlers/TickHandler\";\r\nimport ILocationProvider from \"../Interfaces/ILocationProvider\";\r\nimport Explosion from \"../Models/Explosion\";\r\nimport { GameLocation } from \"../Models/GameLocation\";\r\nimport { GameRectangle } from \"../Models/GameRectangle\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport { addOrUpdateEnemy } from \"../State/EnemyLevel/EnemyLevelActions\";\r\nimport { dispatch } from \"../State/Store\";\r\nimport { ExplosionProviderFunction, Frame, OffsetFramesProviderFunction } from \"../Types\";\r\nimport { getFrameCenter, getFrameHitbox } from \"../Utility/Frame\";\r\nimport { getOffsetLocation } from \"../Utility/Location\";\r\nimport BaseFrameProvider from \"./BaseFrameProvider\";\r\n\r\n/**\r\n * Module:          BaseEnemy\r\n * Responsibility:  Base class for all enemies.\r\n *                  This class provides contacts and default methods that will work\r\n *                  for most enemies in the game leaving specifics to derived classes.\r\n */\r\n\r\nconst {\r\n    pixelSize,\r\n} = dimensionProvider();\r\n\r\nconst negativepixelSize = pixelSize * -1;\r\n\r\nexport default abstract class BaseEnemy {\r\n\r\n    /**\r\n     * Static to ensure every enemy gets a new id.\r\n     */\r\n    private static idCounter = 0;\r\n\r\n    /**\r\n     * Id of the enemy. Used to check if a bullet belongs to an enemy.\r\n     */\r\n    private enemyId = 0;\r\n\r\n    /**\r\n     * The frame provider. Must be set in an inheriting class.\r\n     */\r\n    protected frameProvider: BaseFrameProvider;\r\n\r\n    /**\r\n     * Frame tick handler. Handles changes in the frames.\r\n     */\r\n    private frameTickHandler: TickHandler;\r\n\r\n    /**\r\n     * Offets for each frame.\r\n     */\r\n    private offSets: GameLocation[];\r\n\r\n    /**\r\n     * Explosion for the enemy.\r\n     */\r\n    protected explosion: Explosion;\r\n\r\n    /**\r\n     * Left position offset for animation.\r\n     */\r\n    private offsetLeft: number;\r\n\r\n    /**\r\n     * Top position offset for animation.\r\n     */\r\n    protected offsetTop: number;\r\n\r\n    /**\r\n     * Current frame of the object\r\n     */\r\n    protected currentFrame?: Frame;\r\n\r\n    /**\r\n     * Provides location. Can be used to alter the movement behaviour of enemies.\r\n     */\r\n    protected locationProvider: ILocationProvider;\r\n\r\n    /**\r\n     * Creates an instance of BaseEnemy.\r\n     * @param {number} frameChangeTime. Time between frames.\r\n     * @param {OffsetFramesProviderFunction} getOffsetFrames. Returns an OffsetFrames object.\r\n     * @param {ExplosionProviderFunction} getExplosion. Returns an explosion object.\r\n     * @param {ILocationProvider} locationProvider. Provides the location of the enemy.\r\n     * @param {BaseFrameProvider} frameProvider. Provides the frame of the enemy.\r\n     * @param {FireAngleProviderFunction} [fireAngleProvider]. Provides a fire hangle for the enemy.\r\n     * @memberof BaseEnemy\r\n     */\r\n    constructor(\r\n        frameChangeTime: number,\r\n        getOffsetFrames: OffsetFramesProviderFunction,\r\n        getExplosion: ExplosionProviderFunction,\r\n        locationProvider: ILocationProvider,\r\n        frameProvider: BaseFrameProvider) {\r\n\r\n        this.locationProvider = locationProvider;\r\n\r\n        this.explosion = getExplosion();\r\n        this.frameTickHandler = new TickHandler(frameChangeTime, () => this.onFrameChange());\r\n\r\n        const offSetFrames = getOffsetFrames();\r\n        this.offSets = offSetFrames.offSets.map((o) => {\r\n            return {\r\n                left: o.left * pixelSize,\r\n                top: o.top * pixelSize,\r\n            };\r\n        });\r\n\r\n        this.frameProvider = frameProvider;\r\n        this.frameProvider.setFrames(offSetFrames.frames);\r\n\r\n        this.currentFrame = this.frameProvider.getCurrentFrame();\r\n\r\n        const { left, top } = this.getOffsetLocation();\r\n        this.offsetLeft = left;\r\n        this.offsetTop = top;\r\n\r\n        this.enemyId = BaseEnemy.idCounter;\r\n        BaseEnemy.idCounter += 1;\r\n    }\r\n\r\n    /**\r\n     * getId\r\n     * @returns {number}\r\n     * @memberof BaseEnemy\r\n     */\r\n    public getId(): number {\r\n        return this.enemyId;\r\n    }\r\n\r\n    /**\r\n     * Returns the point worth.\r\n     * @returns {number}. Point worth of the enemy.\r\n     */\r\n    public abstract getPoints(): number;\r\n\r\n    /**\r\n     * Called by a TickHandler when the next frame is up.\r\n     */\r\n    protected abstract onFrameChange(): void;\r\n\r\n    /**\r\n     * Base implementation of a state update.\r\n     * @param {number} tick\r\n     */\r\n    public updateState(tick: number) {\r\n        this.frameTickHandler.tick(tick);\r\n\r\n        const offsetLocation = this.getOffsetLocation();\r\n        this.offsetLeft = offsetLocation.left;\r\n        this.offsetTop = offsetLocation.top;\r\n\r\n        this.locationProvider.updateState(tick);\r\n    }\r\n\r\n    protected dispatchCurrentState(): void {\r\n        dispatch(addOrUpdateEnemy({\r\n            enemyId: this.getId(),\r\n            coloredExplosion: this.explosion,\r\n            offsetLeft: this.offsetLeft,\r\n            offsetTop: this.offsetTop,\r\n            currentFrame: this.currentFrame,\r\n            hitpoints: this.getHitpoints(),\r\n            hitbox: this.getHitbox(),\r\n            centerLocation: this.getCenterLocation(),\r\n            points: this.getPoints(),\r\n        }));\r\n    }\r\n\r\n    /**\r\n     * Calculates the offsetLocation\r\n     * @returns {GameLocation}. Location offset to let the frames render over one another.\r\n     */\r\n    protected getOffsetLocation(): GameLocation {\r\n        const frameOffsets = this.offSets[this.frameProvider.getCurrentIndex()];\r\n        const location = this.locationProvider.getCurrentLocation();\r\n\r\n        if (frameOffsets) {\r\n            return getOffsetLocation(location.left, location.top, frameOffsets.left, frameOffsets.top);\r\n        } else {\r\n            return location;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Increases the speed of an enemy.\r\n     * @param {number} value. Values below 1 decrease speed, values above 1 increase speed.\r\n     */\r\n    public increaseSpeed(value: number): void {\r\n        this.locationProvider.increaseSpeed(value);\r\n        this.frameTickHandler.increaseSpeed(value);\r\n    }\r\n\r\n    /**\r\n     * Returns the hitpoint of the enemy.\r\n     * @returns {number}\r\n     * @memberof BaseEnemy\r\n     */\r\n    public getHitpoints(): number {\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * Reduce the enemies hitpoints.\r\n     */\r\n    public recudeHitpoints(): void {\r\n        // Override. Only the astroid enemy has hitpoints.\r\n    }\r\n\r\n    /**\r\n     * Returns the center location of the object.\r\n     * @returns {GameLocation}. Location located at the center of the object.\r\n     */\r\n    private getCenterLocation(): GameLocation {\r\n        if (this.currentFrame !== undefined) {\r\n            return getFrameCenter(this.offsetLeft, this.offsetTop, this.currentFrame, pixelSize);\r\n        } else {\r\n            // Return a non existing location. This simply means the enemy is not on the screen\r\n            // and it saves a billion undefined checks.\r\n            return {\r\n                top: -100,\r\n                left: -100,\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the enemies hitbox.\r\n     * @returns {GameRectangle}\r\n     * @memberof BaseEnemy\r\n     */\r\n    private getHitbox(): GameRectangle {\r\n        if (this.currentFrame) {\r\n            return getFrameHitbox(this.offsetLeft, this.offsetTop, this.currentFrame, negativepixelSize);\r\n        } else {\r\n            return {\r\n                left: 0,\r\n                top: 0,\r\n                right: 0,\r\n                bottom: 0,\r\n            };\r\n        }\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Actions\r\n * Responsibility:  Action creators for the EnemyLevelState\r\n */\r\n\r\nimport { GameLocation } from \"../../Models/GameLocation\";\r\nimport { ParticleState } from \"../Player/ParticleState\";\r\nimport Constants from \"./EnemyLevelConstants\";\r\nimport { AddBullet, AddExplosionCenter, AddOrUpdateEnemy, AddParticle, AddParticles, ClearPhaserLocations, RemoveEnemy, ResetLevelState, SetBulletState, SetFireInterval, SetPhaserLocations, SetShrapnellState, SetTotalEnemies } from \"./EnemyLevelTypes\";\r\nimport { EnemyState } from \"./EnemyState\";\r\nimport { ExplosionCenterState } from \"./ExplosionCenterState\";\r\n\r\nexport function resetLevelState(): ResetLevelState {\r\n    return {\r\n        type: Constants.resetLevelState,\r\n    };\r\n}\r\n\r\nexport function addParticle(particle: ParticleState): AddParticle {\r\n    return {\r\n        type: Constants.addParticle,\r\n        particle,\r\n    };\r\n}\r\n\r\nexport function addParticles(particles: ParticleState[]): AddParticles {\r\n    return {\r\n        type: Constants.addParticles,\r\n        particles,\r\n    };\r\n}\r\n\r\nexport function addExplosionCenter(explosionCenter: ExplosionCenterState, shrapnell: ParticleState[]): AddExplosionCenter {\r\n    return {\r\n        type: Constants.addExplosionCenter,\r\n        explosionCenter,\r\n        shrapnell,\r\n    };\r\n}\r\n\r\nexport function setShrapnellState(shrapnell: ParticleState[]): SetShrapnellState {\r\n    return {\r\n        type: Constants.setShrapnellState,\r\n        shrapnell,\r\n    };\r\n}\r\n\r\nexport function setPhaserLocations(locations: GameLocation[]): SetPhaserLocations {\r\n    return {\r\n        type: Constants.setPhaserLocations,\r\n        payload: locations,\r\n    };\r\n}\r\n\r\nexport function clearPhaserLocations(): ClearPhaserLocations {\r\n    return {\r\n        type: Constants.clearPhaserLocations,\r\n    };\r\n}\r\n\r\nexport function setFireInterval(interval: number): SetFireInterval {\r\n    return {\r\n        type: Constants.setFireInterval,\r\n        payload: interval,\r\n    };\r\n}\r\n\r\nexport function setExplosionCenters(explosionCenters: ExplosionCenterState[]) {\r\n    return {\r\n        type: Constants.setExplosionCenters,\r\n        explosionCenters\r\n    };\r\n}\r\n\r\nexport function addBullet(bullet: ParticleState): AddBullet {\r\n    return {\r\n        type: Constants.addBullet,\r\n        bullet,\r\n    };\r\n}\r\n\r\nexport function setBulletState(bullets: ParticleState[]): SetBulletState {\r\n    return {\r\n        type: Constants.setBulletState,\r\n        bullets,\r\n    };\r\n}\r\n\r\nexport function setTotalEnemies(totalEnemies: number): SetTotalEnemies {\r\n    return {\r\n        type: Constants.setTotalEnemies,\r\n        totalEnemies,\r\n    };\r\n}\r\n\r\nexport function addOrUpdateEnemy(enemyState: EnemyState): AddOrUpdateEnemy {\r\n    return {\r\n        type: Constants.addOrUpdateEnemy,\r\n        enemyState,\r\n    };\r\n}\r\n\r\nexport function removeEnemy(enemyId: number): RemoveEnemy {\r\n    return {\r\n        type: Constants.removeEnemy,\r\n        enemyId,\r\n    };\r\n}","export const NOTHING =\n\ttypeof Symbol !== \"undefined\"\n\t\t? Symbol(\"immer-nothing\")\n\t\t: {[\"immer-nothing\"]: true}\n\nexport const DRAFTABLE =\n\ttypeof Symbol !== \"undefined\" && Symbol.for\n\t\t? Symbol.for(\"immer-draftable\")\n\t\t: \"__$immer_draftable\"\n\nexport const DRAFT_STATE =\n\ttypeof Symbol !== \"undefined\" && Symbol.for\n\t\t? Symbol.for(\"immer-state\")\n\t\t: \"__$immer_state\"\n\nexport function isDraft(value) {\n\treturn !!value && !!value[DRAFT_STATE]\n}\n\nexport function isDraftable(value) {\n\tif (!value) return false\n\treturn (\n\t\tisPlainObject(value) ||\n\t\t!!value[DRAFTABLE] ||\n\t\t!!value.constructor[DRAFTABLE] ||\n\t\tisMap(value) ||\n\t\tisSet(value)\n\t)\n}\n\nexport function isPlainObject(value) {\n\tif (!value || typeof value !== \"object\") return false\n\tif (Array.isArray(value)) return true\n\tconst proto = Object.getPrototypeOf(value)\n\treturn !proto || proto === Object.prototype\n}\n\nexport function original(value) {\n\tif (value && value[DRAFT_STATE]) {\n\t\treturn value[DRAFT_STATE].base\n\t}\n\t// otherwise return undefined\n}\n\n// We use Maps as `drafts` for Sets, not Objects\n// See proxy.js\nexport function assignSet(target, override) {\n\toverride.forEach(value => {\n\t\t// When we add new drafts we have to remove their originals if present\n\t\tconst prev = original(value)\n\t\tif (prev) target.delete(prev)\n\t\ttarget.add(value)\n\t})\n\treturn target\n}\n\n// We use Maps as `drafts` for Maps, not Objects\n// See proxy.js\nexport function assignMap(target, override) {\n\toverride.forEach((value, key) => target.set(key, value))\n\treturn target\n}\n\nexport const assign =\n\tObject.assign ||\n\t((target, ...overrides) => {\n\t\toverrides.forEach(override =>\n\t\t\tObject.keys(override).forEach(key => (target[key] = override[key]))\n\t\t)\n\t\treturn target\n\t})\n\nexport const ownKeys =\n\ttypeof Reflect !== \"undefined\" && Reflect.ownKeys\n\t\t? Reflect.ownKeys\n\t\t: typeof Object.getOwnPropertySymbols !== \"undefined\"\n\t\t? obj =>\n\t\t\t\tObject.getOwnPropertyNames(obj).concat(\n\t\t\t\t\tObject.getOwnPropertySymbols(obj)\n\t\t\t\t)\n\t\t: Object.getOwnPropertyNames\n\nexport function shallowCopy(base, invokeGetters = false) {\n\tif (Array.isArray(base)) return base.slice()\n\tif (isMap(base)) return new Map(base)\n\tif (isSet(base)) return new Set(base)\n\tconst clone = Object.create(Object.getPrototypeOf(base))\n\townKeys(base).forEach(key => {\n\t\tif (key === DRAFT_STATE) {\n\t\t\treturn // Never copy over draft state.\n\t\t}\n\t\tconst desc = Object.getOwnPropertyDescriptor(base, key)\n\t\tlet {value} = desc\n\t\tif (desc.get) {\n\t\t\tif (!invokeGetters) {\n\t\t\t\tthrow new Error(\"Immer drafts cannot have computed properties\")\n\t\t\t}\n\t\t\tvalue = desc.get.call(base)\n\t\t}\n\t\tif (desc.enumerable) {\n\t\t\tclone[key] = value\n\t\t} else {\n\t\t\tObject.defineProperty(clone, key, {\n\t\t\t\tvalue,\n\t\t\t\twritable: true,\n\t\t\t\tconfigurable: true\n\t\t\t})\n\t\t}\n\t})\n\treturn clone\n}\n\nexport function each(obj, iter) {\n\tif (Array.isArray(obj) || isMap(obj) || isSet(obj)) {\n\t\tobj.forEach((entry, index) => iter(index, entry, obj))\n\t} else {\n\t\townKeys(obj).forEach(key => iter(key, obj[key], obj))\n\t}\n}\n\nexport function isEnumerable(base, prop) {\n\tconst desc = Object.getOwnPropertyDescriptor(base, prop)\n\treturn !!desc && desc.enumerable\n}\n\nexport function has(thing, prop) {\n\treturn isMap(thing)\n\t\t? thing.has(prop)\n\t\t: Object.prototype.hasOwnProperty.call(thing, prop)\n}\n\nexport function get(thing, prop) {\n\treturn isMap(thing) ? thing.get(prop) : thing[prop]\n}\n\nexport function is(x, y) {\n\t// From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n\tif (x === y) {\n\t\treturn x !== 0 || 1 / x === 1 / y\n\t} else {\n\t\treturn x !== x && y !== y\n\t}\n}\n\nexport const hasSymbol = typeof Symbol !== \"undefined\"\n\nexport const hasMap = typeof Map !== \"undefined\"\n\nexport function isMap(target) {\n\treturn hasMap && target instanceof Map\n}\n\nexport const hasSet = typeof Set !== \"undefined\"\n\nexport function isSet(target) {\n\treturn hasSet && target instanceof Set\n}\n\nexport function makeIterable(next) {\n\tlet self\n\treturn (self = {\n\t\t[Symbol.iterator]: () => self,\n\t\tnext\n\t})\n}\n\n/** Map.prototype.values _-or-_ Map.prototype.entries */\nexport function iterateMapValues(state, prop, receiver) {\n\tconst isEntries = prop !== \"values\"\n\treturn () => {\n\t\tconst iterator = latest(state)[Symbol.iterator]()\n\t\treturn makeIterable(() => {\n\t\t\tconst result = iterator.next()\n\t\t\tif (!result.done) {\n\t\t\t\tconst [key] = result.value\n\t\t\t\tconst value = receiver.get(key)\n\t\t\t\tresult.value = isEntries ? [key, value] : value\n\t\t\t}\n\t\t\treturn result\n\t\t})\n\t}\n}\n\nexport function makeIterateSetValues(createProxy) {\n\tfunction iterateSetValues(state, prop) {\n\t\tconst isEntries = prop === \"entries\"\n\t\treturn () => {\n\t\t\tconst iterator = latest(state)[Symbol.iterator]()\n\t\t\treturn makeIterable(() => {\n\t\t\t\tconst result = iterator.next()\n\t\t\t\tif (!result.done) {\n\t\t\t\t\tconst value = wrapSetValue(state, result.value)\n\t\t\t\t\tresult.value = isEntries ? [value, value] : value\n\t\t\t\t}\n\t\t\t\treturn result\n\t\t\t})\n\t\t}\n\t}\n\n\tfunction wrapSetValue(state, value) {\n\t\tconst key = original(value) || value\n\t\tlet draft = state.drafts.get(key)\n\t\tif (!draft) {\n\t\t\tif (state.finalized || !isDraftable(value) || state.finalizing) {\n\t\t\t\treturn value\n\t\t\t}\n\t\t\tdraft = createProxy(value, state)\n\t\t\tstate.drafts.set(key, draft)\n\t\t\tif (state.modified) {\n\t\t\t\tstate.copy.add(draft)\n\t\t\t}\n\t\t}\n\t\treturn draft\n\t}\n\n\treturn iterateSetValues\n}\n\nfunction latest(state) {\n\treturn state.copy || state.base\n}\n\nexport function clone(obj) {\n\tif (!isDraftable(obj)) return obj\n\tif (Array.isArray(obj)) return obj.map(clone)\n\tif (isMap(obj)) return new Map(obj)\n\tif (isSet(obj)) return new Set(obj)\n\tconst cloned = Object.create(Object.getPrototypeOf(obj))\n\tfor (const key in obj) cloned[key] = clone(obj[key])\n\treturn cloned\n}\n\nexport function freeze(obj, deep = false) {\n\tif (!isDraftable(obj) || isDraft(obj) || Object.isFrozen(obj)) return\n\tif (isSet(obj)) {\n\t\tobj.add = obj.clear = obj.delete = dontMutateFrozenCollections\n\t} else if (isMap(obj)) {\n\t\tobj.set = obj.clear = obj.delete = dontMutateFrozenCollections\n\t}\n\tObject.freeze(obj)\n\tif (deep) each(obj, (_, value) => freeze(value, true))\n}\n\nfunction dontMutateFrozenCollections() {\n\tthrow new Error(\"This object has been frozen and should not be mutated\")\n}\n","import {DRAFT_STATE} from \"./common\"\n\n/** Each scope represents a `produce` call. */\nexport class ImmerScope {\n\tconstructor(parent) {\n\t\tthis.drafts = []\n\t\tthis.parent = parent\n\n\t\t// Whenever the modified draft contains a draft from another scope, we\n\t\t// need to prevent auto-freezing so the unowned draft can be finalized.\n\t\tthis.canAutoFreeze = true\n\n\t\t// To avoid prototype lookups:\n\t\tthis.patches = null\n\t}\n\tusePatches(patchListener) {\n\t\tif (patchListener) {\n\t\t\tthis.patches = []\n\t\t\tthis.inversePatches = []\n\t\t\tthis.patchListener = patchListener\n\t\t}\n\t}\n\trevoke() {\n\t\tthis.leave()\n\t\tthis.drafts.forEach(revoke)\n\t\tthis.drafts = null // Make draft-related methods throw.\n\t}\n\tleave() {\n\t\tif (this === ImmerScope.current) {\n\t\t\tImmerScope.current = this.parent\n\t\t}\n\t}\n}\n\nImmerScope.current = null\nImmerScope.enter = function() {\n\treturn (this.current = new ImmerScope(this.current))\n}\n\nfunction revoke(draft) {\n\tdraft[DRAFT_STATE].revoke()\n}\n","\"use strict\"\nimport {\n\teach,\n\thas,\n\tis,\n\tisDraft,\n\tisDraftable,\n\tisEnumerable,\n\tisMap,\n\tisSet,\n\thasSymbol,\n\tshallowCopy,\n\tDRAFT_STATE,\n\titerateMapValues,\n\tmakeIterable,\n\tmakeIterateSetValues\n} from \"./common\"\nimport {ImmerScope} from \"./scope\"\n\nexport function willFinalize(scope, result, isReplaced) {\n\tscope.drafts.forEach(draft => {\n\t\tdraft[DRAFT_STATE].finalizing = true\n\t})\n\tif (!isReplaced) {\n\t\tif (scope.patches) {\n\t\t\tmarkChangesRecursively(scope.drafts[0])\n\t\t}\n\t\t// This is faster when we don't care about which attributes changed.\n\t\tmarkChangesSweep(scope.drafts)\n\t}\n\t// When a child draft is returned, look for changes.\n\telse if (isDraft(result) && result[DRAFT_STATE].scope === scope) {\n\t\tmarkChangesSweep(scope.drafts)\n\t}\n}\n\nexport function createProxy(base, parent) {\n\tconst isArray = Array.isArray(base)\n\tconst draft = clonePotentialDraft(base)\n\n\tif (isMap(base)) {\n\t\tproxyMap(draft)\n\t} else if (isSet(base)) {\n\t\tproxySet(draft)\n\t} else {\n\t\teach(draft, prop => {\n\t\t\tproxyProperty(draft, prop, isArray || isEnumerable(base, prop))\n\t\t})\n\t}\n\n\t// See \"proxy.js\" for property documentation.\n\tconst scope = parent ? parent.scope : ImmerScope.current\n\tconst state = {\n\t\tscope,\n\t\tmodified: false,\n\t\tfinalizing: false, // es5 only\n\t\tfinalized: false,\n\t\tassigned: isMap(base) ? new Map() : {},\n\t\tparent,\n\t\tbase,\n\t\tdraft,\n\t\tdrafts: isSet(base) ? new Map() : null,\n\t\tcopy: null,\n\t\trevoke,\n\t\trevoked: false // es5 only\n\t}\n\n\tcreateHiddenProperty(draft, DRAFT_STATE, state)\n\tscope.drafts.push(draft)\n\treturn draft\n}\n\nfunction revoke() {\n\tthis.revoked = true\n}\n\nfunction latest(state) {\n\treturn state.copy || state.base\n}\n\n// Access a property without creating an Immer draft.\nfunction peek(draft, prop) {\n\tconst state = draft[DRAFT_STATE]\n\tif (state && !state.finalizing) {\n\t\tstate.finalizing = true\n\t\tconst value = draft[prop]\n\t\tstate.finalizing = false\n\t\treturn value\n\t}\n\treturn draft[prop]\n}\n\nfunction get(state, prop) {\n\tassertUnrevoked(state)\n\tconst value = peek(latest(state), prop)\n\tif (state.finalizing) return value\n\t// Create a draft if the value is unmodified.\n\tif (value === peek(state.base, prop) && isDraftable(value)) {\n\t\tprepareCopy(state)\n\t\treturn (state.copy[prop] = createProxy(value, state))\n\t}\n\treturn value\n}\n\nfunction set(state, prop, value) {\n\tassertUnrevoked(state)\n\tstate.assigned[prop] = true\n\tif (!state.modified) {\n\t\tif (is(value, peek(latest(state), prop))) return\n\t\tmarkChanged(state)\n\t\tprepareCopy(state)\n\t}\n\tstate.copy[prop] = value\n}\n\nfunction markChanged(state) {\n\tif (!state.modified) {\n\t\tstate.modified = true\n\t\tif (state.parent) markChanged(state.parent)\n\t}\n}\n\nfunction prepareCopy(state) {\n\tif (!state.copy) state.copy = clonePotentialDraft(state.base)\n}\n\nfunction clonePotentialDraft(base) {\n\tconst state = base && base[DRAFT_STATE]\n\tif (state) {\n\t\tstate.finalizing = true\n\t\tconst draft = shallowCopy(state.draft, true)\n\t\tstate.finalizing = false\n\t\treturn draft\n\t}\n\treturn shallowCopy(base)\n}\n\n// property descriptors are recycled to make sure we don't create a get and set closure per property,\n// but share them all instead\nconst descriptors = {}\n\nfunction proxyProperty(draft, prop, enumerable) {\n\tlet desc = descriptors[prop]\n\tif (desc) {\n\t\tdesc.enumerable = enumerable\n\t} else {\n\t\tdescriptors[prop] = desc = {\n\t\t\tconfigurable: true,\n\t\t\tenumerable,\n\t\t\tget() {\n\t\t\t\treturn get(this[DRAFT_STATE], prop)\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tset(this[DRAFT_STATE], prop, value)\n\t\t\t}\n\t\t}\n\t}\n\tObject.defineProperty(draft, prop, desc)\n}\n\nfunction proxyMap(target) {\n\tObject.defineProperties(target, mapTraps)\n\n\tif (hasSymbol) {\n\t\tObject.defineProperty(\n\t\t\ttarget,\n\t\t\tSymbol.iterator,\n\t\t\tproxyMethod(iterateMapValues)\n\t\t)\n\t}\n}\n\nconst mapTraps = finalizeTraps({\n\tsize: state => latest(state).size,\n\thas: state => key => latest(state).has(key),\n\tset: state => (key, value) => {\n\t\tif (latest(state).get(key) !== value) {\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\tstate.assigned.set(key, true)\n\t\t\tstate.copy.set(key, value)\n\t\t}\n\t\treturn state.draft\n\t},\n\tdelete: state => key => {\n\t\tprepareCopy(state)\n\t\tmarkChanged(state)\n\t\tstate.assigned.set(key, false)\n\t\tstate.copy.delete(key)\n\t\treturn false\n\t},\n\tclear: state => () => {\n\t\tif (!state.copy) {\n\t\t\tprepareCopy(state)\n\t\t}\n\t\tmarkChanged(state)\n\t\tstate.assigned = new Map()\n\t\tfor (const key of latest(state).keys()) {\n\t\t\tstate.assigned.set(key, false)\n\t\t}\n\t\treturn state.copy.clear()\n\t},\n\tforEach: (state, key, reciever) => cb => {\n\t\tlatest(state).forEach((value, key, map) => {\n\t\t\tcb(reciever.get(key), key, map)\n\t\t})\n\t},\n\tget: state => key => {\n\t\tconst value = latest(state).get(key)\n\n\t\tif (state.finalizing || state.finalized || !isDraftable(value)) {\n\t\t\treturn value\n\t\t}\n\n\t\tif (value !== state.base.get(key)) {\n\t\t\treturn value\n\t\t}\n\t\tconst draft = createProxy(value, state)\n\t\tprepareCopy(state)\n\t\tstate.copy.set(key, draft)\n\t\treturn draft\n\t},\n\tkeys: state => () => latest(state).keys(),\n\tvalues: iterateMapValues,\n\tentries: iterateMapValues\n})\n\nfunction proxySet(target) {\n\tObject.defineProperties(target, setTraps)\n\n\tif (hasSymbol) {\n\t\tObject.defineProperty(\n\t\t\ttarget,\n\t\t\tSymbol.iterator,\n\t\t\tproxyMethod(iterateSetValues)\n\t\t)\n\t}\n}\n\nconst iterateSetValues = makeIterateSetValues(createProxy)\n\nconst setTraps = finalizeTraps({\n\tsize: state => {\n\t\treturn latest(state).size\n\t},\n\tadd: state => value => {\n\t\tif (!latest(state).has(value)) {\n\t\t\tmarkChanged(state)\n\t\t\tif (!state.copy) {\n\t\t\t\tprepareCopy(state)\n\t\t\t}\n\t\t\tstate.copy.add(value)\n\t\t}\n\t\treturn state.draft\n\t},\n\tdelete: state => value => {\n\t\tmarkChanged(state)\n\t\tif (!state.copy) {\n\t\t\tprepareCopy(state)\n\t\t}\n\t\treturn state.copy.delete(value)\n\t},\n\thas: state => key => {\n\t\treturn latest(state).has(key)\n\t},\n\tclear: state => () => {\n\t\tmarkChanged(state)\n\t\tif (!state.copy) {\n\t\t\tprepareCopy(state)\n\t\t}\n\t\treturn state.copy.clear()\n\t},\n\tkeys: iterateSetValues,\n\tentries: iterateSetValues,\n\tvalues: iterateSetValues,\n\tforEach: state => (cb, thisArg) => {\n\t\tconst iterator = iterateSetValues(state)()\n\t\tlet result = iterator.next()\n\t\twhile (!result.done) {\n\t\t\tcb.call(thisArg, result.value, result.value, state.draft)\n\t\t\tresult = iterator.next()\n\t\t}\n\t}\n})\n\nfunction finalizeTraps(traps) {\n\treturn Object.keys(traps).reduce(function(acc, key) {\n\t\tconst builder = key === \"size\" ? proxyAttr : proxyMethod\n\t\tacc[key] = builder(traps[key], key)\n\t\treturn acc\n\t}, {})\n}\n\nfunction proxyAttr(fn) {\n\treturn {\n\t\tget() {\n\t\t\tconst state = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\treturn fn(state)\n\t\t}\n\t}\n}\n\nfunction proxyMethod(trap, key) {\n\treturn {\n\t\tget() {\n\t\t\treturn function(...args) {\n\t\t\t\tconst state = this[DRAFT_STATE]\n\t\t\t\tassertUnrevoked(state)\n\t\t\t\treturn trap(state, key, state.draft)(...args)\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction assertUnrevoked(state) {\n\tif (state.revoked === true)\n\t\tthrow new Error(\n\t\t\t\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" +\n\t\t\t\tJSON.stringify(latest(state))\n\t\t)\n}\n\n// This looks expensive, but only proxies are visited, and only objects without known changes are scanned.\nfunction markChangesSweep(drafts) {\n\t// The natural order of drafts in the `scope` array is based on when they\n\t// were accessed. By processing drafts in reverse natural order, we have a\n\t// better chance of processing leaf nodes first. When a leaf node is known to\n\t// have changed, we can avoid any traversal of its ancestor nodes.\n\tfor (let i = drafts.length - 1; i >= 0; i--) {\n\t\tconst state = drafts[i][DRAFT_STATE]\n\t\tif (!state.modified) {\n\t\t\tif (Array.isArray(state.base)) {\n\t\t\t\tif (hasArrayChanges(state)) markChanged(state)\n\t\t\t} else if (isMap(state.base)) {\n\t\t\t\tif (hasMapChanges(state)) markChanged(state)\n\t\t\t} else if (isSet(state.base)) {\n\t\t\t\tif (hasSetChanges(state)) markChanged(state)\n\t\t\t} else if (hasObjectChanges(state)) {\n\t\t\t\tmarkChanged(state)\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction markChangesRecursively(object) {\n\tif (!object || typeof object !== \"object\") return\n\tconst state = object[DRAFT_STATE]\n\tif (!state) return\n\tconst {base, draft, assigned} = state\n\tif (!Array.isArray(object)) {\n\t\t// Look for added keys.\n\t\tObject.keys(draft).forEach(key => {\n\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\tif (base[key] === undefined && !has(base, key)) {\n\t\t\t\tassigned[key] = true\n\t\t\t\tmarkChanged(state)\n\t\t\t} else if (!assigned[key]) {\n\t\t\t\t// Only untouched properties trigger recursion.\n\t\t\t\tmarkChangesRecursively(draft[key])\n\t\t\t}\n\t\t})\n\t\t// Look for removed keys.\n\t\tObject.keys(base).forEach(key => {\n\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\tif (draft[key] === undefined && !has(draft, key)) {\n\t\t\t\tassigned[key] = false\n\t\t\t\tmarkChanged(state)\n\t\t\t}\n\t\t})\n\t} else if (hasArrayChanges(state)) {\n\t\tmarkChanged(state)\n\t\tassigned.length = true\n\t\tif (draft.length < base.length) {\n\t\t\tfor (let i = draft.length; i < base.length; i++) assigned[i] = false\n\t\t} else {\n\t\t\tfor (let i = base.length; i < draft.length; i++) assigned[i] = true\n\t\t}\n\t\tfor (let i = 0; i < draft.length; i++) {\n\t\t\t// Only untouched indices trigger recursion.\n\t\t\tif (assigned[i] === undefined) markChangesRecursively(draft[i])\n\t\t}\n\t}\n}\n\nfunction hasObjectChanges(state) {\n\tconst {base, draft} = state\n\n\t// Search for added keys and changed keys. Start at the back, because\n\t// non-numeric keys are ordered by time of definition on the object.\n\tconst keys = Object.keys(draft)\n\tfor (let i = keys.length - 1; i >= 0; i--) {\n\t\tconst key = keys[i]\n\t\tconst baseValue = base[key]\n\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\tif (baseValue === undefined && !has(base, key)) {\n\t\t\treturn true\n\t\t}\n\t\t// Once a base key is deleted, future changes go undetected, because its\n\t\t// descriptor is erased. This branch detects any missed changes.\n\t\telse {\n\t\t\tconst value = draft[key]\n\t\t\tconst state = value && value[DRAFT_STATE]\n\t\t\tif (state ? state.base !== baseValue : !is(value, baseValue)) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t}\n\t}\n\n\t// At this point, no keys were added or changed.\n\t// Compare key count to determine if keys were deleted.\n\treturn keys.length !== Object.keys(base).length\n}\n\nfunction hasArrayChanges(state) {\n\tconst {draft} = state\n\tif (draft.length !== state.base.length) return true\n\t// See #116\n\t// If we first shorten the length, our array interceptors will be removed.\n\t// If after that new items are added, result in the same original length,\n\t// those last items will have no intercepting property.\n\t// So if there is no own descriptor on the last position, we know that items were removed and added\n\t// N.B.: splice, unshift, etc only shift values around, but not prop descriptors, so we only have to check\n\t// the last one\n\tconst descriptor = Object.getOwnPropertyDescriptor(draft, draft.length - 1)\n\t// descriptor can be null, but only for newly created sparse arrays, eg. new Array(10)\n\tif (descriptor && !descriptor.get) return true\n\t// For all other cases, we don't have to compare, as they would have been picked up by the index setters\n\treturn false\n}\n\nfunction hasMapChanges(state) {\n\tconst {base, draft} = state\n\n\tif (base.size !== draft.size) return true\n\n\t// IE11 supports only forEach iteration\n\tlet hasChanges = false\n\tdraft.forEach(function(value, key) {\n\t\tif (!hasChanges) {\n\t\t\thasChanges = isDraftable(value) ? value.modified : value !== base.get(key)\n\t\t}\n\t})\n\treturn hasChanges\n}\n\nfunction hasSetChanges(state) {\n\tconst {base, draft} = state\n\n\tif (base.size !== draft.size) return true\n\n\t// IE11 supports only forEach iteration\n\tlet hasChanges = false\n\tdraft.forEach(function(value, key) {\n\t\tif (!hasChanges) {\n\t\t\thasChanges = isDraftable(value) ? value.modified : !base.has(key)\n\t\t}\n\t})\n\treturn hasChanges\n}\n\nfunction createHiddenProperty(target, prop, value) {\n\tObject.defineProperty(target, prop, {\n\t\tvalue: value,\n\t\tenumerable: false,\n\t\twritable: true\n\t})\n}\n","\"use strict\"\nimport {\n\tassign,\n\teach,\n\thas,\n\tis,\n\tisDraftable,\n\tisDraft,\n\tisMap,\n\tisSet,\n\thasSymbol,\n\tshallowCopy,\n\tmakeIterable,\n\tDRAFT_STATE,\n\tassignMap,\n\tassignSet,\n\toriginal,\n\titerateMapValues,\n\tmakeIterateSetValues\n} from \"./common\"\nimport {ImmerScope} from \"./scope\"\n\n// Do nothing before being finalized.\nexport function willFinalize() {}\n\n/**\n * Returns a new draft of the `base` object.\n *\n * The second argument is the parent draft-state (used internally).\n */\nexport function createProxy(base, parent) {\n\tconst scope = parent ? parent.scope : ImmerScope.current\n\tconst state = {\n\t\t// Track which produce call this is associated with.\n\t\tscope,\n\t\t// True for both shallow and deep changes.\n\t\tmodified: false,\n\t\t// Used during finalization.\n\t\tfinalized: false,\n\t\t// Track which properties have been assigned (true) or deleted (false).\n\t\tassigned: {},\n\t\t// The parent draft state.\n\t\tparent,\n\t\t// The base state.\n\t\tbase,\n\t\t// The base proxy.\n\t\tdraft: null,\n\t\t// Any property proxies.\n\t\tdrafts: {},\n\t\t// The base copy with any updated values.\n\t\tcopy: null,\n\t\t// Called by the `produce` function.\n\t\trevoke: null\n\t}\n\n\tlet target = state\n\tlet traps = objectTraps\n\tif (Array.isArray(base)) {\n\t\ttarget = [state]\n\t\ttraps = arrayTraps\n\t}\n\t// Map drafts must support object keys, so we use Map objects to track changes.\n\telse if (isMap(base)) {\n\t\ttraps = mapTraps\n\t\tstate.drafts = new Map()\n\t\tstate.assigned = new Map()\n\t}\n\t// Set drafts use a Map object to track which of its values are drafted.\n\t// And we don't need the \"assigned\" property, because Set objects have no keys.\n\telse if (isSet(base)) {\n\t\ttraps = setTraps\n\t\tstate.drafts = new Map()\n\t}\n\n\tconst {revoke, proxy} = Proxy.revocable(target, traps)\n\n\tstate.draft = proxy\n\tstate.revoke = revoke\n\n\tscope.drafts.push(proxy)\n\treturn proxy\n}\n\n/**\n * Object drafts\n */\n\nconst objectTraps = {\n\tget(state, prop) {\n\t\tif (prop === DRAFT_STATE) return state\n\t\tlet {drafts} = state\n\n\t\t// Check for existing draft in unmodified state.\n\t\tif (!state.modified && has(drafts, prop)) {\n\t\t\treturn drafts[prop]\n\t\t}\n\n\t\tconst value = latest(state)[prop]\n\t\tif (state.finalized || !isDraftable(value)) {\n\t\t\treturn value\n\t\t}\n\n\t\t// Check for existing draft in modified state.\n\t\tif (state.modified) {\n\t\t\t// Assigned values are never drafted. This catches any drafts we created, too.\n\t\t\tif (value !== peek(state.base, prop)) return value\n\t\t\t// Store drafts on the copy (when one exists).\n\t\t\tdrafts = state.copy\n\t\t}\n\n\t\treturn (drafts[prop] = createProxy(value, state))\n\t},\n\thas(state, prop) {\n\t\treturn prop in latest(state)\n\t},\n\townKeys(state) {\n\t\treturn Reflect.ownKeys(latest(state))\n\t},\n\tset(state, prop, value) {\n\t\tif (!state.modified) {\n\t\t\tconst baseValue = peek(state.base, prop)\n\t\t\t// Optimize based on value's truthiness. Truthy values are guaranteed to\n\t\t\t// never be undefined, so we can avoid the `in` operator. Lastly, truthy\n\t\t\t// values may be drafts, but falsy values are never drafts.\n\t\t\tconst isUnchanged = value\n\t\t\t\t? is(baseValue, value) || value === state.drafts[prop]\n\t\t\t\t: is(baseValue, value) && prop in state.base\n\t\t\tif (isUnchanged) return true\n\t\t\tmarkChanged(state)\n\t\t}\n\t\tstate.assigned[prop] = true\n\t\tstate.copy[prop] = value\n\t\treturn true\n\t},\n\tdeleteProperty(state, prop) {\n\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\tif (peek(state.base, prop) !== undefined || prop in state.base) {\n\t\t\tstate.assigned[prop] = false\n\t\t\tmarkChanged(state)\n\t\t} else if (state.assigned[prop]) {\n\t\t\t// if an originally not assigned property was deleted\n\t\t\tdelete state.assigned[prop]\n\t\t}\n\t\tif (state.copy) delete state.copy[prop]\n\t\treturn true\n\t},\n\t// Note: We never coerce `desc.value` into an Immer draft, because we can't make\n\t// the same guarantee in ES5 mode.\n\tgetOwnPropertyDescriptor(state, prop) {\n\t\tconst owner = latest(state)\n\t\tconst desc = Reflect.getOwnPropertyDescriptor(owner, prop)\n\t\tif (desc) {\n\t\t\tdesc.writable = true\n\t\t\tdesc.configurable = !Array.isArray(owner) || prop !== \"length\"\n\t\t}\n\t\treturn desc\n\t},\n\tdefineProperty() {\n\t\tthrow new Error(\"Object.defineProperty() cannot be used on an Immer draft\") // prettier-ignore\n\t},\n\tgetPrototypeOf(state) {\n\t\treturn Object.getPrototypeOf(state.base)\n\t},\n\tsetPrototypeOf() {\n\t\tthrow new Error(\"Object.setPrototypeOf() cannot be used on an Immer draft\") // prettier-ignore\n\t}\n}\n\n/**\n * Array drafts\n */\n\nconst arrayTraps = {}\neach(objectTraps, (key, fn) => {\n\tarrayTraps[key] = function() {\n\t\targuments[0] = arguments[0][0]\n\t\treturn fn.apply(this, arguments)\n\t}\n})\narrayTraps.deleteProperty = function(state, prop) {\n\tif (isNaN(parseInt(prop))) {\n\t\tthrow new Error(\"Immer only supports deleting array indices\") // prettier-ignore\n\t}\n\treturn objectTraps.deleteProperty.call(this, state[0], prop)\n}\narrayTraps.set = function(state, prop, value) {\n\tif (prop !== \"length\" && isNaN(parseInt(prop))) {\n\t\tthrow new Error(\"Immer only supports setting array indices and the 'length' property\") // prettier-ignore\n\t}\n\treturn objectTraps.set.call(this, state[0], prop, value)\n}\n\n// Used by Map and Set drafts\nconst reflectTraps = makeReflectTraps([\n\t\"ownKeys\",\n\t\"has\",\n\t\"set\",\n\t\"deleteProperty\",\n\t\"defineProperty\",\n\t\"getOwnPropertyDescriptor\",\n\t\"preventExtensions\",\n\t\"isExtensible\",\n\t\"getPrototypeOf\"\n])\n\n/**\n * Map drafts\n */\n\nconst mapTraps = makeTrapsForGetters({\n\t[DRAFT_STATE]: state => state,\n\tsize: state => latest(state).size,\n\thas: state => key => latest(state).has(key),\n\tset: state => (key, value) => {\n\t\tconst values = latest(state)\n\t\tif (!values.has(key) || values.get(key) !== value) {\n\t\t\tmarkChanged(state)\n\t\t\tstate.assigned.set(key, true)\n\t\t\tstate.copy.set(key, value)\n\t\t}\n\t\treturn state.draft\n\t},\n\tdelete: state => key => {\n\t\tif (latest(state).has(key)) {\n\t\t\tmarkChanged(state)\n\t\t\tstate.assigned.set(key, false)\n\t\t\treturn state.copy.delete(key)\n\t\t}\n\t\treturn false\n\t},\n\tclear: state => () => {\n\t\tmarkChanged(state)\n\t\tstate.assigned = new Map()\n\t\tfor (const key of latest(state).keys()) {\n\t\t\tstate.assigned.set(key, false)\n\t\t}\n\t\treturn state.copy.clear()\n\t},\n\tforEach: (state, _, receiver) => (cb, thisArg) =>\n\t\tlatest(state).forEach((_, key, map) => {\n\t\t\tconst value = receiver.get(key)\n\t\t\tcb.call(thisArg, value, key, map)\n\t\t}),\n\tget: state => key => {\n\t\tconst drafts = state[state.modified ? \"copy\" : \"drafts\"]\n\t\tif (drafts.has(key)) {\n\t\t\treturn drafts.get(key)\n\t\t}\n\n\t\tconst value = latest(state).get(key)\n\t\tif (state.finalized || !isDraftable(value)) {\n\t\t\treturn value\n\t\t}\n\n\t\tconst draft = createProxy(value, state)\n\t\tdrafts.set(key, draft)\n\t\treturn draft\n\t},\n\tkeys: state => () => latest(state).keys(),\n\tvalues: iterateMapValues,\n\tentries: iterateMapValues,\n\t[hasSymbol ? Symbol.iterator : \"@@iterator\"]: iterateMapValues\n})\n\nconst iterateSetValues = makeIterateSetValues(createProxy)\n/**\n * Set drafts\n */\n\nconst setTraps = makeTrapsForGetters({\n\t[DRAFT_STATE]: state => state,\n\tsize: state => latest(state).size,\n\thas: state => key => latest(state).has(key),\n\tadd: state => value => {\n\t\tif (!latest(state).has(value)) {\n\t\t\tmarkChanged(state)\n\t\t\tstate.copy.add(value)\n\t\t}\n\t\treturn state.draft\n\t},\n\tdelete: state => value => {\n\t\tmarkChanged(state)\n\t\treturn state.copy.delete(value)\n\t},\n\tclear: state => () => {\n\t\tmarkChanged(state)\n\t\treturn state.copy.clear()\n\t},\n\tforEach: state => (cb, thisArg) => {\n\t\tconst iterator = iterateSetValues(state)()\n\t\tlet result = iterator.next()\n\t\twhile (!result.done) {\n\t\t\tcb.call(thisArg, result.value, result.value, state.draft)\n\t\t\tresult = iterator.next()\n\t\t}\n\t},\n\tkeys: iterateSetValues,\n\tvalues: iterateSetValues,\n\tentries: iterateSetValues,\n\t[hasSymbol ? Symbol.iterator : \"@@iterator\"]: iterateSetValues\n})\n\n/**\n * Helpers\n */\n\n// Retrieve the latest values of the draft.\nfunction latest(state) {\n\treturn state.copy || state.base\n}\n\n// Access a property without creating an Immer draft.\nfunction peek(draft, prop) {\n\tconst state = draft[DRAFT_STATE]\n\tconst desc = Reflect.getOwnPropertyDescriptor(\n\t\tstate ? latest(state) : draft,\n\t\tprop\n\t)\n\treturn desc && desc.value\n}\n\nfunction markChanged(state) {\n\tif (!state.modified) {\n\t\tstate.modified = true\n\n\t\tconst {base, drafts, parent} = state\n\t\tconst copy = shallowCopy(base)\n\n\t\tif (isSet(base)) {\n\t\t\t// Note: The `drafts` property is preserved for Set objects, since\n\t\t\t// we need to keep track of which values are drafted.\n\t\t\tassignSet(copy, drafts)\n\t\t} else {\n\t\t\t// Merge nested drafts into the copy.\n\t\t\tif (isMap(base)) assignMap(copy, drafts)\n\t\t\telse assign(copy, drafts)\n\t\t\tstate.drafts = null\n\t\t}\n\n\t\tstate.copy = copy\n\t\tif (parent) {\n\t\t\tmarkChanged(parent)\n\t\t}\n\t}\n}\n\n/** Create traps that all use the `Reflect` API on the `latest(state)` */\nfunction makeReflectTraps(names) {\n\treturn names.reduce((traps, name) => {\n\t\ttraps[name] = (state, ...args) => Reflect[name](latest(state), ...args)\n\t\treturn traps\n\t}, {})\n}\n\nfunction makeTrapsForGetters(getters) {\n\treturn {\n\t\t...reflectTraps,\n\t\tget(state, prop, receiver) {\n\t\t\treturn getters.hasOwnProperty(prop)\n\t\t\t\t? getters[prop](state, prop, receiver)\n\t\t\t\t: Reflect.get(state, prop, receiver)\n\t\t},\n\t\tsetPrototypeOf(state) {\n\t\t\tthrow new Error(\"Object.setPrototypeOf() cannot be used on an Immer draft\") // prettier-ignore\n\t\t}\n\t}\n}\n","import {get, each, isMap, isSet, has, clone} from \"./common\"\n\nexport function generatePatches(state, basePath, patches, inversePatches) {\n\tconst generatePatchesFn = Array.isArray(state.base)\n\t\t? generateArrayPatches\n\t\t: isSet(state.base)\n\t\t? generateSetPatches\n\t\t: generatePatchesFromAssigned\n\n\tgeneratePatchesFn(state, basePath, patches, inversePatches)\n}\n\nfunction generateArrayPatches(state, basePath, patches, inversePatches) {\n\tlet {base, copy, assigned} = state\n\n\t// Reduce complexity by ensuring `base` is never longer.\n\tif (copy.length < base.length) {\n\t\t;[base, copy] = [copy, base]\n\t\t;[patches, inversePatches] = [inversePatches, patches]\n\t}\n\n\tconst delta = copy.length - base.length\n\n\t// Find the first replaced index.\n\tlet start = 0\n\twhile (base[start] === copy[start] && start < base.length) {\n\t\t++start\n\t}\n\n\t// Find the last replaced index. Search from the end to optimize splice patches.\n\tlet end = base.length\n\twhile (end > start && base[end - 1] === copy[end + delta - 1]) {\n\t\t--end\n\t}\n\n\t// Process replaced indices.\n\tfor (let i = start; i < end; ++i) {\n\t\tif (assigned[i] && copy[i] !== base[i]) {\n\t\t\tconst path = basePath.concat([i])\n\t\t\tpatches.push({\n\t\t\t\top: \"replace\",\n\t\t\t\tpath,\n\t\t\t\tvalue: copy[i]\n\t\t\t})\n\t\t\tinversePatches.push({\n\t\t\t\top: \"replace\",\n\t\t\t\tpath,\n\t\t\t\tvalue: base[i]\n\t\t\t})\n\t\t}\n\t}\n\n\tconst replaceCount = patches.length\n\n\t// Process added indices.\n\tfor (let i = end + delta - 1; i >= end; --i) {\n\t\tconst path = basePath.concat([i])\n\t\tpatches[replaceCount + i - end] = {\n\t\t\top: \"add\",\n\t\t\tpath,\n\t\t\tvalue: copy[i]\n\t\t}\n\t\tinversePatches.push({\n\t\t\top: \"remove\",\n\t\t\tpath\n\t\t})\n\t}\n}\n\n// This is used for both Map objects and normal objects.\nfunction generatePatchesFromAssigned(state, basePath, patches, inversePatches) {\n\tconst {base, copy} = state\n\teach(state.assigned, (key, assignedValue) => {\n\t\tconst origValue = get(base, key)\n\t\tconst value = get(copy, key)\n\t\tconst op = !assignedValue ? \"remove\" : has(base, key) ? \"replace\" : \"add\"\n\t\tif (origValue === value && op === \"replace\") return\n\t\tconst path = basePath.concat(key)\n\t\tpatches.push(op === \"remove\" ? {op, path} : {op, path, value})\n\t\tinversePatches.push(\n\t\t\top === \"add\"\n\t\t\t\t? {op: \"remove\", path}\n\t\t\t\t: op === \"remove\"\n\t\t\t\t? {op: \"add\", path, value: origValue}\n\t\t\t\t: {op: \"replace\", path, value: origValue}\n\t\t)\n\t})\n}\n\nfunction generateSetPatches(state, basePath, patches, inversePatches) {\n\tlet {base, copy} = state\n\n\tlet i = 0\n\tfor (const value of base) {\n\t\tif (!copy.has(value)) {\n\t\t\tconst path = basePath.concat([i])\n\t\t\tpatches.push({\n\t\t\t\top: \"remove\",\n\t\t\t\tpath,\n\t\t\t\tvalue\n\t\t\t})\n\t\t\tinversePatches.unshift({\n\t\t\t\top: \"add\",\n\t\t\t\tpath,\n\t\t\t\tvalue\n\t\t\t})\n\t\t}\n\t\ti++\n\t}\n\ti = 0\n\tfor (const value of copy) {\n\t\tif (!base.has(value)) {\n\t\t\tconst path = basePath.concat([i])\n\t\t\tpatches.push({\n\t\t\t\top: \"add\",\n\t\t\t\tpath,\n\t\t\t\tvalue\n\t\t\t})\n\t\t\tinversePatches.unshift({\n\t\t\t\top: \"remove\",\n\t\t\t\tpath,\n\t\t\t\tvalue\n\t\t\t})\n\t\t}\n\t\ti++\n\t}\n}\n\nexport const applyPatches = (draft, patches) => {\n\tfor (const patch of patches) {\n\t\tconst {path, op} = patch\n\n\t\tif (!path.length) throw new Error(\"Illegal state\")\n\n\t\tlet base = draft\n\t\tfor (let i = 0; i < path.length - 1; i++) {\n\t\t\tbase = get(base, path[i])\n\t\t\tif (!base || typeof base !== \"object\")\n\t\t\t\tthrow new Error(\"Cannot apply patch, path doesn't resolve: \" + path.join(\"/\")) // prettier-ignore\n\t\t}\n\n\t\tconst value = clone(patch.value) // used to clone patch to ensure original patch is not modified, see #411\n\n\t\tconst key = path[path.length - 1]\n\t\tswitch (op) {\n\t\t\tcase \"replace\":\n\t\t\t\tif (isMap(base)) {\n\t\t\t\t\tbase.set(key, value)\n\t\t\t\t} else if (isSet(base)) {\n\t\t\t\t\tthrow new Error('Sets cannot have \"replace\" patches.')\n\t\t\t\t} else {\n\t\t\t\t\t// if value is an object, then it's assigned by reference\n\t\t\t\t\t// in the following add or remove ops, the value field inside the patch will also be modifyed\n\t\t\t\t\t// so we use value from the cloned patch\n\t\t\t\t\tbase[key] = value\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\tcase \"add\":\n\t\t\t\tif (isSet(base)) {\n\t\t\t\t\tbase.delete(patch.value)\n\t\t\t\t}\n\n\t\t\t\tArray.isArray(base)\n\t\t\t\t\t? base.splice(key, 0, value)\n\t\t\t\t\t: isMap(base)\n\t\t\t\t\t? base.set(key, value)\n\t\t\t\t\t: isSet(base)\n\t\t\t\t\t? base.add(value)\n\t\t\t\t\t: (base[key] = value)\n\t\t\t\tbreak\n\t\t\tcase \"remove\":\n\t\t\t\tArray.isArray(base)\n\t\t\t\t\t? base.splice(key, 1)\n\t\t\t\t\t: isMap(base)\n\t\t\t\t\t? base.delete(key)\n\t\t\t\t\t: isSet(base)\n\t\t\t\t\t? base.delete(patch.value)\n\t\t\t\t\t: delete base[key]\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"Unsupported patch operation: \" + op)\n\t\t}\n\t}\n\n\treturn draft\n}\n","import * as legacyProxy from \"./es5\"\nimport * as modernProxy from \"./proxy\"\nimport {applyPatches, generatePatches} from \"./patches\"\nimport {\n\tassign,\n\teach,\n\thas,\n\tis,\n\tisDraft,\n\tisSet,\n\tget,\n\tisMap,\n\tisDraftable,\n\tisEnumerable,\n\tshallowCopy,\n\tDRAFT_STATE,\n\tNOTHING,\n\tfreeze\n} from \"./common\"\nimport {ImmerScope} from \"./scope\"\n\nfunction verifyMinified() {}\n\nconst configDefaults = {\n\tuseProxies:\n\t\ttypeof Proxy !== \"undefined\" &&\n\t\ttypeof Proxy.revocable !== \"undefined\" &&\n\t\ttypeof Reflect !== \"undefined\",\n\tautoFreeze:\n\t\ttypeof process !== \"undefined\"\n\t\t\t? process.env.NODE_ENV !== \"production\"\n\t\t\t: verifyMinified.name === \"verifyMinified\",\n\tonAssign: null,\n\tonDelete: null,\n\tonCopy: null\n}\n\nexport class Immer {\n\tconstructor(config) {\n\t\tassign(this, configDefaults, config)\n\t\tthis.setUseProxies(this.useProxies)\n\t\tthis.produce = this.produce.bind(this)\n\t\tthis.produceWithPatches = this.produceWithPatches.bind(this)\n\t}\n\tproduce(base, recipe, patchListener) {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\" && typeof recipe !== \"function\") {\n\t\t\tconst defaultBase = recipe\n\t\t\trecipe = base\n\n\t\t\tconst self = this\n\t\t\treturn function curriedProduce(base = defaultBase, ...args) {\n\t\t\t\treturn self.produce(base, draft => recipe.call(this, draft, ...args)) // prettier-ignore\n\t\t\t}\n\t\t}\n\n\t\t// prettier-ignore\n\t\t{\n\t\t\tif (typeof recipe !== \"function\") {\n\t\t\t\tthrow new Error(\"The first or second argument to `produce` must be a function\")\n\t\t\t}\n\t\t\tif (patchListener !== undefined && typeof patchListener !== \"function\") {\n\t\t\t\tthrow new Error(\"The third argument to `produce` must be a function or undefined\")\n\t\t\t}\n\t\t}\n\n\t\tlet result\n\n\t\t// Only plain objects, arrays, and \"immerable classes\" are drafted.\n\t\tif (isDraftable(base)) {\n\t\t\tconst scope = ImmerScope.enter()\n\t\t\tconst proxy = this.createProxy(base)\n\t\t\tlet hasError = true\n\t\t\ttry {\n\t\t\t\tresult = recipe(proxy)\n\t\t\t\thasError = false\n\t\t\t} finally {\n\t\t\t\t// finally instead of catch + rethrow better preserves original stack\n\t\t\t\tif (hasError) scope.revoke()\n\t\t\t\telse scope.leave()\n\t\t\t}\n\t\t\tif (typeof Promise !== \"undefined\" && result instanceof Promise) {\n\t\t\t\treturn result.then(\n\t\t\t\t\tresult => {\n\t\t\t\t\t\tscope.usePatches(patchListener)\n\t\t\t\t\t\treturn this.processResult(result, scope)\n\t\t\t\t\t},\n\t\t\t\t\terror => {\n\t\t\t\t\t\tscope.revoke()\n\t\t\t\t\t\tthrow error\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\tscope.usePatches(patchListener)\n\t\t\treturn this.processResult(result, scope)\n\t\t} else {\n\t\t\tresult = recipe(base)\n\t\t\tif (result === NOTHING) return undefined\n\t\t\tif (result === undefined) result = base\n\t\t\tthis.maybeFreeze(result, true)\n\t\t\treturn result\n\t\t}\n\t}\n\tproduceWithPatches(arg1, arg2, arg3) {\n\t\tif (typeof arg1 === \"function\") {\n\t\t\tconst self = this\n\t\t\treturn (state, ...args) =>\n\t\t\t\tthis.produceWithPatches(state, draft => arg1(draft, ...args))\n\t\t}\n\t\t// non-curried form\n\t\tif (arg3)\n\t\t\tthrow new Error(\"A patch listener cannot be passed to produceWithPatches\")\n\t\tlet patches, inversePatches\n\t\tconst nextState = this.produce(arg1, arg2, (p, ip) => {\n\t\t\tpatches = p\n\t\t\tinversePatches = ip\n\t\t})\n\t\treturn [nextState, patches, inversePatches]\n\t}\n\tcreateDraft(base) {\n\t\tif (!isDraftable(base)) {\n\t\t\tthrow new Error(\"First argument to `createDraft` must be a plain object, an array, or an immerable object\") // prettier-ignore\n\t\t}\n\t\tconst scope = ImmerScope.enter()\n\t\tconst proxy = this.createProxy(base)\n\t\tproxy[DRAFT_STATE].isManual = true\n\t\tscope.leave()\n\t\treturn proxy\n\t}\n\tfinishDraft(draft, patchListener) {\n\t\tconst state = draft && draft[DRAFT_STATE]\n\t\tif (!state || !state.isManual) {\n\t\t\tthrow new Error(\"First argument to `finishDraft` must be a draft returned by `createDraft`\") // prettier-ignore\n\t\t}\n\t\tif (state.finalized) {\n\t\t\tthrow new Error(\"The given draft is already finalized\") // prettier-ignore\n\t\t}\n\t\tconst {scope} = state\n\t\tscope.usePatches(patchListener)\n\t\treturn this.processResult(undefined, scope)\n\t}\n\tsetAutoFreeze(value) {\n\t\tthis.autoFreeze = value\n\t}\n\tsetUseProxies(value) {\n\t\tthis.useProxies = value\n\t\tassign(this, value ? modernProxy : legacyProxy)\n\t}\n\tapplyPatches(base, patches) {\n\t\t// If a patch replaces the entire state, take that replacement as base\n\t\t// before applying patches\n\t\tlet i\n\t\tfor (i = patches.length - 1; i >= 0; i--) {\n\t\t\tconst patch = patches[i]\n\t\t\tif (patch.path.length === 0 && patch.op === \"replace\") {\n\t\t\t\tbase = patch.value\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\tif (isDraft(base)) {\n\t\t\t// N.B: never hits if some patch a replacement, patches are never drafts\n\t\t\treturn applyPatches(base, patches)\n\t\t}\n\t\t// Otherwise, produce a copy of the base state.\n\t\treturn this.produce(base, draft =>\n\t\t\tapplyPatches(draft, patches.slice(i + 1))\n\t\t)\n\t}\n\t/** @internal */\n\tprocessResult(result, scope) {\n\t\tconst baseDraft = scope.drafts[0]\n\t\tconst isReplaced = result !== undefined && result !== baseDraft\n\t\tthis.willFinalize(scope, result, isReplaced)\n\t\tif (isReplaced) {\n\t\t\tif (baseDraft[DRAFT_STATE].modified) {\n\t\t\t\tscope.revoke()\n\t\t\t\tthrow new Error(\"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\") // prettier-ignore\n\t\t\t}\n\t\t\tif (isDraftable(result)) {\n\t\t\t\t// Finalize the result in case it contains (or is) a subset of the draft.\n\t\t\t\tresult = this.finalize(result, null, scope)\n\t\t\t\tthis.maybeFreeze(result)\n\t\t\t}\n\t\t\tif (scope.patches) {\n\t\t\t\tscope.patches.push({\n\t\t\t\t\top: \"replace\",\n\t\t\t\t\tpath: [],\n\t\t\t\t\tvalue: result\n\t\t\t\t})\n\t\t\t\tscope.inversePatches.push({\n\t\t\t\t\top: \"replace\",\n\t\t\t\t\tpath: [],\n\t\t\t\t\tvalue: baseDraft[DRAFT_STATE].base\n\t\t\t\t})\n\t\t\t}\n\t\t} else {\n\t\t\t// Finalize the base draft.\n\t\t\tresult = this.finalize(baseDraft, [], scope)\n\t\t}\n\t\tscope.revoke()\n\t\tif (scope.patches) {\n\t\t\tscope.patchListener(scope.patches, scope.inversePatches)\n\t\t}\n\t\treturn result !== NOTHING ? result : undefined\n\t}\n\t/**\n\t * @internal\n\t * Finalize a draft, returning either the unmodified base state or a modified\n\t * copy of the base state.\n\t */\n\tfinalize(draft, path, scope) {\n\t\tconst state = draft[DRAFT_STATE]\n\t\tif (!state) {\n\t\t\tif (Object.isFrozen(draft)) return draft\n\t\t\treturn this.finalizeTree(draft, null, scope)\n\t\t}\n\t\t// Never finalize drafts owned by another scope.\n\t\tif (state.scope !== scope) {\n\t\t\treturn draft\n\t\t}\n\t\tif (!state.modified) {\n\t\t\tthis.maybeFreeze(state.base, true)\n\t\t\treturn state.base\n\t\t}\n\t\tif (!state.finalized) {\n\t\t\tstate.finalized = true\n\t\t\tthis.finalizeTree(state.draft, path, scope)\n\n\t\t\t// We cannot really delete anything inside of a Set. We can only replace the whole Set.\n\t\t\tif (this.onDelete && !isSet(state.base)) {\n\t\t\t\t// The `assigned` object is unreliable with ES5 drafts.\n\t\t\t\tif (this.useProxies) {\n\t\t\t\t\tconst {assigned} = state\n\t\t\t\t\teach(assigned, (prop, exists) => {\n\t\t\t\t\t\tif (!exists) this.onDelete(state, prop)\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\t// TODO: Figure it out for Maps and Sets if we need to support ES5\n\t\t\t\t\tconst {base, copy} = state\n\t\t\t\t\teach(base, prop => {\n\t\t\t\t\t\tif (!has(copy, prop)) this.onDelete(state, prop)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.onCopy) {\n\t\t\t\tthis.onCopy(state)\n\t\t\t}\n\n\t\t\t// At this point, all descendants of `state.copy` have been finalized,\n\t\t\t// so we can be sure that `scope.canAutoFreeze` is accurate.\n\t\t\tif (this.autoFreeze && scope.canAutoFreeze) {\n\t\t\t\tfreeze(state.copy, false)\n\t\t\t}\n\n\t\t\tif (path && scope.patches) {\n\t\t\t\tgeneratePatches(state, path, scope.patches, scope.inversePatches)\n\t\t\t}\n\t\t}\n\t\treturn state.copy\n\t}\n\t/**\n\t * @internal\n\t * Finalize all drafts in the given state tree.\n\t */\n\tfinalizeTree(root, rootPath, scope) {\n\t\tconst state = root[DRAFT_STATE]\n\t\tif (state) {\n\t\t\tif (!this.useProxies) {\n\t\t\t\t// Create the final copy, with added keys and without deleted keys.\n\t\t\t\tstate.copy = shallowCopy(state.draft, true)\n\t\t\t}\n\t\t\troot = state.copy\n\t\t}\n\n\t\tconst needPatches = !!rootPath && !!scope.patches\n\t\tconst finalizeProperty = (prop, value, parent) => {\n\t\t\tif (value === parent) {\n\t\t\t\tthrow Error(\"Immer forbids circular references\")\n\t\t\t}\n\n\t\t\t// In the `finalizeTree` method, only the `root` object may be a draft.\n\t\t\tconst isDraftProp = !!state && parent === root\n\t\t\tconst isSetMember = isSet(parent)\n\n\t\t\tif (isDraft(value)) {\n\t\t\t\tconst path =\n\t\t\t\t\tisDraftProp &&\n\t\t\t\t\tneedPatches &&\n\t\t\t\t\t!isSetMember && // Set objects are atomic since they have no keys.\n\t\t\t\t\t!has(state.assigned, prop) // Skip deep patches for assigned keys.\n\t\t\t\t\t\t? rootPath.concat(prop)\n\t\t\t\t\t\t: null\n\n\t\t\t\t// Drafts owned by `scope` are finalized here.\n\t\t\t\tvalue = this.finalize(value, path, scope)\n\t\t\t\treplace(parent, prop, value)\n\n\t\t\t\t// Drafts from another scope must prevent auto-freezing.\n\t\t\t\tif (isDraft(value)) {\n\t\t\t\t\tscope.canAutoFreeze = false\n\t\t\t\t}\n\n\t\t\t\t// Unchanged drafts are never passed to the `onAssign` hook.\n\t\t\t\tif (isDraftProp && value === get(state.base, prop)) return\n\t\t\t}\n\t\t\t// Unchanged draft properties are ignored.\n\t\t\telse if (isDraftProp && is(value, get(state.base, prop))) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\t// Search new objects for unfinalized drafts. Frozen objects should never contain drafts.\n\t\t\telse if (isDraftable(value) && !Object.isFrozen(value)) {\n\t\t\t\teach(value, finalizeProperty)\n\t\t\t\tthis.maybeFreeze(value)\n\t\t\t}\n\n\t\t\tif (isDraftProp && this.onAssign && !isSetMember) {\n\t\t\t\tthis.onAssign(state, prop, value)\n\t\t\t}\n\t\t}\n\n\t\teach(root, finalizeProperty)\n\t\treturn root\n\t}\n\tmaybeFreeze(value, deep = false) {\n\t\tif (this.autoFreeze && !isDraft(value)) {\n\t\t\tfreeze(value, deep)\n\t\t}\n\t}\n}\n\nfunction replace(parent, prop, value) {\n\tif (isMap(parent)) {\n\t\tparent.set(prop, value)\n\t} else if (isSet(parent)) {\n\t\t// In this case, the `prop` is actually a draft.\n\t\tparent.delete(prop)\n\t\tparent.add(value)\n\t} else if (Array.isArray(parent) || isEnumerable(parent, prop)) {\n\t\t// Preserve non-enumerable properties.\n\t\tparent[prop] = value\n\t} else {\n\t\tObject.defineProperty(parent, prop, {\n\t\t\tvalue,\n\t\t\twritable: true,\n\t\t\tconfigurable: true\n\t\t})\n\t}\n}\n","import {Immer} from \"./immer\"\n\nconst immer = new Immer()\n\n/**\n * The `produce` function takes a value and a \"recipe function\" (whose\n * return value often depends on the base state). The recipe function is\n * free to mutate its first argument however it wants. All mutations are\n * only ever applied to a __copy__ of the base state.\n *\n * Pass only a function to create a \"curried producer\" which relieves you\n * from passing the recipe function every time.\n *\n * Only plain objects and arrays are made mutable. All other objects are\n * considered uncopyable.\n *\n * Note: This function is __bound__ to its `Immer` instance.\n *\n * @param {any} base - the initial state\n * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n * @param {Function} patchListener - optional function that will be called with all the patches produced here\n * @returns {any} a new state, or the initial state if nothing was modified\n */\nexport const produce = immer.produce\nexport default produce\n\n/**\n * Like `produce`, but `produceWithPatches` always returns a tuple\n * [nextState, patches, inversePatches] (instead of just the next state)\n */\nexport const produceWithPatches = immer.produceWithPatches.bind(immer)\n\n/**\n * Pass true to automatically freeze all copies created by Immer.\n *\n * By default, auto-freezing is disabled in production.\n */\nexport const setAutoFreeze = immer.setAutoFreeze.bind(immer)\n\n/**\n * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n * always faster than using ES5 proxies.\n *\n * By default, feature detection is used, so calling this is rarely necessary.\n */\nexport const setUseProxies = immer.setUseProxies.bind(immer)\n\n/**\n * Apply an array of Immer patches to the first argument.\n *\n * This function is a producer, which means copy-on-write is in effect.\n */\nexport const applyPatches = immer.applyPatches.bind(immer)\n\n/**\n * Create an Immer draft from the given base state, which may be a draft itself.\n * The draft can be modified until you finalize it with the `finishDraft` function.\n */\nexport const createDraft = immer.createDraft.bind(immer)\n\n/**\n * Finalize an Immer draft from a `createDraft` call, returning the base state\n * (if no changes were made) or a modified copy. The draft must *not* be\n * mutated afterwards.\n *\n * Pass a function as the 2nd argument to generate Immer patches based on the\n * changes that were made.\n */\nexport const finishDraft = immer.finishDraft.bind(immer)\n\nexport {\n\toriginal,\n\tisDraft,\n\tisDraftable,\n\tNOTHING as nothing,\n\tDRAFTABLE as immerable\n} from \"./common\"\n\nexport {Immer}\n","/**\r\n * @preserve Copyright 2010-2019 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { Frame } from \"../Types\";\r\n\r\n/**\r\n * Module:          PlayerFrames\r\n * Responsibility:  Contains player related frames\r\n */\r\n\r\nexport function getPlayerFrame(): Frame {\r\n\r\n    const playerFrame: Frame = [\r\n        [\"0\", \"0\", \"B\", \"B\", \"0\", \"0\"],\r\n        [\"A\", \"B\", \"F\", \"F\", \"B\", \"A\"],\r\n        [\"B\", \"F\", \"0\", \"0\", \"F\", \"B\"],\r\n    ];\r\n\r\n    return playerFrame;\r\n}\r\n\r\nexport function getPlayerFormationFrames(): Frame[] {\r\n    const playerFormationFrames: Frame[] = [\r\n        [[\"B\", \"B\"]],  // nozzle tip\r\n        [[\"F\", \"F\"]],  // nozle bottom\r\n        [              // left wing\r\n            [\"A\", \"B\"],\r\n            [\"B\", \"F\"],\r\n        ],\r\n        [              // right wing\r\n            [\"B\", \"A\"],\r\n            [\"F\", \"B\"]\r\n        ],\r\n    ];\r\n\r\n    return playerFormationFrames;\r\n}","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport KeyValuePair from \"../Models/KeyValuePair\";\r\n\r\n/**\r\n * Module:          Lib\r\n * Responsibility:  A library containing various helper functions\r\n */\r\n\r\n/**\r\n * Picks a random number within a range.\r\n * @param {number} max. Maximum value.\r\n * @param {number} min. Minimum value.\r\n */\r\nexport function randomNumberInRange(max: number, min: number): number {\r\n    return Math.floor(Math.random() * (max - min) + min);\r\n}\r\n\r\n/**\r\n * Calculates the new time to be used between ticks based on the passed factor.\r\n * @param {number} time. The time to use as a base.\r\n * @param {number} factor. A factor > 1 is an increase, < 1 a decrease.\r\n */\r\nexport function calculateTimeSpeedIncrease(time: number, factor: number): number {\r\n    return time * 1 / factor;\r\n}\r\n\r\nexport function getURLQueryKVPs(query: string): KeyValuePair[] {\r\n    const kvps = query.split(\"?\");\r\n    return kvps.map((item) => {\r\n        const kvp = item.split(\"=\");\r\n        return {\r\n            key: kvp[0],\r\n            value: kvp[1],\r\n        };\r\n    });\r\n}\r\n\r\n/**\r\n * 50/50 change to return true of false\r\n * @returns {boolean}. True or false.\r\n */\r\nexport function coinFlip(): boolean {\r\n    return Math.floor(Math.random() * 2) === 1;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport ILocationProvider from \"../Interfaces/ILocationProvider\";\r\nimport { GameLocation } from \"../Models/GameLocation\";\r\nimport { getLocation } from \"../Utility/Location\";\r\n\r\nexport default abstract class BaseLocationProvider implements ILocationProvider {\r\n\r\n    /**\r\n     * Angle. Can change and be used to bounce enemies of the sides and bottom.\r\n     */\r\n    protected angle: number;\r\n\r\n    /**\r\n     * Speed the enemy travels at.\r\n     */\r\n    protected speed: number;\r\n\r\n    /**\r\n     * Initial speed for the enemy.\r\n     */\r\n    protected baseSpeed: number;\r\n    protected width: number;\r\n    protected height: number;\r\n    protected left: number;\r\n    protected top: number;\r\n\r\n    /**\r\n     * Construct the class\r\n     * @param {number} speed. Speed to start with.\r\n     * @param {number} angle. Initial angle.\r\n     */\r\n    constructor(left: number, top: number, speed: number, angle: number, width: number, height: number) {\r\n        this.left = left;\r\n        this.top = top;\r\n        this.angle = angle;\r\n        this.speed = speed;\r\n        this.baseSpeed = speed;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n\r\n    /**\r\n     * Returns a location. Implement specific movement behaviours in a diriving class.\r\n     * @param {number} left. Left coordinate.\r\n     * @param {number} top. Top coordinate.\r\n     * @param {number} width. Width of the object.\r\n     * @param {number} height. Height of the object.\r\n     */\r\n    public getCurrentLocation(): GameLocation {\r\n        return { left: this.left, top: this.top };\r\n    }\r\n\r\n    public abstract updateState(tick: number): void;\r\n\r\n    /**\r\n     * increases the speed by the provided factor.\r\n     * @param {number} factor.\r\n     */\r\n    public increaseSpeed(factor: number): void {\r\n        this.speed = this.baseSpeed * factor;\r\n    }\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          StateProviders\r\n * Responsibility:  Functions that provide a state object.\r\n */\r\n\r\nimport { produce } from \"immer\";\r\nimport BaseEnemy from \"../Base/BaseEnemy\";\r\nimport Explosion from \"../Models/Explosion\";\r\nimport { Frame } from \"../Types\";\r\nimport { getFrameHitbox } from \"../Utility/Frame\";\r\nimport { fallsWithinGameField, getLocation } from \"../Utility/Location\";\r\nimport { EnemyState } from \"./EnemyLevel/EnemyState\";\r\nimport { ParticleState } from \"./Player/ParticleState\";\r\nimport { appState } from \"./Store\";\r\n\r\nexport namespace StateProviders {\r\n    /**\r\n     * Gets a particle state object.\r\n     * @export\r\n     * @param {number} left. Left coordinate.\r\n     * @param {number} top. Top coordinate\r\n     * @param {number} speed. Speed of the particle in px/tick\r\n     * @param {number} angle. Direction angle\r\n     * @param {Frame} frame. Frame to render.\r\n     * @param {number} [acceletation=1]. Below 1 slows down, above 1 speeds up. 1 by default\r\n     * @param {number} [hitboxTopOffset=0]. Offset, in game pixels, that increases the top of the hitbox.\r\n     * @param {number} [hitboxBottomOffset=0]. Offset, in game pixels, that increases the bottom of the hitbox.\r\n     * @returns {ParticleState}\r\n     */\r\n    export function getParticleState(\r\n        left: number,\r\n        top: number,\r\n        speed: number,\r\n        angle: number,\r\n        frame: Frame,\r\n        acceletation: number = 1,\r\n        hitboxTopOffset: number = 0,\r\n        hitboxBottomOffset: number = 0): ParticleState {\r\n\r\n        const bulletHitbox = getFrameHitbox(left, top, frame, hitboxTopOffset, hitboxBottomOffset);\r\n\r\n        const bullet: ParticleState = {\r\n            acceletation,\r\n            angle,\r\n            coloredFrame: frame,\r\n            hitbox: bulletHitbox,\r\n            speed,\r\n            left,\r\n            top,\r\n        };\r\n\r\n        return bullet;\r\n    }\r\n\r\n    /**\r\n     * Gets a particle state object.\r\n     * @export\r\n     * @param {number} left. Left coordinate.\r\n     * @param {number} top. Top coordinate\r\n     * @param {number} speed. Speed of the particle in px/tick\r\n     * @param {number} angle. Direction angle\r\n     * @param {Frame} frame. Frame to render.\r\n     * @param {number} order. The id of the owner. aka. The ship that fired the bullet.\r\n     * @param {number} [hitboxTopOffset=0]. Offset, in game pixels, that increases the top of the hitbox.\r\n     * @param {number} [hitboxBottomOffset=0]. Offset, in game pixels, that increases the bottom of the hitbox.\r\n     * @returns {ParticleState}\r\n     */\r\n    export function getBulletParticleState(\r\n        left: number,\r\n        top: number,\r\n        speed: number,\r\n        angle: number,\r\n        frame: Frame,\r\n        ownerId: number,\r\n        hitboxTopOffset: number = 0,\r\n        hitboxBottomOffset: number = 0): ParticleState {\r\n\r\n        const particle = getParticleState(left, top, speed, angle, frame, 1, hitboxTopOffset, hitboxBottomOffset);\r\n        particle.owner = ownerId;\r\n\r\n        return particle;\r\n    }\r\n\r\n    /**\r\n     * particleProvider. Provides particle objects based on an Explosion asset.\r\n     * @param {number} left. Left coordinate.\r\n     * @param {number} top. Top coordinate.\r\n     * @param {ExplosionProviderFunction} getExplosion. Explosion asset used to generate particle objects.\r\n     * @returns {Particle[]}. Resulting particles.\r\n     */\r\n    export function explosionShrapnellProvider(left: number, top: number, explosion: Explosion): ParticleState[] {\r\n\r\n        const particles: ParticleState[] = [];\r\n        for (let i = 0; i < explosion.particleFrameIndexes.length; i++) {\r\n            // Create an array with every particle frame.\r\n            const particleFrameIndex = explosion.particleFrameIndexes[i];\r\n            const particleFrame = explosion.particleFrames[particleFrameIndex];\r\n\r\n            const angle = explosion.angles[i];\r\n            const speed = explosion.useSpeed ? explosion.speed : explosion.speeds[i];\r\n\r\n            const p = StateProviders.getParticleState(left, top, speed, angle, particleFrame, explosion.acceleration, 0, 0);\r\n            particles.push(p);\r\n        }\r\n\r\n        return particles;\r\n    }\r\n\r\n    /**\r\n     * Retrns a new particle state with updated speeds and locations.\r\n     * @param {ParticleState[]} particles. Array of ParticleState\r\n     * @returns {ParticleState[]}. Remaining particles with updated speeds and locations.\r\n     */\r\n    export function getUpdatedParticleState(particles: ParticleState[]): ParticleState[] {\r\n\r\n        const nextState: ParticleState[] = [];\r\n        for (const particle of particles) {\r\n\r\n            const updatedParticle = produce(particle, (draft) => {\r\n                const newLocation = getLocation(particle.left, particle.top, particle.angle, particle.speed);\r\n                const hitbox = getFrameHitbox(newLocation.left, newLocation.top, particle.coloredFrame);\r\n\r\n                if (fallsWithinGameField(hitbox.left, hitbox.right, newLocation.top, hitbox.bottom)) {\r\n                    draft.left = newLocation.left;\r\n                    draft.top = newLocation.top;\r\n                    draft.speed = particle.speed * particle.acceletation;\r\n                    draft.hitbox = getFrameHitbox(newLocation.left, newLocation.top, particle.coloredFrame);\r\n                }\r\n            });\r\n\r\n            if (particle !== updatedParticle) {\r\n                nextState.push(updatedParticle);\r\n            }\r\n        }\r\n\r\n        return nextState;\r\n    }\r\n\r\n    /**\r\n     * Gets the enemy's ship's state. Throws an exception if the enemy could not be found.\r\n     * @export\r\n     * @param {BaseEnemy} enemy\r\n     * @returns {EnemyState}\r\n     */\r\n    export function getEnemyState(enemy: BaseEnemy): EnemyState {\r\n        const state = appState().enemyLevelState.enemies.find((e) => e.enemyId === enemy.getId());\r\n\r\n        if (state === undefined) {\r\n            throw new Error(\"Could not retrive state for enemy \" + enemy.getId());\r\n        }\r\n\r\n        return state;\r\n    }\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { GameLocation } from \"../Models/GameLocation\";\r\nimport { getPlayerFrame } from \"../Player/PlayerFrames\";\r\nimport { getFrameDimensions } from \"../Utility/Frame\";\r\nimport dimensionProvider from \"./DimensionProvider\";\r\n\r\n/**\r\n * Module:          PlayerSpawnLocationProvider\r\n * Responsibility:  Providers the location where the ship should spawn in a level with enemeies\r\n */\r\n\r\nconst {\r\n    pixelSize,\r\n    fullGameWidth,\r\n    fullGameHeight\r\n} = dimensionProvider();\r\n\r\nconst shipDimensions = getFrameDimensions(getPlayerFrame(), pixelSize);\r\n\r\nconst leftSpawnPosition = (fullGameWidth / 2) - shipDimensions.width / 2;\r\nconst topSpawnPosition = fullGameHeight - pixelSize * 8;\r\n\r\n/**\r\n * Gets the ship's spawn location, center screen.\r\n */\r\nexport default function getShipSpawnLocation(): GameLocation {\r\n    return {\r\n        left: leftSpawnPosition,\r\n        top: topSpawnPosition,\r\n    };\r\n}\r\n","\r\n/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport CGAColors from \"../Constants/CGAColors\";\r\nimport WarpLevelConstants from \"../Constants/WarpLevelConstants\";\r\nimport { GameRectangle } from \"../Models/GameRectangle\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport ctxProvider from \"../Providers/Render/CtxProvider\";\r\n\r\n/**\r\n * Module:          StaticRenders\r\n * Responsibility:  Starts the game\r\n */\r\n\r\nconst {\r\n    pixelSize,\r\n    gameField,\r\n    statusBarBottom,\r\n    fullGameWidth\r\n} = dimensionProvider();\r\n\r\nexport function drawBackground(): void {\r\n    clearGameFieldBackground();\r\n}\r\n\r\n/**\r\n * Renders the entire canvas black\r\n */\r\nfunction clearGameFieldBackground(): void {\r\n    const ctx = ctxProvider();\r\n    ctx.fillStyle = CGAColors.black;\r\n    ctx.fillRect(gameField.left, gameField.top, gameField.right, gameField.bottom);\r\n}\r\n\r\n/**\r\n * Draws a solid red recangle where the game's score is displayed.\r\n */\r\nexport function drawGameFieldBorder(): void {\r\n    const ctx = ctxProvider();\r\n    ctx.fillStyle = CGAColors.blue;\r\n\r\n    // Draw the top field border.\r\n    ctx.fillRect(0, statusBarBottom, fullGameWidth, pixelSize);\r\n\r\n    // Draw the right field border.\r\n    ctx.fillRect(gameField.right, statusBarBottom, pixelSize, gameField.bottom);\r\n\r\n    // // Draw the bottom field border.\r\n    ctx.fillRect(0, gameField.bottom, fullGameWidth, pixelSize);\r\n\r\n    // // Draw the left field border.\r\n    ctx.fillRect(0, statusBarBottom, pixelSize, gameField.bottom);\r\n}\r\n\r\n/**\r\n * Draws the background of the warp level.\r\n * @param {string} additionalColor. The additional color.\r\n */\r\nexport function drawWarpBackground(additionalColor: string, gate: GameRectangle[]): void {\r\n    const ctx = ctxProvider();\r\n\r\n    // The first line in a warp level is always white.\r\n    // we'll use this flag to altername between white and a randonly picked color.\r\n    let drawWhite = true;\r\n    let left = WarpLevelConstants.left;\r\n\r\n    while (WarpLevelConstants.right >= left) {\r\n        if (drawWhite) {\r\n            ctx.fillStyle = CGAColors.white;\r\n            drawWhite = false;\r\n        } else {\r\n            ctx.fillStyle = additionalColor;\r\n            drawWhite = true;\r\n        }\r\n\r\n        ctx.fillRect(left, WarpLevelConstants.top, pixelSize, WarpLevelConstants.height);\r\n        left += pixelSize;\r\n    }\r\n\r\n    ctx.fillStyle = \"black\";\r\n\r\n    gate.forEach((r) => ctx.fillRect(r.left, r.top, r.right - r.left, r.bottom - r.top));\r\n}\r\n","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { calculateTimeSpeedIncrease } from \"../Utility/Lib\";\r\n\r\n/**\r\n * Module:          TickHandler\r\n * Responsibility:  Handles a game tick.\r\n */\r\n\r\nexport default class TickHandler {\r\n\r\n    /**\r\n     * Keeps track of the last time the tick handler ticked.\r\n     */\r\n    private lastTick = 0;\r\n\r\n    /**\r\n     * Time between ticks when we have to do something.\r\n     */\r\n    private time: number;\r\n\r\n    /**\r\n     * The function called when the time between ticks has passed.\r\n     */\r\n    private onTimePassed: (tick: number) => void;\r\n\r\n    /**\r\n     * Base time between actions without modification\r\n     */\r\n    private baseTime: number;\r\n\r\n    /**\r\n     * Creates the TickHandler class.\r\n     * @param {number} time. The time that should pass between ticks.\r\n     * @param {() => void} onTickPassed. The function to call when the specified time has passed between ticks.\r\n     */\r\n    constructor(time: number, onTimePassed: (tick: number) => void) {\r\n        this.time = time;\r\n        this.baseTime = time;\r\n        this.onTimePassed = onTimePassed;\r\n    }\r\n\r\n    /**\r\n     * Tick\r\n     * @param {number} tick. The current tick.\r\n     */\r\n    public tick(tick: number): void {\r\n        if (tick - this.lastTick >= this.time) {\r\n            this.onTimePassed(tick);\r\n\r\n            this.lastTick = tick;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Increase speed means lowering time between actions.\r\n     * @param {number} factor. 1 = no change. > 1 means faster.\r\n     */\r\n    public increaseSpeed(factor: number): void {\r\n        this.time = calculateTimeSpeedIncrease(this.baseTime, factor);\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport dimensionProvider from \"./DimensionProvider\";\r\n\r\n/**\r\n * Module:          speedProvider\r\n * Responsibility:  Calculate the relative speed based on the screensize.\r\n */\r\n\r\nconst {\r\n    gameField\r\n} = dimensionProvider();\r\n\r\nexport default function speedProvider(speed: number): number {\r\n    // 1600 is the size of the canvas when I was developing the game. All game speeds are based on this.\r\n    return speed * (gameField.right / 1600);\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { addPhaser, nextLevel } from \"../State/Game/GameActions\";\r\nimport { dispatch } from \"../State/Store\";\r\n\r\n/**\r\n * Module:          HandleLevelWon\r\n * Responsibility:  Define what should happen when the player wins a level.\r\n */\r\n\r\nexport default function handleLevelWon(): void {\r\n    // Add a phaser because that's a level won reward.\r\n    dispatch(addPhaser());\r\n\r\n    // Move to the next level.\r\n    dispatch(nextLevel());\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseEnemy from \"./Base/BaseEnemy\";\r\nimport PlayerState, { AlivePlayer } from \"./State/Player/PlayerState\";\r\nimport { allGameKeys, GameKeys } from \"./Utility/KeyboardEvents\";\r\n\r\n/**\r\n * Module:          Guard\r\n * Responsibility:  TypeGuards\r\n */\r\n\r\nnamespace Guard {\r\n    export function isValidGameKey(value: string): value is GameKeys {\r\n        return allGameKeys.indexOf(value as GameKeys) !== -1;\r\n    }\r\n\r\n    /**\r\n     * TypeGuard for enemies\r\n     */\r\n    export function isEnemy(value: any): value is BaseEnemy {\r\n        return value && value.getObjectType() === \"enemy\";\r\n    }\r\n\r\n    /**\r\n     * Checks if the player is alive (and if the hitboxes and nozzleLocation are defined)\r\n     * @param {PlayerState} value.\r\n     * @returns {AlivePlayer}. An interface that extends PlayerState but changes 'type' | undefined o just the type.\r\n     */\r\n    export function isPlayerAlive(value: PlayerState): value is AlivePlayer {\r\n        return value.alive && value.hitboxes !== undefined && value.nozzleLocation !== undefined;\r\n    }\r\n}\r\n\r\nexport default Guard;\r\n","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","import CGAColors from \"../Constants/CGAColors\";\r\nimport { GameRectangle } from \"../Models/GameRectangle\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport ctxProvider from \"../Providers/Render/CtxProvider\";\r\nimport { appState } from \"../State/Store\";\r\n\r\nconst {\r\n    pixelSize,\r\n    fullGameWidth,\r\n    fullGameHeight\r\n} = dimensionProvider();\r\n\r\nexport function DEBUGGING_renderHitboxes() {\r\n    const { playerState, enemyLevelState } = appState();\r\n    const hitboxes = enemyLevelState.enemies.map((e) => e.hitbox);\r\n\r\n    // Add player if defined.\r\n    if (playerState.hitboxes) {\r\n        hitboxes.push(playerState.hitboxes.bottom);\r\n        hitboxes.push(playerState.hitboxes.middle);\r\n    }\r\n\r\n    // Add bullet if defined.\r\n    if (playerState.bulletState?.hitbox) {\r\n        hitboxes.push(playerState.bulletState.hitbox);\r\n    }\r\n\r\n    enemyLevelState.bullets.forEach((b) => hitboxes.push(b.hitbox));\r\n    enemyLevelState.shrapnells.forEach((b) => hitboxes.push(b.hitbox));\r\n\r\n    // Draw a circle around each object using the\r\n    // coordiates and radius of the hitbox.\r\n    for (const hitbox of hitboxes) {\r\n\r\n        if (hitbox !== undefined) {\r\n            DEBUGGING_drawGameRect(hitbox, CGAColors.lightRed);\r\n        }\r\n    }\r\n}\r\n\r\nexport function DEBUGGING_drawGameRect(hitbox: GameRectangle, color: string, lineWith: number = 2) {\r\n    const ctx = ctxProvider();\r\n    ctx.beginPath();\r\n    ctx.strokeStyle = color;\r\n    ctx.rect(hitbox.left, hitbox.top, hitbox.right - hitbox.left, hitbox.bottom - hitbox.top);\r\n    ctx.lineWidth = lineWith;\r\n    ctx.stroke();\r\n    ctx.closePath();\r\n}\r\n\r\n/**\r\n * Debugggin function. Draws a grid in the screen for animation alignment.\r\n */\r\nexport function DEBUGGING_drawGrid(gridDetail?: number): void {\r\n\r\n    if (gridDetail === undefined) {\r\n        gridDetail = 1;\r\n    }\r\n\r\n    const ctx = ctxProvider();\r\n    for (let r = 0; r < 120; r += 1) {\r\n        ctx.beginPath();\r\n        const y = r * pixelSize * gridDetail;\r\n        ctx.lineTo(0, y);\r\n        ctx.lineTo(fullGameWidth, y);\r\n        ctx.lineWidth = 1;\r\n        ctx.strokeStyle = \"white\";\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n    }\r\n\r\n    for (let r = 0; r < 160; r += 1) {\r\n        ctx.beginPath();\r\n        const x = r * pixelSize * gridDetail;\r\n        ctx.lineTo(x, 0);\r\n        ctx.lineTo(x, fullGameHeight);\r\n        ctx.lineWidth = 1;\r\n        ctx.strokeStyle = \"white\";\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Constants\r\n * Responsibility:  Constants for the debugging state\r\n */\r\n\r\nnamespace Constants {\r\n    export const setDebuggingState = \"setDebuggingState\";\r\n}\r\n\r\nexport default Constants;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Constants for enemy level actions and reducer.\r\n */\r\n\r\nnamespace Constants {\r\n    export const resetLevelState = \"resetLevelState\";\r\n    export const addParticle = \"addParticle\";\r\n    export const addParticles = \"addParticles\";\r\n    export const setShrapnellState = \"setShrapnellState\";\r\n    export const addExplosionCenter = \"addExplosionCenter\";\r\n    export const setPhaserLocations = \"setPhaserLocations\";\r\n    export const clearPhaserLocations = \"clearPhaserLocations\";\r\n    export const setFireInterval = \"setFireInterval\";\r\n    export const setExplosionCenters = \"setExplosionCenters\";\r\n    export const addBullet = \"addBullet\";\r\n    export const setBulletState = \"setBulletState\";\r\n    export const setTotalEnemies = \"setTotalEnemies\";\r\n    export const addOrUpdateEnemy = \"addOrUpdateEnemy\";\r\n    export const removeEnemy = \"removeEnemy\";\r\n}\r\n\r\nexport default Constants;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Constants\r\n * Responsibility:  Constants used by the GameState reducer and by the Action creator functions\r\n */\r\n\r\nnamespace Constants {\r\n    export const setLives = \"setLives\";\r\n    export const addLife = \"addLife\";\r\n    export const removeLife = \"removeLife\";\r\n    export const increaseScore = \"increaseScore\";\r\n    export const addLevel = \"addLevel\";\r\n    export const setLevel = \"setLevel\";\r\n    export const nextLevel = \"nextLevel\";\r\n    export const addLifeAndPhaser = \"addLifeAndPhaser\";\r\n    export const setPhasers = \"setPhasers\";\r\n    export const addPhaser = \"addPhaser\";\r\n    export const removePhaser = \"removePhaser\";\r\n    export const setPause = \"setPause\";\r\n    export const setWarpLevelComplexity = \"setWarpLevelComplexity\";\r\n}\r\n\r\nexport default Constants;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { GameKeys } from \"../../Utility/KeyboardEvents\";\r\n\r\n/**\r\n * Module:          Constants\r\n * Responsibility:  Constants for valid keys used by the GameState\r\n */\r\n\r\nnamespace Constants {\r\n    export const arrowUp: GameKeys = \"ArrowUp\";\r\n    export const arrowDown: GameKeys = \"ArrowDown\";\r\n    export const arrowLeft: GameKeys = \"ArrowLeft\";\r\n    export const arrowRight: GameKeys = \"ArrowRight\";\r\n    export const backspace: GameKeys = \"Backspace\";\r\n    export const f1: GameKeys = \"F1\";\r\n    export const f2: GameKeys = \"F2\";\r\n    export const space: GameKeys = \"Space\";\r\n    export const keyup = \"KeyUp\";\r\n    export const keydown = \"KeyDown\";\r\n}\r\n\r\nexport default Constants;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Constants\r\n * Responsibility:  Constants used to determine the action type for the PlayerState.\r\n */\r\n\r\n/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Constants\r\n * Responsibility:  Provide constants for the player reducer and actions.\r\n */\r\n\r\nnamespace Constants {\r\n    export const setPlayerIsAlive = \"setPlayerIsAlive\";\r\n    export const setPlayerMovementLimit = \"setPlayerMovementLimit\";\r\n    export const setPlayerLocationData = \"setPlayerLocationData\";\r\n    export const setPlayerBulletState = \"setPlayerBulletState\";\r\n}\r\n\r\nexport default Constants;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\n\r\n/**\r\n * Module:          WarpLevels\r\n * Responsibility:  Constants for the warp level.\r\n */\r\n\r\nconst {\r\n    pixelSize,\r\n    gameField\r\n} = dimensionProvider();\r\n\r\nexport namespace WarpLevelConstants {\r\n    export const heightPixelCount = 72;\r\n    export const top = pixelSize * 8;\r\n    export const height = heightPixelCount * pixelSize;\r\n    export const left = gameField.left + pixelSize;\r\n    export const right = gameField.right - pixelSize * 2;\r\n    export const bottom = top + height;\r\n    export const width = pixelSize * 16;\r\n}\r\n\r\nexport default WarpLevelConstants;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { Frame } from \"../Types\";\r\nimport Mutators from \"../Utility/FrameMutators\";\r\n\r\n/**\r\n * Module:          Numbers\r\n * Responsibility:  Numbers 0 to 9. All colors are variant and can be set with single function call.\r\n */\r\n\r\nexport default function getNumbers(color: string): Frame[] {\r\n    const numbers: Frame[] = [\r\n        [\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"0\", \"0\", \"V\", \"0\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"0\", \"0\", \"V\", \"0\"],\r\n            [\"0\", \"0\", \"V\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n        ],\r\n        [\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"0\", \"V\", \"0\"],\r\n            [\"0\", \"V\", \"0\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n\r\n        ],\r\n        [\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"0\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"0\", \"V\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"0\", \"0\", \"V\", \"0\"],\r\n            [\"0\", \"0\", \"V\", \"0\"],\r\n\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n            [\"0\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"0\", \"V\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"0\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"0\", \"V\", \"0\"],\r\n            [\"0\", \"V\", \"0\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n        ],\r\n        [\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"V\"],\r\n            [\"0\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n        ],\r\n    ];\r\n\r\n    Mutators.Frames.setColor(numbers, color);\r\n    return numbers;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseEnemy from \"../Base/BaseEnemy\";\r\nimport { angles } from \"../Constants/Angles\";\r\nimport { FrameTimes, Locations, MovementAngles, Speeds } from \"../Constants/Constants\";\r\nimport { AsteroidEnemy } from \"../Enemies/Asteroid/AsteroidEnemy\";\r\nimport { getAsteroidOffsetFrames } from \"../Enemies/Asteroid/GetAsteroidOffsetFrames\";\r\nimport BalloonEnemy from \"../Enemies/Balloon/BalloonEnemy\";\r\nimport { getBalloonOffsetFrames} from \"../Enemies/Balloon/GetBalloonOffsetFrames\";\r\nimport BirdEnemy from \"../Enemies/Bird/BirdEnemy\";\r\nimport getBirdResource from \"../Enemies/Bird/GetBirdOffsetFrames\";\r\nimport getOrbResource from \"../Enemies/Orb/GetOrbOffsetFrames\";\r\nimport OrbEnemy from \"../Enemies/Orb/OrbEnemy\";\r\nimport getRobotResource from \"../Enemies/Robot/GetRobotOffsetFrames\";\r\nimport RobotEnemy from \"../Enemies/Robot/RobotEnemy\";\r\nimport { getSpinnerOffsetFrames } from \"../Enemies/Spinner/GetSpinnerOffsetFrames\";\r\nimport SpinnerEnemy from \"../Enemies/Spinner/SpinnerEnemy\";\r\nimport { GameLocation } from \"../Models/GameLocation\";\r\nimport getExplosion01 from \"../SharedFrames/Explosion01\";\r\nimport { getExplosion02 } from \"../SharedFrames/Explosion02\";\r\nimport getExplosion03 from \"../SharedFrames/Explosion03\";\r\nimport getExplosion04 from \"../SharedFrames/Explosion04\";\r\nimport { Enemies } from \"../Types\";\r\nimport { getRandomArrayElement } from \"../Utility/Array\";\r\nimport { getRandomFrameKeyIndex } from \"../Utility/Frame\";\r\nimport dimensionProvider from \"./DimensionProvider\";\r\nimport BackAndForthFrameProvider from \"./FrameProviders/BackAndForthFrameProvider\";\r\nimport CircleFrameProvider from \"./FrameProviders/CircleFrameProvider\";\r\nimport { AsteroidLocationProvider } from \"./LocationProviders/AsteroidLocationProvider\";\r\nimport MoveDownAppearUpLocationProvider from \"./LocationProviders/MoveDownAppearUpLocaionProvider\";\r\nimport SideToSideUpAndDown from \"./LocationProviders/SideToSideUpAndDownLocationProvider\";\r\nimport VanishRightAppearLeftLocationProvider from \"./LocationProviders/VanishRightAppearLeftLocationProvider\";\r\nimport Wobble from \"./LocationProviders/Wobble\";\r\n\r\n/**\r\n * Module:          EnemyFactory\r\n * Responsibility:  Creates an enemy.\r\n */\r\n\r\nconst {\r\n    pixelSize,\r\n    gameField\r\n} = dimensionProvider();\r\n\r\nexport default function enemyFactory(enemy: Enemies, location?: GameLocation): BaseEnemy {\r\n    switch (enemy) {\r\n        case \"bird\": {\r\n\r\n            if (location === undefined) {\r\n                throw new Error(\"Bird enemy requires a location\");\r\n            }\r\n\r\n            const resource = getBirdResource();\r\n            const { maxSizes: { width, height } } = resource;\r\n\r\n            const frameProvider = new BackAndForthFrameProvider(getRandomFrameKeyIndex(resource.frames));\r\n            const randomMovementAngle = getRandomArrayElement(MovementAngles.bird);\r\n            const locationProvider = new SideToSideUpAndDown(location.left, location.top, Speeds.Movement.bird, randomMovementAngle, width, height, gameField.top, gameField.bottom);\r\n\r\n            // This may deviate from te original game but I do not care. Each birds will\r\n            // begin to move in a random direction determined by the function below\r\n\r\n            return new BirdEnemy(FrameTimes.bird, locationProvider, frameProvider, getExplosion01, getBirdResource);\r\n        }\r\n\r\n        case \"robot\": {\r\n\r\n            if (location === undefined) {\r\n                throw new Error(\"Robot enemy requires a starting position\");\r\n            }\r\n\r\n            const { maxBottom } = Locations.Enemies.robot;\r\n            const { maxSizes: { width, height } } = getRobotResource();\r\n\r\n            const frameProvider = new BackAndForthFrameProvider(0);\r\n            const locationProvider = new VanishRightAppearLeftLocationProvider(location.left, location.top, Speeds.Movement.robot, MovementAngles.robot, width, height, gameField.top, maxBottom);\r\n            return new RobotEnemy(FrameTimes.robot, locationProvider, frameProvider, getExplosion02, getRobotResource);\r\n        }\r\n\r\n        case \"orb\": {\r\n            if (location === undefined) {\r\n                throw new Error(\"Orb enemy requires a starting location\");\r\n            }\r\n\r\n            const { maxSizes: { width, height } } = getOrbResource();\r\n            const { maxTop, maxBottom } = Locations.Enemies.Orb;\r\n\r\n            const frameProvider = new CircleFrameProvider(0);\r\n            const locationProvider = new MoveDownAppearUpLocationProvider(location.left, location.top, Speeds.Movement.orb, MovementAngles.orb, width, height, maxTop, maxBottom);\r\n            return new OrbEnemy(FrameTimes.orb, locationProvider, frameProvider, getExplosion02, getOrbResource);\r\n        }\r\n        case \"spinner\": {\r\n            if (location === undefined) {\r\n                throw new Error(\"Spinner enemy requires a starting location\");\r\n            }\r\n            const { frames, maxSizes: { width, height } } = getSpinnerOffsetFrames();\r\n            const verticalBounds = pixelSize * 6;\r\n\r\n            const maxTop = location.top - verticalBounds;\r\n            const maxBottom = location.top + verticalBounds;\r\n\r\n            const frameProvider = new CircleFrameProvider(getRandomFrameKeyIndex(frames));\r\n            const randomAngle = getRandomArrayElement(MovementAngles.spinner);\r\n            const locationProvider = new SideToSideUpAndDown(location.left, location.top, Speeds.Movement.spinner, randomAngle, width, height, maxTop, maxBottom);\r\n            return new SpinnerEnemy(FrameTimes.spinner, locationProvider, frameProvider, getExplosion01, getSpinnerOffsetFrames);\r\n        }\r\n\r\n        case \"balloon\": {\r\n            if (location === undefined) {\r\n                throw new Error(\"Balloon enemy requires a starting location\");\r\n            }\r\n\r\n            const { frames, maxSizes: { width, height } } = getBalloonOffsetFrames();\r\n            const frameProvider = new CircleFrameProvider(getRandomFrameKeyIndex(frames));\r\n            const locationProvider = new Wobble(location.left, location.top, Speeds.Movement.balloon, 0, width, height, 200);\r\n            return new BalloonEnemy(FrameTimes.balloon, getBalloonOffsetFrames, getExplosion03, locationProvider, frameProvider);\r\n\r\n        }\r\n        case \"asteroid-down\": {\r\n            const { maxSizes: { width, height } } = getAsteroidOffsetFrames();\r\n            const frameProvider = new CircleFrameProvider(0);\r\n            const locationProvider = new AsteroidLocationProvider(width, height, [angles.down], Speeds.Movement.asteroid);\r\n            return new AsteroidEnemy(0, getAsteroidOffsetFrames, getExplosion04, locationProvider, frameProvider);\r\n        }\r\n        default:\r\n            throw new Error(\"Unknown enemy \" + enemy);\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { OffsetFrames } from \"../../Models/OffsetFrames\";\r\nimport { getMaximumFrameDimensions } from \"../../Utility/Frame\";\r\n\r\n/**\r\n * Module:          GetOrbOffsetFrames\r\n * Responsibility:  Define the frames for the orb enemy\r\n */\r\n\r\nexport default function getOrbOffsetFrames(): OffsetFrames {\r\n\r\n    const orbMainFrame = [\r\n        [\"0\", \"V0\", \"V0\", \"0\"],\r\n        [\"V0\", \"V1\", \"V1\", \"V0\"],\r\n        [\"V0\", \"V1\", \"V1\", \"V0\"],\r\n        [\"0\", \"V0\", \"V0\", \"0\"],\r\n    ];\r\n\r\n    const resource: OffsetFrames = {\r\n        frames: [],\r\n        offSets: [\r\n            // Move up\r\n            {\r\n                left: 0,\r\n                top: 0,\r\n            },\r\n            {\r\n                left: 0,\r\n                top: -2,\r\n            },\r\n            {\r\n                left: 0,\r\n                top: -4,\r\n            },\r\n            {\r\n                left: 0,\r\n                top: -6,\r\n            },\r\n            // Move right\r\n            {\r\n                left: 2,\r\n                top: -6,\r\n            },\r\n            {\r\n                left: 4,\r\n                top: -6,\r\n            },\r\n            {\r\n                left: 6,\r\n                top: -6,\r\n            },\r\n            // Move down\r\n            {\r\n                left: 6,\r\n                top: -4,\r\n            },\r\n            {\r\n                left: 6,\r\n                top: -2,\r\n            },\r\n            {\r\n                left: 6,\r\n                top: 0,\r\n            },\r\n            // Move left\r\n            {\r\n                left: 4,\r\n                top: 0,\r\n            },\r\n            {\r\n                left: 2,\r\n                top: 0,\r\n            }\r\n        ],\r\n        maxSizes: { width: 0, height: 0 }\r\n    };\r\n\r\n    resource.offSets.forEach(() => {\r\n        resource.frames.push(orbMainFrame);\r\n    });\r\n\r\n    resource.maxSizes = getMaximumFrameDimensions(resource.frames);\r\n\r\n    return resource;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { OffsetFrames } from \"../../Models/OffsetFrames\";\r\nimport { getMaximumFrameDimensions } from \"../../Utility/Frame\";\r\n\r\n/**\r\n * Module:          GetRobotOffsetFrames\r\n * Responsibility:  Define the frames of the RobotEnemy\r\n */\r\n\r\nexport default function getRobotOffsetFrames(): OffsetFrames {\r\n\r\n    let offsetCount = 0;\r\n    const resource: OffsetFrames = {\r\n        frames: [\r\n            [\r\n                [\"0\", \"V\", \"V\", \"V\", \"0\"],\r\n                [\"V\", \"V\", \"V\", \"V\", \"V\"],\r\n                [\"V\", \"0\", \"V\", \"0\", \"V\"],\r\n                [\"V\", \"V\", \"V\", \"V\", \"V\"],\r\n                [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n                [\"V\", \"V\", \"V\", \"V\", \"V\"],\r\n                [\"0\", \"V\", \"0\", \"V\", \"0\"],\r\n                [\"0\", \"V\", \"0\", \"V\", \"0\"],\r\n                [\"V\", \"V\", \"0\", \"V\", \"V\"],\r\n            ],\r\n            [\r\n                [\"0\", \"V\", \"V\", \"V\", \"0\"],\r\n                [\"V\", \"V\", \"V\", \"V\", \"V\"],\r\n                [\"V\", \"0\", \"V\", \"0\", \"V\"],\r\n                [\"V\", \"V\", \"V\", \"V\", \"V\"],\r\n                [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n                [\"V\", \"V\", \"V\", \"V\", \"V\"],\r\n                [\"0\", \"V\", \"0\", \"V\", \"0\"],\r\n                [\"V\", \"V\", \"0\", \"V\", \"V\"],\r\n            ],\r\n            [\r\n                [\"0\", \"V\", \"V\", \"V\", \"0\"],\r\n                [\"V\", \"V\", \"V\", \"V\", \"V\"],\r\n                [\"V\", \"0\", \"V\", \"0\", \"V\"],\r\n                [\"V\", \"V\", \"V\", \"V\", \"V\"],\r\n                [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n                [\"V\", \"V\", \"V\", \"V\", \"V\"],\r\n                [\"V\", \"V\", \"0\", \"V\", \"V\"],\r\n            ],\r\n        ],\r\n        offSets: [\r\n            {\r\n                top: offsetCount,\r\n                left: 0,\r\n            },\r\n            {\r\n                top: offsetCount,\r\n                left: 0,\r\n            },\r\n            {\r\n                top: offsetCount,\r\n                left: 0,\r\n            },\r\n            {\r\n                top: ++offsetCount,\r\n                left: 0,\r\n            },\r\n            {\r\n                top: ++offsetCount,\r\n                left: 0,\r\n            },\r\n            {\r\n                top: offsetCount += 1,\r\n                left: 0,\r\n            },\r\n            {\r\n                top: offsetCount += 1,\r\n                left: 0,\r\n            },\r\n            {\r\n                top: offsetCount += 2,\r\n                left: 0\r\n            },\r\n            {\r\n                top: offsetCount += 1,\r\n                left: 0\r\n            }\r\n        ],\r\n        maxSizes: { width: 0, height: 0 }\r\n    };\r\n\r\n    // Add frame 0 an additional 7 times to make the animation look good.\r\n    resource.frames = [\r\n        resource.frames[0],\r\n        resource.frames[0],\r\n        resource.frames[0],\r\n        resource.frames[0],\r\n        resource.frames[0],\r\n        resource.frames[0],\r\n        ...resource.frames,\r\n    ];\r\n\r\n    resource.maxSizes = getMaximumFrameDimensions(resource.frames);\r\n\r\n    return resource;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { Frame } from \"../Types\";\r\nimport { copyFrame, copyFrames, getFrameByIndex } from \"../Utility/Frame\";\r\n\r\n/**\r\n * Module:          IFrameProvider\r\n * Responsibility:  Contract for a FrameProvider\r\n */\r\n\r\nexport default abstract class BaseFrameProvider {\r\n    /**\r\n     * Animation frames.\r\n     */\r\n    private frames?: Frame[];\r\n\r\n    /**\r\n     * The current frame for an animated enemy.\r\n     */\r\n    protected frameIndex: number = 0;\r\n\r\n    /**\r\n     * Added to the current frame index.\r\n     */\r\n    protected add = 1;\r\n\r\n    /**\r\n     * Maximum index for the provided frames.\r\n     */\r\n    protected maxIndex: number;\r\n\r\n    /**\r\n     * Initializes the EnemyBase class\r\n     * @param {Frames} frames. Frames.\r\n     * @param {number} startFrameIndex. The first frame to return.\r\n     */\r\n    constructor(startFrameIndex: number) {\r\n        this.frameIndex = startFrameIndex;\r\n        this.maxIndex = -1;\r\n    }\r\n\r\n    public setFrames(frames: Frame[]): void {\r\n        this.frames = copyFrames(frames);\r\n        this.maxIndex = frames.length - 1;\r\n    }\r\n\r\n    /**\r\n     * Gets the current frame.\r\n     * @returns {Frame}. A frame\r\n     */\r\n    public getCurrentFrame(): Frame {\r\n\r\n        if (this.frames === undefined) {\r\n            throw new Error(\"Set the frames.\");\r\n        }\r\n\r\n        const returnValue = getFrameByIndex(this.frames, this.frameIndex);\r\n        return copyFrame(returnValue);\r\n    }\r\n\r\n    public abstract getNextFrame(): Frame;\r\n\r\n    /**\r\n     * Returns the current frame index.\r\n     * @returns {number}. The current frame index.\r\n     */\r\n    public getCurrentIndex(): number {\r\n        return this.frameIndex;\r\n    }\r\n\r\n    /**\r\n     * Returns the game of the provided index.\r\n     * @param {number} index. Index of the frame.\r\n     */\r\n    public getFrameByIndex(index: number): Frame {\r\n\r\n        if (this.frames === undefined) {\r\n            throw new Error(\"Set the frames.\");\r\n        }\r\n\r\n        const frame = getFrameByIndex(this.frames, index);\r\n\r\n        return copyFrame(frame);\r\n    }\r\n}","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseEnemy from \"../Base/BaseEnemy\";\r\nimport CGAColors from \"../Constants/CGAColors\";\r\nimport GameLoop from \"../GameLoop\";\r\nimport getPhaserLocations from \"../Player/GetPhaserLocations\";\r\nimport { playerIsHit } from \"../Player/PlayerHelper\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport renderFrame from \"../Render/RenderFrame\";\r\nimport { clearPhaserLocations, removeEnemy, setPhaserLocations, setTotalEnemies } from \"../State/EnemyLevel/EnemyLevelActions\";\r\nimport { EnemyState } from \"../State/EnemyLevel/EnemyState\";\r\nimport { increaseScore, removePhaser, setPause } from \"../State/Game/GameActions\";\r\nimport { ParticleState } from \"../State/Player/ParticleState\";\r\nimport { setPlayerBulletState } from \"../State/Player/PlayerActions\";\r\nimport { appState, dispatch } from \"../State/Store\";\r\nimport { dispatchExplosion } from \"../StateHandlers/DispatchExplosion\";\r\nimport { handlePlayerDeath } from \"../StateHandlers/HandlePlayerDeath\";\r\nimport { Frame } from \"../Types\";\r\nimport { getRandomArrayElement } from \"../Utility/Array\";\r\nimport { overlaps } from \"../Utility/Geometry\";\r\n\r\n/**\r\n * Module:          EnemyLevelRunner\r\n * Responsibility:  Handles all state reactions and action for levels that contain enemies.\r\n */\r\n\r\n/**\r\n * Array of current game objects on screen.\r\n */\r\n\r\nconst localState: { enemies: BaseEnemy[] } = {\r\n    enemies: [],\r\n};\r\n\r\nconst phaserFrame: Frame = [\r\n    [CGAColors.yellow, CGAColors.yellow]\r\n];\r\n\r\nconst {\r\n    pixelSize\r\n} = dimensionProvider();\r\n\r\nexport namespace EnemyLevelRunner {\r\n    /**\r\n     * Runner function that can be registered in the GameLoop.\r\n     * @param {number} tick. The current tick.\r\n     */\r\n    export function run(tick: number): void {\r\n        updateState(tick);\r\n        GameLoop.registerDraw(draw);\r\n    }\r\n\r\n    export function setEnemies(newEnemies: BaseEnemy[]): void {\r\n        localState.enemies = newEnemies;\r\n        dispatch(setTotalEnemies(newEnemies.length));\r\n    }\r\n\r\n    export function addEnemy(newEnemy: BaseEnemy): void {\r\n        localState.enemies.push(newEnemy);\r\n    }\r\n}\r\n\r\nexport default EnemyLevelRunner;\r\n\r\n/**\r\n * Handles all level state changes.\r\n * @param {number} tick. Current tick.\r\n */\r\nfunction updateState(tick: number) {\r\n    handleSelfDestruct(tick);\r\n    handlePhaser(tick);\r\n    handleEnemies(tick);\r\n    handleHitDetection(tick);\r\n}\r\n\r\n/**\r\n * Draws all objects part of the level but not the player.\r\n * @param {number} tick. Tick.\r\n */\r\nfunction draw(): void {\r\n    const { enemies, bullets, phaserLocations } = appState().enemyLevelState;\r\n\r\n    // Draw all the game objects\r\n    for (const enemyState of enemies) {\r\n        if (enemyState.currentFrame !== undefined) {\r\n            renderFrame(enemyState.offsetLeft, enemyState.offsetTop, enemyState.currentFrame);\r\n        }\r\n    }\r\n\r\n    for (const bullet of bullets) {\r\n        renderFrame(bullet.left, bullet.top, bullet.coloredFrame);\r\n    }\r\n\r\n    phaserLocations.forEach((pf) => renderFrame(pf.left, pf.top, phaserFrame));\r\n}\r\n\r\n/**\r\n * Handles all hit detection.\r\n */\r\nfunction handleHitDetection(tick: number) {\r\n\r\n    // Check if the player was hit.\r\n    enemyHitPlayerDetection(tick);\r\n\r\n    // Check if the player hit anything\r\n    playerHitEnemyDetection(tick);\r\n\r\n    // Check if the player was hit by shrapnell.\r\n    playerHitByParticle(tick, appState().enemyLevelState.shrapnells);\r\n\r\n    // Check if the player was hit by a bullet.\r\n    playerHitByParticle(tick, appState().enemyLevelState.bullets);\r\n}\r\n\r\n/**\r\n * Check if the player hit an enemy.\r\n * @param {number} tick. Current tick.\r\n */\r\nfunction playerHitEnemyDetection(tick: number) {\r\n    const { playerState, enemyLevelState } = appState();\r\n    if (playerState.bulletState !== undefined && playerState.bulletState.hitbox !== undefined) {\r\n\r\n        const playerBulletHitbox = playerState.bulletState.hitbox;\r\n        const hitEnemy = enemyLevelState.enemies.find((e) => {\r\n            if (overlaps(playerBulletHitbox, e.hitbox)) {\r\n                return true;\r\n            }\r\n        });\r\n\r\n        if (hitEnemy !== undefined) {\r\n            if (hitEnemy.hitpoints === 1) {\r\n                handleEnemyDestruction(hitEnemy, tick);\r\n            } else {\r\n                const enemy = localState.enemies.find((e) => e.getId() === hitEnemy.enemyId);\r\n                if (enemy) {\r\n                    enemy.recudeHitpoints();\r\n                }\r\n            }\r\n\r\n            dispatch(setPlayerBulletState(undefined));\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Check if an enemy physically hit the player.\r\n * @param {number} tick. Current tick.\r\n */\r\nfunction enemyHitPlayerDetection(tick: number) {\r\n    const { enemyLevelState, playerState } = appState();\r\n    if (playerState.alive) {\r\n        const hit = enemyLevelState.enemies.some((e) => playerIsHit(playerState.hitboxes, e.hitbox));\r\n\r\n        if (hit) {\r\n            handlePlayerDeath(tick);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Check if the player was hit by a particle. This can be an enemy bullet or a piece of shrapnell.\r\n * @param {number} tick. Current tuck\r\n * @param {ParticleState[]} particles. Particles.\r\n */\r\nfunction playerHitByParticle(tick: number, particles: ParticleState[]): void {\r\n\r\n    const { playerState } = appState();\r\n    if (playerState.alive) {\r\n        const hit = particles.some((e) => playerIsHit(playerState.hitboxes, e.hitbox));\r\n\r\n        if (hit) {\r\n            handlePlayerDeath(tick);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Handles enemy state updates.\r\n * @param {number} tick. Current tick\r\n */\r\nfunction handleEnemies(tick: number): void {\r\n    localState.enemies.forEach((e) => {\r\n        e.updateState(tick);\r\n    });\r\n}\r\n\r\n/**\r\n * Handle self destruct.\r\n */\r\nfunction handleSelfDestruct(tick: number): void {\r\n    const { playerState, enemyLevelState } = appState();\r\n\r\n    if (playerState.alive && appState().keyboardState.selfDestruct) {\r\n        enemyLevelState.enemies.forEach((es) => dispatchExplosion(es.offsetLeft, es.offsetTop, es.coloredExplosion, tick));\r\n        dispatchExplosion(playerState.left, playerState.top, playerState.coloredExplosion, tick);\r\n        handlePlayerDeath(tick);\r\n        localState.enemies = [];\r\n    }\r\n}\r\n\r\n/**\r\n * handles the destruction of an enemy.\r\n * @param {BaseEnemy} enemy.\r\n */\r\nfunction handleEnemyDestruction(enemy: EnemyState, tick: number): void {\r\n    const { enemyLevelState } = appState();\r\n\r\n    localState.enemies = localState.enemies.filter((e) => {\r\n        if (e.getId() !== enemy.enemyId) {\r\n            e.increaseSpeed(enemyLevelState.totalNumberOfEnemies / (localState.enemies.length - 1));\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    });\r\n\r\n    dispatchExplosion(enemy.offsetLeft, enemy.offsetTop, enemy.coloredExplosion, tick);\r\n    dispatch(removeEnemy(enemy.enemyId));\r\n    dispatch(increaseScore(enemy.points));\r\n}\r\n\r\n/**\r\n * Handles the firing of a phaser charge.\r\n */\r\nfunction handlePhaser(tick: number): void {\r\n    const { enemyLevelState, playerState, gameState, keyboardState } = appState();\r\n\r\n    if (playerState.alive &&\r\n        playerState.nozzleLocation &&\r\n        keyboardState.phraser &&\r\n        enemyLevelState.enemies.length > 0 &&\r\n        gameState.phasers > 0 &&\r\n        enemyLevelState.phaserLocations.length === 0) {\r\n\r\n        const randomEnemy = getRandomArrayElement(enemyLevelState.enemies);\r\n        const playerNozzleLocation = playerState.nozzleLocation;\r\n        const randomEnemyCenter = randomEnemy.centerLocation;\r\n        if (randomEnemyCenter !== undefined) {\r\n            // Remove one phaser.\r\n            dispatch(removePhaser());\r\n            const phaserLocations = getPhaserLocations(playerNozzleLocation.left, playerNozzleLocation.top, randomEnemyCenter.left, randomEnemyCenter.top);\r\n            dispatch(setPhaserLocations(phaserLocations));\r\n\r\n            // Pause the game for a very brief period. This is what the original game did\r\n            // when you fired a phasor shot.\r\n            dispatch(setPause(true));\r\n            window.setTimeout(() => {\r\n                // Unpause the game to let rendering continue.\r\n                dispatch(setPause(false));\r\n\r\n                // Deal the with the enemy that got hit.\r\n\r\n                handleEnemyDestruction(randomEnemy, tick);\r\n                dispatch(clearPhaserLocations());\r\n            }, 100);\r\n        }\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          QueueExplosionRender\r\n * Responsibility:  Helper function to add a full explosion to the state.\r\n */\r\n\r\nimport Explosion from \"../Models/Explosion\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport { addExplosionCenter } from \"../State/EnemyLevel/EnemyLevelActions\";\r\nimport { ExplosionCenterState } from \"../State/EnemyLevel/ExplosionCenterState\";\r\nimport { StateProviders } from \"../State/StateProviders\";\r\nimport { dispatch } from \"../State/Store\";\r\nimport { getFrameHitbox } from \"../Utility/Frame\";\r\n\r\nconst {\r\n    pixelSize\r\n} = dimensionProvider();\r\n\r\n/**\r\n * Handles the dispatches to add an explosion with shrapnell to the state.\r\n * @param {number} left. Left coordinate.\r\n * @param {number} top. Top coordinate.\r\n * @param {Explosion} explosion. An explosion asset.\r\n * @param {Particle[]} targetParticleArray. The array where the particles will be pushed into. Helps keep track of particles belonging to the player or an enemy.\r\n */\r\nexport function dispatchExplosion(left: number, top: number, coloredExplosion: Explosion, tick: number): void {\r\n\r\n    const newShrapnell = StateProviders.explosionShrapnellProvider(left, top, coloredExplosion);\r\n    const explosionHitbox = getFrameHitbox(left, top, coloredExplosion.explosionCenterFrame, pixelSize);\r\n\r\n    const newExplosion: ExplosionCenterState = {\r\n        left,\r\n        top,\r\n        startTick: tick,\r\n        hitbox: explosionHitbox,\r\n        coloredFrame: coloredExplosion.explosionCenterFrame,\r\n        explosionCenterDelay: coloredExplosion.explosionCenterDelay,\r\n    };\r\n\r\n    dispatch(addExplosionCenter(newExplosion, newShrapnell));\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          handlePlayerDeath\r\n * Responsibility:  Performs the required dispatches when the player dies.\r\n */\r\n\r\nimport { removeLife } from \"../State/Game/GameActions\";\r\nimport { setPlayerIsAlive } from \"../State/Player/PlayerActions\";\r\nimport { appState, dispatch } from \"../State/Store\";\r\nimport { dispatchExplosion } from \"./DispatchExplosion\";\r\n\r\n/**\r\n * Handles a the player's death.\r\n * @param {number} tick\r\n */\r\nexport function handlePlayerDeath(tick: number): void {\r\n\r\n    const { playerState: { left, top, coloredExplosion }, debuggingState } = appState();\r\n    if (debuggingState.playerIsImmortal) {\r\n        return;\r\n    }\r\n\r\n    dispatchExplosion(left, top, coloredExplosion, tick);\r\n\r\n    dispatch(removeLife());\r\n    dispatch(setPlayerIsAlive(false));\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport GameLoop from \"../GameLoop\";\r\nimport { drawLevelBanner } from \"../GameScreen/LevelBanner\";\r\nimport { drawBackground } from \"../GameScreen/StaticRenders\";\r\nimport ILevel from \"../Interfaces/ILevel\";\r\nimport { enemyLevelContentFactory } from \"../Providers/EnemyLevelContentProvider\";\r\nimport EnemyLevelRunner from \"../Runners/EnemyLevelRunner\";\r\nimport { resetLevelState } from \"../State/EnemyLevel/EnemyLevelActions\";\r\nimport { setPlayerMovementLimit } from \"../State/Player/PlayerActions\";\r\nimport { appState, dispatch } from \"../State/Store\";\r\nimport handleLevelWon from \"../StateHandlers/HandleLevelWon\";\r\nimport { Enemies } from \"../Types\";\r\n\r\nexport default class EnemyLevel implements ILevel {\r\n\r\n    /**\r\n     * Array of subscriptions registered in the GameLoop. Disposed when the level is disposed.\r\n     */\r\n    private subscriptions: Array<() => void> = [];\r\n\r\n    /**\r\n     * Enemies of the level.\r\n     */\r\n    private enemies: Enemies;\r\n\r\n    /**\r\n     * Constructs the base level\r\n     * @param {TickFunction} stateManager. A function that will handle the state for the level.\r\n     * @param {() => boolean} monitorLevelWon. A function that checks fort he win condition of a level.\r\n     */\r\n    constructor(enemies: Enemies) {\r\n        this.enemies = enemies;\r\n    }\r\n\r\n    /**\r\n     * Register subscriptions.\r\n     * @param {function} f.\r\n     */\r\n    protected registerSubscription(f: () => void) {\r\n        this.subscriptions.push(f);\r\n    }\r\n\r\n    /**\r\n     * Begin this level.\r\n     * @param {() => void} levelReady. Optional callback that is called when the level is ready to begin.\r\n     */\r\n    public begin(levelReady?: () => void): void {\r\n\r\n        const { enemies, bulletRunner } = enemyLevelContentFactory(this.enemies);\r\n\r\n        const {\r\n            gameState\r\n        } = appState();\r\n\r\n        dispatch(setPlayerMovementLimit(\"immobile\"));\r\n\r\n        // Register the background draw function so it runs in the game loop.\r\n        this.registerSubscription(GameLoop.registerBackgroundDrawing(drawBackground));\r\n\r\n        // Draw the level banner to show which round we're at.\r\n        let level = 0;\r\n        if (gameState.level !== undefined) {\r\n            level = gameState.level;\r\n        }\r\n\r\n        // Draw the level banner, then start the level.\r\n        drawLevelBanner(level, () => {\r\n            // Register the stateManager so it can act on state changes in the level.\r\n            this.registerSubscription(GameLoop.registerUpdateState(EnemyLevelRunner.run));\r\n\r\n            if (bulletRunner !== undefined) {\r\n                this.registerSubscription(GameLoop.registerUpdateState((tick) => bulletRunner.updateState(tick)));\r\n            }\r\n\r\n            // Add the enemies to the enemy level runner. The registered stateManager will take it from here.\r\n            EnemyLevelRunner.setEnemies(enemies);\r\n\r\n            // Add a function to the GameLoop that will check if a level has been won.\r\n            this.registerSubscription(GameLoop.registerUpdateState(() => this.monitorLevelWonRun()));\r\n\r\n            dispatch(setPlayerMovementLimit(\"none\"));\r\n\r\n            if (levelReady !== undefined) {\r\n                levelReady();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Disposes subscriptions\r\n     */\r\n    public dispose(): void {\r\n        dispatch(resetLevelState());\r\n        // The subscription array contains functions that remove themselves\r\n        // from the GameLoop. Call all of them to remove them from the GameLoop.\r\n        this.subscriptions.forEach((s) => s());\r\n    }\r\n\r\n    /**\r\n     * This method uses the passed in monotorLeveLWon function to check if we can procede to the next level.\r\n     */\r\n    protected monitorLevelWonRun(): void {\r\n\r\n        // Use the provided function to check if the level has been completed.\r\n        if (this.levelClear()) {\r\n            handleLevelWon();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Functions that checks if the level is completely clear.\r\n     * @returns {boolean}. True if the enemies and shrapnell is gone.\r\n     */\r\n    private levelClear(): boolean {\r\n        const { enemyLevelState: { enemies, shrapnells } } = appState();\r\n        if (enemies.length === 0 && shrapnells.length === 0) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport CGAColors from \"../Constants/CGAColors\";\r\nimport GameLoop from \"../GameLoop\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport ctxProvider from \"../Providers/Render/CtxProvider\";\r\nimport renderFrame from \"../Render/RenderFrame\";\r\nimport getCharacters from \"../SharedFrames/Characters\";\r\nimport getNumbers from \"../SharedFrames/Numbers\";\r\nimport { Frame } from \"../Types\";\r\nimport { getFrameByIndex, getFrameDimensions } from \"../Utility/Frame\";\r\nimport getCharacter from \"../Utility/getCharacter\";\r\n\r\n/**\r\n * Module:          LevelBanner\r\n * Responsibility:  Shows the ROUND XX message before the level begins.\r\n */\r\n\r\nconst {\r\n    pixelSize,\r\n    gameField\r\n} = dimensionProvider();\r\n\r\nconst ctx = ctxProvider();\r\n\r\nconst greenCharacters = getCharacters(CGAColors.lightGreen);\r\nconst greenNumbers = getNumbers(CGAColors.lightGreen);\r\n\r\nconst roundCharacters = [\r\n    getCharacter(greenCharacters, \"R\"),\r\n    getCharacter(greenCharacters, \"O\"),\r\n    getCharacter(greenCharacters, \"U\"),\r\n    getCharacter(greenCharacters, \"N\"),\r\n    getCharacter(greenCharacters, \"D\"),\r\n];\r\n\r\nconst {\r\n    width\r\n} = getFrameDimensions(roundCharacters[0], pixelSize);\r\n\r\nconst top = gameField.bottom * 0.33;\r\nconst left = pixelSize * 26;\r\nconst barwidth = pixelSize * 30;\r\nconst roundWidth = 76 * pixelSize;\r\nconst charSpacing = pixelSize * 2;\r\n\r\nexport function drawLevelBanner(level: number | undefined, start: () => void): void {\r\n\r\n    let levelNumber = 0;\r\n    if (level !== undefined) {\r\n        levelNumber = level;\r\n    }\r\n\r\n    const sub = GameLoop.registerBackgroundDrawing(() => draw(levelNumber));\r\n\r\n    // Draw the level banner for 1 second. The use the callback to signal the called something else\r\n    // can now be done.\r\n    window.setTimeout(() => {\r\n        sub();\r\n        start();\r\n    }, 1000);\r\n}\r\n\r\n/**\r\n * Draws the level banner for the passed level.\r\n * @param {number} level. Level the level banner should show.\r\n */\r\nfunction draw(level: number): void {\r\n    let barcolor: string;\r\n    let bartop = top;\r\n    for (let i = 0; i < 3; i++) {\r\n        if (i % 2 === 0) {\r\n            barcolor = CGAColors.red;\r\n        } else {\r\n            barcolor = CGAColors.brown;\r\n        }\r\n\r\n        ctx.fillStyle = barcolor;\r\n        ctx.fillRect(left, bartop, barwidth, pixelSize);\r\n        ctx.fillRect(left + roundWidth, bartop, barwidth, pixelSize);\r\n\r\n        bartop += pixelSize * 2;\r\n    }\r\n\r\n    let levelNumberStartPos: number = 0;\r\n    for (let i = 0; i < 5; i++) {\r\n        const spacing = i === 0 ? 0 : charSpacing * i;\r\n        const charLeft = left + barwidth + charSpacing * 2 + spacing + width * i;\r\n\r\n        levelNumberStartPos = charLeft;\r\n\r\n        renderFrame(charLeft, top, roundCharacters[i]);\r\n    }\r\n\r\n    levelNumberStartPos += width + charSpacing;\r\n\r\n    let leftNumber: string | undefined;\r\n    let rightNumber: string | undefined;\r\n\r\n    let leftNumberFrame: Frame | undefined;\r\n    let rightNumberFrame: Frame;\r\n\r\n    const stringLevel = level.toString();\r\n\r\n    const rightNumberPosition = levelNumberStartPos + width + charSpacing;\r\n\r\n    if (level >= 10) {\r\n        leftNumber = stringLevel[0];\r\n        rightNumber = stringLevel[1];\r\n\r\n        leftNumberFrame = getFrameByIndex(greenNumbers, parseInt(leftNumber, 10));\r\n        rightNumberFrame = getFrameByIndex(greenNumbers, parseInt(rightNumber, 10));\r\n\r\n    } else {\r\n        rightNumber = stringLevel;\r\n        rightNumberFrame = getFrameByIndex(greenNumbers, parseInt(rightNumber, 10));\r\n    }\r\n\r\n    // Render the left number if it's available.\r\n    if (leftNumber && leftNumberFrame) {\r\n        renderFrame(levelNumberStartPos, top, leftNumberFrame);\r\n    }\r\n\r\n    // Always render the right number.\r\n    renderFrame(rightNumberPosition, top, rightNumberFrame);\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          2pxBullet\r\n * Responsibility:  Define a bullet 2 pixels wide. Variant color allows it to be any color.\r\n */\r\n\r\nimport { Frame } from \"../Types\";\r\nimport Mutators from \"../Utility/FrameMutators\";\r\n\r\nexport default function getTwoPixelBullet(color?: string): Frame {\r\n    const twoPixelBullet: Frame = [\r\n        [\"V\", \"V\"],\r\n    ];\r\n\r\n    if (color !== undefined) {\r\n        Mutators.Frame.setColor(twoPixelBullet, color);\r\n    }\r\n\r\n    return twoPixelBullet;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport Guard from \"../Guard\";\r\nimport { setPause } from \"../State/Game/GameActions\";\r\nimport { keyDown, keyUp } from \"../State/Keyboard/KeyboardActions\";\r\nimport { appState, dispatch } from \"../State/Store\";\r\n\r\n/**\r\n * Module:          KeyboardEVents\r\n * Responsibility:  handle keyboard events.\r\n */\r\n\r\n/**\r\n * Valid game keys.\r\n */\r\nexport type GameKeys =\r\n    \"ArrowUp\" |\r\n    \"ArrowDown\" |\r\n    \"ArrowLeft\" |\r\n    \"ArrowRight\" |\r\n    \"Backspace\" |\r\n    \"F1\" |\r\n    \"F2\" |\r\n    \"Space\";\r\n\r\n/**\r\n * Array of valid game keys.\r\n */\r\nexport const allGameKeys: GameKeys[] = [\r\n    \"ArrowDown\",\r\n    \"ArrowLeft\",\r\n    \"ArrowRight\",\r\n    \"ArrowUp\",\r\n    \"Backspace\",\r\n    \"F1\",\r\n    \"F2\",\r\n    \"Space\",\r\n];\r\n\r\n/**\r\n * onKeyDown. Fired when a game control key is pushed down..\r\n * @param {KeyboardEvent} event. A keyboard event.\r\n */\r\nfunction onKeyDown(event: KeyboardEvent): void {\r\n\r\n    const {\r\n        playerState,\r\n        gameState\r\n    } = appState();\r\n\r\n    if (Guard.isValidGameKey(event.code)) {\r\n        // Only dispatch if the key is a game control key.\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n\r\n        // If the space bar is hit and the player is alive the player pauses the game\r\n        // otherwise, the space bar is used to pause formation.\r\n        if (event.code === \"Space\" && playerState.alive) {\r\n            if (gameState.pause) {\r\n                dispatch(setPause(false));\r\n            } else {\r\n                dispatch(setPause(true));\r\n            }\r\n        } else {\r\n            dispatch(keyDown(event.code));\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * onKeyUp. Fired when a game control key is let go.\r\n * @param {KeyboardEvent} event. A keyboard event.\r\n */\r\nfunction onKeyUp(event: KeyboardEvent): void {\r\n    if (Guard.isValidGameKey(event.code)) {\r\n        // Only dispatch if the key is a game control key.\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n\r\n        dispatch(keyUp(event.code));\r\n    }\r\n}\r\n\r\n/**\r\n * Adds event listeners for keyup and keydown.\r\n */\r\nexport function registerListeners(): void {\r\n    window.addEventListener(\"keyup\", onKeyUp);\r\n    window.addEventListener(\"keydown\", onKeyDown);\r\n}\r\n\r\n/**\r\n * Removes the event listeners\r\n */\r\nexport function unregisterListeners(): void {\r\n    window.removeEventListener(\"keyup\", onKeyUp);\r\n    window.removeEventListener(\"keydown\", onKeyDown);\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { GameLocation } from \"../Models/GameLocation\";\r\nimport { getPlayerFrame } from \"../Player/PlayerFrames\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport { setPlayerLocationData } from \"../State/Player/PlayerActions\";\r\nimport { appState, dispatch } from \"../State/Store\";\r\nimport { getFrameDimensions, getFrameHitbox } from \"../Utility/Frame\";\r\nimport { getAngle, getNextX, getNextY } from \"../Utility/Geometry\";\r\n\r\n/**\r\n * Module:          PlayerMovementHandler\r\n * Responsibility:  Handles changes to the player due to movement.\r\n */\r\n\r\nconst {\r\n    pixelSize,\r\n    gameField\r\n} = dimensionProvider();\r\n\r\n// Used in player hitbox calculation, never changes so it can be a constant.\r\nconst doublePixel = pixelSize * 2;\r\n\r\n// The player's hitbox is a bit smaller than the actual ship. This feels better when playing the game.\r\nconst playerHitboxAdjustment = pixelSize * 0.3;\r\n\r\nconst {\r\n    width: playerWidth,\r\n    height: playerHeight\r\n} = getFrameDimensions(getPlayerFrame());\r\n\r\n/**\r\n * Handles player movement.\r\n * @param {number} speed. Speed the ship can travel. Can vary depending on the level or if the player ship is forming.\r\n */\r\nexport function playerMovementHandler(speed: number): void {\r\n    const { keyboardState, playerState } = appState();\r\n\r\n    const localKeyboardState = { ...keyboardState };\r\n\r\n    // By default the speed for x and y is the speed passed to the movement\r\n    const speedX = speed;\r\n    let speedY = speed;\r\n\r\n    // Certain levels limit the movement of the player.\r\n    // We'll use a fresh keyboardState object and make some adjustments.\r\n    switch (playerState.moveLimit) {\r\n        case \"immobile\":\r\n            return;\r\n        case \"sideways\":\r\n            // Used when the player forms. Override the keyboard state.\r\n            localKeyboardState.down = localKeyboardState.up = false;\r\n            break;\r\n        case \"forceup\":\r\n            // Used when the player travels through a warp gate.\r\n            localKeyboardState.up = true;\r\n            localKeyboardState.down = false;\r\n            speedY = 4;\r\n            break;\r\n        case \"none\":\r\n        // Make not changes and allow 360 degrees of freedown\r\n        default:\r\n        // No default;\r\n    }\r\n\r\n    const angle = getAngle(localKeyboardState);\r\n    const { left: nextX, top: nextY } = getNextLocationForPlayer(angle, speedX, speedY, playerState.left, playerState.top);\r\n\r\n    const hitBox = getFrameHitbox(nextX, nextY, playerState.coloredFrame, 0);\r\n\r\n    const middleHitbox = {\r\n        ...hitBox,\r\n        left: hitBox.left + doublePixel + playerHitboxAdjustment,\r\n        right: hitBox.right - doublePixel - playerHitboxAdjustment,\r\n        top: hitBox.top + playerHitboxAdjustment,\r\n        bottom: hitBox.bottom - playerHitboxAdjustment,\r\n    };\r\n\r\n    const bottomHitbox = {\r\n        ...hitBox,\r\n        top: hitBox.top + pixelSize + playerHitboxAdjustment,\r\n        left: hitBox.left + playerHitboxAdjustment,\r\n        right: hitBox.right - playerHitboxAdjustment,\r\n        bottom: hitBox.bottom - playerHitboxAdjustment,\r\n    };\r\n\r\n    const hitBoxes = { middle: middleHitbox, bottom: bottomHitbox };\r\n\r\n    const nozzleLocation = {\r\n        left: nextX + pixelSize * 2,\r\n        top: nextY,\r\n    };\r\n\r\n    dispatch(setPlayerLocationData(nextX, nextY, hitBoxes, nozzleLocation));\r\n}\r\n\r\n/**\r\n * Returns the next locatoin for the player taking into account, no movement and moving outside the game field.\r\n * @export\r\n * @param {number} angle\r\n * @param {number} speedX\r\n * @param {number} currentX\r\n * @param {number} currentY\r\n * @returns {GameLocation}\r\n */\r\nfunction getNextLocationForPlayer(angle: number, speedX: number, speedY: number, currentX: number, currentY: number): GameLocation {\r\n    const currentLocation = { left: currentX, top: currentY };\r\n    if (angle === -1) {\r\n        return currentLocation;\r\n    }\r\n\r\n    const nextX = getNextX(angle, speedX, currentX);\r\n    const nextY = getNextY(angle, speedY, currentY);\r\n\r\n    if (nextX < gameField.left || nextX + playerWidth > gameField.right) {\r\n        return currentLocation;\r\n    }\r\n\r\n    if (nextY + playerHeight > gameField.bottom || nextY < gameField.top) {\r\n        return currentLocation;\r\n    }\r\n\r\n    return {\r\n        left: nextX,\r\n        top: nextY,\r\n    };\r\n}","export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport GameLoop from \"./GameLoop\";\r\nimport { drawGameFieldBorder } from \"./GameScreen/StaticRenders\";\r\nimport { drawStatusBar } from \"./GameScreen/StatusBar\";\r\nimport subscribeToStoreChanges from \"./Levels/SubscribeToStore\";\r\nimport playerSpawnManager from \"./Player/PlayerSpawnManager\";\r\nimport dimensionProvider from \"./Providers/DimensionProvider\";\r\nimport ctxProvider from \"./Providers/Render/CtxProvider\";\r\nimport genericRunner from \"./Runners/GenericRunner\";\r\nimport playerRunner from \"./Runners/PlayerRunner\";\r\nimport { setDebuggingState } from \"./State/Debugging/DebuggingActions\";\r\nimport DebuggingState from \"./State/Debugging/DebuggingState\";\r\nimport { addPhaser, increaseScore, nextLevel, setLevel, setLives, setPhasers, setWarpGamteComplexity } from \"./State/Game/GameActions\";\r\nimport { WarpLevelComplexity } from \"./State/Game/WarpLevelTypes\";\r\nimport { dispatch } from \"./State/Store\";\r\nimport { registerListeners } from \"./Utility/KeyboardEvents\";\r\nimport { getURLQueryKVPs } from \"./Utility/Lib\";\r\n\r\n/**\r\n * Module:          Index\r\n * Responsibility:  Entry point for the game\r\n */\r\n\r\nwindow.onload = () => {\r\n\r\n    const canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\r\n    if (canvas) {\r\n        // Initialize the dimentions of the canvas.\r\n        canvas.width = dimensionProvider().fullGameWidth;\r\n        canvas.height = dimensionProvider().fullGameHeight;\r\n\r\n        const queryKeyValuePairs = getURLQueryKVPs(window.location.search);\r\n\r\n        const showPlayGround = queryKeyValuePairs.some((kvp) => kvp.key === \"playground\");\r\n        const showCanvas = queryKeyValuePairs.some((kvp) => kvp.key === \"canvas\");\r\n        let level = queryKeyValuePairs.find((kvp) => kvp.key === \"level\")?.value;\r\n        const drawGrid = queryKeyValuePairs.find((kvp) => kvp.key === \"grid\");\r\n        const showhitboxes = queryKeyValuePairs.find((kvp) => kvp.key === \"hitboxes\");\r\n        const immortal = queryKeyValuePairs.find((kvp) => kvp.key === \"god\");\r\n\r\n        if (showPlayGround) {\r\n\r\n            const debuggingState: DebuggingState = {};\r\n\r\n            if (!level) {\r\n                level = \"0\";\r\n            }\r\n\r\n            startEssential();\r\n\r\n            dispatch(setLives(20));\r\n            dispatch(setPhasers(100));\r\n\r\n            if (level) {\r\n                dispatch(setLevel(parseInt(level, 10)));\r\n            }\r\n\r\n            GameLoop.Start();\r\n\r\n            if (immortal) {\r\n                debuggingState.playerIsImmortal = true;\r\n            }\r\n\r\n            if (drawGrid) {\r\n                let gridDetail: number | undefined;\r\n                if (drawGrid.value) {\r\n                    gridDetail = parseInt(drawGrid.value, 10);\r\n                }\r\n\r\n                debuggingState.drawGrid = true;\r\n                debuggingState.gridDetail = gridDetail;\r\n            }\r\n\r\n            if (showhitboxes) {\r\n                debuggingState.drawHitboxes = true;\r\n            }\r\n\r\n            dispatch(setDebuggingState(debuggingState));\r\n\r\n            (window as any).r42 = {\r\n                setLevel: (n: number) => dispatch(setLevel(n)),\r\n                nextLevel: () => dispatch(nextLevel()),\r\n                setPhasers: (n: number) => dispatch(setPhasers(n)),\r\n                setLives: (n: number) => dispatch(setLives(n)),\r\n                increaseScore: (n: number) => dispatch(increaseScore(n)),\r\n                addPhaser: () => dispatch(addPhaser()),\r\n                setWarpLevelComplexity: (n: WarpLevelComplexity) => dispatch(setWarpGamteComplexity(n)),\r\n                setDebuggingState: (v: DebuggingState) => dispatch(setDebuggingState(v)),\r\n            };\r\n\r\n        } else if (showCanvas) {\r\n            // canvas testing\r\n            const ctx = ctxProvider();\r\n\r\n            // Green.\r\n            ctx.fillStyle = \"#00AA00\";\r\n\r\n            (window as any).r42 = ctx;\r\n        } else {\r\n            startGame();\r\n        }\r\n    }\r\n};\r\n\r\nfunction startGame(): void {\r\n\r\n    startEssential();\r\n    dispatch(setPhasers(1));\r\n    dispatch(setLives(2));\r\n\r\n    dispatch(setLevel(1));\r\n    GameLoop.Start();\r\n}\r\n\r\nfunction startEssential() {\r\n    subscribeToStoreChanges();\r\n    registerListeners();\r\n\r\n    GameLoop.registerForegroundDrawing(drawStatusBar);\r\n    GameLoop.registerForegroundDrawing(drawGameFieldBorder);\r\n    GameLoop.registerUpdateState(playerRunner);\r\n    GameLoop.registerUpdateState(playerSpawnManager);\r\n    GameLoop.registerUpdateState(genericRunner);\r\n}","import $$observable from 'symbol-observable';\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error('It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error('You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected the listener to be a function.');\n    }\n\n    if (isDispatching) {\n      throw new Error('You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api-reference/store#subscribelistener for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error('You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api-reference/store#subscribelistener for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionDescription = actionType && \"action \\\"\" + String(actionType) + \"\\\"\" || 'an action';\n  return \"Given \" + actionDescription + \", reducer \\\"\" + key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\";\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle \" + ActionTypes.INIT + \" or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n        throw new Error(errorMessage);\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(\"bindActionCreators expected an object or a function, instead received \" + (actionCreators === null ? 'null' : typeof actionCreators) + \". \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    keys.push.apply(keys, Object.getOwnPropertySymbols(object));\n  }\n\n  if (enumerableOnly) keys = keys.filter(function (sym) {\n    return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n  });\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error('Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread2({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\n\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \"production\". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { ActionTypes as __DO_NOT_USE__ActionTypes, applyMiddleware, bindActionCreators, combineReducers, compose, createStore };\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport Constants from \"./DebuggingConstants\";\r\nimport DebuggingState from \"./DebuggingState\";\r\nimport { DebuggingTypes } from \"./DebuggingTypes\";\r\n\r\n/**\r\n * Module:          debuggingReducer\r\n * Responsibility:  Handles the debugging state.\r\n */\r\n\r\n/**\r\n * debuggingReducer\r\n * @param {DebuggingState} state. The current state.\r\n * @param {ActionPayload<any>} action. The desired action with optional paylood.\r\n * @returns {DebuggingState}. New state.\r\n */\r\nexport default function debuggingReducer(state: DebuggingState = {}, action: DebuggingTypes): DebuggingState {\r\n    switch (action.type) {\r\n        case Constants.setDebuggingState:\r\n            state = { ...action.state };\r\n            break;\r\n    }\r\n\r\n    return state;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          LevelReducuer\r\n * Responsibility:  LevelReducer.\r\n */\r\n\r\nimport produce from \"immer\";\r\nimport Constants from \"./EnemyLevelConstants\";\r\nimport EnemyLevelState from \"./EnemyLevelState\";\r\nimport { EnemyLevelTypes } from \"./EnemyLevelTypes\";\r\n\r\n/**\r\n * enemyLevelReducer\r\n * @param {EnemyLevelState} state. The current state.\r\n * @param {ActionPayload<any>} action. The desired action with optional paylood.\r\n * @returns {EnemyLevelState}. New state.\r\n */\r\nexport default function enemyLevelReducer(state: EnemyLevelState = initState(), action: EnemyLevelTypes): EnemyLevelState {\r\n\r\n    const newState = produce(state, (draft) => {\r\n        switch (action.type) {\r\n            case Constants.addExplosionCenter:\r\n                draft.explosionCenters.push(action.explosionCenter);\r\n                draft.shrapnells.push(...action.shrapnell);\r\n                break;\r\n            case Constants.setShrapnellState:\r\n                draft.shrapnells = action.shrapnell;\r\n                break;\r\n            case Constants.addParticle:\r\n                draft.shrapnells.push(action.particle);\r\n                break;\r\n            case Constants.addParticles:\r\n                draft.shrapnells.push(...action.particles);\r\n                break;\r\n            case Constants.setPhaserLocations:\r\n                draft.phaserLocations = action.payload;\r\n                break;\r\n            case Constants.clearPhaserLocations:\r\n                draft.phaserLocations = [];\r\n                break;\r\n            case Constants.setFireInterval:\r\n                draft.fireInterval = action.payload;\r\n                break;\r\n            case Constants.setExplosionCenters:\r\n                draft.explosionCenters = action.explosionCenters;\r\n                break;\r\n            case Constants.addBullet:\r\n                draft.bullets.push(action.bullet);\r\n                break;\r\n            case Constants.setBulletState:\r\n                draft.bullets = action.bullets;\r\n                break;\r\n            case Constants.setTotalEnemies:\r\n                draft.totalNumberOfEnemies = action.totalEnemies;\r\n                break;\r\n            case Constants.addOrUpdateEnemy:\r\n                const index = state.enemies.findIndex((es) => es.enemyId === action.enemyState.enemyId);\r\n                if (index > -1) {\r\n                    draft.enemies[index] = action.enemyState;\r\n                } else {\r\n                    draft.enemies.push(action.enemyState);\r\n                }\r\n                break;\r\n            case Constants.removeEnemy:\r\n                draft.enemies = draft.enemies.filter((es) => es.enemyId !== action.enemyId);\r\n                break;\r\n        }\r\n    });\r\n\r\n    if (action.type === Constants.resetLevelState) {\r\n        return initState();\r\n    }\r\n\r\n    return newState;\r\n}\r\n\r\nfunction initState(): EnemyLevelState {\r\n    return {\r\n        shrapnells: [],\r\n        phaserLocations: [],\r\n        fireInterval: 0,\r\n        explosionCenters: [],\r\n        bullets: [],\r\n        totalNumberOfEnemies: 0,\r\n        enemies: [],\r\n    };\r\n}","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport produce from \"immer\";\r\nimport Constants from \"./GameConstants\";\r\nimport GameState from \"./GameState\";\r\nimport { GameStateTypes } from \"./GameTypes\";\r\nimport getWarpGateComplexity from \"./WarpGameComplexities\";\r\n\r\n/**\r\n * Module:          GameStateReducer\r\n * Responsibility:  Reducer for the game state\r\n */\r\n\r\n/**\r\n * gameStateReducer\r\n * @param {DebuggingState} state. The current state.\r\n * @param {ActionPayload<any>} action. The desired action with optional paylood.\r\n * @returns {GameState}. New state.\r\n */\r\nexport default function gameStateReducer(state: GameState = initState(), action: GameStateTypes): GameState {\r\n    return produce(state, (draft) => {\r\n        switch (action.type) {\r\n            case Constants.increaseScore:\r\n                draft.score += action.payload;\r\n                break;\r\n            case Constants.setLives:\r\n                draft.lives = action.payload;\r\n                break;\r\n            case Constants.addLife:\r\n                draft.lives += 1;\r\n                break;\r\n            case Constants.removeLife:\r\n                draft.lives -= 1;\r\n                break;\r\n            case Constants.setPhasers:\r\n                draft.phasers = action.payload;\r\n                break;\r\n            case Constants.addPhaser:\r\n                draft.phasers += 1;\r\n                break;\r\n            case Constants.removePhaser:\r\n                draft.phasers--;\r\n                break;\r\n            case Constants.addLevel:\r\n                if (draft.level) {\r\n                    draft.level++;\r\n                }\r\n                break;\r\n            case Constants.setLevel:\r\n                draft.level = action.payload;\r\n                break;\r\n            case Constants.nextLevel:\r\n                if (draft.level === 42) {\r\n                    draft.level = 1;\r\n                } else if (draft.level !== undefined) {\r\n                    draft.level++;\r\n                }\r\n\r\n                break;\r\n            case Constants.addLifeAndPhaser:\r\n                draft.lives++;\r\n                draft.phasers++;\r\n                break;\r\n            case Constants.setPause:\r\n                draft.pause = action.payload;\r\n                break;\r\n            case Constants.setWarpLevelComplexity:\r\n                draft.warpLevelSteps = getWarpGateComplexity(action.complexity);\r\n                break;\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Initialize the state\r\n * @returns {GameState}. Fresh GameState.\r\n */\r\nfunction initState(): GameState {\r\n    return {\r\n        level: undefined,\r\n        lives: 0,\r\n        score: 0,\r\n        phasers: 0,\r\n        pause: false,\r\n        warpLevelSteps: getWarpGateComplexity(0),\r\n    };\r\n}\r\n","import { WarpLevelComplexity, WarpLevelComplexitySteps, WarpLevelSteps } from \"./WarpLevelTypes\";\r\n\r\n/**\r\n * Typed constants that defined the warp gate complexities.\r\n */\r\nconst warpLevelComplexities: WarpLevelComplexitySteps = {\r\n    0: {\r\n        stepsX: [0, 2, 2, 4],\r\n        stepsY: [4, 4, 6, 8]\r\n    },\r\n    1: {\r\n        stepsX: [0, 2, 2, 4],\r\n        stepsY: [4, 4, 6, 6],\r\n    },\r\n    2: {\r\n        stepsX: [0, 2, 2, 4],\r\n        stepsY: [4, 4, 4, 6],\r\n    },\r\n    3: {\r\n        stepsX: [2, 2, 4, 4],\r\n        stepsY: [2, 4, 4, 6],\r\n    },\r\n    4: {\r\n        stepsX: [2, 2, 2, 4],\r\n        stepsY: [2, 2, 4],\r\n    },\r\n    5: {\r\n        stepsX: [2, 2, 2, 4],\r\n        stepsY: [2, 2, 4],\r\n    },\r\n    6: {\r\n        stepsX: [2, 2, 4, 4],\r\n        stepsY: [2, 4],\r\n    },\r\n    7: {\r\n        stepsX: [2, 2, 4, 4],\r\n        stepsY: [2],\r\n    },\r\n    8: {\r\n        stepsX: [2, 2, 4, 4],\r\n        stepsY: [2],\r\n    }\r\n};\r\n\r\nexport default function getWarpGateComplexity(complexity: WarpLevelComplexity): WarpLevelSteps {\r\n    return warpLevelComplexities[complexity];\r\n}","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          KeyboardReducer\r\n * Responsibility:  Handles keyup and keydown events and stores the currently held down heys.\r\n */\r\n\r\nimport produce from \"immer\";\r\nimport Constants from \"./KeyboardConstants\";\r\nimport KeyboardState from \"./KeyboardState\";\r\nimport { KeyboardTypes } from \"./KeyboardTypes\";\r\n\r\n/**\r\n * keyboardStateReducer\r\n * @param {DebuggingState} state. The current state.\r\n * @param {ActionPayload<any>} action. The desired action with optional paylood.\r\n * @returns {KeyboardState}. New state.\r\n */\r\nexport default function keyboardStateReducer(state: KeyboardState = initState(), action: KeyboardTypes): KeyboardState {\r\n\r\n    return produce(state, (draft) => {\r\n\r\n        let keyDown = false;\r\n        if (action.type === Constants.keydown) {\r\n            keyDown = true;\r\n        } else if (action.type === Constants.keyup) {\r\n            keyDown = false;\r\n        }\r\n\r\n        switch (action.payload) {\r\n            case undefined:\r\n                break;\r\n            case Constants.arrowUp:\r\n                draft.up = keyDown;\r\n                break;\r\n            case Constants.arrowDown:\r\n                draft.down = keyDown;\r\n                break;\r\n            case Constants.arrowLeft:\r\n                draft.left = keyDown;\r\n                break;\r\n            case Constants.arrowRight:\r\n                draft.right = keyDown;\r\n                break;\r\n            case Constants.backspace:\r\n                draft.selfDestruct = keyDown;\r\n                break;\r\n            case Constants.f1:\r\n                draft.fire = keyDown;\r\n                break;\r\n            case Constants.f2:\r\n                draft.phraser = keyDown;\r\n                break;\r\n            case Constants.space:\r\n                draft.space = keyDown;\r\n                break;\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Initialize KeyboardState\r\n * @returns {KeyboardState}. Initial keyboard state.\r\n */\r\nfunction initState(): KeyboardState {\r\n    return {\r\n        up: false,\r\n        down: false,\r\n        left: false,\r\n        right: false,\r\n        fire: false,\r\n        phraser: false,\r\n        selfDestruct: false,\r\n        space: false,\r\n    };\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport produce from \"immer\";\r\nimport getPlayerExplosion from \"../../Player/PlayerExplosion\";\r\nimport { getPlayerFrame } from \"../../Player/PlayerFrames\";\r\nimport getShipSpawnLocation from \"../../Providers/PlayerSpawnLocationProvider\";\r\nimport Mutators from \"../../Utility/FrameMutators\";\r\nimport Constants from \"./PlayerConstants\";\r\nimport PlayerState from \"./PlayerState\";\r\nimport { PlayerStateTypes } from \"./PlayerTypes\";\r\n\r\n/**\r\n * Module:          playerReducer\r\n * Responsibility:  Handles the player's state.\r\n */\r\n\r\n/**\r\n * playerReducer\r\n * @param {PlayerState} state. The current state.\r\n * @param {ActionPayload<any>} action. The desired action with optional paylood.\r\n * @returns {PlayerState}. New state.\r\n */\r\nexport default function playerReducer(state: PlayerState = initState(), action: PlayerStateTypes): PlayerState {\r\n    return produce(state, (draft) => {\r\n        switch (action.type) {\r\n            case Constants.setPlayerIsAlive:\r\n                draft.alive = action.playerIsAlive;\r\n                break;\r\n            case Constants.setPlayerMovementLimit:\r\n                draft.moveLimit = action.payload;\r\n                break;\r\n            case Constants.setPlayerLocationData:\r\n                draft.left = action.payload.left;\r\n                draft.top = action.payload.top;\r\n                draft.hitboxes = action.payload.hitboxes;\r\n                draft.nozzleLocation = action.payload.nozzleLocation;\r\n                break;\r\n            case Constants.setPlayerBulletState:\r\n                draft.bulletState = action.particleState;\r\n                break;\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Initialize the base player state.\r\n * @returns {PlayerState}\r\n */\r\nfunction initState(): PlayerState {\r\n    const playerExplosion = getPlayerExplosion();\r\n    Mutators.Frame.convertHexToCGA(playerExplosion.explosionCenterFrame);\r\n\r\n    playerExplosion.particleFrames.forEach((p) => Mutators.Frame.convertHexToCGA(p));\r\n\r\n    const spawnLocation = getShipSpawnLocation();\r\n\r\n    const playerFrame = getPlayerFrame();\r\n    Mutators.Frame.convertHexToCGA(playerFrame);\r\n\r\n    return {\r\n        alive: false,\r\n        moveLimit: \"none\",\r\n        left: spawnLocation.left,\r\n        top: spawnLocation.top,\r\n        hitboxes: undefined,\r\n        nozzleLocation: { left: 0, top: 0 },\r\n        coloredExplosion: playerExplosion,\r\n        coloredFrame: playerFrame,\r\n        bulletState: undefined,\r\n    };\r\n}","\r\n/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport Explosion from \"../Models/Explosion\";\r\n\r\n/**\r\n * Module:          PlayerExplosion\r\n * Responsibility:  Explosion effect only for the player\r\n */\r\n\r\nexport default function getPlayerExplosion(): Explosion {\r\n\r\n    const playerExplosion: Explosion = {\r\n        explosionCenterFrame: [\r\n            [\"0\", \"0\", \"2\", \"2\", \"0\", \"0\"],\r\n            [\"4\", \"E\", \"0\", \"0\", \"E\", \"4\"],\r\n        ],\r\n        particleFrames: [\r\n            [\r\n                [\"C\", \"C\"], // red block\r\n            ],\r\n            [\r\n                [\"E\", \"C\"], // yellow red block\r\n            ],\r\n            [\r\n                [\"C\", \"E\"], // red yellow block\r\n            ],\r\n            [\r\n                [\"F\", \"C\"], // white red block\r\n            ],\r\n            [\r\n                [\"C\", \"F\"], // red white block\r\n            ],\r\n        ],\r\n        particleFrameIndexes: [\r\n            0, 0, 0, 0, 0,\r\n            1, 1, 1, 1,\r\n            2, 2, 2, 2,\r\n            2, 3, 3, 3,\r\n            4, 4, 4, 4,\r\n            0, 0,\r\n            0, 0,\r\n        ],\r\n        angles: [\r\n            270, 270, 270, 270, 270, // five red block flying up.\r\n            210, 210, 210, 210, // four yellow red blocks.\r\n            330, 330, 330, 300, // four red yellow blocks.\r\n            195, 195, 195, 195, // four white red blocks.\r\n            345, 345, 345, 345, // four red yellow blocks.\r\n            180, 180, // two red blocks\r\n            0, 0 // two red blocks\r\n        ],\r\n        speeds: [\r\n            3, 4.5, 7, 8, 10, // Speeds for the first angles.\r\n            3, 4.5, 7, 8, // Speeds for the second row of angles.\r\n            3, 4.5, 7, 8, // Speeds for the third row of angles.\r\n            3, 4.5, 7, 8, // Speeds for the fourh row of angles.\r\n            3, 4.5, 7, 8, // Speeds for the fith fow of angles\r\n            4.5, 8, // Speeds for the fith fow of angles\r\n            4.5, 8, // Speeds for the fith fow of angles\r\n        ],\r\n        acceleration: 1.10,\r\n        explosionCenterDelay: 20,\r\n        useSpeed: false,\r\n        speed: 0, // not used.\r\n    };\r\n\r\n    return playerExplosion;\r\n}","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          HexToCGAConverter.\r\n * Responsibility:  Convert hex color to a CGA color\r\n */\r\n\r\nimport CGAColors from \"../Constants/CGAColors\";\r\n\r\nexport default function hexToCGAConverter(hex: string): string {\r\n    switch (hex) {\r\n        case \"0\":\r\n            return CGAColors.black;\r\n        case \"1\":\r\n            return CGAColors.blue;\r\n        case \"2\":\r\n            return CGAColors.green;\r\n        case \"3\":\r\n            return CGAColors.cyan;\r\n        case \"4\":\r\n            return CGAColors.red;\r\n        case \"5\":\r\n            return CGAColors.magenta;\r\n        case \"6\":\r\n            return CGAColors.brown;\r\n        case \"7\":\r\n            return CGAColors.lightGray;\r\n        case \"8\":\r\n            return CGAColors.darkGray;\r\n        case \"9\":\r\n            return CGAColors.lightBlue;\r\n        case \"A\":\r\n            return CGAColors.lightGreen;\r\n        case \"B\":\r\n            return CGAColors.lightCyan;\r\n        case \"C\":\r\n            return CGAColors.lightRed;\r\n        case \"D\":\r\n            return CGAColors.lightMagenta;\r\n        case \"E\":\r\n            return CGAColors.yellow;\r\n        case \"F\":\r\n            return CGAColors.white;\r\n        default:\r\n            return \"\";\r\n    }\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport CGAColors from \"../Constants/CGAColors\";\r\nimport { getPlayerFrame } from \"../Player/PlayerFrames\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport ctxProvider from \"../Providers/Render/CtxProvider\";\r\nimport renderFrame from \"../Render/RenderFrame\";\r\nimport getNumbers from \"../SharedFrames/Numbers\";\r\nimport { appState } from \"../State/Store\";\r\nimport { Frame } from \"../Types\";\r\nimport { getFrameByIndex, getFrameDimensions } from \"../Utility/Frame\";\r\nimport Mutators from \"../Utility/FrameMutators\";\r\nimport { padLeft } from \"../Utility/String\";\r\n\r\n/**\r\n * Module:          StatusBar\r\n * Responsibility:  Drawn at the top of the screen for score, phasers, lives and level.\r\n */\r\n\r\nconst ctx = ctxProvider();\r\n\r\nconst {\r\n    statusBarBottom,\r\n    pixelSize,\r\n    fullGameWidth\r\n} = dimensionProvider();\r\n\r\nconst numberFrames = getNumbers(CGAColors.yellow);\r\n\r\nconst lifeFrame = getPlayerFrame();\r\nMutators.Frame.setColor(lifeFrame, CGAColors.yellow);\r\n\r\n// Score constants\r\nconst scoreStartPosition = 4 * pixelSize;\r\nconst scoreSpacing = 2 * pixelSize;\r\nconst scoreBackgroundWidth = 45 * pixelSize;\r\n\r\n// Phaser constants.\r\nconst phaserStartPosition = scoreBackgroundWidth;\r\nconst phaserSpacing = pixelSize * 2;\r\nconst phaserBackgroundWidth = pixelSize * 50;\r\n\r\n// The phaser frame is only used in the status bar.\r\n// no point in moving it to anther file.\r\nconst phaserFrame: Frame = [\r\n    [\"E\", \"0\"],\r\n    [\"E\", \"0\"],\r\n    [\"E\", \"E\"],\r\n    [\"0\", \"E\"],\r\n    [\"0\", \"E\"],\r\n];\r\n\r\nMutators.Frame.convertHexToCGA(phaserFrame);\r\n\r\n// Lives constants.\r\nconst livesSpacing = 2 * pixelSize;\r\nconst livesStartPostion = scoreBackgroundWidth + phaserBackgroundWidth;\r\nconst lifeFrameWidth = getFrameDimensions(lifeFrame, pixelSize).width;\r\nconst livesBackgroundWidth = pixelSize * 54;\r\n\r\n// Level number constants.\r\nconst leftNumberLeft = pixelSize * 148;\r\nconst rightNumberLeft = pixelSize * 154;\r\nconst scoreBoardHeight = pixelSize * 6;\r\n\r\n/**\r\n * Main funtion that draw the entire status bar.\r\n */\r\nexport function drawStatusBar(): void {\r\n    ctx.fillStyle = CGAColors.red;\r\n    ctx.fillRect(0, 0, fullGameWidth, scoreBoardHeight);\r\n    drawScore();\r\n    drawPhasers();\r\n    drawLives();\r\n    drawLevel();\r\n}\r\n\r\n/**\r\n * Draw the level indicator.\r\n */\r\nfunction drawScore(): void {\r\n    const { gameState } = appState();\r\n    const scoreString = padLeft(gameState.score.toString(), 6, \"0\");\r\n\r\n    let cnt = 0;\r\n    for (const n of scoreString) {\r\n        const frame = getFrameByIndex(numberFrames, parseInt(n, 10));\r\n\r\n        const actualSpacing = cnt === 0 ? 0 : scoreSpacing;\r\n        let left = cnt * (getFrameDimensions(frame, pixelSize).width + actualSpacing);\r\n        left = scoreStartPosition + left;\r\n        renderFrame(left, 0, frame);\r\n        cnt++;\r\n    }\r\n}\r\n\r\nfunction drawPhasers(): void {\r\n    const { gameState } = appState();\r\n\r\n    const maxPhasersToBeDrawn = gameState.phasers < 11 ? gameState.phasers : 11;\r\n\r\n    for (let i = 0; i < maxPhasersToBeDrawn; i++) {\r\n        const actualSpacing = i === 0 ? 0 : phaserSpacing;\r\n        const left = phaserStartPosition + i * pixelSize + i * actualSpacing;\r\n\r\n        if (left <= phaserStartPosition + phaserBackgroundWidth) {\r\n            renderFrame(left, 0, phaserFrame);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Draws the player lives. These are drawn from right.\r\n */\r\nfunction drawLives(): void {\r\n    const { gameState } = appState();\r\n    let left = 135 * pixelSize;\r\n\r\n    const maxLivesToBeDrawn = gameState.lives <= 8 ? gameState.lives : 8;\r\n\r\n    for (let lives = 1; lives <= maxLivesToBeDrawn; lives++) {\r\n        renderFrame(left, pixelSize, lifeFrame);\r\n        left -= livesSpacing + lifeFrameWidth;\r\n    }\r\n}\r\n\r\nfunction drawLevel(): void {\r\n    const { gameState } = appState();\r\n    let paddedLevelString = \"0\";\r\n    if (gameState.level !== undefined) {\r\n        paddedLevelString = padLeft(gameState.level.toString(), 2, \"0\");\r\n    }\r\n\r\n    const rightNumber = parseInt(paddedLevelString[1], 10);\r\n    const leftNumber = parseInt(paddedLevelString[0], 10);\r\n\r\n    const rightFrame = getFrameByIndex(numberFrames, rightNumber);\r\n    const leftFrame = getFrameByIndex(numberFrames, leftNumber);\r\n\r\n    renderFrame(leftNumberLeft, 0, leftFrame);\r\n    renderFrame(rightNumberLeft, 0, rightFrame);\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          String\r\n * Responsibility:  String utility functions\r\n */\r\n\r\n/**\r\n * pads a string on its left size until it is a given length\r\n * @param {string} value. Value to pad left.\r\n * @param {number} length. Length of the desired output.\r\n * @param {string} paddWidth. Character to pad width.\r\n */\r\nexport function padLeft(value: string, length: number, padWidth: string): string {\r\n\r\n    if (value.length >= length) {\r\n        return value;\r\n    } else {\r\n\r\n        const padLength = length - value.length;\r\n        let padding = \"\";\r\n\r\n        for (let i = 0; i < padLength; i++) {\r\n            padding += padWidth;\r\n        }\r\n\r\n        return padding + value;\r\n    }\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          SubscribeToStore\r\n * Responsibility:  Creates a Redux Store subscription that monitors state changes\r\n *                  that trigger a state action.\r\n */\r\n\r\nimport ILevel from \"../Interfaces/ILevel\";\r\nimport { addLifeAndPhaser } from \"../State/Game/GameActions\";\r\nimport { appState, appStore, dispatch } from \"../State/Store\";\r\nimport { levelFactory } from \"./LevelFactory\";\r\n\r\n// Used to track changes in level\r\nlet levelNumber: number;\r\n\r\n// Current level object.\r\nlet currentLevel: ILevel;\r\n\r\n// Used to track changes in score to award ships and phasers.\r\nlet currentScore = 0;\r\n\r\n/**\r\n * Lazy load a subscription to the redux store.\r\n */\r\nexport default function subscribeToStoreChanges(): void {\r\n\r\n    // We'll monitor changes in the state on which we ant to act.\r\n    appStore().subscribe(() => {\r\n        const { gameState } = appState();\r\n\r\n        // Handle level change acting on a change in level.\r\n        if (gameState.level !== undefined && levelNumber !== gameState.level) {\r\n            levelNumber = gameState.level;\r\n\r\n            if (currentLevel) {\r\n                currentLevel.dispose();\r\n            }\r\n\r\n            // Get new level\r\n            currentLevel = levelFactory(levelNumber);\r\n\r\n            if (currentLevel !== undefined) {\r\n                currentLevel.begin();\r\n            }\r\n        }\r\n\r\n        if (gameState.score - currentScore >= 7500) {\r\n            // Each 7500 points the player is given an extra life and phaser. This\r\n            // can be done in a single dispatch.\r\n            currentScore = gameState.score;\r\n            dispatch(addLifeAndPhaser());\r\n        }\r\n    });\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          LevelFactory\r\n * Responsibility:  Provide Level objects\r\n */\r\n\r\nimport ILevel from \"../Interfaces/ILevel\";\r\nimport { setWarpGamteComplexity } from \"../State/Game/GameActions\";\r\nimport { appState, dispatch } from \"../State/Store\";\r\nimport { AsteroidLevel } from \"./AsteroidLevel\";\r\nimport EnemyLevel from \"./EnemyLevel\";\r\nimport WarpLevel from \"./WarpLevel\";\r\n\r\n/**\r\n * LevelFactory. Provides level objects\r\n * @param {number} level. The desired level.\r\n * @returns {BaseEnemyLevel}. A level.\r\n */\r\nexport function levelFactory(level: number): ILevel {\r\n    switch (level) {\r\n        case 0:\r\n            // Test level\r\n            return new WarpLevel();\r\n        case 1:\r\n            return new EnemyLevel(\"bird\");\r\n        case 2:\r\n            return new EnemyLevel(\"robot\");\r\n        case 3:\r\n            return new EnemyLevel(\"orb\");\r\n        case 4:\r\n            dispatch(setWarpGamteComplexity(0));\r\n            return new WarpLevel();\r\n        case 5:\r\n            return new EnemyLevel(\"spinner\");\r\n        case 6:\r\n            return new EnemyLevel(\"balloon\");\r\n        case 7:\r\n            return new AsteroidLevel(\"asteroid-down\");\r\n        case 8:\r\n            dispatch(setWarpGamteComplexity(1));\r\n            return new WarpLevel();\r\n        default:\r\n            return new EnemyLevel(\"bird\");\r\n    }\r\n}\r\n\r\n/**\r\n * clearedEnemies.\r\n * @returns {boolean}. Returns true if all enemies (and particles) have been removed from the ApplicationState.\r\n */\r\n\r\nfunction time(): boolean {\r\n    return false;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport GameLoop from \"../GameLoop\";\r\nimport enemyFactory from \"../Providers/EnemyFactory\";\r\nimport EnemyLevelRunner from \"../Runners/EnemyLevelRunner\";\r\nimport { resetLevelState } from \"../State/EnemyLevel/EnemyLevelActions\";\r\nimport { appState, dispatch } from \"../State/Store\";\r\nimport handleLevelWon from \"../StateHandlers/HandleLevelWon\";\r\nimport { Enemies } from \"../Types\";\r\nimport EnemyLevel from \"./EnemyLevel\";\r\n\r\n/**\r\n * Module:          AsteroidLevel\r\n * Responsibility:  Level with asteroids\r\n */\r\n\r\nexport class AsteroidLevel extends EnemyLevel {\r\n\r\n    /**\r\n     * When true the time is up and the level is won.\r\n     */\r\n    private timeUp = false;\r\n\r\n    constructor(enemies: Enemies) {\r\n        super(enemies);\r\n    }\r\n\r\n    public begin(): void {\r\n\r\n        // Use the optional callback to register handleRespawn when the level is ready to begin.\r\n        super.begin(() => {\r\n            this.registerSubscription(GameLoop.registerUpdateState(() => this.handleRespawn()));\r\n\r\n            // After 20 seconds the player wins.\r\n            window.setTimeout(() => {\r\n                this.timeUp = true;\r\n            }, 20000);\r\n        });\r\n    }\r\n\r\n    public handleRespawn(): void {\r\n        const {\r\n            enemyLevelState: { enemies }\r\n        } = appState();\r\n\r\n        if (enemies.length < 8) {\r\n            const newEnemy = enemyFactory(\"asteroid-down\");\r\n            EnemyLevelRunner.addEnemy(newEnemy);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Override from EnemyLevel.\r\n     */\r\n    protected monitorLevelWonRun(): void {\r\n        const {\r\n            playerState: { alive }\r\n        } = appState();\r\n\r\n        // It is possible to skip these levels when you die and\r\n        // stop your formation, however, like the original game\r\n        // you have to complete your formation before the level\r\n        // will finish.\r\n        if (this.timeUp && alive) {\r\n            handleLevelWon();\r\n        }\r\n    }\r\n\r\n    public dispose(): void {\r\n        super.dispose();\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseEnemy from \"../../Base/BaseEnemy\";\r\nimport BaseFrameProvider from \"../../Base/BaseFrameProvider\";\r\nimport CGAColors from \"../../Constants/CGAColors\";\r\nimport ILocationProvider from \"../../Interfaces/ILocationProvider\";\r\nimport { ExplosionProviderFunction, OffsetFramesProviderFunction } from \"../../Types\";\r\nimport Mutators from \"../../Utility/FrameMutators\";\r\n\r\n/**\r\n * Module:          AsteroidEnemy\r\n * Responsibility:  An asteroid. A piece of rock really.\r\n */\r\n\r\nexport class AsteroidEnemy extends BaseEnemy {\r\n\r\n    private hitpoints = 4;\r\n\r\n    constructor(\r\n        frameChangeTime: number,\r\n        getOffsetFrames: OffsetFramesProviderFunction,\r\n        getExplosion: ExplosionProviderFunction,\r\n        locationProvider: ILocationProvider,\r\n        frameProvider: BaseFrameProvider) {\r\n        super(frameChangeTime,\r\n            getOffsetFrames,\r\n            getExplosion,\r\n            locationProvider,\r\n            frameProvider);\r\n\r\n        Mutators.Frame.setColor(this.explosion.explosionCenterFrame, CGAColors.lightRed);\r\n        this.explosion.particleFrames.forEach((pf) => Mutators.Frame.setColor(pf, CGAColors.lightRed));\r\n    }\r\n\r\n    public updateState(tick: number): void {\r\n        super.updateState(tick);\r\n\r\n        this.dispatchCurrentState();\r\n    }\r\n\r\n    public getPoints(): number {\r\n        return 300;\r\n    }\r\n\r\n    public getHitpoints(): number {\r\n        return this.hitpoints;\r\n    }\r\n\r\n    public recudeHitpoints(): void {\r\n        this.hitpoints--;\r\n        // A reduction in hitpoints shows the next frame. This makes it\r\n        // appear as if the asteroid is getting damaged.\r\n        this.frameProvider.getNextFrame();\r\n    }\r\n\r\n    /**\r\n     * Frame change handler.\r\n     */\r\n    protected onFrameChange(): void {\r\n\r\n        // The asteroid is an odd duck here. It doesn't change frames to be animated\r\n        // but to show damage to it.\r\n        // So, we return the current frame and change the frame when the astroid is hit.\r\n        const newFrame = this.frameProvider.getCurrentFrame();\r\n        Mutators.Frame.convertHexToCGA(newFrame);\r\n        this.currentFrame = newFrame;\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { OffsetFrames } from \"../../Models/OffsetFrames\";\r\nimport { getMaximumFrameDimensions } from \"../../Utility/Frame\";\r\n\r\n/**\r\n * Module:          GetAsteroidOffsetFrames\r\n * Responsibility:  Returns the requires\r\n */\r\n\r\nexport function getAsteroidOffsetFrames(): OffsetFrames {\r\n    const resource = {\r\n        frames: [\r\n            [\r\n                [\"0\", \"0\", \"6\", \"6\", \"0\", \"0\"],\r\n                [\"0\", \"6\", \"6\", \"6\", \"6\", \"0\"],\r\n                [\"6\", \"6\", \"6\", \"6\", \"6\", \"6\"],\r\n                [\"6\", \"6\", \"6\", \"6\", \"6\", \"6\"],\r\n                [\"0\", \"6\", \"6\", \"6\", \"6\", \"0\"],\r\n                [\"0\", \"0\", \"6\", \"6\", \"0\", \"0\"],\r\n            ],\r\n            [\r\n                [\"0\", \"0\", \"6\", \"6\", \"0\", \"0\"],\r\n                [\"0\", \"6\", \"6\", \"6\", \"6\", \"0\"],\r\n                [\"6\", \"6\", \"C\", \"C\", \"6\", \"6\"],\r\n                [\"6\", \"6\", \"C\", \"C\", \"6\", \"6\"],\r\n                [\"0\", \"6\", \"6\", \"6\", \"6\", \"0\"],\r\n                [\"0\", \"0\", \"6\", \"6\", \"0\", \"0\"],\r\n            ],\r\n            [\r\n                [\"0\", \"0\", \"6\", \"6\", \"0\", \"0\"],\r\n                [\"0\", \"6\", \"C\", \"C\", \"6\", \"0\"],\r\n                [\"6\", \"C\", \"C\", \"C\", \"C\", \"6\"],\r\n                [\"6\", \"C\", \"C\", \"C\", \"C\", \"6\"],\r\n                [\"0\", \"6\", \"C\", \"C\", \"6\", \"0\"],\r\n                [\"0\", \"0\", \"6\", \"6\", \"0\", \"0\"],\r\n            ], [\r\n                [\"0\", \"0\", \"C\", \"C\", \"0\", \"0\"],\r\n                [\"0\", \"C\", \"C\", \"C\", \"C\", \"0\"],\r\n                [\"C\", \"C\", \"C\", \"C\", \"C\", \"C\"],\r\n                [\"C\", \"C\", \"C\", \"C\", \"C\", \"C\"],\r\n                [\"0\", \"C\", \"C\", \"C\", \"C\", \"0\"],\r\n                [\"0\", \"0\", \"C\", \"C\", \"0\", \"0\"],\r\n            ]\r\n        ],\r\n        offSets: [],\r\n        maxSizes: { width: 0, height: 0 }\r\n    };\r\n\r\n    resource.maxSizes = getMaximumFrameDimensions(resource.frames);\r\n\r\n    return resource;\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseEnemy from \"../../Base/BaseEnemy\";\r\nimport BaseFrameProvider from \"../../Base/BaseFrameProvider\";\r\nimport CGAColors from \"../../Constants/CGAColors\";\r\nimport ILocationProvider from \"../../Interfaces/ILocationProvider\";\r\nimport { ExplosionProviderFunction, OffsetFramesProviderFunction } from \"../../Types\";\r\nimport Mutators from \"../../Utility/FrameMutators\";\r\n\r\n/**\r\n * Module:          BaloonEnemey\r\n * Responsibility:  Handles the Baloon enemeny first seen in level 2.\r\n */\r\n\r\nexport default class BalloonEnemy extends BaseEnemy {\r\n\r\n    constructor(\r\n        frameChangeTime: number,\r\n        getFrames: OffsetFramesProviderFunction,\r\n        getExplosion: ExplosionProviderFunction,\r\n        locationProvider: ILocationProvider,\r\n        frameProvider: BaseFrameProvider) {\r\n        super(\r\n            frameChangeTime,\r\n            getFrames,\r\n            getExplosion,\r\n            locationProvider,\r\n            frameProvider);\r\n\r\n        Mutators.Frame.convertHexToCGA(this.explosion.explosionCenterFrame);\r\n        this.explosion.particleFrames.forEach((pf) => Mutators.Frame.convertHexToCGA(pf));\r\n    }\r\n\r\n    /**\r\n     * Update the Spinner state.\r\n     * @param tick\r\n     */\r\n    public updateState(tick: number): void {\r\n        super.updateState(tick);\r\n        this.dispatchCurrentState();\r\n    }\r\n\r\n    /**\r\n     * Called when a frame change is required. The Spinner frames are all colored at initialisation so we can keep this simple.\r\n     */\r\n    protected onFrameChange(): void {\r\n        const nextFrame = this.frameProvider.getNextFrame();\r\n        Mutators.Frame.convertHexToCGA(nextFrame);\r\n        this.currentFrame = nextFrame;\r\n    }\r\n\r\n    /**\r\n     * Returns the points of the Spinner enemy.\r\n     * @returns {number}.\r\n     */\r\n    public getPoints(): number {\r\n        return 100;\r\n    }\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { OffsetFrames } from \"../../Models/OffsetFrames\";\r\nimport { getMaximumFrameDimensions } from \"../../Utility/Frame\";\r\n\r\n/**\r\n * Module:          GetBalloonOffsetFrames\r\n * Responsibility:  Define the offset frames of the Balloon enemy.\r\n */\r\n\r\nexport function getBalloonOffsetFrames(): OffsetFrames {\r\n    const resource = {\r\n        frames: [\r\n            [\r\n                [\"0\", \"E\", \"E\", \"E\", \"E\", \"0\"],\r\n                [\"A\", \"E\", \"E\", \"E\", \"E\", \"A\"],\r\n                [\"A\", \"E\", \"E\", \"E\", \"E\", \"A\"],\r\n                [\"0\", \"E\", \"E\", \"E\", \"E\", \"0\"],\r\n                [\"0\", \"0\", \"E\", \"E\", \"0\", \"0\"],\r\n            ],\r\n            [\r\n                [\"0\", \"E\", \"E\", \"E\", \"E\", \"0\"],\r\n                [\"A\", \"A\", \"E\", \"E\", \"E\", \"E\"],\r\n                [\"A\", \"A\", \"E\", \"E\", \"E\", \"E\"],\r\n                [\"0\", \"E\", \"E\", \"E\", \"E\", \"0\"],\r\n                [\"0\", \"0\", \"E\", \"E\", \"0\", \"0\"],\r\n            ],\r\n            [\r\n                [\"0\", \"E\", \"E\", \"E\", \"E\", \"0\"],\r\n                [\"E\", \"A\", \"A\", \"E\", \"E\", \"E\"],\r\n                [\"E\", \"A\", \"A\", \"E\", \"E\", \"E\"],\r\n                [\"0\", \"E\", \"E\", \"E\", \"E\", \"0\"],\r\n                [\"0\", \"0\", \"E\", \"E\", \"0\", \"0\"],\r\n            ],\r\n            [\r\n                [\"0\", \"E\", \"E\", \"E\", \"E\", \"0\"],\r\n                [\"E\", \"E\", \"A\", \"A\", \"E\", \"E\"],\r\n                [\"E\", \"E\", \"A\", \"A\", \"E\", \"E\"],\r\n                [\"0\", \"E\", \"E\", \"E\", \"E\", \"0\"],\r\n                [\"0\", \"0\", \"E\", \"E\", \"0\", \"0\"],\r\n            ],\r\n            [\r\n                [\"0\", \"E\", \"E\", \"E\", \"E\", \"0\"],\r\n                [\"E\", \"E\", \"E\", \"A\", \"A\", \"E\"],\r\n                [\"E\", \"E\", \"E\", \"A\", \"A\", \"E\"],\r\n                [\"0\", \"E\", \"E\", \"E\", \"E\", \"0\"],\r\n                [\"0\", \"0\", \"E\", \"E\", \"0\", \"0\"],\r\n            ],\r\n            [\r\n                [\"0\", \"E\", \"E\", \"E\", \"E\", \"0\"],\r\n                [\"E\", \"E\", \"E\", \"E\", \"A\", \"A\"],\r\n                [\"E\", \"E\", \"E\", \"E\", \"A\", \"A\"],\r\n                [\"0\", \"E\", \"E\", \"E\", \"E\", \"0\"],\r\n                [\"0\", \"0\", \"E\", \"E\", \"0\", \"0\"],\r\n            ],\r\n        ],\r\n        offSets: [],\r\n        maxSizes: { width: 0, height: 0 }\r\n    };\r\n\r\n    resource.maxSizes = getMaximumFrameDimensions(resource.frames);\r\n\r\n    return resource;\r\n}\r\n","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseEnemy from \"../../Base/BaseEnemy\";\r\nimport BaseFrameProvider from \"../../Base/BaseFrameProvider\";\r\nimport CGAColors from \"../../Constants/CGAColors\";\r\nimport TickHandler from \"../../Handlers/TickHandler\";\r\nimport ILocationProvider from \"../../Interfaces/ILocationProvider\";\r\nimport { ExplosionProviderFunction, Frame, OffsetFramesProviderFunction } from \"../../Types\";\r\nimport { getRandomArrayElement } from \"../../Utility/Array\";\r\nimport Mutators from \"../../Utility/FrameMutators\";\r\n\r\n/**\r\n * Module:          Bird enemy\r\n * Responsibility:  Defines the behaviour of the bird enemy first seen in level 1.\r\n */\r\n\r\nconst colors = [CGAColors.lightMagenta, CGAColors.yellow, CGAColors.lightCyan, CGAColors.lightRed];\r\n\r\nexport default class BirdEnemy extends BaseEnemy {\r\n\r\n    /**\r\n     * Hanels color changes.\r\n     */\r\n    private colorTickHandler: TickHandler;\r\n\r\n    /**\r\n     * Creates the object.\r\n     */\r\n    constructor(\r\n        frameChangeTime: number,\r\n        locationProvider: ILocationProvider,\r\n        frameProvider: BaseFrameProvider,\r\n        getExplosion: ExplosionProviderFunction,\r\n        getOffsetFrames: OffsetFramesProviderFunction) {\r\n        super(\r\n            frameChangeTime,\r\n            getOffsetFrames,\r\n            getExplosion,\r\n            locationProvider,\r\n            frameProvider);\r\n\r\n        this.colorTickHandler = new TickHandler(40, () => this.onColorChange());\r\n\r\n        Mutators.Frame.setColor(this.explosion.explosionCenterFrame, CGAColors.white);\r\n        Mutators.Frame.setColor(this.explosion.particleFrames[0], CGAColors.white);\r\n        Mutators.Frame.setColor(this.explosion.particleFrames[1], CGAColors.white);\r\n    }\r\n\r\n    /**\r\n     * Updates the objects state.\r\n     * @param {tick: number} tick. Current tick.\r\n     */\r\n    public updateState(tick: number): void {\r\n        super.updateState(tick);\r\n\r\n        this.colorTickHandler.tick(tick);\r\n        this.dispatchCurrentState();\r\n    }\r\n\r\n    /**\r\n     * Returns the points for the bird.\r\n     * @returns {number}. Points rewarded when the BirdEnemy is destroyed.\r\n     */\r\n    public getPoints(): number {\r\n        return 200;\r\n    }\r\n\r\n    /**\r\n     * Called by a TickHandler when the bird should change color.\r\n     */\r\n    private onColorChange(): void {\r\n        const currentFrame = this.frameProvider.getCurrentFrame();\r\n        this.setCurrentFrameColor(currentFrame);\r\n    }\r\n\r\n    /**\r\n     * Sets the current's frame color\r\n     * @param {Frame} frame. Frame to set the color on.\r\n     */\r\n    private setCurrentFrameColor(frame: Frame) {\r\n        Mutators.Frame.setColor(frame, getRandomArrayElement(colors));\r\n        this.currentFrame = frame;\r\n    }\r\n\r\n    /**\r\n     * Changes the frame of the OrbEnemy. Also ensures the new frame is given colors.\r\n     */\r\n    protected onFrameChange(): void {\r\n        const nextFrame = this.frameProvider.getNextFrame();\r\n        this.setCurrentFrameColor(nextFrame);\r\n    }\r\n}","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { OffsetFrames } from \"../../Models/OffsetFrames\";\r\nimport { getMaximumFrameDimensions } from \"../../Utility/Frame\";\r\n\r\n/**\r\n * Module:          GetBirdOffsetFrames\r\n * Responsibility:  Define animation frames for the bird enemy.\r\n */\r\n\r\nexport default function getBirdOffsetFrames(): OffsetFrames {\r\n    const resource: OffsetFrames = {\r\n        frames: [\r\n            [\r\n                [\"0\", \"V\", \"0\", \"V\", \"0\"],\r\n                [\"V\", \"0\", \"V\", \"0\", \"V\"],\r\n                [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n            ],\r\n            [\r\n                [\"0\", \"V\", \"V\", \"0\", \"V\", \"V\", \"0\"],\r\n                [\"V\", \"0\", \"0\", \"V\", \"0\", \"0\", \"V\"],\r\n                [\"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\"],\r\n            ],\r\n            [\r\n                [\"V\", \"V\", \"V\", \"0\", \"V\", \"V\", \"V\"],\r\n                [\"0\", \"0\", \"0\", \"V\", \"0\", \"0\", \"0\"],\r\n            ],\r\n            [\r\n                [\"V\", \"0\", \"0\", \"0\", \"0\", \"0\", \"V\"],\r\n                [\"0\", \"V\", \"V\", \"0\", \"V\", \"V\", \"0\"],\r\n                [\"0\", \"0\", \"0\", \"V\", \"0\", \"0\", \"0\"],\r\n            ],\r\n        ],\r\n        offSets: [\r\n            {\r\n                top: 1,\r\n                left: 1,\r\n            },\r\n            {\r\n                top: 1,\r\n                left: 0,\r\n            },\r\n            {\r\n                top: 1,\r\n                left: 0,\r\n            },\r\n            {\r\n                top: 0,\r\n                left: 0,\r\n            }\r\n        ],\r\n        maxSizes: { width: 0, height: 0 }\r\n    };\r\n\r\n    resource.maxSizes = getMaximumFrameDimensions(resource.frames);\r\n\r\n    return resource;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseEnemy from \"../../Base/BaseEnemy\";\r\nimport BaseFrameProvider from \"../../Base/BaseFrameProvider\";\r\nimport CGAColors from \"../../Constants/CGAColors\";\r\nimport { Locations } from \"../../Constants/Constants\";\r\nimport TickHandler from \"../../Handlers/TickHandler\";\r\nimport ILocationProvider from \"../../Interfaces/ILocationProvider\";\r\nimport dimensionProvider from \"../../Providers/DimensionProvider\";\r\nimport { ExplosionProviderFunction, Frame, OffsetFramesProviderFunction } from \"../../Types\";\r\nimport { getFrameDimensions } from \"../../Utility/Frame\";\r\nimport Mutators from \"../../Utility/FrameMutators\";\r\n\r\n/**\r\n * Module:          OrbEnemy\r\n * Responsibility:  Define behaviour of the orb enemy.\r\n */\r\nconst colors: string[][] = [\r\n    [CGAColors.lightGreen, CGAColors.lightBlue],\r\n    [CGAColors.brown, CGAColors.lightGreen],\r\n    [CGAColors.lightBlue, CGAColors.white],\r\n    [CGAColors.white, CGAColors.brown],\r\n];\r\n\r\nconst {\r\n    gameField\r\n} = dimensionProvider();\r\n\r\nexport default class OrbEnemy extends BaseEnemy {\r\n    /**\r\n     * Handles the color change ticks.\r\n     */\r\n    private colorTickHandler: TickHandler;\r\n\r\n    /**\r\n     * Tracks the current color index.\r\n     */\r\n    private currentColorIndex = 0;\r\n\r\n    /**\r\n     * Construct the enemy.\r\n     */\r\n    constructor(\r\n        frameChangeTime: number,\r\n        locationProvider: ILocationProvider,\r\n        frameProvider: BaseFrameProvider,\r\n        getExplosion: ExplosionProviderFunction,\r\n        getFrames: OffsetFramesProviderFunction) {\r\n        super(frameChangeTime, getFrames, getExplosion, locationProvider, frameProvider);\r\n\r\n        // We only have one frame in this enemy but its color DOES change. Set the currentFrame to the only available one\r\n        // and sets its color to the first color set so we get a a good render when the enemy first appears.\r\n        this.updateCurrentFrameAndColor(this.frameProvider.getCurrentFrame());\r\n\r\n        Mutators.Frame.setColor(this.explosion.explosionCenterFrame, CGAColors.magenta);\r\n        Mutators.Frames.setColor(this.explosion.particleFrames, CGAColors.magenta);\r\n\r\n        this.colorTickHandler = new TickHandler(100, () => this.onColorChange());\r\n    }\r\n\r\n    /**\r\n     * Called by a TickHandler when the bird should change color.\r\n     */\r\n    private onColorChange(): void {\r\n        this.currentColorIndex++;\r\n        if (this.currentColorIndex >= colors.length) {\r\n            this.currentColorIndex = 0;\r\n        }\r\n\r\n        this.updateCurrentFrameAndColor(this.frameProvider.getCurrentFrame());\r\n    }\r\n\r\n    /**\r\n     * Sets the current frame and its color.\r\n     * @param {Frame} frame. A frame.\r\n     */\r\n    private updateCurrentFrameAndColor(frame: Frame): void {\r\n        const currentColor = colors[this.currentColorIndex];\r\n        if (currentColor === undefined) {\r\n            throw new Error(\"Color cannot be undefined.\");\r\n        }\r\n\r\n        Mutators.Frame.setColor(frame, ...currentColor);\r\n        this.currentFrame = frame;\r\n    }\r\n\r\n    /**\r\n     * Changes the frame of the OrbEnemy. Also ensures the new frame is given colors.\r\n     */\r\n    protected onFrameChange(): void {\r\n        const frame = this.frameProvider.getNextFrame();\r\n        this.updateCurrentFrameAndColor(frame);\r\n    }\r\n\r\n    /**\r\n     * Updates the objects state.\r\n     * @param {tick: number} tick. Current tick.\r\n     */\r\n    public updateState(tick: number): void {\r\n        super.updateState(tick);\r\n\r\n        this.colorTickHandler.tick(tick);\r\n\r\n        if (this.currentFrame) {\r\n            const { height } = getFrameDimensions(this.currentFrame);\r\n            const { top } = this.locationProvider.getCurrentLocation();\r\n            const offset = top - this.offsetTop;\r\n\r\n            if (this.offsetTop < gameField.top) {\r\n                this.offsetTop = Locations.Enemies.Orb.maxBottom - offset;\r\n            } else if (this.offsetTop + height > Locations.Enemies.Orb.maxBottom) {\r\n                this.offsetTop = gameField.top + offset;\r\n            }\r\n        }\r\n\r\n        this.dispatchCurrentState();\r\n    }\r\n\r\n    /**\r\n     * Returns the points of this enemy.\r\n     * @returns {number}. The points.\r\n     */\r\n    public getPoints(): number {\r\n        return 200;\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseEnemy from \"../../Base/BaseEnemy\";\r\nimport BaseFrameProvider from \"../../Base/BaseFrameProvider\";\r\nimport CGAColors from \"../../Constants/CGAColors\";\r\nimport ILocationProvider from \"../../Interfaces/ILocationProvider\";\r\nimport { ExplosionProviderFunction, OffsetFramesProviderFunction } from \"../../Types\";\r\nimport { getRandomArrayElement } from \"../../Utility/Array\";\r\nimport Mutators from \"../../Utility/FrameMutators\";\r\n\r\n/**\r\n * Module:          RobotEnemey\r\n * Responsibility:  Handles the Robot enemeny first seen in level 2.\r\n */\r\n\r\nconst colors = [\r\n    CGAColors.lightBlue,\r\n    CGAColors.lightCyan,\r\n    CGAColors.lightRed,\r\n    CGAColors.lightGreen,\r\n    CGAColors.lightBlue,\r\n    CGAColors.lightMagenta,\r\n    CGAColors.lightCyan,\r\n];\r\n\r\nexport default class RobotEnemy extends BaseEnemy {\r\n    private color: string;\r\n\r\n    constructor(\r\n        frameChangeTime: number,\r\n        locationProvider: ILocationProvider,\r\n        frameProvider: BaseFrameProvider,\r\n        getExplosion: ExplosionProviderFunction,\r\n        getFrames: OffsetFramesProviderFunction) {\r\n        super(\r\n            frameChangeTime,\r\n            getFrames,\r\n            getExplosion,\r\n            locationProvider,\r\n            frameProvider);\r\n\r\n        this.color = getRandomArrayElement(colors);\r\n\r\n        Mutators.Frame.setColor(this.explosion.explosionCenterFrame, this.color);\r\n        Mutators.Frame.setColor(this.explosion.particleFrames[0], this.color);\r\n    }\r\n\r\n    /**\r\n     * Update the robot state.\r\n     * @param tick\r\n     */\r\n    public updateState(tick: number): void {\r\n        super.updateState(tick);\r\n\r\n        this.dispatchCurrentState();\r\n    }\r\n\r\n    /**\r\n     * Called when a frame change is required. The robot frames are all colored at initialisation so we can keep this simple.\r\n     */\r\n    protected onFrameChange(): void {\r\n        const nextFrame = this.frameProvider.getNextFrame();\r\n        Mutators.Frame.setColor(nextFrame, this.color);\r\n        this.currentFrame = nextFrame;\r\n    }\r\n\r\n    /**\r\n     * Returns the points of the robot enemy.\r\n     * @returns {number}.\r\n     */\r\n    public getPoints(): number {\r\n        return 100;\r\n    }\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { OffsetFrames } from \"../../Models/OffsetFrames\";\r\nimport { getMaximumFrameDimensions } from \"../../Utility/Frame\";\r\n\r\n/**\r\n * Module:          GetSpinnerOffsetFrames\r\n * Responsibility:  Define the frames of the spinner enemy.\r\n */\r\n\r\nexport function getSpinnerOffsetFrames(): OffsetFrames {\r\n    const resource = {\r\n        frames: [\r\n            [\r\n                [\"0\", \"A\", \"0\"],\r\n                [\"0\", \"C\", \"0\"],\r\n                [\"0\", \"A\", \"0\"],\r\n            ],\r\n            [\r\n                [\"0\", \"0\", \"A\"],\r\n                [\"0\", \"C\", \"0\"],\r\n                [\"A\", \"0\", \"0\"],\r\n            ],\r\n            [\r\n                [\"0\", \"0\", \"0\"],\r\n                [\"A\", \"C\", \"A\"],\r\n                [\"0\", \"0\", \"0\"],\r\n            ],\r\n            [\r\n                [\"A\", \"0\", \"0\"],\r\n                [\"0\", \"C\", \"0\"],\r\n                [\"0\", \"0\", \"A\"],\r\n            ]\r\n        ],\r\n        offSets: [],\r\n        maxSizes: { width: 0, height: 0}\r\n    };\r\n\r\n    resource.maxSizes = getMaximumFrameDimensions(resource.frames);\r\n\r\n    return resource;\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseEnemy from \"../../Base/BaseEnemy\";\r\nimport BaseFrameProvider from \"../../Base/BaseFrameProvider\";\r\nimport CGAColors from \"../../Constants/CGAColors\";\r\nimport ILocationProvider from \"../../Interfaces/ILocationProvider\";\r\nimport { ExplosionProviderFunction, OffsetFramesProviderFunction } from \"../../Types\";\r\nimport Mutators from \"../../Utility/FrameMutators\";\r\n\r\n/**\r\n * Module:          SpinnerEnemey\r\n * Responsibility:  Handles the Spinner enemeny first seen in level 2.\r\n */\r\n\r\nexport default class SpinnerEnemy extends BaseEnemy {\r\n\r\n    constructor(\r\n        frameChangeTime: number,\r\n        locationProvider: ILocationProvider,\r\n        frameProvider: BaseFrameProvider,\r\n        getExplosion: ExplosionProviderFunction,\r\n        getFrames: OffsetFramesProviderFunction) {\r\n        super(\r\n            frameChangeTime,\r\n            getFrames,\r\n            getExplosion,\r\n            locationProvider,\r\n            frameProvider);\r\n\r\n        Mutators.Frame.setColor(this.explosion.explosionCenterFrame, CGAColors.white);\r\n        Mutators.Frame.setColor(this.explosion.particleFrames[0], CGAColors.white);\r\n        Mutators.Frame.setColor(this.explosion.particleFrames[1], CGAColors.white);\r\n    }\r\n\r\n    /**\r\n     * Update the Spinner state.\r\n     * @param tick\r\n     */\r\n    public updateState(tick: number): void {\r\n        super.updateState(tick);\r\n        this.dispatchCurrentState();\r\n    }\r\n\r\n    /**\r\n     * Called when a frame change is required. The Spinner frames are all colored at initialisation so we can keep this simple.\r\n     */\r\n    protected onFrameChange(): void {\r\n        const nextFrame = this.frameProvider.getNextFrame();\r\n        Mutators.Frame.convertHexToCGA(nextFrame);\r\n        this.currentFrame = nextFrame;\r\n    }\r\n\r\n    /**\r\n     * Returns the points of the Spinner enemy.\r\n     * @returns {number}.\r\n     */\r\n    public getPoints(): number {\r\n        return 100;\r\n    }\r\n}\r\n","\r\n/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport Explosion from \"../Models/Explosion\";\r\nimport Mutators from \"../Utility/FrameMutators\";\r\n\r\n/**\r\n * Module:          Explosion01.\r\n */\r\n\r\nexport default function getExplosion01(centerColor?: string, shrapnellColor?: string): Explosion {\r\n    const explosion01: Explosion = {\r\n        explosionCenterFrame: [\r\n            [\"V\", \"0\", \"V\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"0\", \"V\", \"0\", \"V\"],\r\n        ],\r\n        particleFrames: [\r\n            [\r\n                [\"V\"],\r\n            ],\r\n            [\r\n                [\"V\", \"V\"]\r\n            ],\r\n        ],\r\n        angles: [160, 180, 200, 340, 0, 20],\r\n        particleFrameIndexes: [0, 1, 0, 0, 1, 0],\r\n        speed: 17,\r\n        acceleration: 1.05,\r\n        explosionCenterDelay: 30,\r\n        speeds: [], // not used, all particles travel at the same speed\r\n        useSpeed: true,\r\n    };\r\n\r\n    if (centerColor) {\r\n        Mutators.Frame.setColor(explosion01.explosionCenterFrame, centerColor);\r\n    }\r\n\r\n    if (shrapnellColor) {\r\n        Mutators.Frames.setColor(explosion01.particleFrames, shrapnellColor);\r\n    }\r\n\r\n    return explosion01;\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport Explosion from \"../Models/Explosion\";\r\n\r\n/**\r\n * Module:          Explosion02\r\n */\r\n\r\nexport function getExplosion02(): Explosion {\r\n    const Explosion02: Explosion = {\r\n        explosionCenterFrame: [\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"0\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"0\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n        ],\r\n        particleFrames: [\r\n            [\r\n                [\"V\", \"V\"]\r\n            ],\r\n        ],\r\n        angles: [160, 180, 200, 340, 0, 20],\r\n        particleFrameIndexes: [0, 0, 0, 0, 0, 0],\r\n        speed: 12,\r\n        acceleration: 1.05,\r\n        explosionCenterDelay: 20,\r\n        speeds: [], // not used, all particles travel at the same speed\r\n        useSpeed: true,\r\n    };\r\n\r\n    return Explosion02;\r\n}","\r\n/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport Explosion from \"../Models/Explosion\";\r\nimport Mutators from \"../Utility/FrameMutators\";\r\n\r\n/**\r\n * Module:          Explosion03.\r\n */\r\n\r\nexport default function getExplosion03(): Explosion {\r\n    const explosion01: Explosion = {\r\n        explosionCenterFrame: [\r\n            [\"E\", \"A\", \"A\", \"E\"],\r\n            [\"E\", \"E\", \"E\", \"E\"],\r\n            [\"E\", \"A\", \"A\", \"E\"],\r\n        ],\r\n        particleFrames: [\r\n            [\r\n                [\"E\", \"A\"],\r\n            ],\r\n            [\r\n                [\"E\", \"E\"]\r\n            ],\r\n            [\r\n                [\"A\", \"E\"],\r\n            ],\r\n        ],\r\n        angles: [160, 180, 200, 340, 0, 20],\r\n        particleFrameIndexes: [0, 1, 0, 2, 1, 2],\r\n        speed: 17,\r\n        acceleration: 1.05,\r\n        explosionCenterDelay: 50,\r\n        speeds: [], // not used, all particles travel at the same speed\r\n        useSpeed: true,\r\n    };\r\n\r\n    return explosion01;\r\n}\r\n","\r\n/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport Explosion from \"../Models/Explosion\";\r\n\r\n/**\r\n * Module:          Explosion03.\r\n */\r\n\r\nexport default function getExplosion04(): Explosion {\r\n    const explosion01: Explosion = {\r\n        explosionCenterFrame: [\r\n            [\"V\", \"V\", \"0\", \"V\", \"V\"],\r\n            [\"V\", \"V\", \"0\", \"V\", \"V\"],\r\n        ],\r\n        particleFrames: [\r\n            [\r\n                [\"V\", \"V\"],\r\n            ]\r\n        ],\r\n        angles: [160, 150, 20, 30],\r\n        particleFrameIndexes: [0, 0, 0, 0],\r\n        speed: 25,\r\n        acceleration: 1.00,\r\n        explosionCenterDelay: 10,\r\n        speeds: [], // not used, all particles travel at the same speed\r\n        useSpeed: true,\r\n    };\r\n\r\n    return explosion01;\r\n}\r\n","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport IFrameProvider from \"../../Base/BaseFrameProvider\";\r\nimport { Frame } from \"../../Types\";\r\n\r\n/**\r\n * Module:          FrameProvider\r\n * Responsibility:  Provide frames for animations.\r\n */\r\n\r\nexport default class BackAndForthFrameProvider extends IFrameProvider {\r\n\r\n    /**\r\n     * Returns the current frame and sets the next one. Goes back and forth between frames.\r\n     * @returns {Frame}. A frame.\r\n     */\r\n    public getNextFrame(): Frame {\r\n        this.frameIndex += this.add;\r\n\r\n        if (this.frameIndex > this.maxIndex) {\r\n            this.frameIndex = this.maxIndex;\r\n        }\r\n\r\n        if ((this.frameIndex === this.maxIndex) || this.frameIndex === 0) {\r\n            this.add *= -1;\r\n        }\r\n\r\n        return  this.getCurrentFrame();\r\n    }\r\n}","/**\r\n * @preserve Copyright 2010-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseFrameProvider from \"../../Base/BaseFrameProvider\";\r\nimport { Frame } from \"../../Types\";\r\n\r\n/**\r\n * Module:          FrameProvider\r\n * Responsibility:  Provide frames for animations.\r\n */\r\n\r\nexport default class CircleFrameProvider extends BaseFrameProvider {\r\n\r\n    /**\r\n     * Returns the next frame using clockwise rotation.\r\n     */\r\n    public getNextFrame(): Frame {\r\n        this.frameIndex += 1;\r\n\r\n        if (this.frameIndex > this.maxIndex) {\r\n            this.frameIndex = 0;\r\n        }\r\n\r\n        return this.getCurrentFrame();\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport ILocationProvider from \"../../Interfaces/ILocationProvider\";\r\nimport { GameLocation } from \"../../Models/GameLocation\";\r\nimport { Angle } from \"../../Types\";\r\nimport { getRandomArrayElement } from \"../../Utility/Array\";\r\nimport { randomNumberInRange } from \"../../Utility/Lib\";\r\nimport { getLocation } from \"../../Utility/Location\";\r\nimport dimensionProvider from \"../DimensionProvider\";\r\n\r\n/**\r\n * Module:          AsteroidLocationProvider\r\n * Responsibility:  Provides movement for asteroids.\r\n */\r\n\r\nconst {\r\n    gameField\r\n} = dimensionProvider();\r\n\r\nexport class AsteroidLocationProvider implements ILocationProvider {\r\n    private width: number;\r\n    private height: number;\r\n    private angles: any[];\r\n    private top: number;\r\n    private left: number;\r\n    private angle: Angle;\r\n    private speeds: number[];\r\n    private speed: number;\r\n    private maxBottom: number;\r\n    private startTop: number;\r\n\r\n    constructor(width: number, height: number, angles: Angle[], speeds: number[]) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.angles = angles;\r\n        this.speeds = speeds;\r\n\r\n        const doubleHeight =  this.height * 2;\r\n        this.top = gameField.top - doubleHeight;\r\n        this.left = this.getRandomLeft();\r\n        this.angle = getRandomArrayElement(angles);\r\n        this.speed =  getRandomArrayElement(speeds);\r\n\r\n        this.maxBottom = gameField.bottom + doubleHeight;\r\n        this.startTop = gameField.top - doubleHeight;\r\n    }\r\n\r\n    public getCurrentLocation(): GameLocation {\r\n        return {\r\n            left: this.left,\r\n            top: this.top,\r\n        };\r\n    }\r\n\r\n    public updateState(tick: number): void {\r\n        const nextLocation = getLocation(this.left, this.top, this.angle, this.speed);\r\n\r\n        this.left = nextLocation.left;\r\n        this.top = nextLocation.top;\r\n\r\n        if (this.top > this.maxBottom) {\r\n            // Reduce top by 2x height for a nice and smooth reapperance of the asteroid\r\n            this.top = this.startTop;\r\n            this.left = this.getRandomLeft();\r\n            this.angle = getRandomArrayElement(this.angles);\r\n            this.speed = getRandomArrayElement(this.speeds);\r\n        }\r\n    }\r\n\r\n    public increaseSpeed(factor: number): void {\r\n        // Does nothing.\r\n    }\r\n\r\n    private getRandomLeft(): number {\r\n        return randomNumberInRange(gameField.right - this.width, this.width);\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseLocationProvider from \"../../Base/BaseLocationProvider\";\r\nimport ILocationProvider from \"../../Interfaces/ILocationProvider\";\r\nimport { GameLocation } from \"../../Models/GameLocation\";\r\nimport { getLocation } from \"../../Utility/Location\";\r\n\r\n/**\r\n * Module:          MoveDownAppearUp\r\n * Responsibility:  A location provider where the enemy moves down to a certain point and then reappears at the top of the screen.\r\n *                  Enemies will bounce from up to down a few times just like the original game.\r\n */\r\n\r\nexport default class MoveDownAppearUpLocationProvider extends BaseLocationProvider {\r\n    private maxTop: number;\r\n    private maxBottom: number;\r\n\r\n    /**\r\n     * Constructs the immobile location provider.\r\n     */\r\n    constructor(left: number, top: number, speed: number, angle: number, width: number, height: number, maxTop: number, maxBottom: number) {\r\n        super(left, top, speed, angle, width, height);\r\n\r\n        this.maxTop = 0;\r\n        this.maxBottom = maxBottom;\r\n    }\r\n\r\n    /**\r\n     * Returns the given location.\r\n     */\r\n    public getCurrentLocation(): GameLocation {\r\n\r\n        if (this.top + this.height > this.maxBottom) {\r\n            this.top = this.maxTop;\r\n        }\r\n\r\n        return getLocation(this.left, this.top, this.angle, this.speed);\r\n    }\r\n\r\n    public updateState(tick: number): void {\r\n        const { left, top } = getLocation(this.left, this.top, this.angle, this.speed);\r\n        this.left = left;\r\n        this.top = top;\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseLocationProvider from \"../../Base/BaseLocationProvider\";\r\nimport ILocationProvider from \"../../Interfaces/ILocationProvider\";\r\nimport { getLocation } from \"../../Utility/Location\";\r\nimport dimensionProvider from \"../DimensionProvider\";\r\n\r\n/**\r\n * Module:          SideToSideUpAndDown\r\n * Responsibility:  Location provider for enemies that move from left to right and up then down.\r\n */\r\n\r\nconst {\r\n    gameField,\r\n} = dimensionProvider();\r\n\r\nexport default class SideToSideUpAndDownLocationProvider extends BaseLocationProvider implements ILocationProvider {\r\n    private bottomLimit: number;\r\n    private topLimit: number;\r\n\r\n    constructor(left: number, top: number, speed: number, angle: number, width: number, height: number, topLimit: number, bottomLimit: number) {\r\n        super(left, top, speed, angle, width, height);\r\n\r\n        this.topLimit = topLimit;\r\n        this.bottomLimit = bottomLimit;\r\n    }\r\n\r\n    public updateState(tick: number): void {\r\n        const newLocation = getLocation(this.left, this.top, this.angle, this.speed);\r\n\r\n        if (newLocation.left <= gameField.left || newLocation.left + this.width >= gameField.right) {\r\n            this.angle = 180 - this.angle;\r\n        }\r\n\r\n        if (newLocation.top <= this.topLimit || newLocation.top >= this.bottomLimit - this.height) {\r\n            this.angle *= -1;\r\n        }\r\n\r\n        // Grab in a fresh location in case the angle was changed.\r\n        const { left, top } = getLocation(this.left, this.top, this.angle, this.speed);\r\n\r\n        this.left = left;\r\n        this.top = top;\r\n    }\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseLocationProvider from \"../../Base/BaseLocationProvider\";\r\nimport ILocationProvider from \"../../Interfaces/ILocationProvider\";\r\nimport { getLocation } from \"../../Utility/Location\";\r\nimport dimensionProvider from \"../DimensionProvider\";\r\n\r\n/**\r\n * Module:          Left to right, then left.\r\n * Responsibility:  Location provider for enemies that move from left to right and up then down.\r\n */\r\n\r\nconst {\r\n    gameField\r\n} = dimensionProvider();\r\n\r\nexport default class VanishRightAppearLeftLocationProvider extends BaseLocationProvider implements ILocationProvider {\r\n    private maxTop: number;\r\n    private maxBottom: number;\r\n\r\n    /**\r\n     *\r\n     */\r\n    constructor(left: number, top: number, speed: number, angle: number, width: number, height: number, maxTop: number, maxBottom: number) {\r\n        super(left, top, speed, angle, width, height);\r\n\r\n        this.maxTop = maxTop,\r\n        this.maxBottom = maxBottom;\r\n    }\r\n\r\n    public updateState(tick: number): void {\r\n        let { left, top } = getLocation(this.left, this.top, this.angle, this.speed);\r\n\r\n        if (left - this.width > gameField.right) {\r\n            left = gameField.left - this.width;\r\n        }\r\n\r\n        if (top > this.maxBottom) {\r\n           top = this.maxTop;\r\n        }\r\n\r\n        this.left = left;\r\n        this.top = top;\r\n    }\r\n}\r\n","import BaseLocationProvider from \"../../Base/BaseLocationProvider\";\r\nimport { getAngles } from \"../../Constants/Angles\";\r\nimport { getRandomArrayElement } from \"../../Utility/Array\";\r\nimport { getLocation } from \"../../Utility/Location\";\r\nimport dimensionProvider from \"../DimensionProvider\";\r\n\r\nconst {\r\n    gameField\r\n} = dimensionProvider();\r\n\r\nexport default class Wobble extends BaseLocationProvider {\r\n\r\n    private angleSwitchTimeout: number;\r\n\r\n    private lastTick: number = 0;\r\n    private angles: number[];\r\n\r\n    constructor(left: number, top: number, speed: number, angle: number, width: number, height: number, angleSwitchTimeout: number) {\r\n        super(left, top, speed, angle, width, height);\r\n\r\n        this.angleSwitchTimeout = angleSwitchTimeout;\r\n\r\n        this.angles = getAngles();\r\n    }\r\n\r\n    public updateState(tick: number): void {\r\n\r\n        if (tick > this.angleSwitchTimeout + this.lastTick) {\r\n            this.angle = getRandomArrayElement(this.angles);\r\n            this.lastTick = tick;\r\n        }\r\n\r\n        const newLocation = getLocation(this.left, this.top, this.angle, this.speed);\r\n\r\n        if (newLocation.left <= gameField.left || newLocation.left + this.width >= gameField.right) {\r\n            this.angle = 180 - this.angle;\r\n        }\r\n\r\n        if (newLocation.top <= gameField.top || newLocation.top >= gameField.bottom - this.height) {\r\n            this.angle *= -1;\r\n        }\r\n\r\n        const nextLocation = getLocation(this.left, this.top, this.angle, this.speed);\r\n        this.left = nextLocation.left;\r\n        this.top = nextLocation.top;\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport speedProvider from \"../Providers/SpeedProvider\";\r\nimport { calculateAngle } from \"../Utility/Geometry\";\r\nimport { calculateDistance, getLocation } from \"../Utility/Location\";\r\n\r\n/**\r\n * Module:          GetPhaserFrames\r\n * Responsibility:  Calculate the game locations to draw a phaser beam.\r\n */\r\n\r\nconst {\r\n    pixelSize\r\n} = dimensionProvider();\r\n\r\nexport default function getPhaserLocations(sourceLeft: number, sourceTop: number, targetLeft: number, targetTop: number): Array<{left: number, top: number}> {\r\n\r\n    // offset left by one game pixel to ensure the phaser appears at the nozzle of the ship.\r\n    const angle = calculateAngle(sourceLeft, sourceTop, targetLeft, targetTop);\r\n    let distance = calculateDistance(sourceLeft, sourceTop, targetLeft, targetTop);\r\n\r\n    let left = sourceLeft;\r\n    let top = sourceTop;\r\n\r\n    const returnValue: Array<{left: number, top: number}> = [];\r\n\r\n    while (distance >= 0) {\r\n        returnValue.push(getLocation(left, top, angle, pixelSize));\r\n        distance -= speedProvider(pixelSize);\r\n        const nextLocation = getLocation(left, top, angle, pixelSize);\r\n        left = nextLocation.left;\r\n        top = nextLocation.top;\r\n    }\r\n\r\n    return returnValue;\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { GameRectangle } from \"../Models/GameRectangle\";\r\nimport { PlayerHitboxes } from \"../State/Player/PlayerState\";\r\nimport { overlaps } from \"../Utility/Geometry\";\r\n\r\n/**\r\n * Module:          PlayerHelper\r\n * Responsibility:  Helper functions to aid with player related logic.\r\n */\r\n\r\n/**\r\n * Determines if one of the player's hitboxes overlaps with the provided hitbox.\r\n * @export\r\n * @param {PlayerHitboxes} playerHitboxes. The player's hitboxes.\r\n * @param {GameRectangle} hitbox. Another hitbox.\r\n * @returns {boolean}. True if there's overlap. False other or if any of the hitboxes is undefined.\r\n */\r\nexport function playerIsHit(playerHitboxes: PlayerHitboxes | undefined, hitbox: GameRectangle | undefined): boolean {\r\n    if (playerHitboxes === undefined) {\r\n        return false;\r\n    }\r\n\r\n    if (hitbox === undefined) {\r\n        return false;\r\n    }\r\n\r\n    const hitMiddle = overlaps(playerHitboxes.middle, hitbox);\r\n    const hitBottom = overlaps(playerHitboxes.bottom, hitbox);\r\n\r\n    return hitMiddle || hitBottom;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { Frame } from \"../Types\";\r\nimport Mutators from \"../Utility/FrameMutators\";\r\n\r\n/**\r\n * Module:          Characters\r\n * Responsibility:  Define character frames. A to Z with some other characters\r\n *                  All these are all frames which can be rendered directly.\r\n *                  on screen using the renderFrame function.\r\n *                  Their colors are \"V\". Meaning \"Variant\" so they\r\n *                  can be set with a single function call.\r\n */\r\n\r\nexport default function getCharacters(color: string): Frame[] {\r\n    const Characters: Frame[] = [\r\n        [\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n        ],\r\n        [\r\n            [\"0\", \"V\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"0\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"V\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\"],\r\n            [\"0\", \"V\", \"0\"],\r\n            [\"0\", \"V\", \"0\"],\r\n            [\"0\", \"V\", \"0\"],\r\n            [\"V\", \"V\", \"V\"],\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"0\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"V\", \"0\"],\r\n            [\"V\", \"V\", \"0\", \"0\"],\r\n            [\"V\", \"0\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"0\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"V\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n        ],\r\n        [\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n        ],\r\n        [\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"V\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"V\"],\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n        ],\r\n        [\r\n            [\"0\", \"V\", \"V\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n            [\"0\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\", \"V\", \"V\"],\r\n            [\"0\", \"0\", \"V\", \"0\", \"0\"],\r\n            [\"0\", \"0\", \"V\", \"0\", \"0\"],\r\n            [\"0\", \"0\", \"V\", \"0\", \"0\"],\r\n            [\"0\", \"0\", \"V\", \"0\", \"0\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"0\", \"V\", \"0\"],\r\n            [\"0\", \"V\", \"0\", \"V\", \"0\"],\r\n            [\"0\", \"0\", \"V\", \"0\", \"0\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n            [\"V\", \"0\", \"V\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"V\", \"V\", \"0\"],\r\n            [\"0\", \"V\", \"0\", \"V\", \"0\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"0\", \"V\", \"0\"],\r\n            [\"0\", \"0\", \"V\", \"0\", \"0\"],\r\n            [\"0\", \"V\", \"0\", \"V\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n        ],\r\n        [\r\n            [\"V\", \"0\", \"0\", \"0\", \"V\"],\r\n            [\"0\", \"V\", \"0\", \"V\", \"0\"],\r\n            [\"0\", \"0\", \"V\", \"0\", \"0\"],\r\n            [\"0\", \"0\", \"V\", \"0\", \"0\"],\r\n            [\"0\", \"0\", \"V\", \"0\", \"0\"],\r\n        ],\r\n        [\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n            [\"0\", \"0\", \"V\", \"0\"],\r\n            [\"0\", \"V\", \"0\", \"0\"],\r\n            [\"V\", \"0\", \"0\", \"0\"],\r\n            [\"V\", \"V\", \"V\", \"V\"],\r\n        ],\r\n        [\r\n            [\"0\"],\r\n            [\"0\"],\r\n            [\"0\"],\r\n            [\"0\"],\r\n            [\"0\"],\r\n        ],\r\n    ];\r\n\r\n    Mutators.Frames.setColor(Characters, color);\r\n    return Characters;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { Frame } from \"../Types\";\r\n\r\n/**\r\n * Module:          getCharacter\r\n * Responsibility:  Return a character\r\n */\r\n\r\nexport default function getCharacter(frames: Frame[], character: string): Frame {\r\n    const upperCaseCharacter = character.toUpperCase();\r\n\r\n    if (upperCaseCharacter === \"SPACE\") {\r\n        return frames[character.length - 1];\r\n    } else {\r\n        const cc = upperCaseCharacter.charCodeAt(0) - 65;\r\n        return frames[cc];\r\n    }\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport BaseEnemy from \"../Base/BaseEnemy\";\r\nimport CGAColors from \"../Constants/CGAColors\";\r\nimport { Speeds } from \"../Constants/Constants\";\r\nimport orbSpawnLocations from \"../Enemies/Orb/OrbEnemiesSpawnLocations\";\r\nimport robotSpawnLocations from \"../Enemies/Robot/RobotSpawnLocations\";\r\nimport BulletRunner from \"../Runners/BulletRunner\";\r\nimport { Enemies } from \"../Types\";\r\nimport enemyFactory from \"./EnemyFactory\";\r\nimport firstEnemyOccasionalDown from \"./ShipsToFireProviders/FirstEnemyOccasionalDown\";\r\nimport maxFiveDiagonal from \"./ShipsToFireProviders/MaxFiveDiagonal\";\r\nimport sevenSixSeverGridProvider from \"./SpawnLocations/SevenSixSevenGridProvider\";\r\n\r\n/**\r\n * Module:          EnemyFactory\r\n * Responsibility:  Create enemy objects\r\n */\r\n\r\nexport function enemyLevelContentFactory(enemy: Enemies): { bulletRunner?: BulletRunner, enemies: BaseEnemy[] } {\r\n    switch (enemy) {\r\n        case \"bird\": {\r\n            const enemies = sevenSixSeverGridProvider().map((location) => enemyFactory(\"bird\", location));\r\n            return {\r\n                enemies,\r\n            };\r\n        }\r\n\r\n        case \"robot\": {\r\n            const enemies = robotSpawnLocations.map((location) => enemyFactory(\"robot\", location));\r\n            const bulletRunner = new BulletRunner(CGAColors.lightRed, Speeds.Bullets.robot, firstEnemyOccasionalDown);\r\n\r\n            return {\r\n                enemies,\r\n                bulletRunner,\r\n            };\r\n        }\r\n\r\n        case \"orb\": {\r\n            const enemies = orbSpawnLocations.map((location) => enemyFactory(\"orb\", location));\r\n            const bulletRunner = new BulletRunner(CGAColors.magenta, Speeds.Bullets.orb, maxFiveDiagonal);\r\n\r\n            return {\r\n                enemies,\r\n                bulletRunner\r\n            };\r\n        }\r\n\r\n        case \"spinner\": {\r\n\r\n            const enemies = sevenSixSeverGridProvider().map((location) => enemyFactory(\"spinner\", location));\r\n            const bulletRunner = new BulletRunner(CGAColors.white, Speeds.Bullets.spinner, maxFiveDiagonal);\r\n\r\n            return {\r\n                enemies,\r\n                bulletRunner,\r\n            };\r\n        }\r\n\r\n        case \"balloon\": {\r\n\r\n            const enemies = sevenSixSeverGridProvider().map((location) => enemyFactory(\"balloon\", location));\r\n            const bulletRunner = new BulletRunner(CGAColors.blue, Speeds.Bullets.balloon, maxFiveDiagonal);\r\n\r\n            return {\r\n                enemies,\r\n                bulletRunner\r\n            };\r\n        }\r\n\r\n        case \"asteroid-down\": {\r\n            const enemies: BaseEnemy[] = [];\r\n\r\n            for (let i = 0; i < 7; i++) {\r\n                enemies.push(enemyFactory(\"asteroid-down\"));\r\n            }\r\n\r\n            return {\r\n                enemies\r\n            };\r\n        }\r\n\r\n        default:\r\n            throw new Error(`Unknown enemy ${enemy}`);\r\n    }\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { Locations } from \"../../Constants/Constants\";\r\nimport { GameLocation } from \"../../Models/GameLocation\";\r\nimport dimensionProvider from \"../../Providers/DimensionProvider\";\r\nimport { getFrameDimensions } from \"../../Utility/Frame\";\r\nimport getOrbOffsetFrames from \"./GetOrbOffsetFrames\";\r\n\r\n/**\r\n * Module:          RobotSpawnLocations\r\n * Responsibility:  Returns the robot spawn locations.\r\n */\r\n\r\nconst {\r\n    pixelSize,\r\n} = dimensionProvider();\r\n\r\nconst orbSpawnLocations: GameLocation[] = [];\r\nconst { width } = getFrameDimensions(getOrbOffsetFrames().frames[0], pixelSize);\r\n\r\nconst top = Locations.Enemies.Orb.topStart;\r\nconst left = pixelSize * 8;\r\nconst spacing = pixelSize * 2;\r\n\r\nfor (let i = 0; i < 22; i++) {\r\n    const actualSpacing = i === 0 ? 0 : spacing * i;\r\n    const actualLeft = left + i * width + spacing;\r\n\r\n    const value = {\r\n        left: actualLeft + actualSpacing,\r\n        top,\r\n    };\r\n\r\n    orbSpawnLocations.push(value);\r\n}\r\n\r\nexport default orbSpawnLocations;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { Locations } from \"../../Constants/Constants\";\r\nimport { GameLocation } from \"../../Models/GameLocation\";\r\nimport dimensionProvider from \"../../Providers/DimensionProvider\";\r\nimport { getFrameDimensions } from \"../../Utility/Frame\";\r\nimport getRobotOffsetFrames from \"./GetRobotOffsetFrames\";\r\n\r\n/**\r\n * Module:          RobotSpawnLocations\r\n * Responsibility:  Returns the robot spawn locations.\r\n */\r\n\r\nconst {\r\n    pixelSize,\r\n} = dimensionProvider();\r\n\r\nconst robotSpawnLocations: GameLocation[] = [];\r\nconst { width } = getFrameDimensions(getRobotOffsetFrames().frames[0], pixelSize);\r\n\r\nconst top = Locations.Enemies.robot.topStart;\r\nconst left = pixelSize * 15;\r\nconst spacing = pixelSize * 3;\r\n\r\nfor (let i = 0; i < 14; i++) {\r\n    const actualSpacing = i === 0 ? 0 : spacing * i;\r\n    const actualLeft = left + i * width + spacing;\r\n\r\n    const value = {\r\n        left: actualLeft + actualSpacing,\r\n        top,\r\n    };\r\n\r\n    robotSpawnLocations.push(value);\r\n}\r\n\r\nexport default robotSpawnLocations;","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport getTwoPixelBullet from \"../SharedFrames/twoPXBullet\";\r\nimport { addBullet } from \"../State/EnemyLevel/EnemyLevelActions\";\r\nimport { StateProviders } from \"../State/StateProviders\";\r\nimport { dispatch } from \"../State/Store\";\r\nimport { Frame, FrameProviderFunction, ShipsToFireFunction } from \"../Types\";\r\nimport Mutators from \"../Utility/FrameMutators\";\r\n\r\n/**\r\n * Module:          StraightDownBulletProvider\r\n * Responsibility:  Shoots a bullet straight down\r\n */\r\n\r\nconst {\r\n    pixelSize\r\n} = dimensionProvider();\r\n\r\n/**\r\n * Class the handles al bullet business.\r\n * @export\r\n * @class BulletRunner\r\n */\r\nexport default class BulletRunner {\r\n    /**\r\n     * The bullet frame that will be fired.\r\n     */\r\n    private coloredBulletFrame: Frame;\r\n\r\n    /**\r\n     * Speed of the bullets shot by the enemy.\r\n     */\r\n    private speed: number;\r\n\r\n    /**\r\n     * The color of the bullet fired.\r\n     */\r\n    private bulletColor: string;\r\n\r\n    /**\r\n     * A function that provides an array of ships that will fire and the angle at which they will fire.\r\n     */\r\n    private shipsToFire: ShipsToFireFunction;\r\n\r\n    /**\r\n     * Creates an instance of BulletRunner.\r\n     * @param {FrameProviderFunction} getBulletFrame. A function that returns a bullet frame.\r\n     * @param {string} bulletColor. The color of the bullet.\r\n     * @param {number} speed. The speed of the bullet.\r\n     * @param {ShipsToFireFunction} shipsToFire. A function that returns shits that can fire.\r\n     * @param {FireCheckFunction} fireCheck. A function that checks individual ships if they can fire.\r\n     * @memberof BulletRunner\r\n     */\r\n    constructor(\r\n        bulletColor: string,\r\n        speed: number,\r\n        shipsToFire: ShipsToFireFunction) {\r\n\r\n        this.speed = speed;\r\n        this.bulletColor = bulletColor;\r\n        this.shipsToFire = shipsToFire;\r\n\r\n        this.coloredBulletFrame = getTwoPixelBullet();\r\n        Mutators.Frame.setColor(this.coloredBulletFrame, this.bulletColor);\r\n    }\r\n\r\n    /**\r\n     * Determines which enemies can fire and how. Then dispatches bullets to the state.\r\n     * @param {number} tick. Current tick.\r\n     */\r\n    public updateState(tick: number): void {\r\n        const shipsToFire = this.shipsToFire(tick);\r\n\r\n        // The candiates are sorted so the enemeies with the best odds of hitting the player\r\n        // are at the top. Now we'll use the firecheck function to get an array of enemies that\r\n        // can actually fire.\r\n        for (const shipToFire of shipsToFire) {\r\n\r\n            const { angle, enemy: { hitbox, enemyId } } = shipToFire;\r\n\r\n            if (angle !== undefined) {\r\n\r\n                const left = hitbox.left + ((hitbox.right - hitbox.left) / 2) - pixelSize;\r\n                const top = hitbox.bottom + pixelSize;\r\n\r\n                const bullet = StateProviders.getBulletParticleState(\r\n                    left,\r\n                    top,\r\n                    this.speed,\r\n                    angle,\r\n                    this.coloredBulletFrame,\r\n                    enemyId,\r\n                );\r\n\r\n                dispatch(addBullet(bullet));\r\n            }\r\n        }\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { angles } from \"../../Constants/Angles\";\r\nimport ShipToFire from \"../../ShipsToFire\";\r\nimport { appState } from \"../../State/Store\";\r\n\r\n/**\r\n * Module:          firstEnemyOccasionalDown\r\n * Responsibility:  First enemy shoots a bullet downs on occasion.\r\n */\r\n\r\nexport default function firstEnemyOccasionalDown(): ShipToFire[] {\r\n    const {\r\n        enemies: enemyState,\r\n    } = appState().enemyLevelState;\r\n\r\n    const returnValue: ShipToFire[] = [];\r\n\r\n    const lastEnemy = enemyState[enemyState.length - 1];\r\n\r\n    if (lastEnemy !== undefined) {\r\n        const rnd = Math.ceil(Math.random() * 20);\r\n        if (rnd === 1) {\r\n            returnValue.push({ enemy: lastEnemy, angle: angles.down });\r\n        }\r\n    }\r\n\r\n    return returnValue;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          MaxFiveDiagonal\r\n * Responsibility:  Provides 5 enemies to fire.\r\n */\r\n\r\nimport { angles } from \"../../Constants/Angles\";\r\nimport Guard from \"../../Guard\";\r\nimport ShipToFire from \"../../ShipsToFire\";\r\nimport { EnemyState } from \"../../State/EnemyLevel/EnemyState\";\r\nimport { appState } from \"../../State/Store\";\r\nimport { Angle } from \"../../Types\";\r\nimport { calculateAngle, calculateAngleDifference } from \"../../Utility/Geometry\";\r\n\r\nconst maxBullets = 5;\r\n\r\ntype Candidates = Array<{ enemy: EnemyState, angleDifference: number, angle: number }>;\r\n\r\n/**\r\n * A function that selects the orbs that should fire.\r\n * @param {number} tick. Current tick\r\n */\r\nexport default function maxFiveDiagonal(tick: number): ShipToFire[] {\r\n\r\n    const {\r\n        enemyLevelState: { bullets, enemies }\r\n    } = appState();\r\n    const returnValue: ShipToFire[] = [];\r\n\r\n    const bulletsToFire = maxBullets - bullets.length;\r\n\r\n    if (bulletsToFire > 0) {\r\n        const candidates = getBestCandiates(tick);\r\n\r\n        if (candidates.length > 0) {\r\n            for (let b = 0; b < bulletsToFire; b++) {\r\n\r\n                let index = b;\r\n\r\n                // If the number of bullets is more than the candidates the best\r\n                // Candidate gets to fire.\r\n                if (candidates.length <= b) {\r\n                    index = 0;\r\n                }\r\n\r\n                const candiate = candidates[index];\r\n\r\n                const { enemy, angle } = candiate;\r\n\r\n                // Each orb can only have a single bullet on screen.\r\n                const hasBulletOnScreen = bullets.some((bullet) => bullet.owner === enemy.enemyId);\r\n\r\n                // When there's less then 5 enemies, fire away\r\n                if (!hasBulletOnScreen || enemies.length < maxBullets) {\r\n                    returnValue.push({ enemy, angle });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return returnValue;\r\n}\r\n\r\n/**\r\n * Returns candicates for firing.\r\n */\r\nfunction getBestCandiates(tick: number): Candidates {\r\n\r\n    const {\r\n        enemyLevelState: { enemies },\r\n        playerState\r\n    } = appState();\r\n\r\n    if (!Guard.isPlayerAlive(playerState)) {\r\n        return [];\r\n    }\r\n\r\n    // To determine which enemies have the best change of hitting\r\n    // the player we calculate difference between the angle at which the\r\n    // enemy will fire vs the angle towards the player.\r\n    const candidates: Candidates = [];\r\n\r\n    let above = 0;\r\n    let below = 0;\r\n    for (const enemy of enemies) {\r\n        const center = enemy.centerLocation;\r\n\r\n        if (center) {\r\n            const angleToPlayer = calculateAngle(center.left, center.top, playerState.left, playerState.top);\r\n            const angle = getBestAngle(enemy);\r\n\r\n            if (center.top > playerState.hitboxes.middle.bottom) {\r\n                below += 1;\r\n            } else {\r\n                above += 1;\r\n            }\r\n\r\n            if (angle !== undefined && angleToPlayer !== undefined) {\r\n                const angleDifference = calculateAngleDifference(angle, angleToPlayer);\r\n                candidates.push({ enemy, angleDifference, angle });\r\n            }\r\n        }\r\n    }\r\n\r\n    // If the player is below the orbs, the ones with the lowest angle difference have the best shot\r\n    // If the player is above the orbs, the situation is revesed.\r\n    const sortFunction = above > below ? (a: number, b: number) => a < b : (a: number, b: number) => a > b;\r\n\r\n    candidates.sort((e1, e2) => {\r\n        if (sortFunction(e1.angleDifference, e2.angleDifference)) {\r\n            return -1;\r\n        } else {\r\n            return 1;\r\n        }\r\n    });\r\n\r\n    return candidates;\r\n}\r\n\r\n/**\r\n * Retuns the best angle for an enemy.\r\n * @param {EnemyState} enemy. Single enemy.\r\n */\r\nfunction getBestAngle(enemy: EnemyState): Angle {\r\n\r\n    const {\r\n        playerState,\r\n        enemyLevelState: { enemies }\r\n    } = appState();\r\n\r\n    // do nothin when the player is dead.\r\n    if (!Guard.isPlayerAlive(playerState)) {\r\n        return undefined;\r\n    }\r\n\r\n    const { hitboxes } = playerState;\r\n\r\n    // Increase the change the orb enemy will fire down as its numbers are reduced.\r\n    const rnd = Math.ceil(Math.random() * enemies.length / 1.5);\r\n    const canFireDown = rnd === 1;\r\n\r\n    if (canFireDown) {\r\n        const {\r\n            centerLocation,\r\n        } = enemy;\r\n\r\n        if (centerLocation !== undefined) {\r\n            // Check if it makes sense for the orb to fire down. If not, it'll pick one of its diagonal angles.\r\n            if (centerLocation.left >= hitboxes.middle.left && centerLocation.left <= hitboxes.middle.right) {\r\n                return angles.down;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (enemy.offsetLeft < hitboxes.middle.left) {\r\n        return angles.rightdown;\r\n    } else {\r\n        return angles.leftdown;\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Actions\r\n * Responsibility:  Action definitions for the Keyboard State\r\n */\r\n\r\nimport { GameKeys } from \"../../Utility/KeyboardEvents\";\r\nimport Constants from \"./KeyboardConstants\";\r\nimport { KeyDown, KeyUp } from \"./KeyboardTypes\";\r\n\r\nexport function keyDown(key: GameKeys): KeyDown {\r\n    return {\r\n        type: Constants.keydown,\r\n        payload: key,\r\n    };\r\n}\r\n\r\nexport function keyUp(key: GameKeys): KeyUp {\r\n    return {\r\n        type: Constants.keyup,\r\n        payload: key\r\n    };\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { GameLocation } from \"../../Models/GameLocation\";\r\nimport dimensionProvider from \"../DimensionProvider\";\r\n\r\n/**\r\n * Module:          Provides the locations for enemies that start in a grid of 7 / 6 / 7\r\n */\r\n\r\nconst {\r\n    pixelSize,\r\n    gameField,\r\n} = dimensionProvider();\r\n\r\nconst topStart = pixelSize * 9;\r\nconst verticalSpacing = pixelSize * 8;\r\n\r\nexport const firstAndThirdRowLeftStart = 30;\r\nexport const secondRowLeftStart = 40;\r\nexport const firstAndSecondRowSpacing = 16;\r\nexport const secondRowSpacing = 16;\r\n\r\nexport default function sevenSixSeverGridProvider(): GameLocation[] {\r\n    const returnValue: GameLocation[] = [];\r\n\r\n    let top = topStart;\r\n\r\n    // Top row.\r\n    for (let i = 0; i < 7; i++) {\r\n        returnValue.push({\r\n            left: (firstAndThirdRowLeftStart * pixelSize) + firstAndSecondRowSpacing * i * pixelSize,\r\n            top: gameField.top + top,\r\n        });\r\n    }\r\n\r\n    top += verticalSpacing;\r\n\r\n    // Second.\r\n    for (let i = 0; i < 6; i++) {\r\n        returnValue.push({\r\n            left: (secondRowLeftStart * pixelSize) + secondRowSpacing * i * pixelSize,\r\n            top: gameField.top + top,\r\n        });\r\n    }\r\n\r\n    top += verticalSpacing;\r\n\r\n    // Third row\r\n    for (let i = 0; i < 7; i++) {\r\n        returnValue.push({\r\n            left: (firstAndThirdRowLeftStart * pixelSize) + firstAndSecondRowSpacing * i * pixelSize,\r\n            top: gameField.top + top,\r\n        });\r\n    }\r\n\r\n    return returnValue;\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport CGAColors from \"../Constants/CGAColors\";\r\nimport WarpLevelConstants from \"../Constants/WarpLevelConstants\";\r\nimport { DEBUGGING_drawGameRect } from \"../Debugging/Debugging\";\r\nimport GameLoop from \"../GameLoop\";\r\nimport { drawLevelBanner } from \"../GameScreen/LevelBanner\";\r\nimport { drawBackground, drawWarpBackground } from \"../GameScreen/StaticRenders\";\r\nimport Guard from \"../Guard\";\r\nimport ILevel from \"../Interfaces/ILevel\";\r\nimport { GameRectangle } from \"../Models/GameRectangle\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport getShipSpawnLocation from \"../Providers/PlayerSpawnLocationProvider\";\r\nimport { setPlayerLocationData, setPlayerMovementLimit } from \"../State/Player/PlayerActions\";\r\nimport { appState, dispatch } from \"../State/Store\";\r\nimport handleLevelWon from \"../StateHandlers/HandleLevelWon\";\r\nimport { handlePlayerDeath } from \"../StateHandlers/HandlePlayerDeath\";\r\nimport { getRandomArrayElement } from \"../Utility/Array\";\r\nimport { coinFlip } from \"../Utility/Lib\";\r\nimport { fallsWithin } from \"../Utility/Location\";\r\n\r\n/**\r\n * Module:          WarpLevel\r\n * Responsibility:  Warp level for the player to pass though.\r\n */\r\n\r\n// The colors used alternate between white and something else for background drawing.\r\nconst backgroundColor: string[] = [\r\n    CGAColors.brown,\r\n    CGAColors.green,\r\n    CGAColors.magenta,\r\n    CGAColors.blue,\r\n];\r\n\r\nconst {\r\n    pixelSize,\r\n    fullGameWidth,\r\n    gameField\r\n} = dimensionProvider();\r\n\r\n// This constants 'left' takes the width of the wrap gate corridor into consireration.\r\n// Always start a warp game using this left so we ensure the player is aligned perfectly.\r\nconst warpGateInitialleft = fullGameWidth / 2 - (16 * pixelSize) / 2;\r\n\r\nexport default class WarpLevel implements ILevel {\r\n\r\n    /**\r\n     * An array of game loop subscriptions.\r\n     */\r\n    private gameLoopSubscriptions: Array<(tick?: number) => void> = [];\r\n\r\n    /**\r\n     * Start the level. Required by contract.\r\n     */\r\n    public begin(): void {\r\n        dispatch(setPlayerMovementLimit(\"immobile\"));\r\n\r\n        const spawnLocation = getShipSpawnLocation();\r\n        dispatch(setPlayerLocationData(spawnLocation.left, spawnLocation.top));\r\n\r\n        // Register the background draw function so it runs in the game loop.\r\n        this.gameLoopSubscriptions.push(GameLoop.registerBackgroundDrawing(drawBackground));\r\n\r\n        // Determine which additional color next to white the warp background will have.\r\n        const colorIndex = Math.ceil(Math.random() * backgroundColor.length - 1);\r\n        const additionalColor = backgroundColor[colorIndex];\r\n\r\n        const {\r\n            gameState\r\n        } = appState();\r\n\r\n        // Show the level banner for this warp gate levels. Warp gates show the level banner BEFORE the back ground\r\n        // is drawn otherwise the level banner is impossible to read.\r\n        drawLevelBanner(gameState.level, () => {\r\n            // Generate the warpgate so we can draw a path and calculate the hitboxes of the adjecent walls. The complexity of the\r\n            // warp gate is taken from the GameState, the WarpGate class hasn't a clue how complicated the gate will be.\r\n            const warpGate = this.calculateWarpGate(gameField.left, gameField.right, gameState.warpLevelSteps.stepsX, gameState.warpLevelSteps.stepsY);\r\n            const badSpace = this.getWallHitboxes(warpGate);\r\n\r\n            // Banner is gone, time to draw the background of the warp gate background and path.\r\n            this.gameLoopSubscriptions.push(GameLoop.registerBackgroundDrawing(() => drawWarpBackground(additionalColor, warpGate)));\r\n\r\n            // Add a function to the GameLoop that will check if a level has been won.\r\n            this.gameLoopSubscriptions.push(GameLoop.registerUpdateState(() => this.monitorLevelWon()));\r\n\r\n            // Add a function to the GameLoop that checks if the player has reached the end of the warp gate. This will\r\n            // trigger progression to the next level.\r\n            this.gameLoopSubscriptions.push(GameLoop.registerUpdateState((tick) => this.hitDetection(tick, badSpace)));\r\n\r\n            dispatch(setPlayerMovementLimit(\"forceup\"));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get the warp gate's wall hitboxes derived from the warpgate.\r\n     * @param {GameRectangle[]} warpGate. Hitboxes for the walls.\r\n     */\r\n    private getWallHitboxes(warpGate: GameRectangle[]): Array<{ left: GameRectangle, right: GameRectangle }> {\r\n        return warpGate\r\n            .map((wg) => {\r\n                return {\r\n                    left: {\r\n                        left: gameField.left,\r\n                        right: wg.left,\r\n                        top: wg.top,\r\n                        bottom: wg.bottom,\r\n                    },\r\n                    right: {\r\n                        left: wg.right,\r\n                        right: gameField.right,\r\n                        top: wg.top,\r\n                        bottom: wg.bottom,\r\n                    },\r\n                };\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Detect if a player hit a wall.\r\n     * @param {number} tick. Current tick.\r\n     * @param {BadSpace} badSpace. Where not to go.\r\n     */\r\n    private hitDetection(tick: number, badSpace: Array<{ left: GameRectangle; right: GameRectangle }>): void {\r\n        const { playerState, debuggingState } = appState();\r\n        if (Guard.isPlayerAlive(playerState)) {\r\n\r\n            const { hitboxes, alive } = playerState;\r\n\r\n            const hitside = badSpace.some((sb) => {\r\n                const { left: leftDanger, right: rightDanger } = sb;\r\n                const { middle, bottom } = hitboxes;\r\n\r\n                return fallsWithin(bottom.left, bottom.right, bottom.top, bottom.bottom, leftDanger.left, leftDanger.right, leftDanger.top, leftDanger.bottom) ||\r\n                    fallsWithin(bottom.left, bottom.right, bottom.top, bottom.bottom, rightDanger.left, rightDanger.right, rightDanger.top, rightDanger.bottom) ||\r\n                    fallsWithin(middle.left, middle.right, middle.top, middle.bottom, leftDanger.left, leftDanger.right, leftDanger.top, leftDanger.bottom) ||\r\n                    fallsWithin(middle.left, middle.right, middle.top, middle.bottom, rightDanger.left, rightDanger.right, rightDanger.top, rightDanger.bottom);\r\n            });\r\n\r\n            if (hitside && alive) {\r\n                handlePlayerDeath(tick);\r\n            }\r\n        }\r\n\r\n        if (debuggingState.drawHitboxes) {\r\n            badSpace.forEach((bs) => {\r\n                GameLoop.registerDraw(() => DEBUGGING_drawGameRect(bs.left, \"red\"));\r\n                GameLoop.registerDraw(() => DEBUGGING_drawGameRect(bs.right, \"red\"));\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Calculates the warp gate.\r\n     * @param {number} outerLeft.\r\n     * @param {number} outerRight.\r\n     * @param {number} stepSizesX.\r\n     * @param {number} stepSizesY.\r\n     */\r\n    private calculateWarpGate(outerLeft: number, outerRight: number, stepSizesX: number[], stepSizesY: number[]): GameRectangle[] {\r\n\r\n        const safeZone: GameRectangle[] = [];\r\n\r\n        let direction = warpGateInitialleft;\r\n\r\n        // We'll start at the bottom and draw up. This\r\n        // allows me to ensure a safe position for the player to\r\n        // enter the warp gate.\r\n        let bottom = WarpLevelConstants.bottom;\r\n\r\n        const pixelsToGo = WarpLevelConstants.heightPixelCount;\r\n        let pixelsToDo = 0;\r\n\r\n        let stepSizeY = getRandomArrayElement(stepSizesY);\r\n        let stepSizeX = getRandomArrayElement(stepSizesX);\r\n\r\n        while (pixelsToDo + stepSizeY < pixelsToGo) {\r\n            const up = stepSizeY * pixelSize;\r\n\r\n            const rect: GameRectangle = {\r\n                left: direction,\r\n                top: bottom - up,\r\n                right: direction + WarpLevelConstants.width, // aka the width\r\n                bottom, // aka the height.\r\n            };\r\n\r\n            // New left\r\n            const verticalMove = stepSizeX * pixelSize;\r\n\r\n            // 50/50 change that the warp gate goes left or right.\r\n            const leftOrRight = coinFlip();\r\n            if (leftOrRight) {\r\n                // Left\r\n                direction -= verticalMove;\r\n            } else {\r\n                // Right\r\n                direction += verticalMove;\r\n            }\r\n\r\n            // Prevent the warp gate from going off screen by fliping the direction.\r\n            if (direction <= outerLeft || direction + WarpLevelConstants.width >= outerRight) {\r\n                direction *= -1;\r\n            }\r\n\r\n            // bottom moves up.\r\n            bottom -= up;\r\n\r\n            // Reduce pixels to do.\r\n            pixelsToDo += stepSizeY;\r\n            safeZone.push(rect);\r\n\r\n            stepSizeY = getRandomArrayElement(stepSizesY);\r\n            stepSizeX = getRandomArrayElement(stepSizesX);\r\n        }\r\n\r\n        // Deal with some left over space\r\n        if (pixelsToDo !== 0) {\r\n            const rect: GameRectangle = {\r\n                left: direction,\r\n                top: WarpLevelConstants.top,\r\n                right: direction + WarpLevelConstants.width,\r\n                bottom\r\n            };\r\n\r\n            safeZone.push(rect);\r\n        }\r\n\r\n        return safeZone;\r\n    }\r\n\r\n    /**\r\n     * Checks if the level is won whe the player reaches the end of the warp gate.\r\n     */\r\n    private monitorLevelWon(): void {\r\n\r\n        const {\r\n            playerState: { top },\r\n        } = appState();\r\n\r\n        if (top < gameField.top + pixelSize * 3) {\r\n            handleLevelWon();\r\n\r\n            // Reset the player to the spawn location after a warp level or they'll appear\r\n            // in the top of the screen right in the middle of enemies.\r\n            const spawnLocation = getShipSpawnLocation();\r\n            dispatch(setPlayerLocationData(spawnLocation.left, spawnLocation.top));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Dispose stuff.\r\n     */\r\n    public dispose(): void {\r\n        // Dispose all game loop subscriptions.\r\n        this.gameLoopSubscriptions.forEach((s) => s());\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport GameLoop from \"../GameLoop\";\r\nimport { playerMovementHandler } from \"../Handlers/PlayerMovementHandler\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport getPlayerSpawnLocation from \"../Providers/PlayerSpawnLocationProvider\";\r\nimport { setPlayerIsAlive, setPlayerLocationData, setPlayerMovementLimit } from \"../State/Player/PlayerActions\";\r\nimport { appState, dispatch } from \"../State/Store\";\r\nimport { MoveLimits } from \"../Types\";\r\nimport { getFrameReturner } from \"../Utility/Frame\";\r\nimport { getLocation } from \"../Utility/Location\";\r\nimport PlayerFormationPart from \"./PlayerFormationPart\";\r\nimport { getPlayerFormationFrames } from \"./PlayerFrames\";\r\n\r\n/**\r\n * Module:          PlayerSpawnManager\r\n * Responsibility:  Handles player respawning.\r\n */\r\n\r\nconst {\r\n    pixelSize,\r\n} = dimensionProvider();\r\n\r\nconst particleTravelDistance = pixelSize * 60;\r\nconst nozzleDistance = particleTravelDistance + pixelSize;\r\nconst nozzleOutAngle = 270;\r\nconst leftWingOutAngle = 200;\r\nconst rightWingOutAngle = 340;\r\n\r\nconst playerFormationFrames = getPlayerFormationFrames();\r\n\r\nlet nozzleTopPart: PlayerFormationPart;\r\nlet nozzleBottomPart: PlayerFormationPart;\r\nlet leftWingPart: PlayerFormationPart;\r\nlet rightWingPart: PlayerFormationPart;\r\n\r\nlet allMovingParts: PlayerFormationPart[] = [];\r\n\r\nlet formationSpeed: \"slow\" | \"fast\";\r\n\r\nlet formationInProgress = false;\r\n\r\nlet currentMovementLimit: MoveLimits = \"none\";\r\n\r\n/**\r\n * playerSpawnManager. Once register in the GameLoop this function will check\r\n * the state if the player can and show respawn.\r\n */\r\nexport default function playerSpawnManager(): void {\r\n    const { playerState, enemyLevelState: { enemies, shrapnells, bullets } } = appState();\r\n\r\n    if (!playerState.alive && formationInProgress === false && shrapnells.length === 0) {\r\n        if (enemies.length > 0) { // Enemies in the level\r\n            if (bullets.length === 0) { // wait till there's no particles.\r\n                setup(\"slow\", \"sideways\"); // Start the slow formation where the player has control.\r\n            }\r\n        } else {\r\n            // No enemies, fast formation\r\n            setup(\"fast\", \"immobile\");\r\n        }\r\n    }\r\n\r\n    if (formationInProgress) {\r\n        updateState();\r\n        GameLoop.registerDraw(draw);\r\n    }\r\n}\r\n\r\n/**\r\n * Creates the player formation particles.\r\n */\r\nfunction createParticles(): void {\r\n\r\n    const {\r\n        playerState\r\n    } = appState();\r\n\r\n    const left = playerState.left;\r\n    const top = playerState.top;\r\n\r\n    const nozzleTip = getLocation(left, top, nozzleOutAngle, nozzleDistance);\r\n    const nozzleBottom = getLocation(left, top, nozzleOutAngle, particleTravelDistance);\r\n    const leftWing = getLocation(left, top, leftWingOutAngle, particleTravelDistance);\r\n    const rightWing = getLocation(left, top, rightWingOutAngle, particleTravelDistance);\r\n\r\n    nozzleTopPart = new PlayerFormationPart(\r\n        nozzleTip.left,\r\n        nozzleTip.top,\r\n        getFrameReturner(playerFormationFrames[0]),\r\n        0,\r\n        pixelSize * 2,\r\n        0);\r\n\r\n    nozzleBottomPart = new PlayerFormationPart(\r\n        nozzleBottom.left,\r\n        nozzleBottom.top,\r\n        getFrameReturner(playerFormationFrames[1]),\r\n        0,\r\n        pixelSize * 2,\r\n        pixelSize);\r\n\r\n    leftWingPart = new PlayerFormationPart(\r\n        leftWing.left,\r\n        leftWing.top,\r\n        getFrameReturner(playerFormationFrames[2]),\r\n        0,\r\n        0,\r\n        pixelSize);\r\n\r\n    rightWingPart = new PlayerFormationPart(\r\n        rightWing.left,\r\n        rightWing.top,\r\n        getFrameReturner(playerFormationFrames[3]),\r\n        0,\r\n        pixelSize * 4,\r\n        pixelSize);\r\n\r\n    allMovingParts = [nozzleTopPart, nozzleBottomPart, leftWingPart, rightWingPart].filter((p) => p !== undefined);\r\n}\r\n\r\n/**\r\n * Forms the player quickly. Does not allow movement.\r\n * @param {() => void)} formationDoneCallback. Called when the formation animation has completed.\r\n * @param {\"fast\" | \"slow\"} speed. Speed of the player formation.\r\n * @param {MoveLimits} limit. Movement limit impaired on the player while the ship is forming.\r\n */\r\nfunction setup(speed: \"fast\" | \"slow\", limit: MoveLimits): void {\r\n    formationSpeed = speed;\r\n\r\n    // Store the current movement limit so we can restore it once the player has formed.\r\n    currentMovementLimit = appState().playerState.moveLimit;\r\n\r\n    const  {left, top }  = getPlayerSpawnLocation();\r\n    dispatch(setPlayerLocationData(left, top));\r\n    createParticles();\r\n\r\n    if (speed === \"fast\") {\r\n        allMovingParts.forEach((p) => p.setSpeed(30));\r\n    } else {\r\n        allMovingParts.forEach((p) => p.setSpeed(10));\r\n    }\r\n\r\n    dispatch(setPlayerMovementLimit(limit));\r\n    formationInProgress = true;\r\n}\r\n\r\n/**\r\n * Main function that draws the player formation.\r\n */\r\nfunction updateState(): void {\r\n    const { keyboardState } = appState();\r\n\r\n    if (keyboardState.space === false && formationSpeed === \"slow\" && allMovingParts.some((p) => p.traveling())) {\r\n        allMovingParts.forEach((p) => {\r\n            p.updateState();\r\n        });\r\n\r\n        playerMovementHandler(5);\r\n    } else if (formationSpeed === \"fast\") {\r\n        allMovingParts.forEach((p) => {\r\n            p.updateState();\r\n        });\r\n    }\r\n\r\n    if (allMovingParts.every((p) => p.traveling() === false)) {\r\n        dispatch(setPlayerIsAlive(true));\r\n        dispatch(setPlayerMovementLimit(currentMovementLimit));\r\n        allMovingParts = [];\r\n        formationInProgress = false;\r\n    }\r\n}\r\n\r\n/**\r\n * Draw the moving parts.\r\n */\r\nfunction draw(): void {\r\n    allMovingParts.forEach((p) => p.draw());\r\n}\r\n","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport speedProvider from \"../Providers/SpeedProvider\";\r\nimport renderFrame from \"../Render/RenderFrame\";\r\nimport { appState } from \"../State/Store\";\r\nimport { Frame, FrameProviderFunction } from \"../Types\";\r\nimport Mutators from \"../Utility/FrameMutators\";\r\nimport { calculateAngle } from \"../Utility/Geometry\";\r\nimport { calculateDistance, getLocation } from \"../Utility/Location\";\r\n\r\n/**\r\n * Module:          PlayerFormationPart\r\n * Responsibility:  A particle that travels a distance and then stops being drawn.\r\n */\r\n\r\nconst minimumDistance = speedProvider(20);\r\n\r\nexport default class PlayerFormationPart {\r\n\r\n    /**\r\n     * Current particle location\r\n     */\r\n    private currentLeftLocation: number;\r\n\r\n    /**\r\n     * Current top location\r\n     */\r\n    private currentTopLocation: number;\r\n\r\n    /**\r\n     * Particle speed.\r\n     */\r\n\r\n    private speed: number;\r\n\r\n    /**\r\n     * The current frame.\r\n     */\r\n    private currentFrame: Frame;\r\n\r\n    /**\r\n     * Offset to add to the left.\r\n     */\r\n    private leftOffset: number;\r\n\r\n    /**\r\n     * Offset to add to the top.\r\n     */\r\n    private topOffset: number;\r\n\r\n    /**\r\n     * Construct the object.\r\n     * @param {number} left. Left coordinate.\r\n     * @param {number} top. Top coordinate\r\n     * @param {FrameProviderFunction} getFrame. Frame to render for this part.\r\n     * @param {number} speed. Speed at which the part travels.\r\n     * @param {number} leftOffset. Number of pixels to add to the initial left position and the target left position.\r\n     * @param {number} topOffset. Number of pixels to add to the initial top position and the target top position.\r\n     */\r\n    constructor(left: number, top: number, getFrame: FrameProviderFunction, speed: number, leftOffset: number, topOffset: number) {\r\n\r\n        this.currentFrame = getFrame();\r\n        Mutators.Frame.convertHexToCGA(this.currentFrame);\r\n\r\n        this.currentLeftLocation = left + leftOffset;\r\n        this.currentTopLocation = top + topOffset;\r\n        this.leftOffset = leftOffset;\r\n        this.topOffset = topOffset;\r\n\r\n        this.speed = speed;\r\n    }\r\n\r\n    /**\r\n     * Update the state of the object.\r\n     */\r\n    public updateState(): void {\r\n\r\n        const {\r\n            playerState\r\n        } = appState();\r\n\r\n        const targetLeftLocation = playerState.left + this.leftOffset;\r\n        const targetTopLocation = playerState.top + this.topOffset;\r\n\r\n        const angle = calculateAngle(this.currentLeftLocation, this.currentTopLocation, targetLeftLocation, targetTopLocation);\r\n        const distance = calculateDistance(this.currentLeftLocation, this.currentTopLocation, targetLeftLocation, targetTopLocation);\r\n\r\n        if (distance > minimumDistance) {\r\n            const nextLocation = getLocation(this.currentLeftLocation, this.currentTopLocation, angle, this.speed);\r\n            this.currentLeftLocation = nextLocation.left;\r\n            this.currentTopLocation = nextLocation.top;\r\n        } else {\r\n            this.currentLeftLocation = targetLeftLocation;\r\n            this.currentTopLocation = targetTopLocation;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Draw the particle.\r\n     */\r\n    public draw(): void {\r\n        renderFrame(this.currentLeftLocation, this.currentTopLocation, this.currentFrame);\r\n    }\r\n\r\n    /**\r\n     * Returns true if the particle is still traveling to its location.\r\n     * @returns {boolean}. True if the particle is still traveling.\r\n     */\r\n    public traveling(): boolean {\r\n        const {\r\n            playerState\r\n        } = appState();\r\n\r\n        const targetLeftLocation = playerState.left + this.leftOffset;\r\n        const targetTopLocation = playerState.top + this.topOffset;\r\n\r\n        const distance = calculateDistance(this.currentLeftLocation, this.currentTopLocation, targetLeftLocation, targetTopLocation);\r\n        return distance > minimumDistance;\r\n    }\r\n\r\n    /**\r\n     * Sets the speed of the particle.\r\n     * @param {number} speed. Desired particle speed.\r\n     */\r\n    public setSpeed(speed: number): void {\r\n        this.speed = speed;\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          GenericRunner\r\n * Responsibility:  Handles generic state updates that can occur in any level.\r\n */\r\n\r\nimport GameLoop from \"../GameLoop\";\r\nimport renderFrame from \"../Render/RenderFrame\";\r\nimport { setBulletState, setExplosionCenters, setShrapnellState } from \"../State/EnemyLevel/EnemyLevelActions\";\r\nimport { StateProviders } from \"../State/StateProviders\";\r\nimport { appState, dispatch } from \"../State/Store\";\r\n\r\nexport default function genericRunner(tick: number): void {\r\n    handleExplosionCenters(tick);\r\n    handleBullets();\r\n    handleShrapnell();\r\n    GameLoop.registerDraw(draw);\r\n}\r\n\r\n/**\r\n * Handles explosion centers.\r\n * @param {number} tick. Current tick\r\n */\r\nfunction handleExplosionCenters(tick: number): void {\r\n    const { explosionCenters } = appState().enemyLevelState;\r\n\r\n    const remainingExplosions = explosionCenters.filter((ec) => ec.startTick + ec.explosionCenterDelay > tick);\r\n    dispatch(setExplosionCenters(remainingExplosions));\r\n}\r\n\r\n/**\r\n * Handle bullet movement.\r\n */\r\nfunction handleBullets(): void {\r\n    const bullets = appState().enemyLevelState.bullets;\r\n    const newState = StateProviders.getUpdatedParticleState(bullets);\r\n\r\n    dispatch(setBulletState(newState));\r\n}\r\n\r\n/**\r\n * Handles particles state updates.\r\n * @param {number} tick. Current tick.\r\n */\r\nfunction handleShrapnell(): void {\r\n    const newState = StateProviders.getUpdatedParticleState(appState().enemyLevelState.shrapnells);\r\n    dispatch(setShrapnellState(newState));\r\n}\r\n\r\nfunction draw(): void {\r\n    const { explosionCenters, shrapnells } = appState().enemyLevelState;\r\n    for (const center of explosionCenters) {\r\n        renderFrame(center.left, center.top, center.coloredFrame);\r\n    }\r\n\r\n    for (const shrapnell of shrapnells) {\r\n        renderFrame(shrapnell.left, shrapnell.top, shrapnell.coloredFrame);\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\nimport { angles } from \"../Constants/Angles\";\r\nimport CGAColors from \"../Constants/CGAColors\";\r\nimport { Speeds } from \"../Constants/Constants\";\r\nimport GameLoop from \"../GameLoop\";\r\nimport { playerMovementHandler } from \"../Handlers/PlayerMovementHandler\";\r\nimport dimensionProvider from \"../Providers/DimensionProvider\";\r\nimport renderFrame from \"../Render/RenderFrame\";\r\nimport getTwoPixelBullet from \"../SharedFrames/twoPXBullet\";\r\nimport { ParticleState } from \"../State/Player/ParticleState\";\r\nimport { setPlayerBulletState } from \"../State/Player/PlayerActions\";\r\nimport { StateProviders } from \"../State/StateProviders\";\r\nimport { appState, dispatch } from \"../State/Store\";\r\nimport { getFrameHitbox } from \"../Utility/Frame\";\r\nimport { fallsWithinGameField, getLocation } from \"../Utility/Location\";\r\n\r\n/**\r\n * Module:          PlayerRunner\r\n * Responsibility:  Module dedicated to managing player state.\r\n */\r\n\r\nexport default function playerRunner(): void {\r\n    updateState();\r\n    GameLoop.registerDraw(draw);\r\n}\r\n\r\nconst {\r\n    pixelSize,\r\n} = dimensionProvider();\r\n\r\nconst playerBulletFrame = getTwoPixelBullet(CGAColors.yellow);\r\n\r\n/**\r\n * Updates the player state.\r\n */\r\nfunction updateState(): void {\r\n    const {\r\n        playerState\r\n    } = appState();\r\n\r\n    // Important! The player runner is responsible for handling player action while the\r\n    // player is alive. When the player dies the PlayerSpawnManager takes over.\r\n    if (!playerState.alive) {\r\n        return;\r\n    }\r\n\r\n    playerMovementHandler(10);\r\n\r\n    handlePlayerBulletMovement();\r\n    handlePlayerBulletFiring();\r\n}\r\n\r\n/**\r\n * Checks if the player can fire and if they pressed the fire key. If so, a bullet is dispatched to the state.\r\n */\r\nfunction handlePlayerBulletFiring(): void {\r\n    const { playerState, keyboardState } = appState();\r\n    if (playerState.nozzleLocation !== undefined && keyboardState.fire && playerState.bulletState === undefined) {\r\n        const nozzleLocation = playerState.nozzleLocation;\r\n        const bullet = getPlayerBullet(nozzleLocation.left, nozzleLocation.top);\r\n        dispatch(setPlayerBulletState(bullet));\r\n    }\r\n}\r\n\r\n/**\r\n * Moves the bullet up until it reached the top of the game game field.\r\n * If the bullet hits something, that handled in the EnemyLevelRunner.\r\n */\r\nfunction handlePlayerBulletMovement(): void {\r\n    const { playerState } = appState();\r\n    if (playerState.bulletState !== undefined) {\r\n        const bullet = playerState.bulletState;\r\n        const nextLocation = getLocation(bullet.left, bullet.top, bullet.angle, bullet.speed);\r\n        const newHitbox = getFrameHitbox(nextLocation.left, nextLocation.top, bullet.coloredFrame);\r\n\r\n        if (fallsWithinGameField(newHitbox.left, newHitbox.right, nextLocation.top, newHitbox.bottom)) {\r\n            const newState = getPlayerBullet(nextLocation.left, nextLocation.top);\r\n            dispatch(setPlayerBulletState(newState));\r\n        } else {\r\n            dispatch(setPlayerBulletState(undefined));\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Gets a player bullet particle state.\r\n * @param {number} left\r\n * @param {number} top\r\n * @returns {ParticleState}\r\n */\r\nfunction getPlayerBullet(left: number, top: number): ParticleState {\r\n    return StateProviders.getParticleState(left, top, Speeds.Bullets.player, angles.up, playerBulletFrame, 1, -0.5 * pixelSize, -0.5 * pixelSize);\r\n}\r\n\r\n/**\r\n * Draw the player and player bullet.\r\n */\r\nfunction draw(): void {\r\n    const { playerState } = appState();\r\n    if (playerState.alive) {\r\n        renderFrame(playerState.left, playerState.top, playerState.coloredFrame);\r\n    }\r\n\r\n    if (playerState.bulletState) {\r\n        const bullet = playerState.bulletState;\r\n        renderFrame(bullet.left, bullet.top, bullet.coloredFrame);\r\n    }\r\n}","/**\r\n * @preserve Copyright 2019-2020 Onno Invernizzi.\r\n * This source code is subject to terms and conditions.\r\n * See LICENSE.MD.\r\n */\r\n\r\n/**\r\n * Module:          Actions\r\n * Responsibility:  Actions for Debugging state.\r\n */\r\n\r\nimport Constants from \"./DebuggingConstants\";\r\nimport DebuggingState from \"./DebuggingState\";\r\nimport { SetDebuggingState } from \"./DebuggingTypes\";\r\n\r\nexport function setDebuggingState(state: DebuggingState): SetDebuggingState {\r\n    return {\r\n\r\n        type: Constants.setDebuggingState,\r\n        state,\r\n    };\r\n}"],"sourceRoot":""}